<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201105 13:06:42.656" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:53:56.856" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:53:58.860" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 12:53:58.860" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 12:53:58.860" starttime="20201105 12:53:56.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:53:58.861" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 12:53:58.861" starttime="20201105 12:53:58.860"></status>
</kw>
<msg timestamp="20201105 12:53:58.862" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 12:53:58.862" starttime="20201105 12:53:56.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:53:58.867" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:00.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:00.626" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:54:00.626" starttime="20201105 12:53:58.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:00.627" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:54:00.627" starttime="20201105 12:54:00.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:00.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:00.627" starttime="20201105 12:54:00.627"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:00.628" starttime="20201105 12:53:58.863"></status>
</kw>
<msg timestamp="20201105 12:54:00.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:00.628" starttime="20201105 12:53:58.863"></status>
</kw>
<msg timestamp="20201105 12:54:00.628" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201105 12:54:00.628" starttime="20201105 12:53:58.863"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 12:54:00.628" starttime="20201105 12:54:00.628"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:00.629" starttime="20201105 12:53:58.862"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:00.629" starttime="20201105 12:53:58.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:00.633" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:02.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:02.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:54:02.452" starttime="20201105 12:54:00.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:02.453" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:54:02.454" starttime="20201105 12:54:02.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:02.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:02.454" starttime="20201105 12:54:02.454"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:02.454" starttime="20201105 12:54:00.630"></status>
</kw>
<msg timestamp="20201105 12:54:02.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:02.455" starttime="20201105 12:54:00.630"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:02.455" starttime="20201105 12:54:00.630"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:02.455" starttime="20201105 12:54:00.629"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:02.455" starttime="20201105 12:54:00.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 12:54:02.455" starttime="20201105 12:54:02.455"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:02.460" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:04.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:04.522" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T12:54:02.332Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 12:54:04.522" starttime="20201105 12:54:02.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:04.523" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T12:54:02.332Z",
  "modificationTime" : "2020-11-05T12:54:02.332Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 12:54:04.523" starttime="20201105 12:54:04.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:04.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:04.523" starttime="20201105 12:54:04.523"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:04.524" starttime="20201105 12:54:02.456"></status>
</kw>
<msg timestamp="20201105 12:54:04.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:04.524" starttime="20201105 12:54:02.456"></status>
</kw>
<msg timestamp="20201105 12:54:04.524" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T12:54:02.332Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 12:54:04.524" starttime="20201105 12:54:02.456"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 12:54:04.524" starttime="20201105 12:54:04.524"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:54:04.528" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:54:04.528" starttime="20201105 12:54:04.528"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:54:04.528" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:54:04.528" starttime="20201105 12:54:04.528"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:04.529" starttime="20201105 12:54:04.527"></status>
</kw>
<msg timestamp="20201105 12:54:04.529" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:54:04.529" starttime="20201105 12:54:04.527"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:04.529" starttime="20201105 12:54:04.526"></status>
</kw>
<msg timestamp="20201105 12:54:04.529" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 12:54:04.529" starttime="20201105 12:54:04.525"></status>
</kw>
<msg timestamp="20201105 12:54:04.529" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 12:54:04.529" starttime="20201105 12:54:04.525"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:04.533" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:06.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:06.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:54:06.560" starttime="20201105 12:54:04.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:06.561" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:54:06.561" starttime="20201105 12:54:06.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:06.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:06.561" starttime="20201105 12:54:06.561"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:06.562" starttime="20201105 12:54:04.530"></status>
</kw>
<msg timestamp="20201105 12:54:06.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:06.562" starttime="20201105 12:54:04.530"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:06.562" starttime="20201105 12:54:04.529"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:06.566" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:11.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:11.942" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:54:11.942" starttime="20201105 12:54:06.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:11.943" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:54:11.943" starttime="20201105 12:54:11.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:11.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:11.944" starttime="20201105 12:54:11.943"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:11.944" starttime="20201105 12:54:06.563"></status>
</kw>
<msg timestamp="20201105 12:54:11.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:11.944" starttime="20201105 12:54:06.563"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:11.944" starttime="20201105 12:54:06.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:11.947" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:15.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:15.349" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:54:15.349" starttime="20201105 12:54:11.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:15.350" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:54:15.350" starttime="20201105 12:54:15.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:15.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:15.351" starttime="20201105 12:54:15.351"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:15.351" starttime="20201105 12:54:11.945"></status>
</kw>
<msg timestamp="20201105 12:54:15.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:15.351" starttime="20201105 12:54:11.945"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:15.352" starttime="20201105 12:54:11.944"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:15.355" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:18.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:18.691" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:54:18.691" starttime="20201105 12:54:15.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:18.692" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:54:18.693" starttime="20201105 12:54:18.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:18.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:18.693" starttime="20201105 12:54:18.693"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:18.694" starttime="20201105 12:54:15.353"></status>
</kw>
<msg timestamp="20201105 12:54:18.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:18.694" starttime="20201105 12:54:15.352"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:18.694" starttime="20201105 12:54:15.352"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 12:54:18.694" critical="yes" starttime="20201105 12:53:56.850"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:54:18.699" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:54:18.699" starttime="20201105 12:54:18.698"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:54:18.699" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:54:18.699" starttime="20201105 12:54:18.699"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:18.700" starttime="20201105 12:54:18.698"></status>
</kw>
<msg timestamp="20201105 12:54:18.700" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:54:18.700" starttime="20201105 12:54:18.697"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:18.700" starttime="20201105 12:54:18.697"></status>
</kw>
<msg timestamp="20201105 12:54:18.700" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 12:54:18.700" starttime="20201105 12:54:18.696"></status>
</kw>
<msg timestamp="20201105 12:54:18.700" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 12:54:18.700" starttime="20201105 12:54:18.696"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:18.703" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:20.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:20.541" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:54:20.541" starttime="20201105 12:54:18.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:20.542" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:54:20.542" starttime="20201105 12:54:20.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:20.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:20.543" starttime="20201105 12:54:20.542"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:20.543" starttime="20201105 12:54:18.701"></status>
</kw>
<msg timestamp="20201105 12:54:20.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:20.543" starttime="20201105 12:54:18.701"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:20.543" starttime="20201105 12:54:18.700"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:20.547" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:22.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:22.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:54:22.435" starttime="20201105 12:54:20.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:22.436" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:54:22.437" starttime="20201105 12:54:22.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:22.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:22.437" starttime="20201105 12:54:22.437"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:22.437" starttime="20201105 12:54:20.544"></status>
</kw>
<msg timestamp="20201105 12:54:22.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:22.438" starttime="20201105 12:54:20.544"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:22.438" starttime="20201105 12:54:20.543"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 12:54:22.438" critical="yes" starttime="20201105 12:54:18.695"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201105 12:54:22.439" starttime="20201105 12:53:56.803"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 12:55:53.735" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 12:55:53.735" starttime="20201105 12:55:53.735"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:55:53.736" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 12:55:53.736" starttime="20201105 12:55:53.735"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:53.736" starttime="20201105 12:55:53.734"></status>
</kw>
<msg timestamp="20201105 12:55:53.736" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 12:55:53.736" starttime="20201105 12:55:53.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 12:55:53.737" starttime="20201105 12:55:53.737"></status>
</kw>
<msg timestamp="20201105 12:55:53.737" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 12:55:53.737" starttime="20201105 12:55:53.736"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:53.737" starttime="20201105 12:55:53.733"></status>
</kw>
<msg timestamp="20201105 12:55:53.737" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 12:55:53.737" starttime="20201105 12:55:53.733"></status>
</kw>
<msg timestamp="20201105 12:55:53.738" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 12:55:53.738" starttime="20201105 12:55:53.732"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 12:55:53.738" level="INFO">${random} = 07592</msg>
<status status="PASS" endtime="20201105 12:55:53.738" starttime="20201105 12:55:53.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:55:53.743" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-07592 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:55:56.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:55:56.702" level="INFO">${output} = 2020-11-05 12:55:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:55:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 12:55:56.702" starttime="20201105 12:55:53.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:55:56.703" level="INFO">2020-11-05 12:55:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:55:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 12:55:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 12:55:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 12:55:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8F8AEDA0D6E8-&gt;6de9b662-08db-4dd2-a542-b4c3890446ac
2020-11-05 12:55:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 12:55:56.703" starttime="20201105 12:55:56.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:55:56.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:55:56.704" starttime="20201105 12:55:56.703"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:56.704" starttime="20201105 12:55:53.739"></status>
</kw>
<msg timestamp="20201105 12:55:56.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:55:56.704" starttime="20201105 12:55:53.739"></status>
</kw>
<msg timestamp="20201105 12:55:56.704" level="INFO">${result} = 2020-11-05 12:55:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:55:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 12:55:56.704" starttime="20201105 12:55:53.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:55:56.709" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:55:58.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:55:58.204" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 12:55 ofs://om/volume1/bucket1/ozone-07592
-rw-...</msg>
<status status="PASS" endtime="20201105 12:55:58.204" starttime="20201105 12:55:56.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:55:58.205" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 12:55 ofs://om/volume1/bucket1/ozone-07592
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 12:54 ofs://om/volume1/bucket1/ozone-85858
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:54 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:55 ofs://om/volume1/bucket1/wordcount-06.txt</msg>
<status status="PASS" endtime="20201105 12:55:58.205" starttime="20201105 12:55:58.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:55:58.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:55:58.206" starttime="20201105 12:55:58.205"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:58.206" starttime="20201105 12:55:56.706"></status>
</kw>
<msg timestamp="20201105 12:55:58.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:55:58.206" starttime="20201105 12:55:56.706"></status>
</kw>
<msg timestamp="20201105 12:55:58.206" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 12:55 ofs://om/volume1/bucket1/ozone-07592
-rw-...</msg>
<status status="PASS" endtime="20201105 12:55:58.207" starttime="20201105 12:55:56.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 12:55:58.207" starttime="20201105 12:55:58.207"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 12:55:58.207" critical="yes" starttime="20201105 12:55:53.731"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 12:55:58.208" starttime="20201105 12:55:53.688"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:54:26.606" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:54:26.606" starttime="20201105 12:54:26.606"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:54:26.607" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:54:26.607" starttime="20201105 12:54:26.606"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:26.607" starttime="20201105 12:54:26.605"></status>
</kw>
<msg timestamp="20201105 12:54:26.607" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:54:26.607" starttime="20201105 12:54:26.605"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:26.607" starttime="20201105 12:54:26.604"></status>
</kw>
<msg timestamp="20201105 12:54:26.607" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 12:54:26.607" starttime="20201105 12:54:26.604"></status>
</kw>
<msg timestamp="20201105 12:54:26.607" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 12:54:26.607" starttime="20201105 12:54:26.603"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 12:54:26.608" level="INFO">${random} = 85858</msg>
<status status="PASS" endtime="20201105 12:54:26.608" starttime="20201105 12:54:26.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:26.612" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-85858 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:32.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:32.094" level="INFO">${output} = 2020-11-05 12:54:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:54:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 12:54:32.094" starttime="20201105 12:54:26.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:32.095" level="INFO">2020-11-05 12:54:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:54:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 12:54:28 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 12:54:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 12:54:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-82711E3D5FA2-&gt;6de9b662-08db-4dd2-a542-b4c3890446ac
2020-11-05 12:54:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 12:54:32.095" starttime="20201105 12:54:32.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:32.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:32.096" starttime="20201105 12:54:32.095"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:32.096" starttime="20201105 12:54:26.609"></status>
</kw>
<msg timestamp="20201105 12:54:32.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:32.096" starttime="20201105 12:54:26.608"></status>
</kw>
<msg timestamp="20201105 12:54:32.097" level="INFO">${result} = 2020-11-05 12:54:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:54:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 12:54:32.097" starttime="20201105 12:54:26.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:32.101" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:33.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:33.606" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 12:54 o3fs://bucket1.volume1.om/ozone-85858
dr...</msg>
<status status="PASS" endtime="20201105 12:54:33.607" starttime="20201105 12:54:32.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:33.608" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 12:54 o3fs://bucket1.volume1.om/ozone-85858
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:54 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 12:54:33.608" starttime="20201105 12:54:33.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:33.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:33.608" starttime="20201105 12:54:33.608"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:33.609" starttime="20201105 12:54:32.099"></status>
</kw>
<msg timestamp="20201105 12:54:33.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:33.609" starttime="20201105 12:54:32.097"></status>
</kw>
<msg timestamp="20201105 12:54:33.609" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 12:54 o3fs://bucket1.volume1.om/ozone-85858
dr...</msg>
<status status="PASS" endtime="20201105 12:54:33.609" starttime="20201105 12:54:32.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 12:54:33.610" starttime="20201105 12:54:33.609"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 12:54:33.610" critical="yes" starttime="20201105 12:54:26.602"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 12:54:33.611" starttime="20201105 12:54:26.557"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:56:02.357" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:56:02.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:56:02.361" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:56:02.361" starttime="20201105 12:56:02.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:56:02.362" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:56:02.362" starttime="20201105 12:56:02.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:56:02.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:56:02.363" starttime="20201105 12:56:02.362"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:02.363" starttime="20201105 12:56:02.352"></status>
</kw>
<msg timestamp="20201105 12:56:02.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:56:02.363" starttime="20201105 12:56:02.352"></status>
</kw>
<msg timestamp="20201105 12:56:02.363" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:56:02.363" starttime="20201105 12:56:02.352"></status>
</kw>
<msg timestamp="20201105 12:56:02.363" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:56:02.363" starttime="20201105 12:56:02.351"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 12:56:02.367" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 12:56:02.367" starttime="20201105 12:56:02.367"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:56:02.368" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 12:56:02.368" starttime="20201105 12:56:02.367"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:02.368" starttime="20201105 12:56:02.366"></status>
</kw>
<msg timestamp="20201105 12:56:02.368" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 12:56:02.368" starttime="20201105 12:56:02.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 12:56:02.369" starttime="20201105 12:56:02.369"></status>
</kw>
<msg timestamp="20201105 12:56:02.369" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 12:56:02.369" starttime="20201105 12:56:02.368"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:02.369" starttime="20201105 12:56:02.365"></status>
</kw>
<msg timestamp="20201105 12:56:02.370" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 12:56:02.370" starttime="20201105 12:56:02.364"></status>
</kw>
<msg timestamp="20201105 12:56:02.370" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 12:56:02.370" starttime="20201105 12:56:02.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:56:02.374" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:56:32.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:56:32.998" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 12:56:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:56:04 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 12:56:32.999" starttime="20201105 12:56:02.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:56:33.000" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 12:56:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:56:04 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 12:56:04 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 12:56:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 12:56:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-021D1B81D7E0-&gt;6de9b662-08db-4dd2-a542-b4c3890446ac
2020-11-05 12:56:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 12:56:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-05 12:56:05 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 12:56:05 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 12:56:05 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 12:56:05 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604580806617_0003
2020-11-05 12:56:05 INFO  YarnClientImpl:273 - Submitted application application_1604580806617_0003
2020-11-05 12:56:05 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604580806617_0003/
2020-11-05 12:56:05 INFO  Job:1339 - Running job: job_1604580806617_0003
2020-11-05 12:56:13 INFO  Job:1360 - Job job_1604580806617_0003 running in uber mode : false
2020-11-05 12:56:13 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 12:56:19 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 12:56:24 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 12:56:28 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 12:56:31 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 12:56:32 INFO  Job:1378 - Job job_1604580806617_0003 completed successfully
2020-11-05 12:56:32 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34540
		Total time spent by all reduces in occupied slots (ms)=13040
		Total time spent by all map tasks (ms)=8635
		Total time spent by all reduce tasks (ms)=3260
		Total vcore-milliseconds taken by all map tasks=8635
		Total vcore-milliseconds taken by all reduce tasks=3260
		Total megabyte-milliseconds taken by all map tasks=35368960
		Total megabyte-milliseconds taken by all reduce tasks=13352960
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=506
		CPU time spent (ms)=6280
		Physical memory (bytes) snapshot=1163526144
		Virtual memory (bytes) snapshot=15790362624
		Total committed heap usage (bytes)=1054867456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 27.245 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 12:56:33.000" starttime="20201105 12:56:32.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:56:33.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:56:33.000" starttime="20201105 12:56:33.000"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:33.001" starttime="20201105 12:56:02.371"></status>
</kw>
<msg timestamp="20201105 12:56:33.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:56:33.001" starttime="20201105 12:56:02.370"></status>
</kw>
<msg timestamp="20201105 12:56:33.001" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 12:56:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:56:04 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 12:56:33.001" starttime="20201105 12:56:02.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 12:56:33.002" starttime="20201105 12:56:33.001"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 12:56:33.002" critical="yes" starttime="20201105 12:56:02.351"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:56:33.008" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:56:33.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:56:33.012" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:56:33.012" starttime="20201105 12:56:33.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:56:33.013" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:56:33.013" starttime="20201105 12:56:33.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:56:33.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:56:33.013" starttime="20201105 12:56:33.013"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:33.014" starttime="20201105 12:56:33.004"></status>
</kw>
<msg timestamp="20201105 12:56:33.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:56:33.014" starttime="20201105 12:56:33.004"></status>
</kw>
<msg timestamp="20201105 12:56:33.014" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:56:33.014" starttime="20201105 12:56:33.004"></status>
</kw>
<msg timestamp="20201105 12:56:33.014" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:56:33.014" starttime="20201105 12:56:33.003"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 12:56:33.015" level="INFO">${random} = 43</msg>
<status status="PASS" endtime="20201105 12:56:33.015" starttime="20201105 12:56:33.014"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 12:56:33.018" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 12:56:33.018" starttime="20201105 12:56:33.018"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:56:33.019" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 12:56:33.019" starttime="20201105 12:56:33.018"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:33.019" starttime="20201105 12:56:33.017"></status>
</kw>
<msg timestamp="20201105 12:56:33.019" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 12:56:33.019" starttime="20201105 12:56:33.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 12:56:33.020" starttime="20201105 12:56:33.020"></status>
</kw>
<msg timestamp="20201105 12:56:33.020" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 12:56:33.020" starttime="20201105 12:56:33.019"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:33.020" starttime="20201105 12:56:33.016"></status>
</kw>
<msg timestamp="20201105 12:56:33.020" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 12:56:33.020" starttime="20201105 12:56:33.016"></status>
</kw>
<msg timestamp="20201105 12:56:33.021" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 12:56:33.021" starttime="20201105 12:56:33.015"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 12:56:33.024" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 12:56:33.024" starttime="20201105 12:56:33.023"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:56:33.024" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 12:56:33.024" starttime="20201105 12:56:33.024"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:33.024" starttime="20201105 12:56:33.023"></status>
</kw>
<msg timestamp="20201105 12:56:33.024" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 12:56:33.024" starttime="20201105 12:56:33.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:56:33.026" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201105 12:56:33.026" starttime="20201105 12:56:33.025"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:56:33.026" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201105 12:56:33.026" starttime="20201105 12:56:33.026"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:33.026" starttime="20201105 12:56:33.025"></status>
</kw>
<msg timestamp="20201105 12:56:33.027" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201105 12:56:33.027" starttime="20201105 12:56:33.024"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:33.027" starttime="20201105 12:56:33.022"></status>
</kw>
<msg timestamp="20201105 12:56:33.027" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 12:56:33.027" starttime="20201105 12:56:33.021"></status>
</kw>
<msg timestamp="20201105 12:56:33.027" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 12:56:33.027" starttime="20201105 12:56:33.021"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 12:56:33.030" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 12:56:33.030" starttime="20201105 12:56:33.030"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:56:33.030" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 12:56:33.030" starttime="20201105 12:56:33.030"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:33.031" starttime="20201105 12:56:33.029"></status>
</kw>
<msg timestamp="20201105 12:56:33.031" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 12:56:33.031" starttime="20201105 12:56:33.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:56:33.032" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201105 12:56:33.032" starttime="20201105 12:56:33.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:56:33.032" level="INFO">${result} = /wordcount-43.txt</msg>
<status status="PASS" endtime="20201105 12:56:33.033" starttime="20201105 12:56:33.032"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:33.033" starttime="20201105 12:56:33.031"></status>
</kw>
<msg timestamp="20201105 12:56:33.033" level="INFO">${path_with_leading} = /wordcount-43.txt</msg>
<status status="PASS" endtime="20201105 12:56:33.033" starttime="20201105 12:56:33.031"></status>
</kw>
<status status="PASS" endtime="20201105 12:56:33.033" starttime="20201105 12:56:33.028"></status>
</kw>
<msg timestamp="20201105 12:56:33.033" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-43.txt</msg>
<status status="PASS" endtime="20201105 12:56:33.033" starttime="20201105 12:56:33.028"></status>
</kw>
<msg timestamp="20201105 12:56:33.033" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-43.txt</msg>
<status status="PASS" endtime="20201105 12:56:33.033" starttime="20201105 12:56:33.027"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:56:33.037" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-43.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:57:06.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:57:06.105" level="INFO">${output} = 2020-11-05 12:56:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-05 12:56:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 12:57:06.105" starttime="20201105 12:56:33.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:57:06.106" level="INFO">2020-11-05 12:56:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-05 12:56:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 12:56:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:56:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 12:56:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 12:56:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 12:56:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FD3564A197C2-&gt;6de9b662-08db-4dd2-a542-b4c3890446ac
2020-11-05 12:56:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 12:56:35 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 12:56:36 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 12:56:36 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604580806617_0004
2020-11-05 12:56:36 INFO  YarnClientImpl:273 - Submitted application application_1604580806617_0004
2020-11-05 12:56:36 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604580806617_0004/
2020-11-05 12:56:36 INFO  Job:1339 - Running job: job_1604580806617_0004
2020-11-05 12:56:44 INFO  Job:1360 - Job job_1604580806617_0004 running in uber mode : false
2020-11-05 12:56:44 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 12:56:50 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 12:56:54 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 12:56:58 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 12:57:04 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 12:57:05 INFO  Job:1378 - Job job_1604580806617_0004 completed successfully
2020-11-05 12:57:05 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34464
		Total time spent by all reduces in occupied slots (ms)=22560
		Total time spent by all map tasks (ms)=8616
		Total time spent by all reduce tasks (ms)=5640
		Total vcore-milliseconds taken by all map tasks=8616
		Total vcore-milliseconds taken by all reduce tasks=5640
		Total megabyte-milliseconds taken by all map tasks=35291136
		Total megabyte-milliseconds taken by all reduce tasks=23101440
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=502
		CPU time spent (ms)=6080
		Physical memory (bytes) snapshot=1138634752
		Virtual memory (bytes) snapshot=15773618176
		Total committed heap usage (bytes)=1053294592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201105 12:57:06.106" starttime="20201105 12:57:06.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:57:06.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:57:06.107" starttime="20201105 12:57:06.107"></status>
</kw>
<status status="PASS" endtime="20201105 12:57:06.107" starttime="20201105 12:56:33.034"></status>
</kw>
<msg timestamp="20201105 12:57:06.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:57:06.108" starttime="20201105 12:56:33.034"></status>
</kw>
<msg timestamp="20201105 12:57:06.108" level="INFO">${output} = 2020-11-05 12:56:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-05 12:56:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 12:57:06.108" starttime="20201105 12:56:33.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 12:57:06.108" starttime="20201105 12:57:06.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 12:57:06.109" starttime="20201105 12:57:06.109"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 12:57:06.109" critical="yes" starttime="20201105 12:56:33.002"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 12:57:06.110" starttime="20201105 12:56:02.306"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:37.758" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:54:37.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:54:37.763" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:54:37.763" starttime="20201105 12:54:37.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:54:37.764" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:54:37.764" starttime="20201105 12:54:37.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:54:37.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:54:37.765" starttime="20201105 12:54:37.764"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:37.765" starttime="20201105 12:54:37.754"></status>
</kw>
<msg timestamp="20201105 12:54:37.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:54:37.765" starttime="20201105 12:54:37.753"></status>
</kw>
<msg timestamp="20201105 12:54:37.765" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:54:37.765" starttime="20201105 12:54:37.753"></status>
</kw>
<msg timestamp="20201105 12:54:37.765" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:54:37.765" starttime="20201105 12:54:37.753"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:54:37.769" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:54:37.769" starttime="20201105 12:54:37.769"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:54:37.770" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:54:37.770" starttime="20201105 12:54:37.769"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:37.770" starttime="20201105 12:54:37.768"></status>
</kw>
<msg timestamp="20201105 12:54:37.770" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:54:37.770" starttime="20201105 12:54:37.767"></status>
</kw>
<status status="PASS" endtime="20201105 12:54:37.770" starttime="20201105 12:54:37.767"></status>
</kw>
<msg timestamp="20201105 12:54:37.770" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 12:54:37.770" starttime="20201105 12:54:37.766"></status>
</kw>
<msg timestamp="20201105 12:54:37.771" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 12:54:37.771" starttime="20201105 12:54:37.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:54:37.774" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:55:15.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:55:15.304" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 12:54:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:54:39 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 12:55:15.304" starttime="20201105 12:54:37.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:55:15.305" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 12:54:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:54:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 12:54:39 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 12:54:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 12:54:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3EEF2D8D53DF-&gt;6de9b662-08db-4dd2-a542-b4c3890446ac
2020-11-05 12:54:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 12:54:40 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-05 12:54:41 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 12:54:43 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 12:54:43 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604580806617_0001
2020-11-05 12:54:44 INFO  YarnClientImpl:273 - Submitted application application_1604580806617_0001
2020-11-05 12:54:44 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604580806617_0001/
2020-11-05 12:54:44 INFO  Job:1339 - Running job: job_1604580806617_0001
2020-11-05 12:54:52 INFO  Job:1360 - Job job_1604580806617_0001 running in uber mode : false
2020-11-05 12:54:52 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 12:54:58 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 12:55:03 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 12:55:07 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 12:55:10 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 12:55:14 INFO  Job:1378 - Job job_1604580806617_0001 completed successfully
2020-11-05 12:55:14 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34280
		Total time spent by all reduces in occupied slots (ms)=13136
		Total time spent by all map tasks (ms)=8570
		Total time spent by all reduce tasks (ms)=3284
		Total vcore-milliseconds taken by all map tasks=8570
		Total vcore-milliseconds taken by all reduce tasks=3284
		Total megabyte-milliseconds taken by all map tasks=35102720
		Total megabyte-milliseconds taken by all reduce tasks=13451264
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=516
		CPU time spent (ms)=5840
		Physical memory (bytes) snapshot=1153331200
		Virtual memory (bytes) snapshot=15789277184
		Total committed heap usage (bytes)=1042808832
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.98 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 12:55:15.305" starttime="20201105 12:55:15.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:55:15.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:55:15.306" starttime="20201105 12:55:15.305"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:15.306" starttime="20201105 12:54:37.772"></status>
</kw>
<msg timestamp="20201105 12:55:15.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:55:15.306" starttime="20201105 12:54:37.771"></status>
</kw>
<msg timestamp="20201105 12:55:15.306" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 12:54:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:54:39 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 12:55:15.306" starttime="20201105 12:54:37.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 12:55:15.307" starttime="20201105 12:55:15.307"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 12:55:15.307" critical="yes" starttime="20201105 12:54:37.752"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:55:15.312" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:55:15.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:55:15.317" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:55:15.317" starttime="20201105 12:55:15.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:55:15.318" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:55:15.318" starttime="20201105 12:55:15.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:55:15.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:55:15.319" starttime="20201105 12:55:15.318"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:15.319" starttime="20201105 12:55:15.310"></status>
</kw>
<msg timestamp="20201105 12:55:15.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:55:15.319" starttime="20201105 12:55:15.309"></status>
</kw>
<msg timestamp="20201105 12:55:15.319" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:55:15.319" starttime="20201105 12:55:15.309"></status>
</kw>
<msg timestamp="20201105 12:55:15.319" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 12:55:15.320" starttime="20201105 12:55:15.309"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 12:55:15.320" level="INFO">${random} = 06</msg>
<status status="PASS" endtime="20201105 12:55:15.320" starttime="20201105 12:55:15.320"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:55:15.324" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:55:15.324" starttime="20201105 12:55:15.323"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:55:15.324" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:55:15.324" starttime="20201105 12:55:15.324"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:15.324" starttime="20201105 12:55:15.323"></status>
</kw>
<msg timestamp="20201105 12:55:15.324" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:55:15.324" starttime="20201105 12:55:15.322"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:15.325" starttime="20201105 12:55:15.322"></status>
</kw>
<msg timestamp="20201105 12:55:15.325" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 12:55:15.325" starttime="20201105 12:55:15.321"></status>
</kw>
<msg timestamp="20201105 12:55:15.325" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 12:55:15.325" starttime="20201105 12:55:15.320"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:55:15.328" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:55:15.328" starttime="20201105 12:55:15.327"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:55:15.328" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:55:15.328" starttime="20201105 12:55:15.328"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:15.329" starttime="20201105 12:55:15.327"></status>
</kw>
<msg timestamp="20201105 12:55:15.329" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:55:15.329" starttime="20201105 12:55:15.327"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:15.329" starttime="20201105 12:55:15.326"></status>
</kw>
<msg timestamp="20201105 12:55:15.329" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 12:55:15.329" starttime="20201105 12:55:15.326"></status>
</kw>
<msg timestamp="20201105 12:55:15.329" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 12:55:15.329" starttime="20201105 12:55:15.325"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:55:15.332" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:55:15.332" starttime="20201105 12:55:15.332"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:55:15.333" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:55:15.333" starttime="20201105 12:55:15.332"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:15.333" starttime="20201105 12:55:15.332"></status>
</kw>
<msg timestamp="20201105 12:55:15.333" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:55:15.333" starttime="20201105 12:55:15.331"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:15.334" starttime="20201105 12:55:15.331"></status>
</kw>
<msg timestamp="20201105 12:55:15.334" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-06.txt</msg>
<status status="PASS" endtime="20201105 12:55:15.334" starttime="20201105 12:55:15.330"></status>
</kw>
<msg timestamp="20201105 12:55:15.334" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-06.txt</msg>
<status status="PASS" endtime="20201105 12:55:15.334" starttime="20201105 12:55:15.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:55:15.338" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-06.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:55:49.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:55:49.547" level="INFO">${output} = 2020-11-05 12:55:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-05 12:55:17 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 12:55:49.547" starttime="20201105 12:55:15.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:55:49.548" level="INFO">2020-11-05 12:55:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-05 12:55:17 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 12:55:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:55:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 12:55:17 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 12:55:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 12:55:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5434B699EC6F-&gt;6de9b662-08db-4dd2-a542-b4c3890446ac
2020-11-05 12:55:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 12:55:18 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 12:55:18 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 12:55:18 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604580806617_0002
2020-11-05 12:55:18 INFO  YarnClientImpl:273 - Submitted application application_1604580806617_0002
2020-11-05 12:55:18 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604580806617_0002/
2020-11-05 12:55:18 INFO  Job:1339 - Running job: job_1604580806617_0002
2020-11-05 12:55:26 INFO  Job:1360 - Job job_1604580806617_0002 running in uber mode : false
2020-11-05 12:55:26 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 12:55:32 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 12:55:37 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 12:55:41 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 12:55:46 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 12:55:49 INFO  Job:1378 - Job job_1604580806617_0002 completed successfully
2020-11-05 12:55:49 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677783
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34332
		Total time spent by all reduces in occupied slots (ms)=16800
		Total time spent by all map tasks (ms)=8583
		Total time spent by all reduce tasks (ms)=4200
		Total vcore-milliseconds taken by all map tasks=8583
		Total vcore-milliseconds taken by all reduce tasks=4200
		Total megabyte-milliseconds taken by all map tasks=35155968
		Total megabyte-milliseconds taken by all reduce tasks=17203200
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=519
		CPU time spent (ms)=6270
		Physical memory (bytes) snapshot=1168621568
		Virtual memory (bytes) snapshot=15793991680
		Total committed heap usage (bytes)=1149763584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201105 12:55:49.548" starttime="20201105 12:55:49.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:55:49.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:55:49.549" starttime="20201105 12:55:49.548"></status>
</kw>
<status status="PASS" endtime="20201105 12:55:49.549" starttime="20201105 12:55:15.335"></status>
</kw>
<msg timestamp="20201105 12:55:49.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:55:49.549" starttime="20201105 12:55:15.335"></status>
</kw>
<msg timestamp="20201105 12:55:49.550" level="INFO">${output} = 2020-11-05 12:55:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-05 12:55:17 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 12:55:49.550" starttime="20201105 12:55:15.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 12:55:49.550" starttime="20201105 12:55:49.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 12:55:49.551" starttime="20201105 12:55:49.550"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 12:55:49.551" critical="yes" starttime="20201105 12:55:15.308"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 12:55:49.552" starttime="20201105 12:54:37.708"></status>
</suite>
<status status="PASS" elapsedtime="172858" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:58:40.240" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:58:42.122" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 12:58:42.122" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 12:58:42.122" starttime="20201105 12:58:40.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:58:42.123" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 12:58:42.123" starttime="20201105 12:58:42.123"></status>
</kw>
<msg timestamp="20201105 12:58:42.124" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 12:58:42.124" starttime="20201105 12:58:40.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:58:42.130" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:58:43.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:58:43.957" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:58:43.957" starttime="20201105 12:58:42.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:58:43.958" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:58:43.959" starttime="20201105 12:58:43.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:58:43.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:58:43.959" starttime="20201105 12:58:43.959"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:43.959" starttime="20201105 12:58:42.126"></status>
</kw>
<msg timestamp="20201105 12:58:43.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:58:43.960" starttime="20201105 12:58:42.125"></status>
</kw>
<msg timestamp="20201105 12:58:43.960" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201105 12:58:43.960" starttime="20201105 12:58:42.125"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 12:58:43.960" starttime="20201105 12:58:43.960"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:43.960" starttime="20201105 12:58:42.124"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:43.960" starttime="20201105 12:58:42.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:58:43.966" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:58:45.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:58:45.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:58:45.791" starttime="20201105 12:58:43.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:58:45.792" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:58:45.793" starttime="20201105 12:58:45.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:58:45.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:58:45.793" starttime="20201105 12:58:45.793"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:45.794" starttime="20201105 12:58:43.962"></status>
</kw>
<msg timestamp="20201105 12:58:45.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:58:45.794" starttime="20201105 12:58:43.962"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:45.794" starttime="20201105 12:58:43.961"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:45.794" starttime="20201105 12:58:43.961"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:45.794" starttime="20201105 12:58:43.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 12:58:45.794" starttime="20201105 12:58:45.794"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:58:45.798" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:58:47.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:58:47.787" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T12:58:45.669Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 12:58:47.787" starttime="20201105 12:58:45.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:58:47.788" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T12:58:45.669Z",
  "modificationTime" : "2020-11-05T12:58:45.669Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 12:58:47.788" starttime="20201105 12:58:47.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:58:47.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:58:47.789" starttime="20201105 12:58:47.788"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:47.789" starttime="20201105 12:58:45.796"></status>
</kw>
<msg timestamp="20201105 12:58:47.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:58:47.789" starttime="20201105 12:58:45.795"></status>
</kw>
<msg timestamp="20201105 12:58:47.790" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T12:58:45.669Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 12:58:47.790" starttime="20201105 12:58:45.795"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 12:58:47.790" starttime="20201105 12:58:47.790"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:58:47.793" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:58:47.793" starttime="20201105 12:58:47.793"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:58:47.794" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:58:47.794" starttime="20201105 12:58:47.794"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:47.794" starttime="20201105 12:58:47.793"></status>
</kw>
<msg timestamp="20201105 12:58:47.794" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:58:47.794" starttime="20201105 12:58:47.792"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:47.795" starttime="20201105 12:58:47.792"></status>
</kw>
<msg timestamp="20201105 12:58:47.795" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 12:58:47.795" starttime="20201105 12:58:47.791"></status>
</kw>
<msg timestamp="20201105 12:58:47.795" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 12:58:47.795" starttime="20201105 12:58:47.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:58:47.799" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:58:49.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:58:49.777" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:58:49.777" starttime="20201105 12:58:47.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:58:49.778" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:58:49.778" starttime="20201105 12:58:49.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:58:49.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:58:49.779" starttime="20201105 12:58:49.778"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:49.779" starttime="20201105 12:58:47.796"></status>
</kw>
<msg timestamp="20201105 12:58:49.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:58:49.779" starttime="20201105 12:58:47.795"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:49.779" starttime="20201105 12:58:47.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:58:49.784" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:58:54.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:58:54.834" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:58:54.834" starttime="20201105 12:58:49.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:58:54.835" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:58:54.835" starttime="20201105 12:58:54.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:58:54.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:58:54.836" starttime="20201105 12:58:54.836"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:54.836" starttime="20201105 12:58:49.780"></status>
</kw>
<msg timestamp="20201105 12:58:54.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:58:54.836" starttime="20201105 12:58:49.780"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:54.837" starttime="20201105 12:58:49.780"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:58:54.840" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:58:58.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:58:58.175" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:58:58.175" starttime="20201105 12:58:54.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:58:58.176" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:58:58.176" starttime="20201105 12:58:58.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:58:58.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:58:58.176" starttime="20201105 12:58:58.176"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:58.177" starttime="20201105 12:58:54.838"></status>
</kw>
<msg timestamp="20201105 12:58:58.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:58:58.177" starttime="20201105 12:58:54.837"></status>
</kw>
<status status="PASS" endtime="20201105 12:58:58.177" starttime="20201105 12:58:54.837"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:58:58.182" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:59:01.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:59:01.594" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:59:01.594" starttime="20201105 12:58:58.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:59:01.595" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:59:01.595" starttime="20201105 12:59:01.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:59:01.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:59:01.596" starttime="20201105 12:59:01.596"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:01.596" starttime="20201105 12:58:58.178"></status>
</kw>
<msg timestamp="20201105 12:59:01.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:59:01.596" starttime="20201105 12:58:58.178"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:01.597" starttime="20201105 12:58:58.177"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 12:59:01.597" critical="yes" starttime="20201105 12:58:40.234"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:59:01.602" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:59:01.602" starttime="20201105 12:59:01.601"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:59:01.602" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:59:01.603" starttime="20201105 12:59:01.602"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:01.603" starttime="20201105 12:59:01.601"></status>
</kw>
<msg timestamp="20201105 12:59:01.603" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:59:01.603" starttime="20201105 12:59:01.600"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:01.603" starttime="20201105 12:59:01.600"></status>
</kw>
<msg timestamp="20201105 12:59:01.603" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 12:59:01.603" starttime="20201105 12:59:01.599"></status>
</kw>
<msg timestamp="20201105 12:59:01.603" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 12:59:01.603" starttime="20201105 12:59:01.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:59:01.606" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:59:03.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:59:03.254" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:59:03.254" starttime="20201105 12:59:01.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:59:03.255" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:59:03.255" starttime="20201105 12:59:03.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:59:03.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:59:03.256" starttime="20201105 12:59:03.256"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:03.256" starttime="20201105 12:59:01.604"></status>
</kw>
<msg timestamp="20201105 12:59:03.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:59:03.257" starttime="20201105 12:59:01.604"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:03.257" starttime="20201105 12:59:01.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:59:03.260" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:59:05.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:59:05.257" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 12:59:05.257" starttime="20201105 12:59:03.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:59:05.259" level="INFO"></msg>
<status status="PASS" endtime="20201105 12:59:05.259" starttime="20201105 12:59:05.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:59:05.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:59:05.259" starttime="20201105 12:59:05.259"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:05.259" starttime="20201105 12:59:03.258"></status>
</kw>
<msg timestamp="20201105 12:59:05.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:59:05.260" starttime="20201105 12:59:03.257"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:05.260" starttime="20201105 12:59:03.257"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 12:59:05.260" critical="yes" starttime="20201105 12:59:01.598"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201105 12:59:05.261" starttime="20201105 12:58:40.183"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 13:00:38.760" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 13:00:38.760" starttime="20201105 13:00:38.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:00:38.760" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 13:00:38.760" starttime="20201105 13:00:38.760"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:38.760" starttime="20201105 13:00:38.759"></status>
</kw>
<msg timestamp="20201105 13:00:38.760" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 13:00:38.761" starttime="20201105 13:00:38.758"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:00:38.761" starttime="20201105 13:00:38.761"></status>
</kw>
<msg timestamp="20201105 13:00:38.761" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 13:00:38.761" starttime="20201105 13:00:38.761"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:38.762" starttime="20201105 13:00:38.758"></status>
</kw>
<msg timestamp="20201105 13:00:38.762" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:00:38.762" starttime="20201105 13:00:38.757"></status>
</kw>
<msg timestamp="20201105 13:00:38.762" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:00:38.762" starttime="20201105 13:00:38.756"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 13:00:38.762" level="INFO">${random} = 16960</msg>
<status status="PASS" endtime="20201105 13:00:38.763" starttime="20201105 13:00:38.762"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:00:38.770" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-16960 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:00:42.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:00:42.072" level="INFO">${output} = 2020-11-05 13:00:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 13:00:42.072" starttime="20201105 13:00:38.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:00:42.073" level="INFO">2020-11-05 13:00:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:40 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 13:00:40 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 13:00:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:00:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:00:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:00:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2C438C9E77BD-&gt;aa92691a-e224-48d1-97e0-bae89db27fa1
2020-11-05 13:00:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 13:00:41 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 13:00:42.074" starttime="20201105 13:00:42.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:00:42.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:00:42.074" starttime="20201105 13:00:42.074"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:42.074" starttime="20201105 13:00:38.763"></status>
</kw>
<msg timestamp="20201105 13:00:42.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:00:42.075" starttime="20201105 13:00:38.763"></status>
</kw>
<msg timestamp="20201105 13:00:42.075" level="INFO">${result} = 2020-11-05 13:00:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 13:00:42.075" starttime="20201105 13:00:38.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:00:42.081" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:00:43.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:00:43.665" level="INFO">${output} = 2020-11-05 13:00:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 13:00:43.665" starttime="20201105 13:00:42.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:00:43.666" level="INFO">2020-11-05 13:00:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:43 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-05 13:00 ofs://om/volume1/bucket1/ozone-16960
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-05 12:59 ofs://om/volume1/bucket1/ozone-65531
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:59 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:00 ofs://om/volume1/bucket1/wordcount-35.txt
2020-11-05 13:00:43 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 13:00:43.666" starttime="20201105 13:00:43.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:00:43.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:00:43.667" starttime="20201105 13:00:43.666"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:43.667" starttime="20201105 13:00:42.077"></status>
</kw>
<msg timestamp="20201105 13:00:43.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:00:43.667" starttime="20201105 13:00:42.077"></status>
</kw>
<msg timestamp="20201105 13:00:43.667" level="INFO">${result} = 2020-11-05 13:00:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 13:00:43.667" starttime="20201105 13:00:42.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:00:43.668" starttime="20201105 13:00:43.668"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 13:00:43.668" critical="yes" starttime="20201105 13:00:38.756"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 13:00:43.669" starttime="20201105 13:00:38.711"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:59:09.410" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:59:09.410" starttime="20201105 12:59:09.409"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:59:09.410" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:59:09.410" starttime="20201105 12:59:09.410"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:09.411" starttime="20201105 12:59:09.409"></status>
</kw>
<msg timestamp="20201105 12:59:09.411" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:59:09.411" starttime="20201105 12:59:09.409"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:09.411" starttime="20201105 12:59:09.408"></status>
</kw>
<msg timestamp="20201105 12:59:09.411" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 12:59:09.411" starttime="20201105 12:59:09.408"></status>
</kw>
<msg timestamp="20201105 12:59:09.411" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 12:59:09.411" starttime="20201105 12:59:09.407"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 12:59:09.412" level="INFO">${random} = 65531</msg>
<status status="PASS" endtime="20201105 12:59:09.412" starttime="20201105 12:59:09.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:59:09.418" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-65531 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:59:12.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:59:12.678" level="INFO">${output} = 2020-11-05 12:59:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 12:59:12.678" starttime="20201105 12:59:09.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:59:12.679" level="INFO">2020-11-05 12:59:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:11 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 12:59:11 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:59:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 12:59:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 12:59:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 12:59:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2ACE5829D40C-&gt;aa92691a-e224-48d1-97e0-bae89db27fa1
2020-11-05 12:59:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 12:59:12 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 12:59:12.679" starttime="20201105 12:59:12.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:59:12.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:59:12.680" starttime="20201105 12:59:12.679"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:12.680" starttime="20201105 12:59:09.413"></status>
</kw>
<msg timestamp="20201105 12:59:12.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:59:12.680" starttime="20201105 12:59:09.412"></status>
</kw>
<msg timestamp="20201105 12:59:12.680" level="INFO">${result} = 2020-11-05 12:59:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 12:59:12.680" starttime="20201105 12:59:09.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:59:12.685" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:59:14.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:59:14.412" level="INFO">${output} = 2020-11-05 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:14 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 12:59:14.412" starttime="20201105 12:59:12.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:59:14.413" level="INFO">2020-11-05 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:14 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-05 12:59 o3fs://bucket1.volume1.om/ozone-65531
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 12:59 o3fs://bucket1.volume1.om/user
2020-11-05 12:59:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 12:59:14.413" starttime="20201105 12:59:14.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:59:14.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:59:14.414" starttime="20201105 12:59:14.413"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:14.414" starttime="20201105 12:59:12.682"></status>
</kw>
<msg timestamp="20201105 12:59:14.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:59:14.414" starttime="20201105 12:59:12.681"></status>
</kw>
<msg timestamp="20201105 12:59:14.414" level="INFO">${result} = 2020-11-05 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:14 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 12:59:14.414" starttime="20201105 12:59:12.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 12:59:14.415" starttime="20201105 12:59:14.415"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 12:59:14.415" critical="yes" starttime="20201105 12:59:09.406"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 12:59:14.416" starttime="20201105 12:59:09.360"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:00:47.849" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:00:47.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:00:47.854" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:00:47.854" starttime="20201105 13:00:47.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:00:47.855" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:00:47.855" starttime="20201105 13:00:47.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:00:47.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:00:47.856" starttime="20201105 13:00:47.855"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:47.856" starttime="20201105 13:00:47.845"></status>
</kw>
<msg timestamp="20201105 13:00:47.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:00:47.856" starttime="20201105 13:00:47.845"></status>
</kw>
<msg timestamp="20201105 13:00:47.856" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:00:47.856" starttime="20201105 13:00:47.844"></status>
</kw>
<msg timestamp="20201105 13:00:47.856" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:00:47.856" starttime="20201105 13:00:47.844"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 13:00:47.860" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 13:00:47.860" starttime="20201105 13:00:47.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:00:47.861" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 13:00:47.861" starttime="20201105 13:00:47.861"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:47.861" starttime="20201105 13:00:47.859"></status>
</kw>
<msg timestamp="20201105 13:00:47.861" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 13:00:47.861" starttime="20201105 13:00:47.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:00:47.862" starttime="20201105 13:00:47.862"></status>
</kw>
<msg timestamp="20201105 13:00:47.862" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 13:00:47.862" starttime="20201105 13:00:47.861"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:47.862" starttime="20201105 13:00:47.858"></status>
</kw>
<msg timestamp="20201105 13:00:47.863" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:00:47.863" starttime="20201105 13:00:47.857"></status>
</kw>
<msg timestamp="20201105 13:00:47.863" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:00:47.863" starttime="20201105 13:00:47.857"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:00:47.866" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:01:21.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:01:21.802" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 13:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00...</msg>
<status status="PASS" endtime="20201105 13:01:21.803" starttime="20201105 13:00:47.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:01:21.804" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 13:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:49 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 13:00:49 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 13:00:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:00:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:00:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:00:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E9B705DC1558-&gt;aa92691a-e224-48d1-97e0-bae89db27fa1
2020-11-05 13:00:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-05 13:00:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 13:00:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:51 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 13:00:51 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 13:00:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604581065740_0003
2020-11-05 13:00:51 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 13:00:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:51 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 13:00:51 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 13:00:51 INFO  YarnClientImpl:324 - Submitted application application_1604581065740_0003
2020-11-05 13:00:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604581065740_0003/
2020-11-05 13:00:51 INFO  Job:1619 - Running job: job_1604581065740_0003
2020-11-05 13:00:59 INFO  Job:1640 - Job job_1604581065740_0003 running in uber mode : false
2020-11-05 13:00:59 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 13:01:05 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 13:01:10 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 13:01:15 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 13:01:21 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 13:01:21 INFO  Job:1658 - Job job_1604581065740_0003 completed successfully
2020-11-05 13:01:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34640
		Total time spent by all reduces in occupied slots (ms)=13208
		Total time spent by all map tasks (ms)=8660
		Total time spent by all reduce tasks (ms)=3302
		Total vcore-milliseconds taken by all map tasks=8660
		Total vcore-milliseconds taken by all reduce tasks=3302
		Total megabyte-milliseconds taken by all map tasks=35471360
		Total megabyte-milliseconds taken by all reduce tasks=13524992
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=544
		CPU time spent (ms)=6100
		Physical memory (bytes) snapshot=1218519040
		Virtual memory (bytes) snapshot=15806849024
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=307924992
		Peak Map Virtual memory (bytes)=3945349120
		Peak Reduce Physical memory (bytes)=299667456
		Peak Reduce Virtual memory (bytes)=3971915776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.512 seconds
2020-11-05 13:01:21 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-05 13:01:21 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 13:01:21.804" starttime="20201105 13:01:21.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:01:21.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:01:21.805" starttime="20201105 13:01:21.804"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:21.805" starttime="20201105 13:00:47.864"></status>
</kw>
<msg timestamp="20201105 13:01:21.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:01:21.805" starttime="20201105 13:00:47.863"></status>
</kw>
<msg timestamp="20201105 13:01:21.805" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 13:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00...</msg>
<status status="PASS" endtime="20201105 13:01:21.805" starttime="20201105 13:00:47.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 13:01:21.806" starttime="20201105 13:01:21.806"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 13:01:21.806" critical="yes" starttime="20201105 13:00:47.843"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:01:21.811" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:01:21.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:01:21.816" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:01:21.816" starttime="20201105 13:01:21.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:01:21.817" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:01:21.817" starttime="20201105 13:01:21.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:01:21.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:01:21.818" starttime="20201105 13:01:21.818"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:21.818" starttime="20201105 13:01:21.809"></status>
</kw>
<msg timestamp="20201105 13:01:21.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:01:21.818" starttime="20201105 13:01:21.808"></status>
</kw>
<msg timestamp="20201105 13:01:21.819" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:01:21.819" starttime="20201105 13:01:21.808"></status>
</kw>
<msg timestamp="20201105 13:01:21.819" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:01:21.819" starttime="20201105 13:01:21.808"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 13:01:21.819" level="INFO">${random} = 98</msg>
<status status="PASS" endtime="20201105 13:01:21.819" starttime="20201105 13:01:21.819"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 13:01:21.823" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 13:01:21.823" starttime="20201105 13:01:21.822"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:01:21.823" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 13:01:21.823" starttime="20201105 13:01:21.823"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:21.823" starttime="20201105 13:01:21.822"></status>
</kw>
<msg timestamp="20201105 13:01:21.824" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 13:01:21.824" starttime="20201105 13:01:21.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:01:21.824" starttime="20201105 13:01:21.824"></status>
</kw>
<msg timestamp="20201105 13:01:21.825" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 13:01:21.825" starttime="20201105 13:01:21.824"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:21.825" starttime="20201105 13:01:21.821"></status>
</kw>
<msg timestamp="20201105 13:01:21.825" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:01:21.825" starttime="20201105 13:01:21.820"></status>
</kw>
<msg timestamp="20201105 13:01:21.825" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:01:21.825" starttime="20201105 13:01:21.819"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 13:01:21.828" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 13:01:21.828" starttime="20201105 13:01:21.828"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:01:21.829" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 13:01:21.829" starttime="20201105 13:01:21.828"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:21.829" starttime="20201105 13:01:21.827"></status>
</kw>
<msg timestamp="20201105 13:01:21.829" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 13:01:21.829" starttime="20201105 13:01:21.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:01:21.830" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201105 13:01:21.830" starttime="20201105 13:01:21.830"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:01:21.831" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201105 13:01:21.831" starttime="20201105 13:01:21.830"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:21.831" starttime="20201105 13:01:21.830"></status>
</kw>
<msg timestamp="20201105 13:01:21.831" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201105 13:01:21.831" starttime="20201105 13:01:21.829"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:21.831" starttime="20201105 13:01:21.826"></status>
</kw>
<msg timestamp="20201105 13:01:21.831" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 13:01:21.831" starttime="20201105 13:01:21.826"></status>
</kw>
<msg timestamp="20201105 13:01:21.832" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 13:01:21.832" starttime="20201105 13:01:21.825"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 13:01:21.835" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 13:01:21.835" starttime="20201105 13:01:21.834"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:01:21.835" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 13:01:21.835" starttime="20201105 13:01:21.835"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:21.835" starttime="20201105 13:01:21.834"></status>
</kw>
<msg timestamp="20201105 13:01:21.835" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 13:01:21.836" starttime="20201105 13:01:21.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:01:21.837" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201105 13:01:21.837" starttime="20201105 13:01:21.836"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:01:21.837" level="INFO">${result} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20201105 13:01:21.837" starttime="20201105 13:01:21.837"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:21.837" starttime="20201105 13:01:21.836"></status>
</kw>
<msg timestamp="20201105 13:01:21.838" level="INFO">${path_with_leading} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20201105 13:01:21.838" starttime="20201105 13:01:21.836"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:21.838" starttime="20201105 13:01:21.833"></status>
</kw>
<msg timestamp="20201105 13:01:21.838" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201105 13:01:21.838" starttime="20201105 13:01:21.832"></status>
</kw>
<msg timestamp="20201105 13:01:21.838" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201105 13:01:21.838" starttime="20201105 13:01:21.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:01:21.842" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-98.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:01:58.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:01:58.801" level="INFO">${output} = 2020-11-05 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 13:01:58.801" starttime="20201105 13:01:21.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:01:58.802" level="INFO">2020-11-05 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-05 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:23 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 13:01:23 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 13:01:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:01:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:01:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:01:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3DD730FA750C-&gt;aa92691a-e224-48d1-97e0-bae89db27fa1
2020-11-05 13:01:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 13:01:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 13:01:27 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 13:01:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604581065740_0004
2020-11-05 13:01:27 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 13:01:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:27 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 13:01:27 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 13:01:28 INFO  YarnClientImpl:324 - Submitted application application_1604581065740_0004
2020-11-05 13:01:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604581065740_0004/
2020-11-05 13:01:28 INFO  Job:1619 - Running job: job_1604581065740_0004
2020-11-05 13:01:35 INFO  Job:1640 - Job job_1604581065740_0004 running in uber mode : false
2020-11-05 13:01:35 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 13:01:41 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 13:01:46 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 13:01:51 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 13:01:55 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 13:01:58 INFO  Job:1658 - Job job_1604581065740_0004 completed successfully
2020-11-05 13:01:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083691
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35284
		Total time spent by all reduces in occupied slots (ms)=13200
		Total time spent by all map tasks (ms)=8821
		Total time spent by all reduce tasks (ms)=3300
		Total vcore-milliseconds taken by all map tasks=8821
		Total vcore-milliseconds taken by all reduce tasks=3300
		Total megabyte-milliseconds taken by all map tasks=36130816
		Total megabyte-milliseconds taken by all reduce tasks=13516800
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=551
		CPU time spent (ms)=6240
		Physical memory (bytes) snapshot=1174876160
		Virtual memory (bytes) snapshot=15771353088
		Total committed heap usage (bytes)=1063256064
		Peak Map Physical memory (bytes)=301633536
		Peak Map Virtual memory (bytes)=3943411712
		Peak Reduce Physical memory (bytes)=297463808
		Peak Reduce Virtual memory (bytes)=3974025216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-05 13:01:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 13:01:58.802" starttime="20201105 13:01:58.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:01:58.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:01:58.803" starttime="20201105 13:01:58.802"></status>
</kw>
<status status="PASS" endtime="20201105 13:01:58.803" starttime="20201105 13:01:21.839"></status>
</kw>
<msg timestamp="20201105 13:01:58.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:01:58.803" starttime="20201105 13:01:21.839"></status>
</kw>
<msg timestamp="20201105 13:01:58.804" level="INFO">${output} = 2020-11-05 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:01:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 13:01:58.804" starttime="20201105 13:01:21.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 13:01:58.805" starttime="20201105 13:01:58.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 13:01:58.805" starttime="20201105 13:01:58.805"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 13:01:58.805" critical="yes" starttime="20201105 13:01:21.807"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 13:01:58.807" starttime="20201105 13:00:47.799"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:59:18.634" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 12:59:18.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 12:59:18.637" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 12:59:18.637" starttime="20201105 12:59:18.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 12:59:18.638" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 12:59:18.638" starttime="20201105 12:59:18.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 12:59:18.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 12:59:18.638" starttime="20201105 12:59:18.638"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:18.638" starttime="20201105 12:59:18.628"></status>
</kw>
<msg timestamp="20201105 12:59:18.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 12:59:18.639" starttime="20201105 12:59:18.628"></status>
</kw>
<msg timestamp="20201105 12:59:18.639" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 12:59:18.639" starttime="20201105 12:59:18.628"></status>
</kw>
<msg timestamp="20201105 12:59:18.639" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 12:59:18.639" starttime="20201105 12:59:18.627"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 12:59:18.643" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 12:59:18.643" starttime="20201105 12:59:18.643"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 12:59:18.643" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 12:59:18.644" starttime="20201105 12:59:18.643"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:18.644" starttime="20201105 12:59:18.641"></status>
</kw>
<msg timestamp="20201105 12:59:18.644" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 12:59:18.644" starttime="20201105 12:59:18.641"></status>
</kw>
<status status="PASS" endtime="20201105 12:59:18.644" starttime="20201105 12:59:18.640"></status>
</kw>
<msg timestamp="20201105 12:59:18.644" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 12:59:18.644" starttime="20201105 12:59:18.640"></status>
</kw>
<msg timestamp="20201105 12:59:18.644" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 12:59:18.644" starttime="20201105 12:59:18.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 12:59:18.647" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:00:00.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:00:00.603" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 12:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59...</msg>
<status status="PASS" endtime="20201105 13:00:00.603" starttime="20201105 12:59:18.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:00:00.604" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 12:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 12:59:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 12:59:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 12:59:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 12:59:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 12:59:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-47CD60D471D2-&gt;aa92691a-e224-48d1-97e0-bae89db27fa1
2020-11-05 12:59:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 12:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-05 12:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 12:59:24 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 12:59:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604581065740_0001
2020-11-05 12:59:24 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:25 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 12:59:25 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 12:59:25 INFO  YarnClientImpl:324 - Submitted application application_1604581065740_0001
2020-11-05 12:59:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604581065740_0001/
2020-11-05 12:59:25 INFO  Job:1619 - Running job: job_1604581065740_0001
2020-11-05 12:59:35 INFO  Job:1640 - Job job_1604581065740_0001 running in uber mode : false
2020-11-05 12:59:35 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 12:59:41 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 12:59:46 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 12:59:51 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 12:59:58 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 12:59:59 INFO  Job:1658 - Job job_1604581065740_0001 completed successfully
2020-11-05 12:59:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:00 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35196
		Total time spent by all reduces in occupied slots (ms)=24120
		Total time spent by all map tasks (ms)=8799
		Total time spent by all reduce tasks (ms)=6030
		Total vcore-milliseconds taken by all map tasks=8799
		Total vcore-milliseconds taken by all reduce tasks=6030
		Total megabyte-milliseconds taken by all map tasks=36040704
		Total megabyte-milliseconds taken by all reduce tasks=24698880
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=537
		CPU time spent (ms)=5880
		Physical memory (bytes) snapshot=1215700992
		Virtual memory (bytes) snapshot=15788048384
		Total committed heap usage (bytes)=1069023232
		Peak Map Physical memory (bytes)=311291904
		Peak Map Virtual memory (bytes)=3945930752
		Peak Reduce Physical memory (bytes)=299438080
		Peak Reduce Virtual memory (bytes)=3965001728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.047 seconds
2020-11-05 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-05 13:00:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 13:00:00.604" starttime="20201105 13:00:00.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:00:00.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:00:00.605" starttime="20201105 13:00:00.604"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:00.605" starttime="20201105 12:59:18.645"></status>
</kw>
<msg timestamp="20201105 13:00:00.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:00:00.605" starttime="20201105 12:59:18.645"></status>
</kw>
<msg timestamp="20201105 13:00:00.606" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 12:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 12:59...</msg>
<status status="PASS" endtime="20201105 13:00:00.606" starttime="20201105 12:59:18.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 13:00:00.606" starttime="20201105 13:00:00.606"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 13:00:00.607" critical="yes" starttime="20201105 12:59:18.627"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:00:00.620" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:00:00.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:00:00.623" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:00:00.623" starttime="20201105 13:00:00.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:00:00.624" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:00:00.624" starttime="20201105 13:00:00.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:00:00.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:00:00.625" starttime="20201105 13:00:00.624"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:00.625" starttime="20201105 13:00:00.609"></status>
</kw>
<msg timestamp="20201105 13:00:00.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:00:00.625" starttime="20201105 13:00:00.609"></status>
</kw>
<msg timestamp="20201105 13:00:00.625" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:00:00.626" starttime="20201105 13:00:00.608"></status>
</kw>
<msg timestamp="20201105 13:00:00.626" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 13:00:00.626" starttime="20201105 13:00:00.608"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 13:00:00.626" level="INFO">${random} = 35</msg>
<status status="PASS" endtime="20201105 13:00:00.626" starttime="20201105 13:00:00.626"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:00:00.630" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:00:00.630" starttime="20201105 13:00:00.629"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:00:00.630" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:00:00.630" starttime="20201105 13:00:00.630"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:00.630" starttime="20201105 13:00:00.629"></status>
</kw>
<msg timestamp="20201105 13:00:00.631" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:00:00.631" starttime="20201105 13:00:00.628"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:00.631" starttime="20201105 13:00:00.628"></status>
</kw>
<msg timestamp="20201105 13:00:00.631" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:00:00.631" starttime="20201105 13:00:00.627"></status>
</kw>
<msg timestamp="20201105 13:00:00.631" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:00:00.631" starttime="20201105 13:00:00.626"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:00:00.634" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:00:00.634" starttime="20201105 13:00:00.634"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:00:00.635" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:00:00.635" starttime="20201105 13:00:00.634"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:00.635" starttime="20201105 13:00:00.633"></status>
</kw>
<msg timestamp="20201105 13:00:00.635" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:00:00.635" starttime="20201105 13:00:00.633"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:00.635" starttime="20201105 13:00:00.632"></status>
</kw>
<msg timestamp="20201105 13:00:00.635" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 13:00:00.635" starttime="20201105 13:00:00.632"></status>
</kw>
<msg timestamp="20201105 13:00:00.635" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 13:00:00.635" starttime="20201105 13:00:00.631"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:00:00.638" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:00:00.638" starttime="20201105 13:00:00.638"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:00:00.639" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:00:00.639" starttime="20201105 13:00:00.638"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:00.639" starttime="20201105 13:00:00.637"></status>
</kw>
<msg timestamp="20201105 13:00:00.639" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:00:00.639" starttime="20201105 13:00:00.637"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:00.639" starttime="20201105 13:00:00.636"></status>
</kw>
<msg timestamp="20201105 13:00:00.639" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-35.txt</msg>
<status status="PASS" endtime="20201105 13:00:00.639" starttime="20201105 13:00:00.636"></status>
</kw>
<msg timestamp="20201105 13:00:00.640" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-35.txt</msg>
<status status="PASS" endtime="20201105 13:00:00.640" starttime="20201105 13:00:00.636"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:00:00.644" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-35.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:00:34.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:00:34.528" level="INFO">${output} = 2020-11-05 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 13:00:34.528" starttime="20201105 13:00:00.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:00:34.529" level="INFO">2020-11-05 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-05 13:00:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 13:00:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:02 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 13:00:02 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 13:00:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:00:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:00:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:00:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BBB2B6FF1306-&gt;aa92691a-e224-48d1-97e0-bae89db27fa1
2020-11-05 13:00:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 13:00:03 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 13:00:04 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 13:00:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604581065740_0002
2020-11-05 13:00:04 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 13:00:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:04 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 13:00:04 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 13:00:04 INFO  YarnClientImpl:324 - Submitted application application_1604581065740_0002
2020-11-05 13:00:04 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604581065740_0002/
2020-11-05 13:00:04 INFO  Job:1619 - Running job: job_1604581065740_0002
2020-11-05 13:00:12 INFO  Job:1640 - Job job_1604581065740_0002 running in uber mode : false
2020-11-05 13:00:12 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 13:00:18 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 13:00:23 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 13:00:28 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 13:00:33 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 13:00:34 INFO  Job:1658 - Job job_1604581065740_0002 completed successfully
2020-11-05 13:00:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:34 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083775
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35964
		Total time spent by all reduces in occupied slots (ms)=13180
		Total time spent by all map tasks (ms)=8991
		Total time spent by all reduce tasks (ms)=3295
		Total vcore-milliseconds taken by all map tasks=8991
		Total vcore-milliseconds taken by all reduce tasks=3295
		Total megabyte-milliseconds taken by all map tasks=36827136
		Total megabyte-milliseconds taken by all reduce tasks=13496320
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=519
		CPU time spent (ms)=6260
		Physical memory (bytes) snapshot=1198968832
		Virtual memory (bytes) snapshot=15777935360
		Total committed heap usage (bytes)=1070071808
		Peak Map Physical memory (bytes)=314462208
		Peak Map Virtual memory (bytes)=3944390656
		Peak Reduce Physical memory (bytes)=290938880
		Peak Reduce Virtual memory (bytes)=3965943808
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-05 13:00:34 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 13:00:34.529" starttime="20201105 13:00:34.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:00:34.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:00:34.530" starttime="20201105 13:00:34.529"></status>
</kw>
<status status="PASS" endtime="20201105 13:00:34.530" starttime="20201105 13:00:00.640"></status>
</kw>
<msg timestamp="20201105 13:00:34.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:00:34.530" starttime="20201105 13:00:00.640"></status>
</kw>
<msg timestamp="20201105 13:00:34.530" level="INFO">${output} = 2020-11-05 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 13:00:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 13:00:34.531" starttime="20201105 13:00:00.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 13:00:34.531" starttime="20201105 13:00:34.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 13:00:34.531" starttime="20201105 13:00:34.531"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 13:00:34.532" critical="yes" starttime="20201105 13:00:00.607"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 13:00:34.533" starttime="20201105 12:59:18.583"></status>
</suite>
<status status="PASS" elapsedtime="182050" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:03.598" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:06.758" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 13:03:06.758" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 13:03:06.758" starttime="20201105 13:03:03.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:06.759" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 13:03:06.759" starttime="20201105 13:03:06.758"></status>
</kw>
<msg timestamp="20201105 13:03:06.759" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 13:03:06.759" starttime="20201105 13:03:03.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:06.766" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:09.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:09.736" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:03:09.737" starttime="20201105 13:03:06.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:09.738" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:03:09.738" starttime="20201105 13:03:09.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:09.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:09.738" starttime="20201105 13:03:09.738"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:09.739" starttime="20201105 13:03:06.761"></status>
</kw>
<msg timestamp="20201105 13:03:09.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:09.739" starttime="20201105 13:03:06.761"></status>
</kw>
<msg timestamp="20201105 13:03:09.739" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201105 13:03:09.739" starttime="20201105 13:03:06.760"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 13:03:09.739" starttime="20201105 13:03:09.739"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:09.740" starttime="20201105 13:03:06.760"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:09.740" starttime="20201105 13:03:06.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:09.744" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:12.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:12.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:03:12.612" starttime="20201105 13:03:09.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:12.613" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:03:12.613" starttime="20201105 13:03:12.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:12.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:12.613" starttime="20201105 13:03:12.613"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:12.614" starttime="20201105 13:03:09.741"></status>
</kw>
<msg timestamp="20201105 13:03:12.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:12.614" starttime="20201105 13:03:09.741"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:12.614" starttime="20201105 13:03:09.741"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:12.614" starttime="20201105 13:03:09.740"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:12.614" starttime="20201105 13:03:09.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 13:03:12.615" starttime="20201105 13:03:12.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:12.618" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:15.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:15.537" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:03:12.326Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 13:03:15.537" starttime="20201105 13:03:12.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:15.538" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:03:12.326Z",
  "modificationTime" : "2020-11-05T13:03:12.326Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 13:03:15.538" starttime="20201105 13:03:15.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:15.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:15.538" starttime="20201105 13:03:15.538"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:15.539" starttime="20201105 13:03:12.616"></status>
</kw>
<msg timestamp="20201105 13:03:15.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:15.539" starttime="20201105 13:03:12.615"></status>
</kw>
<msg timestamp="20201105 13:03:15.539" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:03:12.326Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 13:03:15.539" starttime="20201105 13:03:12.615"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 13:03:15.540" starttime="20201105 13:03:15.539"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:03:15.543" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:03:15.543" starttime="20201105 13:03:15.543"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:03:15.544" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:03:15.544" starttime="20201105 13:03:15.543"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:15.544" starttime="20201105 13:03:15.542"></status>
</kw>
<msg timestamp="20201105 13:03:15.544" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:03:15.544" starttime="20201105 13:03:15.542"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:15.544" starttime="20201105 13:03:15.541"></status>
</kw>
<msg timestamp="20201105 13:03:15.544" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 13:03:15.544" starttime="20201105 13:03:15.540"></status>
</kw>
<msg timestamp="20201105 13:03:15.544" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 13:03:15.544" starttime="20201105 13:03:15.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:15.549" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:18.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:18.197" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:03:18.197" starttime="20201105 13:03:15.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:18.198" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:03:18.198" starttime="20201105 13:03:18.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:18.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:18.198" starttime="20201105 13:03:18.198"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:18.199" starttime="20201105 13:03:15.545"></status>
</kw>
<msg timestamp="20201105 13:03:18.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:18.199" starttime="20201105 13:03:15.545"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:18.199" starttime="20201105 13:03:15.545"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:18.203" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:24.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:24.733" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:03:24.733" starttime="20201105 13:03:18.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:24.734" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:03:24.734" starttime="20201105 13:03:24.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:24.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:24.734" starttime="20201105 13:03:24.734"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:24.735" starttime="20201105 13:03:18.200"></status>
</kw>
<msg timestamp="20201105 13:03:24.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:24.735" starttime="20201105 13:03:18.200"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:24.735" starttime="20201105 13:03:18.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:24.738" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:29.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:29.869" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:03:29.869" starttime="20201105 13:03:24.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:29.870" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:03:29.870" starttime="20201105 13:03:29.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:29.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:29.871" starttime="20201105 13:03:29.870"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:29.871" starttime="20201105 13:03:24.736"></status>
</kw>
<msg timestamp="20201105 13:03:29.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:29.871" starttime="20201105 13:03:24.736"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:29.871" starttime="20201105 13:03:24.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:29.875" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:34.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:34.483" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:03:34.483" starttime="20201105 13:03:29.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:34.484" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:03:34.484" starttime="20201105 13:03:34.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:34.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:34.485" starttime="20201105 13:03:34.484"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:34.485" starttime="20201105 13:03:29.872"></status>
</kw>
<msg timestamp="20201105 13:03:34.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:34.485" starttime="20201105 13:03:29.872"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:34.485" starttime="20201105 13:03:29.872"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:03:34.485" critical="yes" starttime="20201105 13:03:03.592"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:03:34.490" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:03:34.490" starttime="20201105 13:03:34.490"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:03:34.491" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:03:34.491" starttime="20201105 13:03:34.491"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:34.491" starttime="20201105 13:03:34.489"></status>
</kw>
<msg timestamp="20201105 13:03:34.491" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:03:34.491" starttime="20201105 13:03:34.489"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:34.492" starttime="20201105 13:03:34.488"></status>
</kw>
<msg timestamp="20201105 13:03:34.492" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 13:03:34.492" starttime="20201105 13:03:34.488"></status>
</kw>
<msg timestamp="20201105 13:03:34.492" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 13:03:34.492" starttime="20201105 13:03:34.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:34.496" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:37.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:37.365" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:03:37.365" starttime="20201105 13:03:34.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:37.366" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:03:37.366" starttime="20201105 13:03:37.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:37.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:37.367" starttime="20201105 13:03:37.366"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:37.367" starttime="20201105 13:03:34.493"></status>
</kw>
<msg timestamp="20201105 13:03:37.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:37.367" starttime="20201105 13:03:34.492"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:37.367" starttime="20201105 13:03:34.492"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:37.370" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:39.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:39.922" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:03:39.922" starttime="20201105 13:03:37.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:39.923" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:03:39.923" starttime="20201105 13:03:39.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:39.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:39.924" starttime="20201105 13:03:39.923"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:39.924" starttime="20201105 13:03:37.368"></status>
</kw>
<msg timestamp="20201105 13:03:39.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:39.924" starttime="20201105 13:03:37.368"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:39.924" starttime="20201105 13:03:37.367"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:03:39.924" critical="yes" starttime="20201105 13:03:34.486"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201105 13:03:39.926" starttime="20201105 13:03:03.545"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 13:05:13.537" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 13:05:13.537" starttime="20201105 13:05:13.536"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:05:13.537" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 13:05:13.537" starttime="20201105 13:05:13.537"></status>
</kw>
<status status="PASS" endtime="20201105 13:05:13.537" starttime="20201105 13:05:13.536"></status>
</kw>
<msg timestamp="20201105 13:05:13.537" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 13:05:13.537" starttime="20201105 13:05:13.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:05:13.538" starttime="20201105 13:05:13.538"></status>
</kw>
<msg timestamp="20201105 13:05:13.538" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 13:05:13.538" starttime="20201105 13:05:13.538"></status>
</kw>
<status status="PASS" endtime="20201105 13:05:13.539" starttime="20201105 13:05:13.535"></status>
</kw>
<msg timestamp="20201105 13:05:13.539" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:05:13.539" starttime="20201105 13:05:13.534"></status>
</kw>
<msg timestamp="20201105 13:05:13.539" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:05:13.539" starttime="20201105 13:05:13.533"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 13:05:13.540" level="INFO">${random} = 50880</msg>
<status status="PASS" endtime="20201105 13:05:13.540" starttime="20201105 13:05:13.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:05:13.546" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-50880 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:05:16.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:05:16.711" level="INFO">${output} = 2020-11-05 13:05:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:05:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 13:05:16.711" starttime="20201105 13:05:13.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:05:16.712" level="INFO">2020-11-05 13:05:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:05:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:05:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:05:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:05:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2D7AADC585FB-&gt;7a263603-abd0-4ade-81bb-95d60fed5e7b
2020-11-05 13:05:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 13:05:16.712" starttime="20201105 13:05:16.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:05:16.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:05:16.713" starttime="20201105 13:05:16.712"></status>
</kw>
<status status="PASS" endtime="20201105 13:05:16.713" starttime="20201105 13:05:13.541"></status>
</kw>
<msg timestamp="20201105 13:05:16.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:05:16.713" starttime="20201105 13:05:13.541"></status>
</kw>
<msg timestamp="20201105 13:05:16.713" level="INFO">${result} = 2020-11-05 13:05:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:05:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 13:05:16.713" starttime="20201105 13:05:13.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:05:16.718" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:05:18.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:05:18.391" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 13:05 ofs://om/volume1/bucket1/ozone-50880
-rw-...</msg>
<status status="PASS" endtime="20201105 13:05:18.391" starttime="20201105 13:05:16.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:05:18.392" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 13:05 ofs://om/volume1/bucket1/ozone-50880
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 13:03 ofs://om/volume1/bucket1/ozone-76819
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:03 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:04 ofs://om/volume1/bucket1/wordcount-95.txt</msg>
<status status="PASS" endtime="20201105 13:05:18.392" starttime="20201105 13:05:18.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:05:18.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:05:18.393" starttime="20201105 13:05:18.392"></status>
</kw>
<status status="PASS" endtime="20201105 13:05:18.393" starttime="20201105 13:05:16.715"></status>
</kw>
<msg timestamp="20201105 13:05:18.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:05:18.393" starttime="20201105 13:05:16.715"></status>
</kw>
<msg timestamp="20201105 13:05:18.393" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 13:05 ofs://om/volume1/bucket1/ozone-50880
-rw-...</msg>
<status status="PASS" endtime="20201105 13:05:18.394" starttime="20201105 13:05:16.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:05:18.394" starttime="20201105 13:05:18.394"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 13:05:18.394" critical="yes" starttime="20201105 13:05:13.533"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 13:05:18.396" starttime="20201105 13:05:13.488"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:03:44.117" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:03:44.117" starttime="20201105 13:03:44.117"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:03:44.118" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:03:44.118" starttime="20201105 13:03:44.117"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:44.118" starttime="20201105 13:03:44.116"></status>
</kw>
<msg timestamp="20201105 13:03:44.118" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:03:44.118" starttime="20201105 13:03:44.116"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:44.118" starttime="20201105 13:03:44.115"></status>
</kw>
<msg timestamp="20201105 13:03:44.118" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:03:44.118" starttime="20201105 13:03:44.115"></status>
</kw>
<msg timestamp="20201105 13:03:44.118" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:03:44.119" starttime="20201105 13:03:44.114"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 13:03:44.119" level="INFO">${random} = 76819</msg>
<status status="PASS" endtime="20201105 13:03:44.119" starttime="20201105 13:03:44.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:44.125" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-76819 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:47.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:47.513" level="INFO">${output} = 2020-11-05 13:03:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:03:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 13:03:47.513" starttime="20201105 13:03:44.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:47.514" level="INFO">2020-11-05 13:03:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:03:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:03:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:03:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:03:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-705E9ED2DDDE-&gt;7a263603-abd0-4ade-81bb-95d60fed5e7b
2020-11-05 13:03:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 13:03:47.514" starttime="20201105 13:03:47.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:47.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:47.515" starttime="20201105 13:03:47.514"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:47.515" starttime="20201105 13:03:44.120"></status>
</kw>
<msg timestamp="20201105 13:03:47.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:47.515" starttime="20201105 13:03:44.120"></status>
</kw>
<msg timestamp="20201105 13:03:47.515" level="INFO">${result} = 2020-11-05 13:03:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:03:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 13:03:47.515" starttime="20201105 13:03:44.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:47.520" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:49.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:49.102" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 13:03 o3fs://bucket1.volume1.om/ozone-76819
dr...</msg>
<status status="PASS" endtime="20201105 13:03:49.102" starttime="20201105 13:03:47.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:49.103" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 13:03 o3fs://bucket1.volume1.om/ozone-76819
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:03 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 13:03:49.103" starttime="20201105 13:03:49.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:49.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:49.104" starttime="20201105 13:03:49.104"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:49.104" starttime="20201105 13:03:47.518"></status>
</kw>
<msg timestamp="20201105 13:03:49.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:49.104" starttime="20201105 13:03:47.516"></status>
</kw>
<msg timestamp="20201105 13:03:49.105" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 13:03 o3fs://bucket1.volume1.om/ozone-76819
dr...</msg>
<status status="PASS" endtime="20201105 13:03:49.105" starttime="20201105 13:03:47.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:03:49.105" starttime="20201105 13:03:49.105"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 13:03:49.105" critical="yes" starttime="20201105 13:03:44.113"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 13:03:49.106" starttime="20201105 13:03:44.068"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:05:22.593" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:05:22.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:05:22.597" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:05:22.597" starttime="20201105 13:05:22.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:05:22.598" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:05:22.598" starttime="20201105 13:05:22.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:05:22.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:05:22.598" starttime="20201105 13:05:22.598"></status>
</kw>
<status status="PASS" endtime="20201105 13:05:22.598" starttime="20201105 13:05:22.588"></status>
</kw>
<msg timestamp="20201105 13:05:22.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:05:22.599" starttime="20201105 13:05:22.588"></status>
</kw>
<msg timestamp="20201105 13:05:22.599" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:05:22.599" starttime="20201105 13:05:22.587"></status>
</kw>
<msg timestamp="20201105 13:05:22.599" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:05:22.599" starttime="20201105 13:05:22.587"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 13:05:22.603" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 13:05:22.603" starttime="20201105 13:05:22.603"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:05:22.604" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 13:05:22.604" starttime="20201105 13:05:22.603"></status>
</kw>
<status status="PASS" endtime="20201105 13:05:22.604" starttime="20201105 13:05:22.601"></status>
</kw>
<msg timestamp="20201105 13:05:22.604" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 13:05:22.604" starttime="20201105 13:05:22.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:05:22.605" starttime="20201105 13:05:22.604"></status>
</kw>
<msg timestamp="20201105 13:05:22.605" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 13:05:22.605" starttime="20201105 13:05:22.604"></status>
</kw>
<status status="PASS" endtime="20201105 13:05:22.605" starttime="20201105 13:05:22.600"></status>
</kw>
<msg timestamp="20201105 13:05:22.605" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:05:22.605" starttime="20201105 13:05:22.600"></status>
</kw>
<msg timestamp="20201105 13:05:22.605" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:05:22.606" starttime="20201105 13:05:22.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:05:22.610" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:06:01.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:06:01.051" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 13:05:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:05:24 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 13:06:01.051" starttime="20201105 13:05:22.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:06:01.052" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 13:05:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:05:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:05:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:05:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:05:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F14EF843B18B-&gt;7a263603-abd0-4ade-81bb-95d60fed5e7b
2020-11-05 13:05:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 13:05:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 13:05:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 13:05:28 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 13:05:28 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 13:05:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604581360505_0003
2020-11-05 13:05:28 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 13:05:28 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 13:05:28 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 13:05:29 INFO  YarnClientImpl:329 - Submitted application application_1604581360505_0003
2020-11-05 13:05:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604581360505_0003/
2020-11-05 13:05:29 INFO  Job:1619 - Running job: job_1604581360505_0003
2020-11-05 13:05:36 INFO  Job:1640 - Job job_1604581360505_0003 running in uber mode : false
2020-11-05 13:05:36 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 13:05:42 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 13:05:47 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 13:05:52 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 13:05:57 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 13:06:00 INFO  Job:1658 - Job job_1604581360505_0003 completed successfully
2020-11-05 13:06:00 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35104
		Total time spent by all reduces in occupied slots (ms)=13560
		Total time spent by all map tasks (ms)=8776
		Total time spent by all reduce tasks (ms)=3390
		Total vcore-milliseconds taken by all map tasks=8776
		Total vcore-milliseconds taken by all reduce tasks=3390
		Total megabyte-milliseconds taken by all map tasks=35946496
		Total megabyte-milliseconds taken by all reduce tasks=13885440
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=547
		CPU time spent (ms)=6320
		Physical memory (bytes) snapshot=1271287808
		Virtual memory (bytes) snapshot=15818596352
		Total committed heap usage (bytes)=1266679808
		Peak Map Physical memory (bytes)=295096320
		Peak Map Virtual memory (bytes)=3949207552
		Peak Reduce Physical memory (bytes)=390914048
		Peak Reduce Virtual memory (bytes)=3972583424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.095 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 13:06:01.052" starttime="20201105 13:06:01.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:06:01.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:06:01.053" starttime="20201105 13:06:01.052"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:01.053" starttime="20201105 13:05:22.606"></status>
</kw>
<msg timestamp="20201105 13:06:01.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:06:01.053" starttime="20201105 13:05:22.606"></status>
</kw>
<msg timestamp="20201105 13:06:01.054" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 13:05:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:05:24 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 13:06:01.054" starttime="20201105 13:05:22.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 13:06:01.054" starttime="20201105 13:06:01.054"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 13:06:01.054" critical="yes" starttime="20201105 13:05:22.586"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:06:01.059" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:06:01.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:06:01.066" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:06:01.066" starttime="20201105 13:06:01.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:06:01.067" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:06:01.067" starttime="20201105 13:06:01.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:06:01.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:06:01.068" starttime="20201105 13:06:01.067"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:01.068" starttime="20201105 13:06:01.057"></status>
</kw>
<msg timestamp="20201105 13:06:01.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:06:01.068" starttime="20201105 13:06:01.056"></status>
</kw>
<msg timestamp="20201105 13:06:01.068" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:06:01.068" starttime="20201105 13:06:01.056"></status>
</kw>
<msg timestamp="20201105 13:06:01.068" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:06:01.069" starttime="20201105 13:06:01.056"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 13:06:01.069" level="INFO">${random} = 03</msg>
<status status="PASS" endtime="20201105 13:06:01.069" starttime="20201105 13:06:01.069"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 13:06:01.073" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 13:06:01.073" starttime="20201105 13:06:01.073"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:06:01.074" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 13:06:01.074" starttime="20201105 13:06:01.073"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:01.074" starttime="20201105 13:06:01.072"></status>
</kw>
<msg timestamp="20201105 13:06:01.074" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 13:06:01.074" starttime="20201105 13:06:01.072"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:06:01.075" starttime="20201105 13:06:01.075"></status>
</kw>
<msg timestamp="20201105 13:06:01.075" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 13:06:01.075" starttime="20201105 13:06:01.074"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:01.075" starttime="20201105 13:06:01.071"></status>
</kw>
<msg timestamp="20201105 13:06:01.075" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:06:01.075" starttime="20201105 13:06:01.070"></status>
</kw>
<msg timestamp="20201105 13:06:01.076" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 13:06:01.076" starttime="20201105 13:06:01.069"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 13:06:01.078" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 13:06:01.078" starttime="20201105 13:06:01.078"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:06:01.079" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 13:06:01.079" starttime="20201105 13:06:01.079"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:01.079" starttime="20201105 13:06:01.078"></status>
</kw>
<msg timestamp="20201105 13:06:01.079" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 13:06:01.079" starttime="20201105 13:06:01.077"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:06:01.081" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201105 13:06:01.081" starttime="20201105 13:06:01.080"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:06:01.081" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201105 13:06:01.081" starttime="20201105 13:06:01.081"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:01.082" starttime="20201105 13:06:01.080"></status>
</kw>
<msg timestamp="20201105 13:06:01.082" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201105 13:06:01.082" starttime="20201105 13:06:01.079"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:01.082" starttime="20201105 13:06:01.077"></status>
</kw>
<msg timestamp="20201105 13:06:01.082" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 13:06:01.082" starttime="20201105 13:06:01.076"></status>
</kw>
<msg timestamp="20201105 13:06:01.082" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 13:06:01.082" starttime="20201105 13:06:01.076"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 13:06:01.086" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 13:06:01.086" starttime="20201105 13:06:01.086"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:06:01.087" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 13:06:01.087" starttime="20201105 13:06:01.086"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:01.087" starttime="20201105 13:06:01.085"></status>
</kw>
<msg timestamp="20201105 13:06:01.087" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 13:06:01.087" starttime="20201105 13:06:01.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:06:01.088" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201105 13:06:01.088" starttime="20201105 13:06:01.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:06:01.089" level="INFO">${result} = /wordcount-03.txt</msg>
<status status="PASS" endtime="20201105 13:06:01.089" starttime="20201105 13:06:01.088"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:01.089" starttime="20201105 13:06:01.087"></status>
</kw>
<msg timestamp="20201105 13:06:01.089" level="INFO">${path_with_leading} = /wordcount-03.txt</msg>
<status status="PASS" endtime="20201105 13:06:01.089" starttime="20201105 13:06:01.087"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:01.089" starttime="20201105 13:06:01.084"></status>
</kw>
<msg timestamp="20201105 13:06:01.089" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-03.txt</msg>
<status status="PASS" endtime="20201105 13:06:01.089" starttime="20201105 13:06:01.084"></status>
</kw>
<msg timestamp="20201105 13:06:01.090" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-03.txt</msg>
<status status="PASS" endtime="20201105 13:06:01.090" starttime="20201105 13:06:01.082"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:06:01.093" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-03.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:06:36.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:06:36.208" level="INFO">${output} = 2020-11-05 13:06:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 13:06:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 13:06:36.208" starttime="20201105 13:06:01.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:06:36.209" level="INFO">2020-11-05 13:06:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 13:06:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 13:06:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:06:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:06:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:06:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:06:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-73000A8A2BA1-&gt;7a263603-abd0-4ade-81bb-95d60fed5e7b
2020-11-05 13:06:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 13:06:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 13:06:06 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 13:06:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604581360505_0004
2020-11-05 13:06:07 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 13:06:07 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 13:06:07 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 13:06:07 INFO  YarnClientImpl:329 - Submitted application application_1604581360505_0004
2020-11-05 13:06:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604581360505_0004/
2020-11-05 13:06:07 INFO  Job:1619 - Running job: job_1604581360505_0004
2020-11-05 13:06:14 INFO  Job:1640 - Job job_1604581360505_0004 running in uber mode : false
2020-11-05 13:06:14 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 13:06:20 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 13:06:25 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 13:06:30 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 13:06:34 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 13:06:35 INFO  Job:1658 - Job job_1604581360505_0004 completed successfully
2020-11-05 13:06:35 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123795
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35352
		Total time spent by all reduces in occupied slots (ms)=13092
		Total time spent by all map tasks (ms)=8838
		Total time spent by all reduce tasks (ms)=3273
		Total vcore-milliseconds taken by all map tasks=8838
		Total vcore-milliseconds taken by all reduce tasks=3273
		Total megabyte-milliseconds taken by all map tasks=36200448
		Total megabyte-milliseconds taken by all reduce tasks=13406208
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=519
		CPU time spent (ms)=6410
		Physical memory (bytes) snapshot=1251184640
		Virtual memory (bytes) snapshot=15798611968
		Total committed heap usage (bytes)=1239416832
		Peak Map Physical memory (bytes)=295313408
		Peak Map Virtual memory (bytes)=3947360256
		Peak Reduce Physical memory (bytes)=379215872
		Peak Reduce Virtual memory (bytes)=3970457600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201105 13:06:36.210" starttime="20201105 13:06:36.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:06:36.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:06:36.210" starttime="20201105 13:06:36.210"></status>
</kw>
<status status="PASS" endtime="20201105 13:06:36.211" starttime="20201105 13:06:01.090"></status>
</kw>
<msg timestamp="20201105 13:06:36.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:06:36.211" starttime="20201105 13:06:01.090"></status>
</kw>
<msg timestamp="20201105 13:06:36.211" level="INFO">${output} = 2020-11-05 13:06:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 13:06:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 13:06:36.211" starttime="20201105 13:06:01.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 13:06:36.212" starttime="20201105 13:06:36.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 13:06:36.212" starttime="20201105 13:06:36.212"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 13:06:36.212" critical="yes" starttime="20201105 13:06:01.055"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 13:06:36.214" starttime="20201105 13:05:22.541"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:53.392" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:03:53.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:03:53.397" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:03:53.397" starttime="20201105 13:03:53.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:03:53.398" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:03:53.398" starttime="20201105 13:03:53.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:03:53.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:03:53.398" starttime="20201105 13:03:53.398"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:53.399" starttime="20201105 13:03:53.388"></status>
</kw>
<msg timestamp="20201105 13:03:53.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:03:53.399" starttime="20201105 13:03:53.388"></status>
</kw>
<msg timestamp="20201105 13:03:53.399" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:03:53.399" starttime="20201105 13:03:53.387"></status>
</kw>
<msg timestamp="20201105 13:03:53.399" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:03:53.399" starttime="20201105 13:03:53.387"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:03:53.403" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:03:53.403" starttime="20201105 13:03:53.403"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:03:53.404" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:03:53.404" starttime="20201105 13:03:53.403"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:53.404" starttime="20201105 13:03:53.402"></status>
</kw>
<msg timestamp="20201105 13:03:53.404" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:03:53.404" starttime="20201105 13:03:53.401"></status>
</kw>
<status status="PASS" endtime="20201105 13:03:53.404" starttime="20201105 13:03:53.400"></status>
</kw>
<msg timestamp="20201105 13:03:53.404" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:03:53.405" starttime="20201105 13:03:53.400"></status>
</kw>
<msg timestamp="20201105 13:03:53.405" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:03:53.405" starttime="20201105 13:03:53.399"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:03:53.409" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:04:34.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:04:34.070" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 13:03:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:03:55 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 13:04:34.070" starttime="20201105 13:03:53.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:04:34.071" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 13:03:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:03:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:03:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:03:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:03:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-72EDBC105090-&gt;7a263603-abd0-4ade-81bb-95d60fed5e7b
2020-11-05 13:03:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 13:03:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 13:03:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 13:03:59 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 13:04:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604581360505_0001
2020-11-05 13:04:02 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 13:04:02 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 13:04:02 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 13:04:02 INFO  YarnClientImpl:329 - Submitted application application_1604581360505_0001
2020-11-05 13:04:02 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604581360505_0001/
2020-11-05 13:04:02 INFO  Job:1619 - Running job: job_1604581360505_0001
2020-11-05 13:04:12 INFO  Job:1640 - Job job_1604581360505_0001 running in uber mode : false
2020-11-05 13:04:12 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 13:04:18 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 13:04:23 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 13:04:28 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 13:04:32 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 13:04:33 INFO  Job:1658 - Job job_1604581360505_0001 completed successfully
2020-11-05 13:04:33 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34580
		Total time spent by all reduces in occupied slots (ms)=13288
		Total time spent by all map tasks (ms)=8645
		Total time spent by all reduce tasks (ms)=3322
		Total vcore-milliseconds taken by all map tasks=8645
		Total vcore-milliseconds taken by all reduce tasks=3322
		Total megabyte-milliseconds taken by all map tasks=35409920
		Total megabyte-milliseconds taken by all reduce tasks=13606912
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=570
		CPU time spent (ms)=5810
		Physical memory (bytes) snapshot=1157554176
		Virtual memory (bytes) snapshot=15799332864
		Total committed heap usage (bytes)=1067974656
		Peak Map Physical memory (bytes)=296906752
		Peak Map Virtual memory (bytes)=3950231552
		Peak Reduce Physical memory (bytes)=297541632
		Peak Reduce Virtual memory (bytes)=3974139904
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.56 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 13:04:34.071" starttime="20201105 13:04:34.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:04:34.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:04:34.072" starttime="20201105 13:04:34.071"></status>
</kw>
<status status="PASS" endtime="20201105 13:04:34.072" starttime="20201105 13:03:53.406"></status>
</kw>
<msg timestamp="20201105 13:04:34.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:04:34.072" starttime="20201105 13:03:53.405"></status>
</kw>
<msg timestamp="20201105 13:04:34.072" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 13:03:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:03:55 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 13:04:34.072" starttime="20201105 13:03:53.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 13:04:34.073" starttime="20201105 13:04:34.073"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 13:04:34.073" critical="yes" starttime="20201105 13:03:53.386"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:04:34.079" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:04:34.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:04:34.082" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:04:34.083" starttime="20201105 13:04:34.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:04:34.083" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:04:34.083" starttime="20201105 13:04:34.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:04:34.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:04:34.084" starttime="20201105 13:04:34.084"></status>
</kw>
<status status="PASS" endtime="20201105 13:04:34.084" starttime="20201105 13:04:34.075"></status>
</kw>
<msg timestamp="20201105 13:04:34.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:04:34.084" starttime="20201105 13:04:34.075"></status>
</kw>
<msg timestamp="20201105 13:04:34.085" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:04:34.085" starttime="20201105 13:04:34.075"></status>
</kw>
<msg timestamp="20201105 13:04:34.085" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:04:34.085" starttime="20201105 13:04:34.074"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 13:04:34.085" level="INFO">${random} = 95</msg>
<status status="PASS" endtime="20201105 13:04:34.085" starttime="20201105 13:04:34.085"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:04:34.089" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:04:34.089" starttime="20201105 13:04:34.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:04:34.089" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:04:34.089" starttime="20201105 13:04:34.089"></status>
</kw>
<status status="PASS" endtime="20201105 13:04:34.090" starttime="20201105 13:04:34.088"></status>
</kw>
<msg timestamp="20201105 13:04:34.090" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:04:34.090" starttime="20201105 13:04:34.087"></status>
</kw>
<status status="PASS" endtime="20201105 13:04:34.090" starttime="20201105 13:04:34.087"></status>
</kw>
<msg timestamp="20201105 13:04:34.090" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:04:34.090" starttime="20201105 13:04:34.086"></status>
</kw>
<msg timestamp="20201105 13:04:34.090" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:04:34.090" starttime="20201105 13:04:34.085"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:04:34.093" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:04:34.093" starttime="20201105 13:04:34.093"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:04:34.094" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:04:34.094" starttime="20201105 13:04:34.093"></status>
</kw>
<status status="PASS" endtime="20201105 13:04:34.094" starttime="20201105 13:04:34.093"></status>
</kw>
<msg timestamp="20201105 13:04:34.094" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:04:34.094" starttime="20201105 13:04:34.092"></status>
</kw>
<status status="PASS" endtime="20201105 13:04:34.094" starttime="20201105 13:04:34.092"></status>
</kw>
<msg timestamp="20201105 13:04:34.094" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 13:04:34.095" starttime="20201105 13:04:34.091"></status>
</kw>
<msg timestamp="20201105 13:04:34.095" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 13:04:34.095" starttime="20201105 13:04:34.090"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:04:34.098" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:04:34.098" starttime="20201105 13:04:34.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:04:34.098" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:04:34.098" starttime="20201105 13:04:34.098"></status>
</kw>
<status status="PASS" endtime="20201105 13:04:34.098" starttime="20201105 13:04:34.097"></status>
</kw>
<msg timestamp="20201105 13:04:34.098" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:04:34.098" starttime="20201105 13:04:34.096"></status>
</kw>
<status status="PASS" endtime="20201105 13:04:34.099" starttime="20201105 13:04:34.096"></status>
</kw>
<msg timestamp="20201105 13:04:34.099" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-95.txt</msg>
<status status="PASS" endtime="20201105 13:04:34.099" starttime="20201105 13:04:34.095"></status>
</kw>
<msg timestamp="20201105 13:04:34.099" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-95.txt</msg>
<status status="PASS" endtime="20201105 13:04:34.099" starttime="20201105 13:04:34.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:04:34.103" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-95.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:05:09.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:05:09.343" level="INFO">${output} = 2020-11-05 13:04:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 13:04:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 13:05:09.343" starttime="20201105 13:04:34.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:05:09.344" level="INFO">2020-11-05 13:04:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 13:04:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 13:04:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:04:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:04:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:04:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:04:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-078E8AC719AE-&gt;7a263603-abd0-4ade-81bb-95d60fed5e7b
2020-11-05 13:04:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 13:04:37 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 13:04:40 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 13:04:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604581360505_0002
2020-11-05 13:04:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 13:04:40 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 13:04:40 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 13:04:40 INFO  YarnClientImpl:329 - Submitted application application_1604581360505_0002
2020-11-05 13:04:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604581360505_0002/
2020-11-05 13:04:40 INFO  Job:1619 - Running job: job_1604581360505_0002
2020-11-05 13:04:47 INFO  Job:1640 - Job job_1604581360505_0002 running in uber mode : false
2020-11-05 13:04:47 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 13:04:53 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 13:04:58 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 13:05:03 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 13:05:07 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 13:05:08 INFO  Job:1658 - Job job_1604581360505_0002 completed successfully
2020-11-05 13:05:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123879
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35256
		Total time spent by all reduces in occupied slots (ms)=13136
		Total time spent by all map tasks (ms)=8814
		Total time spent by all reduce tasks (ms)=3284
		Total vcore-milliseconds taken by all map tasks=8814
		Total vcore-milliseconds taken by all reduce tasks=3284
		Total megabyte-milliseconds taken by all map tasks=36102144
		Total megabyte-milliseconds taken by all reduce tasks=13451264
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=561
		CPU time spent (ms)=6340
		Physical memory (bytes) snapshot=1274769408
		Virtual memory (bytes) snapshot=15797039104
		Total committed heap usage (bytes)=1094189056
		Peak Map Physical memory (bytes)=299782144
		Peak Map Virtual memory (bytes)=3947692032
		Peak Reduce Physical memory (bytes)=388698112
		Peak Reduce Virtual memory (bytes)=3967750144
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201105 13:05:09.344" starttime="20201105 13:05:09.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:05:09.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:05:09.345" starttime="20201105 13:05:09.344"></status>
</kw>
<status status="PASS" endtime="20201105 13:05:09.345" starttime="20201105 13:04:34.100"></status>
</kw>
<msg timestamp="20201105 13:05:09.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:05:09.345" starttime="20201105 13:04:34.100"></status>
</kw>
<msg timestamp="20201105 13:05:09.346" level="INFO">${output} = 2020-11-05 13:04:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 13:04:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 13:05:09.346" starttime="20201105 13:04:34.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 13:05:09.346" starttime="20201105 13:05:09.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 13:05:09.347" starttime="20201105 13:05:09.346"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 13:05:09.347" critical="yes" starttime="20201105 13:04:34.074"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 13:05:09.348" starttime="20201105 13:03:53.341"></status>
</suite>
<status status="PASS" elapsedtime="196007" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="550915" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
