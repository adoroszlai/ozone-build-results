<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201105 13:34:57.077" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:04.281" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:31:15.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:31:15.450" level="INFO">${output} = 2020-11-05 13:31:05,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:06,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 13:31:15.450" starttime="20201105 13:31:04.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:31:15.451" level="INFO">2020-11-05 13:31:05,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:06,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:31:06,109 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 13:31:08,479 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 13:31:09,973 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-05 13:31:09,974 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-05 13:31:09,974 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-05 13:31:09,974 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-05 13:31:09,974 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-05 13:31:09,974 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-05 13:31:09,974 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-05 13:31:09,976 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-05 13:31:09,983 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 13:31:10,036 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-58221, with testuser/scm@EXAMPLE.COM as owner.
2020-11-05 13:31:10,366 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58221/bucket-0-59975, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 13:31:10,984 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 13:31:11,985 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 13:31:12,748 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-05 13:31:12,989 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 13:31:14,013 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,343
Average Time spent in bucket creation: 00:00:00,210
Average Time spent in key creation: 00:00:01,166
Average Time spent in key write: 00:00:01,196
Total bytes written: 10240
Total Execution time: 00:00:08,839
***************************************************</msg>
<status status="PASS" endtime="20201105 13:31:15.452" starttime="20201105 13:31:15.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:31:15.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:31:15.452" starttime="20201105 13:31:15.452"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:15.453" starttime="20201105 13:31:04.277"></status>
</kw>
<msg timestamp="20201105 13:31:15.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:31:15.453" starttime="20201105 13:31:04.277"></status>
</kw>
<msg timestamp="20201105 13:31:15.453" level="INFO">${result} = 2020-11-05 13:31:05,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:06,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 13:31:15.453" starttime="20201105 13:31:04.276"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 13:31:15.459" starttime="20201105 13:31:15.458"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:15.459" starttime="20201105 13:31:15.453"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 13:31:15.459" critical="yes" starttime="20201105 13:31:04.276"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:15.464" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:31:23.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:31:23.231" level="INFO">${output} = 2020-11-05 13:31:16,947 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:17,079 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 13:31:23.231" starttime="20201105 13:31:15.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:31:23.233" level="INFO">2020-11-05 13:31:16,947 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:17,079 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:31:17,079 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-05 13:31:17,261 [main] INFO freon.BaseFreonGenerator: Executing test with prefix umgasexpmm
2020-11-05 13:31:17,282 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 13:31:18,230 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 13:31:18,283 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 13:31:18,601 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-05 13:31:18,669 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 13:31:19,283 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 13:31:19,390 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-05 13:31:19,661 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:31:19,661 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E8DE884CD742-&gt;de3f360a-a2e0-4ef1-a033-84a5db86645b
2020-11-05 13:31:19,662 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 13:31:20,285 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 13:31:21,285 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 13:31:22,286 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-05 13:31:22,877 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3413.274065, max=3413.274065, mean=3413.274065, stddev=0.0, median=3413.274065, p75=3413.274065, p95=3413.274065, p98=3413.274065, p99=3413.274065, p999=3413.274065, mean_rate=0.240298482473079, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-05 13:31:22,878 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-11-05 13:31:22,884 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-05 13:31:22,884 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201105 13:31:23.233" starttime="20201105 13:31:23.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:31:23.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:31:23.234" starttime="20201105 13:31:23.233"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:23.234" starttime="20201105 13:31:15.462"></status>
</kw>
<msg timestamp="20201105 13:31:23.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:31:23.234" starttime="20201105 13:31:15.462"></status>
</kw>
<msg timestamp="20201105 13:31:23.235" level="INFO">${result} = 2020-11-05 13:31:16,947 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:17,079 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 13:31:23.235" starttime="20201105 13:31:15.461"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 13:31:23.236" starttime="20201105 13:31:23.235"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:23.236" starttime="20201105 13:31:23.235"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 13:31:23.236" critical="yes" starttime="20201105 13:31:15.460"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:23.240" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:31:27.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:31:27.543" level="INFO">${output} = 2020-11-05 13:31:24,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:24,874 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 13:31:27.543" starttime="20201105 13:31:23.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:31:27.544" level="INFO">2020-11-05 13:31:24,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:24,874 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:31:24,874 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-05 13:31:24,999 [main] INFO freon.BaseFreonGenerator: Executing test with prefix v3fb6bmper
2020-11-05 13:31:25,018 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 13:31:26,007 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 13:31:26,032 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 13:31:26,499 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 13:31:27,033 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-05 13:31:27,516 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=284.609231, max=284.609231, mean=284.609231, stddev=0.0, median=284.609231, p75=284.609231, p95=284.609231, p98=284.609231, p99=284.609231, p999=284.609231, mean_rate=0.8734498598191148, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-05 13:31:27,517 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-05 13:31:27,517 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-05 13:31:27,517 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201105 13:31:27.544" starttime="20201105 13:31:27.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:31:27.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:31:27.545" starttime="20201105 13:31:27.544"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:27.545" starttime="20201105 13:31:23.238"></status>
</kw>
<msg timestamp="20201105 13:31:27.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:31:27.545" starttime="20201105 13:31:23.238"></status>
</kw>
<msg timestamp="20201105 13:31:27.546" level="INFO">${result} = 2020-11-05 13:31:24,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:24,874 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 13:31:27.546" starttime="20201105 13:31:23.237"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 13:31:27.547" starttime="20201105 13:31:27.546"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:27.547" starttime="20201105 13:31:27.546"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 13:31:27.547" critical="yes" starttime="20201105 13:31:23.236"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:27.553" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:31:31.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:31:31.964" level="INFO">${output} = 2020-11-05 13:31:29,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:29,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 13:31:31.964" starttime="20201105 13:31:27.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:31:31.965" level="INFO">2020-11-05 13:31:29,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:29,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:31:29,211 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-05 13:31:29,366 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kq5exfxuwh
2020-11-05 13:31:29,384 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 13:31:30,371 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 13:31:30,389 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 13:31:30,828 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 13:31:31,390 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-05 13:31:31,873 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=108.346322, max=108.346322, mean=108.346322, stddev=0.0, median=108.346322, p75=108.346322, p95=108.346322, p98=108.346322, p99=108.346322, p999=108.346322, mean_rate=0.8933859771026265, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-05 13:31:31,876 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-05 13:31:31,883 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-05 13:31:31,884 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201105 13:31:31.965" starttime="20201105 13:31:31.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:31:31.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:31:31.966" starttime="20201105 13:31:31.966"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:31.966" starttime="20201105 13:31:27.550"></status>
</kw>
<msg timestamp="20201105 13:31:31.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:31:31.967" starttime="20201105 13:31:27.549"></status>
</kw>
<msg timestamp="20201105 13:31:31.967" level="INFO">${result} = 2020-11-05 13:31:29,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 13:31:29,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 13:31:31.967" starttime="20201105 13:31:27.549"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 13:31:31.968" starttime="20201105 13:31:31.967"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:31.968" starttime="20201105 13:31:31.967"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 13:31:31.968" critical="yes" starttime="20201105 13:31:27.548"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201105 13:31:31.970" starttime="20201105 13:31:04.254"></status>
</suite>
<status status="PASS" endtime="20201105 13:31:31.973" starttime="20201105 13:31:04.232"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:30:57.238" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:30:57.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:30:57.240" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:30:57.240" starttime="20201105 13:30:57.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:30:57.245" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:30:57.245" starttime="20201105 13:30:57.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:30:57.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:30:57.246" starttime="20201105 13:30:57.246"></status>
</kw>
<status status="PASS" endtime="20201105 13:30:57.246" starttime="20201105 13:30:57.225"></status>
</kw>
<msg timestamp="20201105 13:30:57.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:30:57.246" starttime="20201105 13:30:57.223"></status>
</kw>
<msg timestamp="20201105 13:30:57.247" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:30:57.247" starttime="20201105 13:30:57.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:30:57.247" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:30:57.247" starttime="20201105 13:30:57.247"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:30:57.276" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:30:57.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:30:57.296" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:30:57.296" starttime="20201105 13:30:57.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:30:57.298" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:30:57.298" starttime="20201105 13:30:57.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:30:57.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:30:57.298" starttime="20201105 13:30:57.298"></status>
</kw>
<status status="PASS" endtime="20201105 13:30:57.299" starttime="20201105 13:30:57.259"></status>
</kw>
<msg timestamp="20201105 13:30:57.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:30:57.299" starttime="20201105 13:30:57.259"></status>
</kw>
<status status="PASS" endtime="20201105 13:30:57.307" starttime="20201105 13:30:57.248"></status>
</kw>
<status status="PASS" endtime="20201105 13:30:57.308" starttime="20201105 13:30:57.247"></status>
</kw>
<status status="PASS" endtime="20201105 13:30:57.308" starttime="20201105 13:30:57.222"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:30:57.308" critical="yes" starttime="20201105 13:30:57.218"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201105 13:30:57.309" starttime="20201105 13:30:57.112"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 13:31:36.950" level="INFO">${random} = 31496</msg>
<status status="PASS" endtime="20201105 13:31:36.950" starttime="20201105 13:31:36.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201105 13:31:36.951" level="INFO">${source} = 31496-source</msg>
<status status="PASS" endtime="20201105 13:31:36.951" starttime="20201105 13:31:36.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201105 13:31:36.952" level="INFO">${target} = 31496-target</msg>
<status status="PASS" endtime="20201105 13:31:36.952" starttime="20201105 13:31:36.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:36.958" level="INFO">Running command 'ozone sh volume create 31496-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:31:40.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:31:40.214" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:31:40.214" starttime="20201105 13:31:36.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:31:40.215" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:31:40.215" starttime="20201105 13:31:40.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:31:40.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:31:40.215" starttime="20201105 13:31:40.215"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:40.216" starttime="20201105 13:31:36.954"></status>
</kw>
<msg timestamp="20201105 13:31:40.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:31:40.216" starttime="20201105 13:31:36.953"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:40.216" starttime="20201105 13:31:36.952"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:40.220" level="INFO">Running command 'ozone sh volume create 31496-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:31:43.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:31:43.505" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:31:43.505" starttime="20201105 13:31:40.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:31:43.506" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:31:43.506" starttime="20201105 13:31:43.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:31:43.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:31:43.507" starttime="20201105 13:31:43.506"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:43.507" starttime="20201105 13:31:40.217"></status>
</kw>
<msg timestamp="20201105 13:31:43.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:31:43.507" starttime="20201105 13:31:40.217"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:43.508" starttime="20201105 13:31:40.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:43.513" level="INFO">Running command 'ozone sh bucket create 31496-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:31:46.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:31:46.689" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:31:46.689" starttime="20201105 13:31:43.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:31:46.690" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:31:46.690" starttime="20201105 13:31:46.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:31:46.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:31:46.691" starttime="20201105 13:31:46.690"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:46.691" starttime="20201105 13:31:43.509"></status>
</kw>
<msg timestamp="20201105 13:31:46.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:31:46.691" starttime="20201105 13:31:43.509"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:46.692" starttime="20201105 13:31:43.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:46.695" level="INFO">Running command 'ozone sh key put 31496-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:31:52.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:31:52.382" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:31:52.382" starttime="20201105 13:31:46.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:31:52.383" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:31:52.383" starttime="20201105 13:31:52.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:31:52.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:31:52.383" starttime="20201105 13:31:52.383"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:52.384" starttime="20201105 13:31:46.692"></status>
</kw>
<msg timestamp="20201105 13:31:52.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:31:52.384" starttime="20201105 13:31:46.692"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:52.384" starttime="20201105 13:31:46.692"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:52.388" level="INFO">Running command 'ozone sh bucket create 31496-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:31:56.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:31:56.527" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:31:56.527" starttime="20201105 13:31:52.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:31:56.528" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:31:56.528" starttime="20201105 13:31:56.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:31:56.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:31:56.529" starttime="20201105 13:31:56.528"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:56.529" starttime="20201105 13:31:52.385"></status>
</kw>
<msg timestamp="20201105 13:31:56.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:31:56.529" starttime="20201105 13:31:52.384"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:56.530" starttime="20201105 13:31:52.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:56.534" level="INFO">Running command 'ozone sh bucket link 31496-source/readable-bucket 31496-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:31:59.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:31:59.761" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:31:59.761" starttime="20201105 13:31:56.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:31:59.762" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:31:59.762" starttime="20201105 13:31:59.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:31:59.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:31:59.763" starttime="20201105 13:31:59.762"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:59.763" starttime="20201105 13:31:56.531"></status>
</kw>
<msg timestamp="20201105 13:31:59.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:31:59.763" starttime="20201105 13:31:56.530"></status>
</kw>
<status status="PASS" endtime="20201105 13:31:59.763" starttime="20201105 13:31:56.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:31:59.766" level="INFO">Running command 'ozone sh bucket link 31496-source/readable-bucket 31496-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:03.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:03.290" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:03.290" starttime="20201105 13:31:59.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:03.291" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:32:03.291" starttime="20201105 13:32:03.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:03.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:03.292" starttime="20201105 13:32:03.292"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:03.292" starttime="20201105 13:31:59.764"></status>
</kw>
<msg timestamp="20201105 13:32:03.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:03.292" starttime="20201105 13:31:59.764"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:03.293" starttime="20201105 13:31:59.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:03.297" level="INFO">Running command 'ozone sh bucket link 31496-source/unreadable-bucket 31496-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:06.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:06.555" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:06.555" starttime="20201105 13:32:03.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:06.556" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:32:06.556" starttime="20201105 13:32:06.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:06.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:06.557" starttime="20201105 13:32:06.556"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:06.557" starttime="20201105 13:32:03.294"></status>
</kw>
<msg timestamp="20201105 13:32:06.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:06.557" starttime="20201105 13:32:03.293"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:06.557" starttime="20201105 13:32:03.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:06.560" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 31496-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:09.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:09.780" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:09.780" starttime="20201105 13:32:06.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:09.781" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 13:32:09.781" starttime="20201105 13:32:09.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:09.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:09.782" starttime="20201105 13:32:09.781"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:09.782" starttime="20201105 13:32:06.558"></status>
</kw>
<msg timestamp="20201105 13:32:09.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:09.782" starttime="20201105 13:32:06.558"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:09.782" starttime="20201105 13:32:06.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:09.786" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 31496-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:13.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:13.080" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:13.080" starttime="20201105 13:32:09.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:13.081" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 13:32:13.081" starttime="20201105 13:32:13.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:13.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:13.082" starttime="20201105 13:32:13.081"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:13.082" starttime="20201105 13:32:09.783"></status>
</kw>
<msg timestamp="20201105 13:32:13.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:13.082" starttime="20201105 13:32:09.783"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:13.083" starttime="20201105 13:32:09.783"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:13.087" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 31496-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:16.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:16.268" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:16.268" starttime="20201105 13:32:13.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:16.269" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 13:32:16.269" starttime="20201105 13:32:16.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:16.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:16.269" starttime="20201105 13:32:16.269"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:16.270" starttime="20201105 13:32:13.083"></status>
</kw>
<msg timestamp="20201105 13:32:16.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:16.270" starttime="20201105 13:32:13.083"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:16.270" starttime="20201105 13:32:13.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:16.275" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 31496-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:19.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:19.483" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:19.483" starttime="20201105 13:32:16.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:19.484" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 13:32:19.484" starttime="20201105 13:32:19.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:19.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:19.484" starttime="20201105 13:32:19.484"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:19.484" starttime="20201105 13:32:16.271"></status>
</kw>
<msg timestamp="20201105 13:32:19.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:19.485" starttime="20201105 13:32:16.271"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:19.485" starttime="20201105 13:32:16.270"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:19.490" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 31496-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:23.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:23.087" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:23.087" starttime="20201105 13:32:19.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:23.088" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 13:32:23.088" starttime="20201105 13:32:23.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:23.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:23.088" starttime="20201105 13:32:23.088"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.089" starttime="20201105 13:32:19.486"></status>
</kw>
<msg timestamp="20201105 13:32:23.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:23.089" starttime="20201105 13:32:19.486"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.089" starttime="20201105 13:32:19.485"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.089" starttime="20201105 13:31:43.508"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.089" starttime="20201105 13:31:43.508"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.089" starttime="20201105 13:31:36.949"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:23.096" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:23.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:23.098" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:32:23.098" starttime="20201105 13:32:23.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:23.099" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:32:23.099" starttime="20201105 13:32:23.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:23.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:23.100" starttime="20201105 13:32:23.100"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.100" starttime="20201105 13:32:23.092"></status>
</kw>
<msg timestamp="20201105 13:32:23.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:23.100" starttime="20201105 13:32:23.092"></status>
</kw>
<msg timestamp="20201105 13:32:23.101" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:32:23.101" starttime="20201105 13:32:23.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:32:23.102" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:32:23.102" starttime="20201105 13:32:23.101"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:23.107" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:23.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:23.122" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:32:23.122" starttime="20201105 13:32:23.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:23.123" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:32:23.123" starttime="20201105 13:32:23.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:23.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:23.123" starttime="20201105 13:32:23.123"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.124" starttime="20201105 13:32:23.103"></status>
</kw>
<msg timestamp="20201105 13:32:23.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:23.124" starttime="20201105 13:32:23.103"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.124" starttime="20201105 13:32:23.102"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.124" starttime="20201105 13:32:23.102"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.124" starttime="20201105 13:32:23.091"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:23.124" starttime="20201105 13:32:23.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:23.129" level="INFO">Running command 'ozone sh bucket link 31496-source/no-such-bucket 31496-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:26.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:26.534" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:26.534" starttime="20201105 13:32:23.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:26.535" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:32:26.536" starttime="20201105 13:32:26.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:26.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:26.536" starttime="20201105 13:32:26.536"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:26.537" starttime="20201105 13:32:23.125"></status>
</kw>
<msg timestamp="20201105 13:32:26.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:26.537" starttime="20201105 13:32:23.125"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:26.537" starttime="20201105 13:32:23.124"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:26.541" level="INFO">Running command 'ozone sh key list 31496-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:29.692" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 13:32:29.692" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:29.692" starttime="20201105 13:32:26.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:29.693" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201105 13:32:29.694" starttime="20201105 13:32:29.693"></status>
</kw>
<msg timestamp="20201105 13:32:29.694" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:29.694" starttime="20201105 13:32:26.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 13:32:29.694" starttime="20201105 13:32:29.694"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:32:29.695" critical="yes" starttime="20201105 13:32:23.090"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:29.701" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:29.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:29.703" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:32:29.703" starttime="20201105 13:32:29.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:29.704" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:32:29.704" starttime="20201105 13:32:29.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:29.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:29.705" starttime="20201105 13:32:29.704"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:29.705" starttime="20201105 13:32:29.698"></status>
</kw>
<msg timestamp="20201105 13:32:29.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:29.705" starttime="20201105 13:32:29.698"></status>
</kw>
<msg timestamp="20201105 13:32:29.705" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:32:29.705" starttime="20201105 13:32:29.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:32:29.706" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:32:29.706" starttime="20201105 13:32:29.705"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:29.709" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:29.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:29.726" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:32:29.726" starttime="20201105 13:32:29.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:29.727" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:32:29.727" starttime="20201105 13:32:29.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:29.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:29.728" starttime="20201105 13:32:29.728"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:29.728" starttime="20201105 13:32:29.707"></status>
</kw>
<msg timestamp="20201105 13:32:29.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:29.728" starttime="20201105 13:32:29.707"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:29.729" starttime="20201105 13:32:29.706"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:29.729" starttime="20201105 13:32:29.706"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:29.729" starttime="20201105 13:32:29.697"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:29.729" starttime="20201105 13:32:29.696"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:29.732" level="INFO">Running command 'ozone sh bucket link 31496-source/bucket1 31496-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:32.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:32.969" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:32.969" starttime="20201105 13:32:29.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:32.971" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:32:32.971" starttime="20201105 13:32:32.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:32.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:32.971" starttime="20201105 13:32:32.971"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:32.972" starttime="20201105 13:32:29.730"></status>
</kw>
<msg timestamp="20201105 13:32:32.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:32.972" starttime="20201105 13:32:29.730"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:32.972" starttime="20201105 13:32:29.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:32.976" level="INFO">Running command 'ozone sh bucket create 31496-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:36.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:36.299" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:36.299" starttime="20201105 13:32:32.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:36.300" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:32:36.300" starttime="20201105 13:32:36.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:36.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:36.300" starttime="20201105 13:32:36.300"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:36.302" starttime="20201105 13:32:32.973"></status>
</kw>
<msg timestamp="20201105 13:32:36.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:36.302" starttime="20201105 13:32:32.973"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:36.302" starttime="20201105 13:32:32.972"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:36.306" level="INFO">Running command 'ozone sh key put 31496-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:41.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:41.854" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:41.854" starttime="20201105 13:32:36.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:41.855" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:32:41.855" starttime="20201105 13:32:41.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:41.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:41.856" starttime="20201105 13:32:41.856"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:41.856" starttime="20201105 13:32:36.303"></status>
</kw>
<msg timestamp="20201105 13:32:41.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:41.857" starttime="20201105 13:32:36.303"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:41.857" starttime="20201105 13:32:36.302"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201105 13:32:41.859" level="INFO">${postfix} = 49910</msg>
<status status="PASS" endtime="20201105 13:32:41.859" starttime="20201105 13:32:41.858"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201105 13:32:41.859" level="INFO">${tmpfile} = /tmp/tempkey-49910</msg>
<status status="PASS" endtime="20201105 13:32:41.859" starttime="20201105 13:32:41.859"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:41.864" level="INFO">Running command 'ozone sh key get -f 31496-target/link1/key1 /tmp/tempkey-49910 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:47.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:47.251" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:47.251" starttime="20201105 13:32:41.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:47.252" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:32:47.252" starttime="20201105 13:32:47.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:47.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:47.253" starttime="20201105 13:32:47.253"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.253" starttime="20201105 13:32:41.860"></status>
</kw>
<msg timestamp="20201105 13:32:47.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:47.254" starttime="20201105 13:32:41.860"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.254" starttime="20201105 13:32:41.859"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201105 13:32:47.256" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-49910 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:47.258" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201105 13:32:47.259" starttime="20201105 13:32:47.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:47.262" level="INFO">Running command 'rm -f /tmp/tempkey-49910 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:47.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:47.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:32:47.266" starttime="20201105 13:32:47.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:47.266" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:32:47.266" starttime="20201105 13:32:47.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:47.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:47.267" starttime="20201105 13:32:47.267"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.267" starttime="20201105 13:32:47.260"></status>
</kw>
<msg timestamp="20201105 13:32:47.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:47.268" starttime="20201105 13:32:47.260"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.268" starttime="20201105 13:32:47.259"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:32:47.268" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201105 13:32:47.268" starttime="20201105 13:32:47.268"></status>
</kw>
<msg timestamp="20201105 13:32:47.268" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201105 13:32:47.268" starttime="20201105 13:32:41.858"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:32:47.269" starttime="20201105 13:32:47.269"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.269" starttime="20201105 13:32:41.857"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:32:47.269" critical="yes" starttime="20201105 13:32:29.695"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:47.275" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:47.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:47.277" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:32:47.277" starttime="20201105 13:32:47.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:47.278" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:32:47.278" starttime="20201105 13:32:47.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:47.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:47.278" starttime="20201105 13:32:47.278"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.278" starttime="20201105 13:32:47.272"></status>
</kw>
<msg timestamp="20201105 13:32:47.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:47.279" starttime="20201105 13:32:47.272"></status>
</kw>
<msg timestamp="20201105 13:32:47.279" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:32:47.279" starttime="20201105 13:32:47.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:32:47.279" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:32:47.279" starttime="20201105 13:32:47.279"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:47.284" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:47.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:47.300" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:32:47.300" starttime="20201105 13:32:47.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:47.301" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:32:47.301" starttime="20201105 13:32:47.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:47.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:47.301" starttime="20201105 13:32:47.301"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.302" starttime="20201105 13:32:47.281"></status>
</kw>
<msg timestamp="20201105 13:32:47.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:47.302" starttime="20201105 13:32:47.280"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.302" starttime="20201105 13:32:47.280"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.302" starttime="20201105 13:32:47.280"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.302" starttime="20201105 13:32:47.271"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:47.302" starttime="20201105 13:32:47.271"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:47.307" level="INFO">Running command 'ozone sh key put 31496-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:53.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:53.256" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:53.256" starttime="20201105 13:32:47.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:53.258" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:32:53.258" starttime="20201105 13:32:53.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:53.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:53.258" starttime="20201105 13:32:53.258"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:53.259" starttime="20201105 13:32:47.303"></status>
</kw>
<msg timestamp="20201105 13:32:53.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:53.259" starttime="20201105 13:32:47.303"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:53.259" starttime="20201105 13:32:47.303"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201105 13:32:53.260" level="INFO">${postfix} = 55846</msg>
<status status="PASS" endtime="20201105 13:32:53.260" starttime="20201105 13:32:53.260"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201105 13:32:53.261" level="INFO">${tmpfile} = /tmp/tempkey-55846</msg>
<status status="PASS" endtime="20201105 13:32:53.261" starttime="20201105 13:32:53.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:53.265" level="INFO">Running command 'ozone sh key get -f 31496-source/bucket1/key2 /tmp/tempkey-55846 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:59.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:59.130" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:32:59.130" starttime="20201105 13:32:53.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:59.131" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:32:59.132" starttime="20201105 13:32:59.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:59.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:59.132" starttime="20201105 13:32:59.132"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.133" starttime="20201105 13:32:53.262"></status>
</kw>
<msg timestamp="20201105 13:32:59.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:59.133" starttime="20201105 13:32:53.262"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.133" starttime="20201105 13:32:53.261"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201105 13:32:59.135" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-55846 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:59.138" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201105 13:32:59.138" starttime="20201105 13:32:59.133"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:59.141" level="INFO">Running command 'rm -f /tmp/tempkey-55846 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:59.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:59.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:32:59.144" starttime="20201105 13:32:59.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:59.145" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:32:59.145" starttime="20201105 13:32:59.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:59.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:59.146" starttime="20201105 13:32:59.145"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.146" starttime="20201105 13:32:59.139"></status>
</kw>
<msg timestamp="20201105 13:32:59.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:59.146" starttime="20201105 13:32:59.139"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.146" starttime="20201105 13:32:59.138"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:32:59.147" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201105 13:32:59.147" starttime="20201105 13:32:59.146"></status>
</kw>
<msg timestamp="20201105 13:32:59.147" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201105 13:32:59.147" starttime="20201105 13:32:53.260"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:32:59.147" starttime="20201105 13:32:59.147"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.148" starttime="20201105 13:32:53.259"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:32:59.148" critical="yes" starttime="20201105 13:32:47.270"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:59.154" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:59.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:59.155" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:32:59.155" starttime="20201105 13:32:59.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:59.156" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:32:59.156" starttime="20201105 13:32:59.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:59.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:59.157" starttime="20201105 13:32:59.156"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.157" starttime="20201105 13:32:59.151"></status>
</kw>
<msg timestamp="20201105 13:32:59.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:59.157" starttime="20201105 13:32:59.151"></status>
</kw>
<msg timestamp="20201105 13:32:59.158" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:32:59.158" starttime="20201105 13:32:59.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:32:59.158" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:32:59.158" starttime="20201105 13:32:59.158"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:59.162" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:32:59.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:32:59.179" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:32:59.179" starttime="20201105 13:32:59.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:32:59.180" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:32:59.180" starttime="20201105 13:32:59.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:32:59.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:32:59.181" starttime="20201105 13:32:59.180"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.181" starttime="20201105 13:32:59.159"></status>
</kw>
<msg timestamp="20201105 13:32:59.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:32:59.181" starttime="20201105 13:32:59.159"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.181" starttime="20201105 13:32:59.159"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.182" starttime="20201105 13:32:59.158"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.182" starttime="20201105 13:32:59.150"></status>
</kw>
<status status="PASS" endtime="20201105 13:32:59.182" starttime="20201105 13:32:59.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:32:59.186" level="INFO">Running command 'ozone sh key list 31496-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:02.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:02.944" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201105 13:33:02.944" starttime="20201105 13:32:59.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:02.946" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201105 13:33:02.946" starttime="20201105 13:33:02.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:02.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:02.946" starttime="20201105 13:33:02.946"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:02.946" starttime="20201105 13:32:59.183"></status>
</kw>
<msg timestamp="20201105 13:33:02.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:02.947" starttime="20201105 13:32:59.183"></status>
</kw>
<msg timestamp="20201105 13:33:02.947" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201105 13:33:02.947" starttime="20201105 13:32:59.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:02.951" level="INFO">Running command 'ozone sh key list 31496-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:06.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:06.617" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201105 13:33:06.617" starttime="20201105 13:33:02.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:06.618" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201105 13:33:06.618" starttime="20201105 13:33:06.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:06.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:06.619" starttime="20201105 13:33:06.618"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:06.619" starttime="20201105 13:33:02.948"></status>
</kw>
<msg timestamp="20201105 13:33:06.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:06.619" starttime="20201105 13:33:02.948"></status>
</kw>
<msg timestamp="20201105 13:33:06.620" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201105 13:33:06.620" starttime="20201105 13:33:02.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:06.620" starttime="20201105 13:33:06.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:06.621" starttime="20201105 13:33:06.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:06.621" starttime="20201105 13:33:06.621"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:33:06.621" critical="yes" starttime="20201105 13:32:59.148"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:06.627" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:06.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:06.630" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:33:06.630" starttime="20201105 13:33:06.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:06.631" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:33:06.631" starttime="20201105 13:33:06.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:06.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:06.631" starttime="20201105 13:33:06.631"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:06.632" starttime="20201105 13:33:06.624"></status>
</kw>
<msg timestamp="20201105 13:33:06.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:06.632" starttime="20201105 13:33:06.624"></status>
</kw>
<msg timestamp="20201105 13:33:06.632" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:33:06.632" starttime="20201105 13:33:06.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:33:06.633" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:33:06.633" starttime="20201105 13:33:06.632"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:06.637" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:06.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:06.649" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:06.649" starttime="20201105 13:33:06.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:06.650" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:06.650" starttime="20201105 13:33:06.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:06.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:06.651" starttime="20201105 13:33:06.650"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:06.651" starttime="20201105 13:33:06.634"></status>
</kw>
<msg timestamp="20201105 13:33:06.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:06.651" starttime="20201105 13:33:06.634"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:06.651" starttime="20201105 13:33:06.633"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:06.651" starttime="20201105 13:33:06.633"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:06.651" starttime="20201105 13:33:06.623"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:06.651" starttime="20201105 13:33:06.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:06.656" level="INFO">Running command 'ozone sh key delete 31496-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:10.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:10.440" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:10.440" starttime="20201105 13:33:06.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:10.441" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:33:10.441" starttime="20201105 13:33:10.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:10.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:10.442" starttime="20201105 13:33:10.442"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:10.442" starttime="20201105 13:33:06.652"></status>
</kw>
<msg timestamp="20201105 13:33:10.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:10.442" starttime="20201105 13:33:06.652"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:10.443" starttime="20201105 13:33:06.652"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:10.447" level="INFO">Running command 'ozone sh key list 31496-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:14.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:14.066" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201105 13:33:14.066" starttime="20201105 13:33:10.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:14.067" level="INFO">key1</msg>
<status status="PASS" endtime="20201105 13:33:14.067" starttime="20201105 13:33:14.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:14.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:14.068" starttime="20201105 13:33:14.068"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:14.068" starttime="20201105 13:33:10.444"></status>
</kw>
<msg timestamp="20201105 13:33:14.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:14.069" starttime="20201105 13:33:10.443"></status>
</kw>
<msg timestamp="20201105 13:33:14.069" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201105 13:33:14.069" starttime="20201105 13:33:10.443"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:14.069" starttime="20201105 13:33:14.069"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:33:14.070" critical="yes" starttime="20201105 13:33:06.622"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:14.075" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:14.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:14.078" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:33:14.078" starttime="20201105 13:33:14.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:14.079" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:33:14.080" starttime="20201105 13:33:14.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:14.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:14.080" starttime="20201105 13:33:14.080"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:14.081" starttime="20201105 13:33:14.072"></status>
</kw>
<msg timestamp="20201105 13:33:14.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:14.081" starttime="20201105 13:33:14.072"></status>
</kw>
<msg timestamp="20201105 13:33:14.081" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:33:14.081" starttime="20201105 13:33:14.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:33:14.082" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:33:14.082" starttime="20201105 13:33:14.081"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:14.087" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:14.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:14.096" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:14.096" starttime="20201105 13:33:14.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:14.097" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:14.097" starttime="20201105 13:33:14.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:14.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:14.098" starttime="20201105 13:33:14.097"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:14.098" starttime="20201105 13:33:14.083"></status>
</kw>
<msg timestamp="20201105 13:33:14.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:14.098" starttime="20201105 13:33:14.083"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:14.099" starttime="20201105 13:33:14.082"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:14.099" starttime="20201105 13:33:14.082"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:14.099" starttime="20201105 13:33:14.071"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:14.099" starttime="20201105 13:33:14.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:14.103" level="INFO">Running command 'ozone sh bucket list 31496-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:17.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:17.638" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:17.639" starttime="20201105 13:33:14.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:17.640" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:32:26.346Z",
  "modificationTime" : "2020-11-05T13:32:26.346Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:32:06.373Z",
  "modificationTime" : "2020-11-05T13:32:22.803Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:32:32.851Z",
  "modificationTime" : "2020-11-05T13:32:32.851Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:31:59.596Z",
  "modificationTime" : "2020-11-05T13:32:19.207Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:32:02.973Z",
  "modificationTime" : "2020-11-05T13:32:02.973Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 13:33:17.640" starttime="20201105 13:33:17.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:17.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:17.640" starttime="20201105 13:33:17.640"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:17.641" starttime="20201105 13:33:14.100"></status>
</kw>
<msg timestamp="20201105 13:33:17.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:17.641" starttime="20201105 13:33:14.100"></status>
</kw>
<msg timestamp="20201105 13:33:17.641" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:17.641" starttime="20201105 13:33:14.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:17.642" starttime="20201105 13:33:17.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:17.642" starttime="20201105 13:33:17.642"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:33:17.643" critical="yes" starttime="20201105 13:33:14.070"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:17.648" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:17.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:17.651" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:33:17.651" starttime="20201105 13:33:17.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:17.652" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:33:17.652" starttime="20201105 13:33:17.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:17.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:17.653" starttime="20201105 13:33:17.652"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:17.653" starttime="20201105 13:33:17.646"></status>
</kw>
<msg timestamp="20201105 13:33:17.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:17.653" starttime="20201105 13:33:17.645"></status>
</kw>
<msg timestamp="20201105 13:33:17.654" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:33:17.654" starttime="20201105 13:33:17.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:33:17.654" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:33:17.655" starttime="20201105 13:33:17.654"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:17.659" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:17.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:17.678" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:17.678" starttime="20201105 13:33:17.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:17.679" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:17.679" starttime="20201105 13:33:17.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:17.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:17.680" starttime="20201105 13:33:17.679"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:17.680" starttime="20201105 13:33:17.656"></status>
</kw>
<msg timestamp="20201105 13:33:17.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:17.680" starttime="20201105 13:33:17.656"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:17.680" starttime="20201105 13:33:17.655"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:17.680" starttime="20201105 13:33:17.655"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:17.680" starttime="20201105 13:33:17.645"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:17.681" starttime="20201105 13:33:17.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:17.686" level="INFO">Running command 'ozone sh bucket info 31496-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:21.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:21.401" level="INFO">${output} = 31496-source bucket1</msg>
<status status="PASS" endtime="20201105 13:33:21.401" starttime="20201105 13:33:17.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:21.402" level="INFO">31496-source bucket1</msg>
<status status="PASS" endtime="20201105 13:33:21.402" starttime="20201105 13:33:21.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:21.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:21.402" starttime="20201105 13:33:21.402"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:21.403" starttime="20201105 13:33:17.682"></status>
</kw>
<msg timestamp="20201105 13:33:21.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:21.403" starttime="20201105 13:33:17.681"></status>
</kw>
<msg timestamp="20201105 13:33:21.404" level="INFO">${result} = 31496-source bucket1</msg>
<status status="PASS" endtime="20201105 13:33:21.404" starttime="20201105 13:33:17.681"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:21.404" starttime="20201105 13:33:21.404"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:33:21.404" critical="yes" starttime="20201105 13:33:17.643"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:21.412" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:21.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:21.415" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:33:21.415" starttime="20201105 13:33:21.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:21.416" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:33:21.416" starttime="20201105 13:33:21.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:21.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:21.416" starttime="20201105 13:33:21.416"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:21.417" starttime="20201105 13:33:21.408"></status>
</kw>
<msg timestamp="20201105 13:33:21.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:21.417" starttime="20201105 13:33:21.408"></status>
</kw>
<msg timestamp="20201105 13:33:21.417" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:33:21.417" starttime="20201105 13:33:21.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:33:21.418" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:33:21.418" starttime="20201105 13:33:21.417"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:21.423" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:21.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:21.434" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:21.434" starttime="20201105 13:33:21.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:21.435" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:21.435" starttime="20201105 13:33:21.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:21.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:21.436" starttime="20201105 13:33:21.435"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:21.436" starttime="20201105 13:33:21.419"></status>
</kw>
<msg timestamp="20201105 13:33:21.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:21.436" starttime="20201105 13:33:21.419"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:21.436" starttime="20201105 13:33:21.418"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:21.436" starttime="20201105 13:33:21.418"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:21.437" starttime="20201105 13:33:21.407"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:21.437" starttime="20201105 13:33:21.407"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:21.440" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 31496-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:24.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:24.701" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:24.701" starttime="20201105 13:33:21.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:24.702" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 13:33:24.702" starttime="20201105 13:33:24.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:24.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:24.703" starttime="20201105 13:33:24.703"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:24.703" starttime="20201105 13:33:21.438"></status>
</kw>
<msg timestamp="20201105 13:33:24.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:24.703" starttime="20201105 13:33:21.437"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:24.704" starttime="20201105 13:33:21.437"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:24.708" level="INFO">Running command 'ozone sh bucket getacl 31496-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:28.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:28.114" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201105 13:33:28.114" starttime="20201105 13:33:24.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:28.115" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201105 13:33:28.115" starttime="20201105 13:33:28.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:28.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:28.116" starttime="20201105 13:33:28.115"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:28.116" starttime="20201105 13:33:24.706"></status>
</kw>
<msg timestamp="20201105 13:33:28.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:28.116" starttime="20201105 13:33:24.705"></status>
</kw>
<msg timestamp="20201105 13:33:28.116" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201105 13:33:28.117" starttime="20201105 13:33:24.705"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:28.117" starttime="20201105 13:33:28.117"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:28.117" starttime="20201105 13:33:24.704"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:28.122" level="INFO">Running command 'ozone sh bucket getacl 31496-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:31.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:31.538" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:31.538" starttime="20201105 13:33:28.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:31.539" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:31.539" starttime="20201105 13:33:31.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:31.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:31.540" starttime="20201105 13:33:31.539"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:31.540" starttime="20201105 13:33:28.119"></status>
</kw>
<msg timestamp="20201105 13:33:31.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:31.540" starttime="20201105 13:33:28.119"></status>
</kw>
<msg timestamp="20201105 13:33:31.540" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201105 13:33:31.540" starttime="20201105 13:33:28.118"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:31.541" starttime="20201105 13:33:31.541"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:31.541" starttime="20201105 13:33:28.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:31.546" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 31496-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:34.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:34.725" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:34.725" starttime="20201105 13:33:31.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:34.726" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 13:33:34.726" starttime="20201105 13:33:34.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:34.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:34.727" starttime="20201105 13:33:34.727"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:34.727" starttime="20201105 13:33:31.542"></status>
</kw>
<msg timestamp="20201105 13:33:34.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:34.728" starttime="20201105 13:33:31.542"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:34.728" starttime="20201105 13:33:31.541"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:34.734" level="INFO">Running command 'ozone sh bucket getacl 31496-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:38.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:38.081" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:38.081" starttime="20201105 13:33:34.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:38.082" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:38.083" starttime="20201105 13:33:38.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:38.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:38.083" starttime="20201105 13:33:38.083"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:38.083" starttime="20201105 13:33:34.730"></status>
</kw>
<msg timestamp="20201105 13:33:38.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:38.084" starttime="20201105 13:33:34.729"></status>
</kw>
<msg timestamp="20201105 13:33:38.084" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201105 13:33:38.084" starttime="20201105 13:33:34.729"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:38.085" starttime="20201105 13:33:38.084"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:38.085" starttime="20201105 13:33:34.728"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:38.092" level="INFO">Running command 'ozone sh bucket getacl 31496-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:41.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:41.501" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201105 13:33:41.501" starttime="20201105 13:33:38.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:41.502" level="INFO">READ</msg>
<status status="PASS" endtime="20201105 13:33:41.502" starttime="20201105 13:33:41.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:41.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:41.503" starttime="20201105 13:33:41.502"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:41.503" starttime="20201105 13:33:38.087"></status>
</kw>
<msg timestamp="20201105 13:33:41.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:41.503" starttime="20201105 13:33:38.087"></status>
</kw>
<msg timestamp="20201105 13:33:41.503" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201105 13:33:41.503" starttime="20201105 13:33:38.086"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:41.504" starttime="20201105 13:33:41.503"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:41.504" starttime="20201105 13:33:38.085"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:33:41.504" critical="yes" starttime="20201105 13:33:21.406"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:41.511" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:41.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:41.513" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:33:41.513" starttime="20201105 13:33:41.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:41.514" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:33:41.514" starttime="20201105 13:33:41.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:41.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:41.515" starttime="20201105 13:33:41.514"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:41.515" starttime="20201105 13:33:41.508"></status>
</kw>
<msg timestamp="20201105 13:33:41.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:41.515" starttime="20201105 13:33:41.507"></status>
</kw>
<msg timestamp="20201105 13:33:41.515" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:33:41.515" starttime="20201105 13:33:41.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:33:41.516" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:33:41.516" starttime="20201105 13:33:41.516"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:41.521" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:41.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:41.530" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:41.530" starttime="20201105 13:33:41.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:41.531" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:41.531" starttime="20201105 13:33:41.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:41.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:41.531" starttime="20201105 13:33:41.531"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:41.531" starttime="20201105 13:33:41.517"></status>
</kw>
<msg timestamp="20201105 13:33:41.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:41.532" starttime="20201105 13:33:41.517"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:41.532" starttime="20201105 13:33:41.517"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:41.532" starttime="20201105 13:33:41.516"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:41.532" starttime="20201105 13:33:41.506"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:41.532" starttime="20201105 13:33:41.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:41.535" level="INFO">Running command 'ozone sh bucket link 31496-source/bucket2 31496-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:45.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:45.091" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:45.091" starttime="20201105 13:33:41.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:45.092" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:33:45.092" starttime="20201105 13:33:45.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:45.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:45.093" starttime="20201105 13:33:45.092"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:45.093" starttime="20201105 13:33:41.533"></status>
</kw>
<msg timestamp="20201105 13:33:45.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:45.093" starttime="20201105 13:33:41.533"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:45.093" starttime="20201105 13:33:41.532"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:45.096" level="INFO">Running command 'ozone sh bucket create 31496-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:48.627" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 13:33:48.628" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:48.628" starttime="20201105 13:33:45.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:48.629" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201105 13:33:48.629" starttime="20201105 13:33:48.628"></status>
</kw>
<msg timestamp="20201105 13:33:48.629" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:48.629" starttime="20201105 13:33:45.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:48.630" starttime="20201105 13:33:48.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:48.634" level="INFO">Running command 'ozone sh bucket create 31496-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:51.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:51.878" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:51.879" starttime="20201105 13:33:48.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:51.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:33:51.880" starttime="20201105 13:33:51.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:51.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:51.880" starttime="20201105 13:33:51.880"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:51.881" starttime="20201105 13:33:48.631"></status>
</kw>
<msg timestamp="20201105 13:33:51.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:51.881" starttime="20201105 13:33:48.630"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:51.881" starttime="20201105 13:33:48.630"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:51.884" level="INFO">Running command 'ozone sh bucket link 31496-source/bucket1 31496-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:54.936" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 13:33:54.936" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:54.936" starttime="20201105 13:33:51.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:54.937" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201105 13:33:54.938" starttime="20201105 13:33:54.937"></status>
</kw>
<msg timestamp="20201105 13:33:54.938" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:54.938" starttime="20201105 13:33:51.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:54.938" starttime="20201105 13:33:54.938"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:33:54.939" critical="yes" starttime="20201105 13:33:41.505"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:54.944" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:54.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:54.947" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:33:54.947" starttime="20201105 13:33:54.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:54.948" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:33:54.948" starttime="20201105 13:33:54.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:54.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:54.949" starttime="20201105 13:33:54.948"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:54.949" starttime="20201105 13:33:54.942"></status>
</kw>
<msg timestamp="20201105 13:33:54.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:54.949" starttime="20201105 13:33:54.942"></status>
</kw>
<msg timestamp="20201105 13:33:54.950" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:33:54.950" starttime="20201105 13:33:54.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:33:54.950" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:33:54.950" starttime="20201105 13:33:54.950"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:54.955" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:54.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:54.965" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:54.966" starttime="20201105 13:33:54.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:54.966" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:54.967" starttime="20201105 13:33:54.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:54.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:54.967" starttime="20201105 13:33:54.967"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:54.967" starttime="20201105 13:33:54.952"></status>
</kw>
<msg timestamp="20201105 13:33:54.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:54.968" starttime="20201105 13:33:54.951"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:54.968" starttime="20201105 13:33:54.951"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:54.968" starttime="20201105 13:33:54.950"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:54.968" starttime="20201105 13:33:54.941"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:54.968" starttime="20201105 13:33:54.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:54.973" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:54.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:54.976" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:54.976" starttime="20201105 13:33:54.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:54.977" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:54.977" starttime="20201105 13:33:54.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:54.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:54.978" starttime="20201105 13:33:54.978"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:54.978" starttime="20201105 13:33:54.970"></status>
</kw>
<msg timestamp="20201105 13:33:54.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:54.978" starttime="20201105 13:33:54.970"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:54.979" starttime="20201105 13:33:54.969"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:54.983" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:54.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:54.984" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:33:54.984" starttime="20201105 13:33:54.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:54.985" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:33:54.985" starttime="20201105 13:33:54.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:54.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:54.986" starttime="20201105 13:33:54.985"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:54.986" starttime="20201105 13:33:54.980"></status>
</kw>
<msg timestamp="20201105 13:33:54.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:54.986" starttime="20201105 13:33:54.980"></status>
</kw>
<msg timestamp="20201105 13:33:54.986" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:33:54.986" starttime="20201105 13:33:54.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:33:54.987" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:33:54.987" starttime="20201105 13:33:54.987"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:54.991" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:55.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:55.001" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:55.001" starttime="20201105 13:33:54.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:55.002" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:55.002" starttime="20201105 13:33:55.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:55.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:55.002" starttime="20201105 13:33:55.002"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:55.003" starttime="20201105 13:33:54.988"></status>
</kw>
<msg timestamp="20201105 13:33:55.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:55.003" starttime="20201105 13:33:54.988"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:55.003" starttime="20201105 13:33:54.988"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:55.003" starttime="20201105 13:33:54.987"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:55.003" starttime="20201105 13:33:54.979"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:55.003" starttime="20201105 13:33:54.979"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:55.005" level="INFO">Running command 'ozone sh key list 31496-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:59.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:59.390" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:59.390" starttime="20201105 13:33:55.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.391" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "31496-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-05T13:31:50.003Z",
  "modificationTime" : "2020-11-05T13:31:51.775Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201105 13:33:59.391" starttime="20201105 13:33:59.390"></status>
</kw>
<msg timestamp="20201105 13:33:59.391" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:33:59.391" starttime="20201105 13:33:55.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 13:33:59.392" starttime="20201105 13:33:59.391"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.392" starttime="20201105 13:33:54.969"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.392" starttime="20201105 13:33:54.968"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:33:59.392" critical="yes" starttime="20201105 13:33:54.939"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:59.398" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:59.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:59.400" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:33:59.400" starttime="20201105 13:33:59.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.401" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:33:59.401" starttime="20201105 13:33:59.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:59.402" starttime="20201105 13:33:59.402"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.402" starttime="20201105 13:33:59.395"></status>
</kw>
<msg timestamp="20201105 13:33:59.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:59.402" starttime="20201105 13:33:59.395"></status>
</kw>
<msg timestamp="20201105 13:33:59.403" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:33:59.403" starttime="20201105 13:33:59.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:33:59.403" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:33:59.403" starttime="20201105 13:33:59.403"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:59.407" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:59.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:59.418" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:59.418" starttime="20201105 13:33:59.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.419" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:59.419" starttime="20201105 13:33:59.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:59.420" starttime="20201105 13:33:59.419"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.420" starttime="20201105 13:33:59.404"></status>
</kw>
<msg timestamp="20201105 13:33:59.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:59.420" starttime="20201105 13:33:59.404"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.420" starttime="20201105 13:33:59.404"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.420" starttime="20201105 13:33:59.403"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.420" starttime="20201105 13:33:59.394"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.421" starttime="20201105 13:33:59.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:59.426" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:59.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:59.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:59.428" starttime="20201105 13:33:59.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.429" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:59.429" starttime="20201105 13:33:59.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:59.430" starttime="20201105 13:33:59.429"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.430" starttime="20201105 13:33:59.422"></status>
</kw>
<msg timestamp="20201105 13:33:59.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:59.430" starttime="20201105 13:33:59.422"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.430" starttime="20201105 13:33:59.421"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:59.434" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:59.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:59.436" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:33:59.436" starttime="20201105 13:33:59.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.437" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:33:59.437" starttime="20201105 13:33:59.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:59.438" starttime="20201105 13:33:59.438"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.438" starttime="20201105 13:33:59.432"></status>
</kw>
<msg timestamp="20201105 13:33:59.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:59.439" starttime="20201105 13:33:59.431"></status>
</kw>
<msg timestamp="20201105 13:33:59.439" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:33:59.439" starttime="20201105 13:33:59.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:33:59.439" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:33:59.439" starttime="20201105 13:33:59.439"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:59.444" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:33:59.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:33:59.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:33:59.452" starttime="20201105 13:33:59.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.453" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:33:59.453" starttime="20201105 13:33:59.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:33:59.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:33:59.454" starttime="20201105 13:33:59.453"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.454" starttime="20201105 13:33:59.441"></status>
</kw>
<msg timestamp="20201105 13:33:59.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:33:59.454" starttime="20201105 13:33:59.440"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.454" starttime="20201105 13:33:59.440"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.454" starttime="20201105 13:33:59.440"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.454" starttime="20201105 13:33:59.431"></status>
</kw>
<status status="PASS" endtime="20201105 13:33:59.454" starttime="20201105 13:33:59.430"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:33:59.458" level="INFO">Running command 'ozone sh key list 31496-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:02.598" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 13:34:02.598" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:02.598" starttime="20201105 13:33:59.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.599" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201105 13:34:02.599" starttime="20201105 13:34:02.598"></status>
</kw>
<msg timestamp="20201105 13:34:02.599" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:02.600" starttime="20201105 13:33:59.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201105 13:34:02.600" starttime="20201105 13:34:02.600"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.600" starttime="20201105 13:33:59.421"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.600" starttime="20201105 13:33:59.421"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:34:02.601" critical="yes" starttime="20201105 13:33:59.393"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:02.606" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:02.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:02.609" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:34:02.609" starttime="20201105 13:34:02.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.610" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:34:02.610" starttime="20201105 13:34:02.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:02.611" starttime="20201105 13:34:02.610"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.611" starttime="20201105 13:34:02.604"></status>
</kw>
<msg timestamp="20201105 13:34:02.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:02.611" starttime="20201105 13:34:02.603"></status>
</kw>
<msg timestamp="20201105 13:34:02.612" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:34:02.612" starttime="20201105 13:34:02.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:34:02.613" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:34:02.613" starttime="20201105 13:34:02.612"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:02.618" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:02.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:02.627" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:34:02.627" starttime="20201105 13:34:02.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.628" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:34:02.628" starttime="20201105 13:34:02.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:02.628" starttime="20201105 13:34:02.628"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.629" starttime="20201105 13:34:02.614"></status>
</kw>
<msg timestamp="20201105 13:34:02.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:02.629" starttime="20201105 13:34:02.614"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.629" starttime="20201105 13:34:02.613"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.629" starttime="20201105 13:34:02.613"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.629" starttime="20201105 13:34:02.603"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.629" starttime="20201105 13:34:02.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:02.634" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:02.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:02.637" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:34:02.637" starttime="20201105 13:34:02.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.637" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:34:02.638" starttime="20201105 13:34:02.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:02.638" starttime="20201105 13:34:02.638"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.639" starttime="20201105 13:34:02.631"></status>
</kw>
<msg timestamp="20201105 13:34:02.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:02.639" starttime="20201105 13:34:02.630"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.639" starttime="20201105 13:34:02.630"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:02.644" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:02.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:02.645" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:34:02.645" starttime="20201105 13:34:02.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.646" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:34:02.646" starttime="20201105 13:34:02.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:02.646" starttime="20201105 13:34:02.646"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.647" starttime="20201105 13:34:02.640"></status>
</kw>
<msg timestamp="20201105 13:34:02.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:02.647" starttime="20201105 13:34:02.640"></status>
</kw>
<msg timestamp="20201105 13:34:02.647" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:34:02.647" starttime="20201105 13:34:02.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:34:02.648" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:34:02.648" starttime="20201105 13:34:02.647"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:02.652" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:02.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:02.668" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:34:02.668" starttime="20201105 13:34:02.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.669" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:34:02.669" starttime="20201105 13:34:02.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:02.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:02.670" starttime="20201105 13:34:02.670"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.670" starttime="20201105 13:34:02.649"></status>
</kw>
<msg timestamp="20201105 13:34:02.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:02.671" starttime="20201105 13:34:02.649"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.671" starttime="20201105 13:34:02.648"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.671" starttime="20201105 13:34:02.648"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.671" starttime="20201105 13:34:02.639"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:02.671" starttime="20201105 13:34:02.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:02.684" level="INFO">Running command 'ozone sh bucket info 31496-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:05.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:05.933" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:05.934" starttime="20201105 13:34:02.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:05.935" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:32:06.373Z",
  "modificationTime" : "2020-11-05T13:32:22.803Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 13:34:05.935" starttime="20201105 13:34:05.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:05.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:05.936" starttime="20201105 13:34:05.935"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:05.936" starttime="20201105 13:34:02.672"></status>
</kw>
<msg timestamp="20201105 13:34:05.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:05.936" starttime="20201105 13:34:02.672"></status>
</kw>
<msg timestamp="20201105 13:34:05.936" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:05.936" starttime="20201105 13:34:02.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 13:34:05.937" starttime="20201105 13:34:05.936"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201105 13:34:05.937" starttime="20201105 13:34:05.937"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:05.940" level="INFO">Running command 'ozone sh key list 31496-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:10.063" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 13:34:10.064" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:10.064" starttime="20201105 13:34:05.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:10.065" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201105 13:34:10.065" starttime="20201105 13:34:10.064"></status>
</kw>
<msg timestamp="20201105 13:34:10.065" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:10.065" starttime="20201105 13:34:05.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201105 13:34:10.066" starttime="20201105 13:34:10.065"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:10.066" starttime="20201105 13:34:02.630"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:10.066" starttime="20201105 13:34:02.629"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:34:10.066" critical="yes" starttime="20201105 13:34:02.601"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:10.073" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:10.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:10.074" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:34:10.074" starttime="20201105 13:34:10.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:10.075" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:34:10.075" starttime="20201105 13:34:10.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:10.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:10.076" starttime="20201105 13:34:10.075"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:10.076" starttime="20201105 13:34:10.069"></status>
</kw>
<msg timestamp="20201105 13:34:10.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:10.076" starttime="20201105 13:34:10.069"></status>
</kw>
<msg timestamp="20201105 13:34:10.077" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:34:10.077" starttime="20201105 13:34:10.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:34:10.077" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:34:10.077" starttime="20201105 13:34:10.077"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:10.082" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:10.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:10.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:34:10.092" starttime="20201105 13:34:10.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:10.093" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:34:10.093" starttime="20201105 13:34:10.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:10.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:10.094" starttime="20201105 13:34:10.093"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:10.094" starttime="20201105 13:34:10.079"></status>
</kw>
<msg timestamp="20201105 13:34:10.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:10.094" starttime="20201105 13:34:10.079"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:10.095" starttime="20201105 13:34:10.078"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:10.095" starttime="20201105 13:34:10.078"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:10.095" starttime="20201105 13:34:10.068"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:10.095" starttime="20201105 13:34:10.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:10.099" level="INFO">Running command 'ozone sh bucket link 31496-target/loop1 31496-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:13.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:13.332" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:13.333" starttime="20201105 13:34:10.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:13.334" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:34:13.334" starttime="20201105 13:34:13.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:13.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:13.334" starttime="20201105 13:34:13.334"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:13.335" starttime="20201105 13:34:10.096"></status>
</kw>
<msg timestamp="20201105 13:34:13.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:13.335" starttime="20201105 13:34:10.095"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:13.335" starttime="20201105 13:34:10.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:13.339" level="INFO">Running command 'ozone sh bucket link 31496-target/loop2 31496-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:16.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:16.488" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:16.488" starttime="20201105 13:34:13.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:16.489" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:34:16.489" starttime="20201105 13:34:16.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:16.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:16.490" starttime="20201105 13:34:16.489"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:16.490" starttime="20201105 13:34:13.336"></status>
</kw>
<msg timestamp="20201105 13:34:16.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:16.490" starttime="20201105 13:34:13.336"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:16.490" starttime="20201105 13:34:13.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:16.494" level="INFO">Running command 'ozone sh bucket link 31496-target/loop3 31496-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:19.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:19.767" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:19.767" starttime="20201105 13:34:16.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:19.768" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:34:19.768" starttime="20201105 13:34:19.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:19.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:19.769" starttime="20201105 13:34:19.768"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:19.769" starttime="20201105 13:34:16.491"></status>
</kw>
<msg timestamp="20201105 13:34:19.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:19.769" starttime="20201105 13:34:16.491"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:19.769" starttime="20201105 13:34:16.490"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:19.773" level="INFO">Running command 'ozone sh key list 31496-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:23.164" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 13:34:23.164" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:23.164" starttime="20201105 13:34:19.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:23.165" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201105 13:34:23.165" starttime="20201105 13:34:23.165"></status>
</kw>
<msg timestamp="20201105 13:34:23.166" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:23.166" starttime="20201105 13:34:19.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201105 13:34:23.166" starttime="20201105 13:34:23.166"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:34:23.167" critical="yes" starttime="20201105 13:34:10.067"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:23.174" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:23.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:23.175" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:34:23.175" starttime="20201105 13:34:23.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:23.176" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:34:23.176" starttime="20201105 13:34:23.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:23.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:23.176" starttime="20201105 13:34:23.176"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:23.177" starttime="20201105 13:34:23.169"></status>
</kw>
<msg timestamp="20201105 13:34:23.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:23.177" starttime="20201105 13:34:23.169"></status>
</kw>
<msg timestamp="20201105 13:34:23.177" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:34:23.177" starttime="20201105 13:34:23.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:34:23.178" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:34:23.178" starttime="20201105 13:34:23.177"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:23.182" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:23.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:23.192" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:34:23.192" starttime="20201105 13:34:23.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:23.193" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:34:23.193" starttime="20201105 13:34:23.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:23.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:23.194" starttime="20201105 13:34:23.193"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:23.194" starttime="20201105 13:34:23.179"></status>
</kw>
<msg timestamp="20201105 13:34:23.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:23.194" starttime="20201105 13:34:23.179"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:23.194" starttime="20201105 13:34:23.178"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:23.194" starttime="20201105 13:34:23.178"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:23.195" starttime="20201105 13:34:23.168"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:23.195" starttime="20201105 13:34:23.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:23.199" level="INFO">Running command 'ozone sh bucket link 31496-source/bucket1 31496-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:26.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:26.498" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:26.498" starttime="20201105 13:34:23.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:26.499" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:34:26.499" starttime="20201105 13:34:26.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:26.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:26.500" starttime="20201105 13:34:26.499"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:26.500" starttime="20201105 13:34:23.196"></status>
</kw>
<msg timestamp="20201105 13:34:26.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:26.500" starttime="20201105 13:34:23.195"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:26.500" starttime="20201105 13:34:23.195"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:26.504" level="INFO">Running command 'ozone sh key put 31496-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:31.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:31.992" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:31.992" starttime="20201105 13:34:26.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:31.993" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:34:31.993" starttime="20201105 13:34:31.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:31.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:31.994" starttime="20201105 13:34:31.993"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:31.994" starttime="20201105 13:34:26.501"></status>
</kw>
<msg timestamp="20201105 13:34:31.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:31.994" starttime="20201105 13:34:26.501"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:31.994" starttime="20201105 13:34:26.501"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201105 13:34:31.996" level="INFO">${postfix} = 38328</msg>
<status status="PASS" endtime="20201105 13:34:31.996" starttime="20201105 13:34:31.996"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201105 13:34:31.997" level="INFO">${tmpfile} = /tmp/tempkey-38328</msg>
<status status="PASS" endtime="20201105 13:34:31.997" starttime="20201105 13:34:31.996"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:32.000" level="INFO">Running command 'ozone sh key get -f 31496-target/link1/key3 /tmp/tempkey-38328 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:36.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:36.776" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:36.776" starttime="20201105 13:34:31.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:36.777" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:34:36.777" starttime="20201105 13:34:36.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:36.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:36.778" starttime="20201105 13:34:36.778"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.778" starttime="20201105 13:34:31.998"></status>
</kw>
<msg timestamp="20201105 13:34:36.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:36.779" starttime="20201105 13:34:31.997"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.779" starttime="20201105 13:34:31.997"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201105 13:34:36.781" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-38328 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:36.784" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201105 13:34:36.784" starttime="20201105 13:34:36.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:36.787" level="INFO">Running command 'rm -f /tmp/tempkey-38328 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:36.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:36.790" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:34:36.790" starttime="20201105 13:34:36.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:36.791" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:34:36.791" starttime="20201105 13:34:36.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:36.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:36.792" starttime="20201105 13:34:36.791"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.792" starttime="20201105 13:34:36.785"></status>
</kw>
<msg timestamp="20201105 13:34:36.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:36.792" starttime="20201105 13:34:36.785"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.792" starttime="20201105 13:34:36.784"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:34:36.793" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201105 13:34:36.793" starttime="20201105 13:34:36.792"></status>
</kw>
<msg timestamp="20201105 13:34:36.793" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201105 13:34:36.793" starttime="20201105 13:34:31.995"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:34:36.794" starttime="20201105 13:34:36.793"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.794" starttime="20201105 13:34:31.995"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:34:36.794" critical="yes" starttime="20201105 13:34:23.167"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:36.801" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:36.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:36.802" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 13:34:36.802" starttime="20201105 13:34:36.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:36.803" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 13:34:36.803" starttime="20201105 13:34:36.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:36.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:36.804" starttime="20201105 13:34:36.803"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.804" starttime="20201105 13:34:36.797"></status>
</kw>
<msg timestamp="20201105 13:34:36.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:36.804" starttime="20201105 13:34:36.797"></status>
</kw>
<msg timestamp="20201105 13:34:36.805" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 13:34:36.805" starttime="20201105 13:34:36.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:34:36.805" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:34:36.805" starttime="20201105 13:34:36.805"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:36.810" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:36.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:36.819" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:34:36.819" starttime="20201105 13:34:36.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:36.820" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:34:36.820" starttime="20201105 13:34:36.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:36.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:36.820" starttime="20201105 13:34:36.820"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.821" starttime="20201105 13:34:36.806"></status>
</kw>
<msg timestamp="20201105 13:34:36.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:36.821" starttime="20201105 13:34:36.806"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.821" starttime="20201105 13:34:36.806"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.821" starttime="20201105 13:34:36.805"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.821" starttime="20201105 13:34:36.796"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:36.821" starttime="20201105 13:34:36.796"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:36.826" level="INFO">Running command 'ozone sh bucket delete 31496-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:40.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:40.086" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:40.086" starttime="20201105 13:34:36.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:40.087" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:34:40.087" starttime="20201105 13:34:40.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:40.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:40.088" starttime="20201105 13:34:40.087"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:40.088" starttime="20201105 13:34:36.822"></status>
</kw>
<msg timestamp="20201105 13:34:40.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:40.088" starttime="20201105 13:34:36.822"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:40.089" starttime="20201105 13:34:36.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:40.092" level="INFO">Running command 'ozone sh bucket list 31496-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:43.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:43.716" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:43.716" starttime="20201105 13:34:40.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:43.717" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:33:51.679Z",
  "modificationTime" : "2020-11-05T13:33:51.679Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:32:26.346Z",
  "modificationTime" : "2020-11-05T13:32:26.346Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:32:06.373Z",
  "modificationTime" : "2020-11-05T13:32:22.803Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:33:44.812Z",
  "modificationTime" : "2020-11-05T13:33:44.812Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:34:26.327Z",
  "modificationTime" : "2020-11-05T13:34:26.327Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:34:19.687Z",
  "modificationTime" : "2020-11-05T13:34:19.687Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:34:13.164Z",
  "modificationTime" : "2020-11-05T13:34:13.164Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:34:16.275Z",
  "modificationTime" : "2020-11-05T13:34:16.275Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:31:59.596Z",
  "modificationTime" : "2020-11-05T13:32:19.207Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31496-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:32:02.973Z",
  "modificationTime" : "2020-11-05T13:32:02.973Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31496-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 13:34:43.717" starttime="20201105 13:34:43.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:43.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:43.718" starttime="20201105 13:34:43.717"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:43.718" starttime="20201105 13:34:40.090"></status>
</kw>
<msg timestamp="20201105 13:34:43.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:43.718" starttime="20201105 13:34:40.089"></status>
</kw>
<msg timestamp="20201105 13:34:43.719" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:34:43.719" starttime="20201105 13:34:40.089"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201105 13:34:43.719" starttime="20201105 13:34:43.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:34:43.725" level="INFO">Running command 'ozone sh key list 31496-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:34:47.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:34:47.098" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201105 13:34:47.098" starttime="20201105 13:34:43.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:34:47.099" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201105 13:34:47.099" starttime="20201105 13:34:47.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:34:47.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:34:47.100" starttime="20201105 13:34:47.100"></status>
</kw>
<status status="PASS" endtime="20201105 13:34:47.100" starttime="20201105 13:34:43.720"></status>
</kw>
<msg timestamp="20201105 13:34:47.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:34:47.100" starttime="20201105 13:34:43.720"></status>
</kw>
<msg timestamp="20201105 13:34:47.101" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201105 13:34:47.101" starttime="20201105 13:34:43.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201105 13:34:47.101" starttime="20201105 13:34:47.101"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:34:47.101" critical="yes" starttime="20201105 13:34:36.795"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201105 13:34:47.104" starttime="20201105 13:31:36.903"></status>
</suite>
<status status="PASS" elapsedtime="218139" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
