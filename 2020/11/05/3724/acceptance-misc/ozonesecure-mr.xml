<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201105 13:29:11.222" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:19:55.908" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:19:59.514" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 13:19:59.514" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:19:59.514" starttime="20201105 13:19:55.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:19:59.516" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 13:19:59.516" starttime="20201105 13:19:59.515"></status>
</kw>
<msg timestamp="20201105 13:19:59.516" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:19:59.516" starttime="20201105 13:19:55.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:19:59.521" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:02.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:02.577" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:02.577" starttime="20201105 13:19:59.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:02.578" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:20:02.578" starttime="20201105 13:20:02.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:02.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:02.578" starttime="20201105 13:20:02.578"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:02.579" starttime="20201105 13:19:59.518"></status>
</kw>
<msg timestamp="20201105 13:20:02.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:02.579" starttime="20201105 13:19:59.517"></status>
</kw>
<msg timestamp="20201105 13:20:02.579" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:02.579" starttime="20201105 13:19:59.517"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 13:20:02.580" starttime="20201105 13:20:02.579"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:02.580" starttime="20201105 13:19:59.517"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:02.580" starttime="20201105 13:19:59.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:02.585" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:05.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:05.827" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:05.827" starttime="20201105 13:20:02.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:05.829" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:20:05.829" starttime="20201105 13:20:05.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:05.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:05.829" starttime="20201105 13:20:05.829"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:05.830" starttime="20201105 13:20:02.581"></status>
</kw>
<msg timestamp="20201105 13:20:05.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:05.830" starttime="20201105 13:20:02.581"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:05.830" starttime="20201105 13:20:02.581"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:05.830" starttime="20201105 13:20:02.580"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:05.830" starttime="20201105 13:20:02.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 13:20:05.831" starttime="20201105 13:20:05.830"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:05.834" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:08.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:08.890" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:08.890" starttime="20201105 13:20:05.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:08.891" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T13:20:05.449Z",
  "modificationTime" : "2020-11-05T13:20:05.449Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 13:20:08.891" starttime="20201105 13:20:08.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:08.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:08.892" starttime="20201105 13:20:08.891"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:08.892" starttime="20201105 13:20:05.832"></status>
</kw>
<msg timestamp="20201105 13:20:08.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:08.892" starttime="20201105 13:20:05.831"></status>
</kw>
<msg timestamp="20201105 13:20:08.892" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:08.892" starttime="20201105 13:20:05.831"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 13:20:08.893" starttime="20201105 13:20:08.892"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:20:08.896" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:20:08.896" starttime="20201105 13:20:08.896"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:20:08.897" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:20:08.897" starttime="20201105 13:20:08.896"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:08.897" starttime="20201105 13:20:08.895"></status>
</kw>
<msg timestamp="20201105 13:20:08.897" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:20:08.897" starttime="20201105 13:20:08.895"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:08.897" starttime="20201105 13:20:08.894"></status>
</kw>
<msg timestamp="20201105 13:20:08.897" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 13:20:08.897" starttime="20201105 13:20:08.894"></status>
</kw>
<msg timestamp="20201105 13:20:08.898" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 13:20:08.898" starttime="20201105 13:20:08.893"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:08.902" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:11.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:11.813" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:11.813" starttime="20201105 13:20:08.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:11.814" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:20:11.814" starttime="20201105 13:20:11.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:11.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:11.815" starttime="20201105 13:20:11.814"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:11.815" starttime="20201105 13:20:08.898"></status>
</kw>
<msg timestamp="20201105 13:20:11.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:11.815" starttime="20201105 13:20:08.898"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:11.815" starttime="20201105 13:20:08.898"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:11.819" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:19.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:19.790" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:19.790" starttime="20201105 13:20:11.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:19.791" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:20:19.791" starttime="20201105 13:20:19.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:19.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:19.791" starttime="20201105 13:20:19.791"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:19.792" starttime="20201105 13:20:11.816"></status>
</kw>
<msg timestamp="20201105 13:20:19.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:19.792" starttime="20201105 13:20:11.816"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:19.792" starttime="20201105 13:20:11.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:19.796" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:24.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:24.622" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:24.622" starttime="20201105 13:20:19.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:24.623" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:20:24.624" starttime="20201105 13:20:24.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:24.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:24.624" starttime="20201105 13:20:24.624"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:24.624" starttime="20201105 13:20:19.793"></status>
</kw>
<msg timestamp="20201105 13:20:24.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:24.625" starttime="20201105 13:20:19.793"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:24.625" starttime="20201105 13:20:19.792"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:24.628" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:29.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:29.391" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:29.391" starttime="20201105 13:20:24.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:29.392" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:20:29.392" starttime="20201105 13:20:29.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:29.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:29.393" starttime="20201105 13:20:29.392"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:29.393" starttime="20201105 13:20:24.626"></status>
</kw>
<msg timestamp="20201105 13:20:29.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:29.393" starttime="20201105 13:20:24.625"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:29.394" starttime="20201105 13:20:24.625"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:20:29.394" critical="yes" starttime="20201105 13:19:55.902"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:20:29.399" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:20:29.399" starttime="20201105 13:20:29.399"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:20:29.400" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:20:29.400" starttime="20201105 13:20:29.400"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:29.400" starttime="20201105 13:20:29.399"></status>
</kw>
<msg timestamp="20201105 13:20:29.400" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:20:29.400" starttime="20201105 13:20:29.398"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:29.401" starttime="20201105 13:20:29.397"></status>
</kw>
<msg timestamp="20201105 13:20:29.401" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 13:20:29.401" starttime="20201105 13:20:29.397"></status>
</kw>
<msg timestamp="20201105 13:20:29.401" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 13:20:29.401" starttime="20201105 13:20:29.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:29.404" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:32.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:32.286" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:32.286" starttime="20201105 13:20:29.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:32.287" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:20:32.287" starttime="20201105 13:20:32.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:32.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:32.288" starttime="20201105 13:20:32.287"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:32.288" starttime="20201105 13:20:29.402"></status>
</kw>
<msg timestamp="20201105 13:20:32.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:32.288" starttime="20201105 13:20:29.401"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:32.288" starttime="20201105 13:20:29.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:32.292" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:35.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:35.161" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 13:20:35.161" starttime="20201105 13:20:32.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:35.162" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 13:20:35.162" starttime="20201105 13:20:35.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:35.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:35.163" starttime="20201105 13:20:35.162"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:35.163" starttime="20201105 13:20:32.289"></status>
</kw>
<msg timestamp="20201105 13:20:35.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:35.163" starttime="20201105 13:20:32.289"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:35.163" starttime="20201105 13:20:32.288"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:20:35.164" critical="yes" starttime="20201105 13:20:29.395"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201105 13:20:35.165" starttime="20201105 13:19:55.855"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-o3fs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:20:52.356" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:20:52.356" starttime="20201105 13:20:52.356"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:20:52.357" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:20:52.357" starttime="20201105 13:20:52.356"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:52.357" starttime="20201105 13:20:52.355"></status>
</kw>
<msg timestamp="20201105 13:20:52.357" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:20:52.357" starttime="20201105 13:20:52.355"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:52.357" starttime="20201105 13:20:52.354"></status>
</kw>
<msg timestamp="20201105 13:20:52.357" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:20:52.358" starttime="20201105 13:20:52.354"></status>
</kw>
<msg timestamp="20201105 13:20:52.358" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:20:52.358" starttime="20201105 13:20:52.353"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 13:20:52.358" level="INFO">${random} = 46596</msg>
<status status="PASS" endtime="20201105 13:20:52.358" starttime="20201105 13:20:52.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:52.364" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-46596 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:56.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:56.176" level="INFO">${output} = 2020-11-05 13:20:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:20:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 13:20:56.176" starttime="20201105 13:20:52.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:56.178" level="INFO">2020-11-05 13:20:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:20:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 13:20:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 13:20:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 13:20:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DCE9D42275D5-&gt;3997fcec-5593-4c87-8744-c408fe1dc74a
2020-11-05 13:20:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 13:20:56.178" starttime="20201105 13:20:56.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:56.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:56.178" starttime="20201105 13:20:56.178"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:56.179" starttime="20201105 13:20:52.359"></status>
</kw>
<msg timestamp="20201105 13:20:56.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:56.179" starttime="20201105 13:20:52.359"></status>
</kw>
<msg timestamp="20201105 13:20:56.179" level="INFO">${result} = 2020-11-05 13:20:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 13:20:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 13:20:56.179" starttime="20201105 13:20:52.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:56.183" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:57.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:57.961" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 13:20 o3fs://bucket1.volume1.om/ozone-46596
dr...</msg>
<status status="PASS" endtime="20201105 13:20:57.961" starttime="20201105 13:20:56.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:57.962" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 13:20 o3fs://bucket1.volume1.om/ozone-46596
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:20 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 13:20:57.962" starttime="20201105 13:20:57.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:57.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:57.963" starttime="20201105 13:20:57.963"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:57.963" starttime="20201105 13:20:56.181"></status>
</kw>
<msg timestamp="20201105 13:20:57.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:57.963" starttime="20201105 13:20:56.180"></status>
</kw>
<msg timestamp="20201105 13:20:57.964" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 13:20 o3fs://bucket1.volume1.om/ozone-46596
dr...</msg>
<status status="PASS" endtime="20201105 13:20:57.964" starttime="20201105 13:20:56.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 13:20:57.964" starttime="20201105 13:20:57.964"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 13:20:57.964" critical="yes" starttime="20201105 13:20:52.352"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 13:20:57.966" starttime="20201105 13:20:52.308"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s3" name="Kinit-Hadoop">
<test id="s1-s3-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:47.744" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:47.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:47.745" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201105 13:20:47.745" starttime="20201105 13:20:47.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:47.746" level="INFO">rm</msg>
<status status="PASS" endtime="20201105 13:20:47.746" starttime="20201105 13:20:47.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:47.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:47.747" starttime="20201105 13:20:47.746"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:47.747" starttime="20201105 13:20:47.738"></status>
</kw>
<msg timestamp="20201105 13:20:47.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:47.747" starttime="20201105 13:20:47.738"></status>
</kw>
<msg timestamp="20201105 13:20:47.747" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201105 13:20:47.747" starttime="20201105 13:20:47.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:20:47.748" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:20:47.748" starttime="20201105 13:20:47.748"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:20:47.753" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:20:47.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:20:47.777" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:20:47.777" starttime="20201105 13:20:47.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:20:47.778" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:20:47.778" starttime="20201105 13:20:47.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:20:47.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:20:47.778" starttime="20201105 13:20:47.778"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:47.779" starttime="20201105 13:20:47.750"></status>
</kw>
<msg timestamp="20201105 13:20:47.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:20:47.779" starttime="20201105 13:20:47.749"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:47.779" starttime="20201105 13:20:47.749"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:47.779" starttime="20201105 13:20:47.749"></status>
</kw>
<status status="PASS" endtime="20201105 13:20:47.779" starttime="20201105 13:20:47.737"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:20:47.779" critical="yes" starttime="20201105 13:20:47.736"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201105 13:20:47.780" starttime="20201105 13:20:47.696"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s4" name="Kinit">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:19:51.306" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:19:51.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:19:51.307" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201105 13:19:51.308" starttime="20201105 13:19:51.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:19:51.308" level="INFO">om</msg>
<status status="PASS" endtime="20201105 13:19:51.308" starttime="20201105 13:19:51.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:19:51.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:19:51.309" starttime="20201105 13:19:51.309"></status>
</kw>
<status status="PASS" endtime="20201105 13:19:51.309" starttime="20201105 13:19:51.302"></status>
</kw>
<msg timestamp="20201105 13:19:51.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:19:51.309" starttime="20201105 13:19:51.301"></status>
</kw>
<msg timestamp="20201105 13:19:51.310" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201105 13:19:51.310" starttime="20201105 13:19:51.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 13:19:51.310" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 13:19:51.310" starttime="20201105 13:19:51.310"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:19:51.313" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:19:51.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:19:51.330" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 13:19:51.330" starttime="20201105 13:19:51.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:19:51.331" level="INFO"></msg>
<status status="PASS" endtime="20201105 13:19:51.331" starttime="20201105 13:19:51.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:19:51.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:19:51.331" starttime="20201105 13:19:51.331"></status>
</kw>
<status status="PASS" endtime="20201105 13:19:51.332" starttime="20201105 13:19:51.311"></status>
</kw>
<msg timestamp="20201105 13:19:51.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:19:51.332" starttime="20201105 13:19:51.311"></status>
</kw>
<status status="PASS" endtime="20201105 13:19:51.332" starttime="20201105 13:19:51.311"></status>
</kw>
<status status="PASS" endtime="20201105 13:19:51.332" starttime="20201105 13:19:51.310"></status>
</kw>
<status status="PASS" endtime="20201105 13:19:51.332" starttime="20201105 13:19:51.300"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 13:19:51.332" critical="yes" starttime="20201105 13:19:51.300"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201105 13:19:51.333" starttime="20201105 13:19:51.258"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s5" name="mapreduce-o3fs">
<test id="s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:21:02.490" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:21:02.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:21:02.494" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:21:02.494" starttime="20201105 13:21:02.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:21:02.495" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:21:02.495" starttime="20201105 13:21:02.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:21:02.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:21:02.496" starttime="20201105 13:21:02.495"></status>
</kw>
<status status="PASS" endtime="20201105 13:21:02.496" starttime="20201105 13:21:02.485"></status>
</kw>
<msg timestamp="20201105 13:21:02.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:21:02.496" starttime="20201105 13:21:02.485"></status>
</kw>
<msg timestamp="20201105 13:21:02.496" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:21:02.496" starttime="20201105 13:21:02.484"></status>
</kw>
<msg timestamp="20201105 13:21:02.497" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:21:02.497" starttime="20201105 13:21:02.484"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:21:02.501" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:21:02.501" starttime="20201105 13:21:02.500"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:21:02.501" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:21:02.501" starttime="20201105 13:21:02.501"></status>
</kw>
<status status="PASS" endtime="20201105 13:21:02.501" starttime="20201105 13:21:02.499"></status>
</kw>
<msg timestamp="20201105 13:21:02.501" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:21:02.501" starttime="20201105 13:21:02.499"></status>
</kw>
<status status="PASS" endtime="20201105 13:21:02.502" starttime="20201105 13:21:02.498"></status>
</kw>
<msg timestamp="20201105 13:21:02.502" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:21:02.502" starttime="20201105 13:21:02.497"></status>
</kw>
<msg timestamp="20201105 13:21:02.502" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:21:02.502" starttime="20201105 13:21:02.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:21:02.506" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:25:02.485" level="FAIL">Test timeout 4 minutes exceeded.</msg>
<status status="FAIL" endtime="20201105 13:25:02.485" starttime="20201105 13:21:02.503"></status>
</kw>
<status status="FAIL" endtime="20201105 13:25:02.486" starttime="20201105 13:21:02.503"></status>
</kw>
<msg timestamp="20201105 13:25:02.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 13:25:02.486" starttime="20201105 13:21:02.503"></status>
</kw>
<status status="FAIL" endtime="20201105 13:25:02.486" starttime="20201105 13:21:02.502"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201105 13:25:02.486" critical="yes" starttime="20201105 13:21:02.483">Test timeout 4 minutes exceeded.</status>
</test>
<test id="s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:25:02.492" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:25:02.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 13:25:02.498" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:25:02.498" starttime="20201105 13:25:02.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 13:25:02.499" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:25:02.499" starttime="20201105 13:25:02.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 13:25:02.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 13:25:02.499" starttime="20201105 13:25:02.499"></status>
</kw>
<status status="PASS" endtime="20201105 13:25:02.500" starttime="20201105 13:25:02.489"></status>
</kw>
<msg timestamp="20201105 13:25:02.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 13:25:02.500" starttime="20201105 13:25:02.489"></status>
</kw>
<msg timestamp="20201105 13:25:02.500" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:25:02.500" starttime="20201105 13:25:02.488"></status>
</kw>
<msg timestamp="20201105 13:25:02.500" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 13:25:02.500" starttime="20201105 13:25:02.488"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 13:25:02.501" level="INFO">${random} = 23</msg>
<status status="PASS" endtime="20201105 13:25:02.501" starttime="20201105 13:25:02.500"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:25:02.504" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:25:02.504" starttime="20201105 13:25:02.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:25:02.505" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:25:02.505" starttime="20201105 13:25:02.504"></status>
</kw>
<status status="PASS" endtime="20201105 13:25:02.505" starttime="20201105 13:25:02.503"></status>
</kw>
<msg timestamp="20201105 13:25:02.505" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:25:02.505" starttime="20201105 13:25:02.503"></status>
</kw>
<status status="PASS" endtime="20201105 13:25:02.505" starttime="20201105 13:25:02.502"></status>
</kw>
<msg timestamp="20201105 13:25:02.505" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:25:02.505" starttime="20201105 13:25:02.502"></status>
</kw>
<msg timestamp="20201105 13:25:02.506" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 13:25:02.506" starttime="20201105 13:25:02.501"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:25:02.509" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:25:02.509" starttime="20201105 13:25:02.508"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:25:02.509" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:25:02.509" starttime="20201105 13:25:02.509"></status>
</kw>
<status status="PASS" endtime="20201105 13:25:02.509" starttime="20201105 13:25:02.508"></status>
</kw>
<msg timestamp="20201105 13:25:02.510" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:25:02.510" starttime="20201105 13:25:02.507"></status>
</kw>
<status status="PASS" endtime="20201105 13:25:02.510" starttime="20201105 13:25:02.507"></status>
</kw>
<msg timestamp="20201105 13:25:02.510" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 13:25:02.510" starttime="20201105 13:25:02.506"></status>
</kw>
<msg timestamp="20201105 13:25:02.510" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 13:25:02.510" starttime="20201105 13:25:02.506"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 13:25:02.513" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 13:25:02.513" starttime="20201105 13:25:02.513"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 13:25:02.514" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 13:25:02.514" starttime="20201105 13:25:02.513"></status>
</kw>
<status status="PASS" endtime="20201105 13:25:02.514" starttime="20201105 13:25:02.512"></status>
</kw>
<msg timestamp="20201105 13:25:02.514" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 13:25:02.514" starttime="20201105 13:25:02.512"></status>
</kw>
<status status="PASS" endtime="20201105 13:25:02.514" starttime="20201105 13:25:02.511"></status>
</kw>
<msg timestamp="20201105 13:25:02.514" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-23.txt</msg>
<status status="PASS" endtime="20201105 13:25:02.514" starttime="20201105 13:25:02.511"></status>
</kw>
<msg timestamp="20201105 13:25:02.515" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-23.txt</msg>
<status status="PASS" endtime="20201105 13:25:02.515" starttime="20201105 13:25:02.510"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 13:25:02.518" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-23.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 13:29:02.488" level="FAIL">Test timeout 4 minutes exceeded.</msg>
<status status="FAIL" endtime="20201105 13:29:02.488" starttime="20201105 13:25:02.516"></status>
</kw>
<status status="FAIL" endtime="20201105 13:29:02.489" starttime="20201105 13:25:02.516"></status>
</kw>
<msg timestamp="20201105 13:29:02.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 13:29:02.489" starttime="20201105 13:25:02.515"></status>
</kw>
<status status="FAIL" endtime="20201105 13:29:02.489" starttime="20201105 13:25:02.515"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201105 13:29:02.490" critical="yes" starttime="20201105 13:25:02.487">Test timeout 4 minutes exceeded.</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201105 13:29:02.491" starttime="20201105 13:21:02.439"></status>
</suite>
<status status="FAIL" elapsedtime="525179" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="5">Critical Tests</stat>
<stat fail="2" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="ozonesecure-mr" pass="5">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s4" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="2" id="s1-s5" name="mapreduce-o3fs" pass="0">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
