<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201124 15:33:39.833" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:29:37.720" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:29:41.890" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 15:29:41.891" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:29:41.891" starttime="20201124 15:29:37.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:29:41.892" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 15:29:41.892" starttime="20201124 15:29:41.891"></status>
</kw>
<msg timestamp="20201124 15:29:41.892" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:29:41.892" starttime="20201124 15:29:37.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:29:41.898" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:29:45.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:29:45.645" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:29:45.645" starttime="20201124 15:29:41.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:29:45.646" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:29:45.646" starttime="20201124 15:29:45.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:29:45.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:29:45.647" starttime="20201124 15:29:45.647"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:45.647" starttime="20201124 15:29:41.894"></status>
</kw>
<msg timestamp="20201124 15:29:45.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:29:45.648" starttime="20201124 15:29:41.894"></status>
</kw>
<msg timestamp="20201124 15:29:45.648" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:29:45.648" starttime="20201124 15:29:41.893"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201124 15:29:45.649" starttime="20201124 15:29:45.648"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:45.649" starttime="20201124 15:29:41.893"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:45.649" starttime="20201124 15:29:41.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:29:45.653" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:29:49.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:29:49.132" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:29:49.132" starttime="20201124 15:29:45.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:29:49.133" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:29:49.133" starttime="20201124 15:29:49.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:29:49.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:29:49.134" starttime="20201124 15:29:49.133"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:49.134" starttime="20201124 15:29:45.651"></status>
</kw>
<msg timestamp="20201124 15:29:49.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:29:49.134" starttime="20201124 15:29:45.650"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:49.134" starttime="20201124 15:29:45.650"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:49.135" starttime="20201124 15:29:45.649"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:49.135" starttime="20201124 15:29:45.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 15:29:49.135" starttime="20201124 15:29:49.135"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:29:49.139" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:29:52.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:29:52.699" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:29:52.699" starttime="20201124 15:29:49.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:29:52.700" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:29:48.939Z",
  "modificationTime" : "2020-11-24T15:29:48.939Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 15:29:52.700" starttime="20201124 15:29:52.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:29:52.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:29:52.701" starttime="20201124 15:29:52.700"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:52.701" starttime="20201124 15:29:49.136"></status>
</kw>
<msg timestamp="20201124 15:29:52.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:29:52.701" starttime="20201124 15:29:49.136"></status>
</kw>
<msg timestamp="20201124 15:29:52.702" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:29:52.702" starttime="20201124 15:29:49.135"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201124 15:29:52.702" starttime="20201124 15:29:52.702"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:29:52.706" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:29:52.706" starttime="20201124 15:29:52.706"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:29:52.707" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:29:52.707" starttime="20201124 15:29:52.706"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:52.707" starttime="20201124 15:29:52.705"></status>
</kw>
<msg timestamp="20201124 15:29:52.707" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:29:52.707" starttime="20201124 15:29:52.705"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:52.707" starttime="20201124 15:29:52.704"></status>
</kw>
<msg timestamp="20201124 15:29:52.708" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 15:29:52.708" starttime="20201124 15:29:52.703"></status>
</kw>
<msg timestamp="20201124 15:29:52.708" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 15:29:52.708" starttime="20201124 15:29:52.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:29:52.712" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:29:56.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:29:56.632" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:29:56.632" starttime="20201124 15:29:52.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:29:56.634" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:29:56.634" starttime="20201124 15:29:56.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:29:56.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:29:56.634" starttime="20201124 15:29:56.634"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:56.635" starttime="20201124 15:29:52.709"></status>
</kw>
<msg timestamp="20201124 15:29:56.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:29:56.635" starttime="20201124 15:29:52.708"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:56.635" starttime="20201124 15:29:52.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:29:56.639" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:30:04.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:30:04.444" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:30:04.444" starttime="20201124 15:29:56.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:30:04.445" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:30:04.445" starttime="20201124 15:30:04.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:30:04.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:30:04.446" starttime="20201124 15:30:04.445"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:04.446" starttime="20201124 15:29:56.636"></status>
</kw>
<msg timestamp="20201124 15:30:04.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:30:04.446" starttime="20201124 15:29:56.636"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:04.447" starttime="20201124 15:29:56.635"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:30:04.450" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:30:09.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:30:09.954" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:30:09.954" starttime="20201124 15:30:04.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:30:09.955" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:30:09.956" starttime="20201124 15:30:09.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:30:09.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:30:09.956" starttime="20201124 15:30:09.956"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:09.957" starttime="20201124 15:30:04.448"></status>
</kw>
<msg timestamp="20201124 15:30:09.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:30:09.957" starttime="20201124 15:30:04.447"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:09.957" starttime="20201124 15:30:04.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:30:09.965" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:30:15.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:30:15.231" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:30:15.231" starttime="20201124 15:30:09.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:30:15.232" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:30:15.232" starttime="20201124 15:30:15.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:30:15.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:30:15.233" starttime="20201124 15:30:15.232"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:15.233" starttime="20201124 15:30:09.958"></status>
</kw>
<msg timestamp="20201124 15:30:15.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:30:15.233" starttime="20201124 15:30:09.958"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:15.233" starttime="20201124 15:30:09.957"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:30:15.233" critical="yes" starttime="20201124 15:29:37.714"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:30:15.239" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:30:15.239" starttime="20201124 15:30:15.238"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:30:15.239" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:30:15.240" starttime="20201124 15:30:15.239"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:15.240" starttime="20201124 15:30:15.238"></status>
</kw>
<msg timestamp="20201124 15:30:15.240" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:30:15.240" starttime="20201124 15:30:15.237"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:15.241" starttime="20201124 15:30:15.237"></status>
</kw>
<msg timestamp="20201124 15:30:15.241" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:30:15.241" starttime="20201124 15:30:15.236"></status>
</kw>
<msg timestamp="20201124 15:30:15.241" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:30:15.241" starttime="20201124 15:30:15.235"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:30:15.246" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:30:18.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:30:18.413" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:30:18.413" starttime="20201124 15:30:15.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:30:18.414" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:30:18.414" starttime="20201124 15:30:18.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:30:18.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:30:18.415" starttime="20201124 15:30:18.415"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:18.415" starttime="20201124 15:30:15.242"></status>
</kw>
<msg timestamp="20201124 15:30:18.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:30:18.416" starttime="20201124 15:30:15.242"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:18.416" starttime="20201124 15:30:15.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:30:18.430" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:30:22.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:30:22.085" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:30:22.085" starttime="20201124 15:30:18.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:30:22.086" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:30:22.086" starttime="20201124 15:30:22.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:30:22.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:30:22.086" starttime="20201124 15:30:22.086"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:22.087" starttime="20201124 15:30:18.417"></status>
</kw>
<msg timestamp="20201124 15:30:22.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:30:22.087" starttime="20201124 15:30:18.417"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:22.087" starttime="20201124 15:30:18.416"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:30:22.087" critical="yes" starttime="20201124 15:30:15.235"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201124 15:30:22.089" starttime="20201124 15:29:37.665"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:32:09.637" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:32:09.637" starttime="20201124 15:32:09.636"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:32:09.637" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:32:09.637" starttime="20201124 15:32:09.637"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:09.638" starttime="20201124 15:32:09.636"></status>
</kw>
<msg timestamp="20201124 15:32:09.638" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:32:09.638" starttime="20201124 15:32:09.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:32:09.639" starttime="20201124 15:32:09.638"></status>
</kw>
<msg timestamp="20201124 15:32:09.639" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:32:09.639" starttime="20201124 15:32:09.638"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:09.639" starttime="20201124 15:32:09.635"></status>
</kw>
<msg timestamp="20201124 15:32:09.639" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:32:09.639" starttime="20201124 15:32:09.634"></status>
</kw>
<msg timestamp="20201124 15:32:09.639" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:32:09.639" starttime="20201124 15:32:09.633"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:32:09.640" level="INFO">${random} = 03597</msg>
<status status="PASS" endtime="20201124 15:32:09.640" starttime="20201124 15:32:09.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:32:09.645" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-03597 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:32:13.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:32:13.436" level="INFO">${output} = 2020-11-24 15:32:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:32:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 15:32:13.436" starttime="20201124 15:32:09.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:32:13.437" level="INFO">2020-11-24 15:32:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:32:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:32:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:32:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:32:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CC0B87AC147F-&gt;bbc5dcc8-3598-4d49-ac27-7e17affdc584
2020-11-24 15:32:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 15:32:13.438" starttime="20201124 15:32:13.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:32:13.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:32:13.438" starttime="20201124 15:32:13.438"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:13.438" starttime="20201124 15:32:09.641"></status>
</kw>
<msg timestamp="20201124 15:32:13.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:32:13.439" starttime="20201124 15:32:09.641"></status>
</kw>
<msg timestamp="20201124 15:32:13.439" level="INFO">${result} = 2020-11-24 15:32:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:32:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 15:32:13.439" starttime="20201124 15:32:09.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:32:13.443" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:32:15.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:32:15.563" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:30 ofs://om/volume1/bucket1/ozone-00211
-rw-...</msg>
<status status="PASS" endtime="20201124 15:32:15.563" starttime="20201124 15:32:13.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:32:15.564" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:30 ofs://om/volume1/bucket1/ozone-00211
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:32 ofs://om/volume1/bucket1/ozone-03597
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:30 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:31 ofs://om/volume1/bucket1/wordcount-52.txt</msg>
<status status="PASS" endtime="20201124 15:32:15.564" starttime="20201124 15:32:15.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:32:15.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:32:15.565" starttime="20201124 15:32:15.564"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:15.565" starttime="20201124 15:32:13.441"></status>
</kw>
<msg timestamp="20201124 15:32:15.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:32:15.565" starttime="20201124 15:32:13.441"></status>
</kw>
<msg timestamp="20201124 15:32:15.566" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:30 ofs://om/volume1/bucket1/ozone-00211
-rw-...</msg>
<status status="PASS" endtime="20201124 15:32:15.566" starttime="20201124 15:32:13.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:32:15.566" starttime="20201124 15:32:15.566"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:32:15.567" critical="yes" starttime="20201124 15:32:09.632"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 15:32:15.567" starttime="20201124 15:32:09.581"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:30:43.478" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:30:43.478" starttime="20201124 15:30:43.477"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:30:43.478" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:30:43.478" starttime="20201124 15:30:43.478"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:43.478" starttime="20201124 15:30:43.477"></status>
</kw>
<msg timestamp="20201124 15:30:43.478" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:30:43.478" starttime="20201124 15:30:43.476"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:43.479" starttime="20201124 15:30:43.475"></status>
</kw>
<msg timestamp="20201124 15:30:43.479" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:30:43.479" starttime="20201124 15:30:43.475"></status>
</kw>
<msg timestamp="20201124 15:30:43.479" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:30:43.479" starttime="20201124 15:30:43.474"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:30:43.480" level="INFO">${random} = 00211</msg>
<status status="PASS" endtime="20201124 15:30:43.480" starttime="20201124 15:30:43.479"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:30:43.486" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-00211 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:30:47.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:30:47.563" level="INFO">${output} = 2020-11-24 15:30:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:30:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 15:30:47.563" starttime="20201124 15:30:43.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:30:47.565" level="INFO">2020-11-24 15:30:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:30:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:30:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:30:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:30:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A6A6358CE83F-&gt;bbc5dcc8-3598-4d49-ac27-7e17affdc584
2020-11-24 15:30:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 15:30:47.565" starttime="20201124 15:30:47.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:30:47.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:30:47.565" starttime="20201124 15:30:47.565"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:47.566" starttime="20201124 15:30:43.481"></status>
</kw>
<msg timestamp="20201124 15:30:47.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:30:47.566" starttime="20201124 15:30:43.480"></status>
</kw>
<msg timestamp="20201124 15:30:47.566" level="INFO">${result} = 2020-11-24 15:30:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:30:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 15:30:47.566" starttime="20201124 15:30:43.480"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:30:47.571" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:30:49.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:30:49.636" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:30 o3fs://bucket1.volume1.om/ozone-00211
dr...</msg>
<status status="PASS" endtime="20201124 15:30:49.636" starttime="20201124 15:30:47.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:30:49.637" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:30 o3fs://bucket1.volume1.om/ozone-00211
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:30 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:30:49.637" starttime="20201124 15:30:49.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:30:49.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:30:49.638" starttime="20201124 15:30:49.637"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:49.638" starttime="20201124 15:30:47.568"></status>
</kw>
<msg timestamp="20201124 15:30:49.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:30:49.638" starttime="20201124 15:30:47.567"></status>
</kw>
<msg timestamp="20201124 15:30:49.638" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:30 o3fs://bucket1.volume1.om/ozone-00211
dr...</msg>
<status status="PASS" endtime="20201124 15:30:49.639" starttime="20201124 15:30:47.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:30:49.639" starttime="20201124 15:30:49.639"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:30:49.639" critical="yes" starttime="20201124 15:30:43.473"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 15:30:49.640" starttime="20201124 15:30:43.416"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:30:38.217" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:30:38.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:30:38.221" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201124 15:30:38.221" starttime="20201124 15:30:38.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:30:38.222" level="INFO">rm</msg>
<status status="PASS" endtime="20201124 15:30:38.222" starttime="20201124 15:30:38.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:30:38.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:30:38.223" starttime="20201124 15:30:38.222"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:38.223" starttime="20201124 15:30:38.209"></status>
</kw>
<msg timestamp="20201124 15:30:38.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:30:38.223" starttime="20201124 15:30:38.209"></status>
</kw>
<msg timestamp="20201124 15:30:38.223" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201124 15:30:38.223" starttime="20201124 15:30:38.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:30:38.225" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:30:38.225" starttime="20201124 15:30:38.224"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:30:38.230" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:30:38.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:30:38.254" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:30:38.254" starttime="20201124 15:30:38.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:30:38.255" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:30:38.255" starttime="20201124 15:30:38.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:30:38.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:30:38.256" starttime="20201124 15:30:38.255"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:38.256" starttime="20201124 15:30:38.226"></status>
</kw>
<msg timestamp="20201124 15:30:38.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:30:38.257" starttime="20201124 15:30:38.226"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:38.257" starttime="20201124 15:30:38.226"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:38.257" starttime="20201124 15:30:38.225"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:38.257" starttime="20201124 15:30:38.208"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:30:38.258" critical="yes" starttime="20201124 15:30:38.207"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201124 15:30:38.259" starttime="20201124 15:30:38.160"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:29:32.404" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:29:32.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:29:32.405" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201124 15:29:32.405" starttime="20201124 15:29:32.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:29:32.406" level="INFO">om</msg>
<status status="PASS" endtime="20201124 15:29:32.406" starttime="20201124 15:29:32.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:29:32.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:29:32.407" starttime="20201124 15:29:32.407"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:32.407" starttime="20201124 15:29:32.398"></status>
</kw>
<msg timestamp="20201124 15:29:32.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:29:32.407" starttime="20201124 15:29:32.398"></status>
</kw>
<msg timestamp="20201124 15:29:32.408" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201124 15:29:32.408" starttime="20201124 15:29:32.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:29:32.408" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:29:32.408" starttime="20201124 15:29:32.408"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:29:32.413" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:29:32.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:29:32.431" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:29:32.431" starttime="20201124 15:29:32.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:29:32.432" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:29:32.432" starttime="20201124 15:29:32.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:29:32.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:29:32.433" starttime="20201124 15:29:32.432"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:32.433" starttime="20201124 15:29:32.410"></status>
</kw>
<msg timestamp="20201124 15:29:32.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:29:32.433" starttime="20201124 15:29:32.410"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:32.433" starttime="20201124 15:29:32.409"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:32.433" starttime="20201124 15:29:32.409"></status>
</kw>
<status status="PASS" endtime="20201124 15:29:32.434" starttime="20201124 15:29:32.397"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:29:32.434" critical="yes" starttime="20201124 15:29:32.396"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201124 15:29:32.435" starttime="20201124 15:29:32.347"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:32:20.676" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:32:20.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:32:20.681" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:32:20.682" starttime="20201124 15:32:20.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:32:20.682" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:32:20.682" starttime="20201124 15:32:20.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:32:20.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:32:20.683" starttime="20201124 15:32:20.683"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:20.683" starttime="20201124 15:32:20.672"></status>
</kw>
<msg timestamp="20201124 15:32:20.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:32:20.683" starttime="20201124 15:32:20.672"></status>
</kw>
<msg timestamp="20201124 15:32:20.684" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:32:20.684" starttime="20201124 15:32:20.671"></status>
</kw>
<msg timestamp="20201124 15:32:20.684" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:32:20.684" starttime="20201124 15:32:20.671"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:32:20.687" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:32:20.688" starttime="20201124 15:32:20.687"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:32:20.688" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:32:20.688" starttime="20201124 15:32:20.688"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:20.688" starttime="20201124 15:32:20.686"></status>
</kw>
<msg timestamp="20201124 15:32:20.688" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:32:20.689" starttime="20201124 15:32:20.686"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:32:20.689" starttime="20201124 15:32:20.689"></status>
</kw>
<msg timestamp="20201124 15:32:20.689" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:32:20.690" starttime="20201124 15:32:20.689"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:20.690" starttime="20201124 15:32:20.685"></status>
</kw>
<msg timestamp="20201124 15:32:20.690" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:32:20.690" starttime="20201124 15:32:20.685"></status>
</kw>
<msg timestamp="20201124 15:32:20.690" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:32:20.690" starttime="20201124 15:32:20.684"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:32:20.695" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:32:55.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:32:55.212" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:32:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:32:22 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 15:32:55.212" starttime="20201124 15:32:20.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:32:55.213" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:32:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:32:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:32:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:32:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:32:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1E6C7BC0ED23-&gt;bbc5dcc8-3598-4d49-ac27-7e17affdc584
2020-11-24 15:32:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 15:32:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-24 15:32:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-24 15:32:24 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231944829, maxDate=1606836744829, sequenceNumber=3, masterKeyId=2))
2020-11-24 15:32:24 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e0 db 89 d7 df 2e 38 e0 e3 bb f7 e1 2e 40 03 48 01 5a 0d 32 38 31 32 30 37 35 31 39 34 38 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-24 15:32:24 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231944829, maxDate=1606836744829, sequenceNumber=3, masterKeyId=2)
2020-11-24 15:32:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:32:25 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:32:27 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:32:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606231726706_0003
2020-11-24 15:32:28 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231944829, maxDate=1606836744829, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e0 db 89 d7 df 2e 38 e0 e3 bb f7 e1 2e 40 03 48 01 5a 0d 32 38 31 32 30 37 35 31 39 34 38 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-24 15:32:28 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 15:32:28 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 15:32:28 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-24 15:32:29 INFO  YarnClientImpl:329 - Submitted application application_1606231726706_0003
2020-11-24 15:32:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606231726706_0003/
2020-11-24 15:32:29 INFO  Job:1619 - Running job: job_1606231726706_0003
2020-11-24 15:32:36 INFO  Job:1640 - Job job_1606231726706_0003 running in uber mode : false
2020-11-24 15:32:36 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:32:47 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:32:48 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:32:49 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:32:53 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:32:54 INFO  Job:1658 - Job job_1606231726706_0003 completed successfully
2020-11-24 15:32:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065765
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45624
		Total time spent by all reduces in occupied slots (ms)=7656
		Total time spent by all map tasks (ms)=22812
		Total time spent by all reduce tasks (ms)=3828
		Total vcore-milliseconds taken by all map tasks=22812
		Total vcore-milliseconds taken by all reduce tasks=3828
		Total megabyte-milliseconds taken by all map tasks=46718976
		Total megabyte-milliseconds taken by all reduce tasks=7839744
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1118
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1526931456
		Virtual memory (bytes) snapshot=14054531072
		Total committed heap usage (bytes)=1403518976
		Peak Map Physical memory (bytes)=388599808
		Peak Map Virtual memory (bytes)=3510272000
		Peak Reduce Physical memory (bytes)=375382016
		Peak Reduce Virtual memory (bytes)=3526402048
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.595 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 15:32:55.214" starttime="20201124 15:32:55.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:32:55.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:32:55.214" starttime="20201124 15:32:55.214"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:55.215" starttime="20201124 15:32:20.691"></status>
</kw>
<msg timestamp="20201124 15:32:55.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:32:55.215" starttime="20201124 15:32:20.691"></status>
</kw>
<msg timestamp="20201124 15:32:55.215" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:32:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:32:22 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 15:32:55.215" starttime="20201124 15:32:20.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:32:55.216" starttime="20201124 15:32:55.215"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:32:55.216" critical="yes" starttime="20201124 15:32:20.671"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:32:55.223" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:32:55.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:32:55.227" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:32:55.228" starttime="20201124 15:32:55.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:32:55.228" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:32:55.229" starttime="20201124 15:32:55.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:32:55.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:32:55.229" starttime="20201124 15:32:55.229"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:55.229" starttime="20201124 15:32:55.219"></status>
</kw>
<msg timestamp="20201124 15:32:55.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:32:55.230" starttime="20201124 15:32:55.218"></status>
</kw>
<msg timestamp="20201124 15:32:55.230" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:32:55.230" starttime="20201124 15:32:55.218"></status>
</kw>
<msg timestamp="20201124 15:32:55.230" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:32:55.230" starttime="20201124 15:32:55.217"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:32:55.231" level="INFO">${random} = 43</msg>
<status status="PASS" endtime="20201124 15:32:55.231" starttime="20201124 15:32:55.230"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:32:55.234" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:32:55.234" starttime="20201124 15:32:55.234"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:32:55.235" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:32:55.235" starttime="20201124 15:32:55.234"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:55.235" starttime="20201124 15:32:55.233"></status>
</kw>
<msg timestamp="20201124 15:32:55.235" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:32:55.235" starttime="20201124 15:32:55.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:32:55.236" starttime="20201124 15:32:55.236"></status>
</kw>
<msg timestamp="20201124 15:32:55.236" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:32:55.236" starttime="20201124 15:32:55.235"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:55.236" starttime="20201124 15:32:55.232"></status>
</kw>
<msg timestamp="20201124 15:32:55.237" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:32:55.237" starttime="20201124 15:32:55.232"></status>
</kw>
<msg timestamp="20201124 15:32:55.237" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:32:55.237" starttime="20201124 15:32:55.231"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:32:55.240" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:32:55.240" starttime="20201124 15:32:55.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:32:55.241" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:32:55.241" starttime="20201124 15:32:55.240"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:55.241" starttime="20201124 15:32:55.239"></status>
</kw>
<msg timestamp="20201124 15:32:55.241" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:32:55.241" starttime="20201124 15:32:55.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:32:55.242" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201124 15:32:55.242" starttime="20201124 15:32:55.242"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:32:55.243" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201124 15:32:55.243" starttime="20201124 15:32:55.242"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:55.243" starttime="20201124 15:32:55.241"></status>
</kw>
<msg timestamp="20201124 15:32:55.243" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201124 15:32:55.243" starttime="20201124 15:32:55.241"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:55.244" starttime="20201124 15:32:55.238"></status>
</kw>
<msg timestamp="20201124 15:32:55.244" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 15:32:55.244" starttime="20201124 15:32:55.237"></status>
</kw>
<msg timestamp="20201124 15:32:55.244" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 15:32:55.244" starttime="20201124 15:32:55.237"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:32:55.247" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:32:55.247" starttime="20201124 15:32:55.247"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:32:55.248" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:32:55.248" starttime="20201124 15:32:55.247"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:55.248" starttime="20201124 15:32:55.246"></status>
</kw>
<msg timestamp="20201124 15:32:55.248" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:32:55.248" starttime="20201124 15:32:55.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:32:55.250" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201124 15:32:55.250" starttime="20201124 15:32:55.249"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:32:55.250" level="INFO">${result} = /wordcount-43.txt</msg>
<status status="PASS" endtime="20201124 15:32:55.250" starttime="20201124 15:32:55.250"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:55.250" starttime="20201124 15:32:55.249"></status>
</kw>
<msg timestamp="20201124 15:32:55.251" level="INFO">${path_with_leading} = /wordcount-43.txt</msg>
<status status="PASS" endtime="20201124 15:32:55.251" starttime="20201124 15:32:55.248"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:55.251" starttime="20201124 15:32:55.245"></status>
</kw>
<msg timestamp="20201124 15:32:55.251" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-43.txt</msg>
<status status="PASS" endtime="20201124 15:32:55.251" starttime="20201124 15:32:55.245"></status>
</kw>
<msg timestamp="20201124 15:32:55.251" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-43.txt</msg>
<status status="PASS" endtime="20201124 15:32:55.251" starttime="20201124 15:32:55.244"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:32:55.256" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-43.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:33:31.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:33:31.939" level="INFO">${output} = 2020-11-24 15:32:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-24 15:32:57 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
202...</msg>
<status status="PASS" endtime="20201124 15:33:31.939" starttime="20201124 15:32:55.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:33:31.940" level="INFO">2020-11-24 15:32:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-24 15:32:57 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-24 15:32:57 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231977483, maxDate=1606836777483, sequenceNumber=4, masterKeyId=2))
2020-11-24 15:32:57 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 aa db 8b d7 df 2e 38 aa e3 bd f7 e1 2e 40 04 48 01 5a 0d 32 38 31 32 30 37 35 31 39 34 38 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-24 15:32:57 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231977483, maxDate=1606836777483, sequenceNumber=4, masterKeyId=2)
2020-11-24 15:32:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:32:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:32:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:32:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:32:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:32:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1FE0F9219C5F-&gt;bbc5dcc8-3598-4d49-ac27-7e17affdc584
2020-11-24 15:32:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:33:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:33:00 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:33:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606231726706_0004
2020-11-24 15:33:01 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231977483, maxDate=1606836777483, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 aa db 8b d7 df 2e 38 aa e3 bd f7 e1 2e 40 04 48 01 5a 0d 32 38 31 32 30 37 35 31 39 34 38 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-24 15:33:01 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 15:33:01 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 15:33:01 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-24 15:33:02 INFO  YarnClientImpl:329 - Submitted application application_1606231726706_0004
2020-11-24 15:33:02 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606231726706_0004/
2020-11-24 15:33:02 INFO  Job:1619 - Running job: job_1606231726706_0004
2020-11-24 15:33:10 INFO  Job:1640 - Job job_1606231726706_0004 running in uber mode : false
2020-11-24 15:33:10 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:33:19 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:33:21 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:33:22 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:33:25 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:33:31 INFO  Job:1658 - Job job_1606231726706_0004 completed successfully
2020-11-24 15:33:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128115
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43280
		Total time spent by all reduces in occupied slots (ms)=7858
		Total time spent by all map tasks (ms)=21640
		Total time spent by all reduce tasks (ms)=3929
		Total vcore-milliseconds taken by all map tasks=21640
		Total vcore-milliseconds taken by all reduce tasks=3929
		Total megabyte-milliseconds taken by all map tasks=44318720
		Total megabyte-milliseconds taken by all reduce tasks=8046592
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1165
		CPU time spent (ms)=7800
		Physical memory (bytes) snapshot=1458802688
		Virtual memory (bytes) snapshot=14045417472
		Total committed heap usage (bytes)=1330118656
		Peak Map Physical memory (bytes)=382152704
		Peak Map Virtual memory (bytes)=3510005760
		Peak Reduce Physical memory (bytes)=377491456
		Peak Reduce Virtual memory (bytes)=3526709248
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 15:33:31.940" starttime="20201124 15:33:31.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:33:31.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:33:31.941" starttime="20201124 15:33:31.941"></status>
</kw>
<status status="PASS" endtime="20201124 15:33:31.941" starttime="20201124 15:32:55.252"></status>
</kw>
<msg timestamp="20201124 15:33:31.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:33:31.942" starttime="20201124 15:32:55.252"></status>
</kw>
<msg timestamp="20201124 15:33:31.942" level="INFO">${output} = 2020-11-24 15:32:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-24 15:32:57 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
202...</msg>
<status status="PASS" endtime="20201124 15:33:31.942" starttime="20201124 15:32:55.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 15:33:31.943" starttime="20201124 15:33:31.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:33:31.943" starttime="20201124 15:33:31.943"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:33:31.943" critical="yes" starttime="20201124 15:32:55.217"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 15:33:31.944" starttime="20201124 15:32:20.626"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:30:54.432" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:30:54.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:30:54.436" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:30:54.436" starttime="20201124 15:30:54.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:30:54.437" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:30:54.437" starttime="20201124 15:30:54.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:30:54.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:30:54.437" starttime="20201124 15:30:54.437"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:54.438" starttime="20201124 15:30:54.427"></status>
</kw>
<msg timestamp="20201124 15:30:54.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:30:54.438" starttime="20201124 15:30:54.427"></status>
</kw>
<msg timestamp="20201124 15:30:54.438" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:30:54.438" starttime="20201124 15:30:54.426"></status>
</kw>
<msg timestamp="20201124 15:30:54.438" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:30:54.438" starttime="20201124 15:30:54.426"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:30:54.442" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:30:54.442" starttime="20201124 15:30:54.441"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:30:54.442" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:30:54.442" starttime="20201124 15:30:54.442"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:54.443" starttime="20201124 15:30:54.440"></status>
</kw>
<msg timestamp="20201124 15:30:54.443" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:30:54.443" starttime="20201124 15:30:54.440"></status>
</kw>
<status status="PASS" endtime="20201124 15:30:54.443" starttime="20201124 15:30:54.439"></status>
</kw>
<msg timestamp="20201124 15:30:54.443" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:30:54.443" starttime="20201124 15:30:54.439"></status>
</kw>
<msg timestamp="20201124 15:30:54.443" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:30:54.443" starttime="20201124 15:30:54.439"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:30:54.449" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:31:30.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:31:30.931" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:30:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:30:56 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 15:31:30.932" starttime="20201124 15:30:54.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:31:30.933" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:30:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:30:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:30:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:30:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:30:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1D06BDAA4EDB-&gt;bbc5dcc8-3598-4d49-ac27-7e17affdc584
2020-11-24 15:30:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 15:30:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-24 15:30:58 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-24 15:30:58 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231858695, maxDate=1606836658695, sequenceNumber=1, masterKeyId=2))
2020-11-24 15:30:58 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c6 b9 84 d7 df 2e 38 c6 c1 b6 f7 e1 2e 40 01 48 01 5a 0d 32 38 31 32 30 37 35 31 39 34 38 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-24 15:30:58 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231858695, maxDate=1606836658695, sequenceNumber=1, masterKeyId=2)
2020-11-24 15:30:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:30:59 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:30:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606231726706_0001
2020-11-24 15:30:59 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231858695, maxDate=1606836658695, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c6 b9 84 d7 df 2e 38 c6 c1 b6 f7 e1 2e 40 01 48 01 5a 0d 32 38 31 32 30 37 35 31 39 34 38 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-24 15:31:00 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 15:31:00 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 15:31:00 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-24 15:31:01 INFO  YarnClientImpl:329 - Submitted application application_1606231726706_0001
2020-11-24 15:31:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606231726706_0001/
2020-11-24 15:31:01 INFO  Job:1619 - Running job: job_1606231726706_0001
2020-11-24 15:31:13 INFO  Job:1640 - Job job_1606231726706_0001 running in uber mode : false
2020-11-24 15:31:13 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:31:22 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:31:24 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:31:29 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:31:30 INFO  Job:1658 - Job job_1606231726706_0001 completed successfully
2020-11-24 15:31:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065969
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46970
		Total time spent by all reduces in occupied slots (ms)=8138
		Total time spent by all map tasks (ms)=23485
		Total time spent by all reduce tasks (ms)=4069
		Total vcore-milliseconds taken by all map tasks=23485
		Total vcore-milliseconds taken by all reduce tasks=4069
		Total megabyte-milliseconds taken by all map tasks=48097280
		Total megabyte-milliseconds taken by all reduce tasks=8333312
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1218
		CPU time spent (ms)=7550
		Physical memory (bytes) snapshot=1518505984
		Virtual memory (bytes) snapshot=14057058304
		Total committed heap usage (bytes)=1383071744
		Peak Map Physical memory (bytes)=383664128
		Peak Map Virtual memory (bytes)=3510329344
		Peak Reduce Physical memory (bytes)=377593856
		Peak Reduce Virtual memory (bytes)=3529129984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.427 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 15:31:30.933" starttime="20201124 15:31:30.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:31:30.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:31:30.934" starttime="20201124 15:31:30.933"></status>
</kw>
<status status="PASS" endtime="20201124 15:31:30.934" starttime="20201124 15:30:54.444"></status>
</kw>
<msg timestamp="20201124 15:31:30.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:31:30.934" starttime="20201124 15:30:54.444"></status>
</kw>
<msg timestamp="20201124 15:31:30.935" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:30:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:30:56 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 15:31:30.935" starttime="20201124 15:30:54.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:31:30.935" starttime="20201124 15:31:30.935"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:31:30.936" critical="yes" starttime="20201124 15:30:54.426"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:31:30.943" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:31:30.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:31:30.948" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:31:30.948" starttime="20201124 15:31:30.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:31:30.949" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:31:30.949" starttime="20201124 15:31:30.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:31:30.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:31:30.950" starttime="20201124 15:31:30.949"></status>
</kw>
<status status="PASS" endtime="20201124 15:31:30.950" starttime="20201124 15:31:30.939"></status>
</kw>
<msg timestamp="20201124 15:31:30.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:31:30.950" starttime="20201124 15:31:30.938"></status>
</kw>
<msg timestamp="20201124 15:31:30.950" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:31:30.950" starttime="20201124 15:31:30.938"></status>
</kw>
<msg timestamp="20201124 15:31:30.951" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:31:30.951" starttime="20201124 15:31:30.937"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:31:30.951" level="INFO">${random} = 52</msg>
<status status="PASS" endtime="20201124 15:31:30.951" starttime="20201124 15:31:30.951"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:31:30.955" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:31:30.955" starttime="20201124 15:31:30.955"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:31:30.956" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:31:30.956" starttime="20201124 15:31:30.956"></status>
</kw>
<status status="PASS" endtime="20201124 15:31:30.956" starttime="20201124 15:31:30.954"></status>
</kw>
<msg timestamp="20201124 15:31:30.956" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:31:30.956" starttime="20201124 15:31:30.954"></status>
</kw>
<status status="PASS" endtime="20201124 15:31:30.957" starttime="20201124 15:31:30.953"></status>
</kw>
<msg timestamp="20201124 15:31:30.957" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:31:30.957" starttime="20201124 15:31:30.952"></status>
</kw>
<msg timestamp="20201124 15:31:30.957" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:31:30.957" starttime="20201124 15:31:30.951"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:31:30.960" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:31:30.960" starttime="20201124 15:31:30.960"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:31:30.961" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:31:30.961" starttime="20201124 15:31:30.960"></status>
</kw>
<status status="PASS" endtime="20201124 15:31:30.961" starttime="20201124 15:31:30.959"></status>
</kw>
<msg timestamp="20201124 15:31:30.961" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:31:30.961" starttime="20201124 15:31:30.959"></status>
</kw>
<status status="PASS" endtime="20201124 15:31:30.961" starttime="20201124 15:31:30.958"></status>
</kw>
<msg timestamp="20201124 15:31:30.962" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 15:31:30.962" starttime="20201124 15:31:30.958"></status>
</kw>
<msg timestamp="20201124 15:31:30.962" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 15:31:30.962" starttime="20201124 15:31:30.957"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:31:30.965" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:31:30.965" starttime="20201124 15:31:30.965"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:31:30.966" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:31:30.966" starttime="20201124 15:31:30.965"></status>
</kw>
<status status="PASS" endtime="20201124 15:31:30.966" starttime="20201124 15:31:30.964"></status>
</kw>
<msg timestamp="20201124 15:31:30.966" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:31:30.966" starttime="20201124 15:31:30.964"></status>
</kw>
<status status="PASS" endtime="20201124 15:31:30.966" starttime="20201124 15:31:30.963"></status>
</kw>
<msg timestamp="20201124 15:31:30.966" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-52.txt</msg>
<status status="PASS" endtime="20201124 15:31:30.967" starttime="20201124 15:31:30.963"></status>
</kw>
<msg timestamp="20201124 15:31:30.967" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-52.txt</msg>
<status status="PASS" endtime="20201124 15:31:30.967" starttime="20201124 15:31:30.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:31:30.971" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-52.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:32:03.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:32:03.678" level="INFO">${output} = 2020-11-24 15:31:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-24 15:31:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
202...</msg>
<status status="PASS" endtime="20201124 15:32:03.679" starttime="20201124 15:31:30.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:32:03.680" level="INFO">2020-11-24 15:31:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-24 15:31:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-24 15:31:33 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231893485, maxDate=1606836693485, sequenceNumber=2, masterKeyId=2))
2020-11-24 15:31:33 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f0 ca 86 d7 df 2e 38 f0 d2 b8 f7 e1 2e 40 02 48 01 5a 0d 32 38 31 32 30 37 35 31 39 34 38 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-24 15:31:33 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231893485, maxDate=1606836693485, sequenceNumber=2, masterKeyId=2)
2020-11-24 15:31:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:31:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:31:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:31:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:31:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:31:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3BF7C34C8DD3-&gt;bbc5dcc8-3598-4d49-ac27-7e17affdc584
2020-11-24 15:31:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:31:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:31:36 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:31:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606231726706_0002
2020-11-24 15:31:36 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606231893485, maxDate=1606836693485, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f0 ca 86 d7 df 2e 38 f0 d2 b8 f7 e1 2e 40 02 48 01 5a 0d 32 38 31 32 30 37 35 31 39 34 38 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-24 15:31:37 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 15:31:37 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 15:31:37 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-24 15:31:37 INFO  YarnClientImpl:329 - Submitted application application_1606231726706_0002
2020-11-24 15:31:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606231726706_0002/
2020-11-24 15:31:37 INFO  Job:1619 - Running job: job_1606231726706_0002
2020-11-24 15:31:45 INFO  Job:1640 - Job job_1606231726706_0002 running in uber mode : false
2020-11-24 15:31:45 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:31:55 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:31:57 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:31:58 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:32:02 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:32:03 INFO  Job:1658 - Job job_1606231726706_0002 completed successfully
2020-11-24 15:32:03 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128199
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44638
		Total time spent by all reduces in occupied slots (ms)=7928
		Total time spent by all map tasks (ms)=22319
		Total time spent by all reduce tasks (ms)=3964
		Total vcore-milliseconds taken by all map tasks=22319
		Total vcore-milliseconds taken by all reduce tasks=3964
		Total megabyte-milliseconds taken by all map tasks=45709312
		Total megabyte-milliseconds taken by all reduce tasks=8118272
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1099
		CPU time spent (ms)=7730
		Physical memory (bytes) snapshot=1521881088
		Virtual memory (bytes) snapshot=14062596096
		Total committed heap usage (bytes)=1379401728
		Peak Map Physical memory (bytes)=383619072
		Peak Map Virtual memory (bytes)=3514880000
		Peak Reduce Physical memory (bytes)=373784576
		Peak Reduce Virtual memory (bytes)=3527520256
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 15:32:03.680" starttime="20201124 15:32:03.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:32:03.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:32:03.681" starttime="20201124 15:32:03.680"></status>
</kw>
<status status="PASS" endtime="20201124 15:32:03.681" starttime="20201124 15:31:30.968"></status>
</kw>
<msg timestamp="20201124 15:32:03.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:32:03.681" starttime="20201124 15:31:30.967"></status>
</kw>
<msg timestamp="20201124 15:32:03.682" level="INFO">${output} = 2020-11-24 15:31:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-11-24 15:31:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
202...</msg>
<status status="PASS" endtime="20201124 15:32:03.682" starttime="20201124 15:31:30.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 15:32:03.682" starttime="20201124 15:32:03.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:32:03.683" starttime="20201124 15:32:03.682"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:32:03.683" critical="yes" starttime="20201124 15:31:30.937"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 15:32:03.684" starttime="20201124 15:30:54.383"></status>
</suite>
<status status="PASS" elapsedtime="197440" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
