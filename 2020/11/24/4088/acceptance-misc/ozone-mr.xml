<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201124 15:12:49.974" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 14:59:44.077" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 14:59:46.389" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 14:59:46.389" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 14:59:46.389" starttime="20201124 14:59:44.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 14:59:46.390" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 14:59:46.391" starttime="20201124 14:59:46.390"></status>
</kw>
<msg timestamp="20201124 14:59:46.391" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 14:59:46.391" starttime="20201124 14:59:44.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 14:59:46.396" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 14:59:48.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 14:59:48.633" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 14:59:48.633" starttime="20201124 14:59:46.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 14:59:48.634" level="INFO"></msg>
<status status="PASS" endtime="20201124 14:59:48.634" starttime="20201124 14:59:48.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 14:59:48.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 14:59:48.634" starttime="20201124 14:59:48.634"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:48.635" starttime="20201124 14:59:46.393"></status>
</kw>
<msg timestamp="20201124 14:59:48.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 14:59:48.635" starttime="20201124 14:59:46.393"></status>
</kw>
<msg timestamp="20201124 14:59:48.635" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201124 14:59:48.635" starttime="20201124 14:59:46.392"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201124 14:59:48.636" starttime="20201124 14:59:48.635"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:48.636" starttime="20201124 14:59:46.392"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:48.636" starttime="20201124 14:59:46.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 14:59:48.640" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 14:59:50.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 14:59:50.609" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 14:59:50.609" starttime="20201124 14:59:48.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 14:59:50.610" level="INFO"></msg>
<status status="PASS" endtime="20201124 14:59:50.610" starttime="20201124 14:59:50.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 14:59:50.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 14:59:50.611" starttime="20201124 14:59:50.610"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:50.611" starttime="20201124 14:59:48.638"></status>
</kw>
<msg timestamp="20201124 14:59:50.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 14:59:50.611" starttime="20201124 14:59:48.637"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:50.612" starttime="20201124 14:59:48.637"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:50.612" starttime="20201124 14:59:48.636"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:50.612" starttime="20201124 14:59:48.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 14:59:50.612" starttime="20201124 14:59:50.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 14:59:50.617" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 14:59:52.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 14:59:52.894" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T14:59:50.485Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 14:59:52.894" starttime="20201124 14:59:50.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 14:59:52.895" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T14:59:50.485Z",
  "modificationTime" : "2020-11-24T14:59:50.485Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 14:59:52.895" starttime="20201124 14:59:52.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 14:59:52.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 14:59:52.896" starttime="20201124 14:59:52.895"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:52.896" starttime="20201124 14:59:50.614"></status>
</kw>
<msg timestamp="20201124 14:59:52.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 14:59:52.896" starttime="20201124 14:59:50.613"></status>
</kw>
<msg timestamp="20201124 14:59:52.896" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T14:59:50.485Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 14:59:52.896" starttime="20201124 14:59:50.613"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201124 14:59:52.897" starttime="20201124 14:59:52.897"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 14:59:52.901" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 14:59:52.901" starttime="20201124 14:59:52.900"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 14:59:52.901" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 14:59:52.901" starttime="20201124 14:59:52.901"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:52.901" starttime="20201124 14:59:52.900"></status>
</kw>
<msg timestamp="20201124 14:59:52.902" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 14:59:52.902" starttime="20201124 14:59:52.899"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:52.902" starttime="20201124 14:59:52.899"></status>
</kw>
<msg timestamp="20201124 14:59:52.902" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 14:59:52.902" starttime="20201124 14:59:52.898"></status>
</kw>
<msg timestamp="20201124 14:59:52.902" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 14:59:52.902" starttime="20201124 14:59:52.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 14:59:52.906" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 14:59:55.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 14:59:55.061" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 14:59:55.061" starttime="20201124 14:59:52.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 14:59:55.062" level="INFO"></msg>
<status status="PASS" endtime="20201124 14:59:55.062" starttime="20201124 14:59:55.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 14:59:55.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 14:59:55.063" starttime="20201124 14:59:55.062"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:55.063" starttime="20201124 14:59:52.903"></status>
</kw>
<msg timestamp="20201124 14:59:55.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 14:59:55.063" starttime="20201124 14:59:52.903"></status>
</kw>
<status status="PASS" endtime="20201124 14:59:55.063" starttime="20201124 14:59:52.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 14:59:55.067" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:00:00.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:00:00.722" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:00:00.722" starttime="20201124 14:59:55.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:00:00.723" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:00:00.723" starttime="20201124 15:00:00.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:00:00.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:00:00.724" starttime="20201124 15:00:00.723"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:00.724" starttime="20201124 14:59:55.065"></status>
</kw>
<msg timestamp="20201124 15:00:00.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:00:00.724" starttime="20201124 14:59:55.064"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:00.724" starttime="20201124 14:59:55.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:00:00.728" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:00:04.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:00:04.880" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:00:04.880" starttime="20201124 15:00:00.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:00:04.881" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:00:04.882" starttime="20201124 15:00:04.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:00:04.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:00:04.882" starttime="20201124 15:00:04.882"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:04.882" starttime="20201124 15:00:00.725"></status>
</kw>
<msg timestamp="20201124 15:00:04.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:00:04.883" starttime="20201124 15:00:00.725"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:04.883" starttime="20201124 15:00:00.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:00:04.887" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:00:08.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:00:08.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:00:08.560" starttime="20201124 15:00:04.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:00:08.561" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:00:08.561" starttime="20201124 15:00:08.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:00:08.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:00:08.562" starttime="20201124 15:00:08.561"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:08.562" starttime="20201124 15:00:04.884"></status>
</kw>
<msg timestamp="20201124 15:00:08.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:00:08.562" starttime="20201124 15:00:04.884"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:08.562" starttime="20201124 15:00:04.883"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:00:08.563" critical="yes" starttime="20201124 14:59:44.072"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:00:08.568" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:00:08.568" starttime="20201124 15:00:08.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:00:08.569" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:00:08.569" starttime="20201124 15:00:08.568"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:08.569" starttime="20201124 15:00:08.567"></status>
</kw>
<msg timestamp="20201124 15:00:08.569" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:00:08.569" starttime="20201124 15:00:08.566"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:08.570" starttime="20201124 15:00:08.566"></status>
</kw>
<msg timestamp="20201124 15:00:08.570" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:00:08.570" starttime="20201124 15:00:08.565"></status>
</kw>
<msg timestamp="20201124 15:00:08.570" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:00:08.570" starttime="20201124 15:00:08.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:00:08.573" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:00:10.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:00:10.680" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:00:10.680" starttime="20201124 15:00:08.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:00:10.681" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:00:10.682" starttime="20201124 15:00:10.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:00:10.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:00:10.682" starttime="20201124 15:00:10.682"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:10.682" starttime="20201124 15:00:08.571"></status>
</kw>
<msg timestamp="20201124 15:00:10.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:00:10.683" starttime="20201124 15:00:08.571"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:10.683" starttime="20201124 15:00:08.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:00:10.687" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:00:12.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:00:12.700" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:00:12.700" starttime="20201124 15:00:10.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:00:12.701" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:00:12.701" starttime="20201124 15:00:12.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:00:12.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:00:12.702" starttime="20201124 15:00:12.701"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:12.702" starttime="20201124 15:00:10.684"></status>
</kw>
<msg timestamp="20201124 15:00:12.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:00:12.702" starttime="20201124 15:00:10.683"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:12.703" starttime="20201124 15:00:10.683"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:00:12.703" critical="yes" starttime="20201124 15:00:08.563"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201124 15:00:12.704" starttime="20201124 14:59:44.018"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:01:43.939" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:01:43.939" starttime="20201124 15:01:43.939"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:01:43.940" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:01:43.940" starttime="20201124 15:01:43.939"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:43.940" starttime="20201124 15:01:43.939"></status>
</kw>
<msg timestamp="20201124 15:01:43.940" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:01:43.940" starttime="20201124 15:01:43.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:01:43.941" starttime="20201124 15:01:43.941"></status>
</kw>
<msg timestamp="20201124 15:01:43.941" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:01:43.941" starttime="20201124 15:01:43.940"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:43.941" starttime="20201124 15:01:43.938"></status>
</kw>
<msg timestamp="20201124 15:01:43.941" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:01:43.941" starttime="20201124 15:01:43.937"></status>
</kw>
<msg timestamp="20201124 15:01:43.941" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:01:43.942" starttime="20201124 15:01:43.936"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:01:43.942" level="INFO">${random} = 48752</msg>
<status status="PASS" endtime="20201124 15:01:43.942" starttime="20201124 15:01:43.942"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:01:43.947" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-48752 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:01:47.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:01:47.118" level="INFO">${output} = 2020-11-24 15:01:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:01:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 ...</msg>
<status status="PASS" endtime="20201124 15:01:47.118" starttime="20201124 15:01:43.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:01:47.119" level="INFO">2020-11-24 15:01:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:01:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 15:01:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 15:01:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:01:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CF710CEF554B-&gt;6ccd5334-ecd5-4081-86fd-94f8f64fc151
2020-11-24 15:01:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 15:01:47.119" starttime="20201124 15:01:47.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:01:47.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:01:47.120" starttime="20201124 15:01:47.119"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:47.120" starttime="20201124 15:01:43.943"></status>
</kw>
<msg timestamp="20201124 15:01:47.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:01:47.120" starttime="20201124 15:01:43.943"></status>
</kw>
<msg timestamp="20201124 15:01:47.121" level="INFO">${result} = 2020-11-24 15:01:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:01:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 ...</msg>
<status status="PASS" endtime="20201124 15:01:47.121" starttime="20201124 15:01:43.942"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:01:47.125" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:01:48.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:01:48.849" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 14:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 15:01 ofs://om/volume1/bucket1/ozone-48752
-rw-...</msg>
<status status="PASS" endtime="20201124 15:01:48.849" starttime="20201124 15:01:47.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:01:48.850" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 14:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 15:01 ofs://om/volume1/bucket1/ozone-48752
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 15:00 ofs://om/volume1/bucket1/ozone-57570
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:00 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:01 ofs://om/volume1/bucket1/wordcount-72.txt</msg>
<status status="PASS" endtime="20201124 15:01:48.850" starttime="20201124 15:01:48.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:01:48.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:01:48.851" starttime="20201124 15:01:48.851"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:48.851" starttime="20201124 15:01:47.123"></status>
</kw>
<msg timestamp="20201124 15:01:48.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:01:48.852" starttime="20201124 15:01:47.122"></status>
</kw>
<msg timestamp="20201124 15:01:48.852" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 14:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 15:01 ofs://om/volume1/bucket1/ozone-48752
-rw-...</msg>
<status status="PASS" endtime="20201124 15:01:48.852" starttime="20201124 15:01:47.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:01:48.852" starttime="20201124 15:01:48.852"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:01:48.853" critical="yes" starttime="20201124 15:01:43.936"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 15:01:48.854" starttime="20201124 15:01:43.890"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:00:17.375" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:00:17.375" starttime="20201124 15:00:17.375"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:00:17.376" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:00:17.376" starttime="20201124 15:00:17.376"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:17.376" starttime="20201124 15:00:17.374"></status>
</kw>
<msg timestamp="20201124 15:00:17.376" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:00:17.376" starttime="20201124 15:00:17.374"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:17.377" starttime="20201124 15:00:17.373"></status>
</kw>
<msg timestamp="20201124 15:00:17.377" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:00:17.377" starttime="20201124 15:00:17.373"></status>
</kw>
<msg timestamp="20201124 15:00:17.377" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:00:17.377" starttime="20201124 15:00:17.372"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:00:17.378" level="INFO">${random} = 57570</msg>
<status status="PASS" endtime="20201124 15:00:17.378" starttime="20201124 15:00:17.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:00:17.384" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-57570 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:00:20.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:00:20.768" level="INFO">${output} = 2020-11-24 15:00:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:00:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 ...</msg>
<status status="PASS" endtime="20201124 15:00:20.768" starttime="20201124 15:00:17.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:00:20.769" level="INFO">2020-11-24 15:00:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:00:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 15:00:19 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 15:00:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:00:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9AE372E30E2B-&gt;6ccd5334-ecd5-4081-86fd-94f8f64fc151
2020-11-24 15:00:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 15:00:20.769" starttime="20201124 15:00:20.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:00:20.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:00:20.770" starttime="20201124 15:00:20.769"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:20.771" starttime="20201124 15:00:17.378"></status>
</kw>
<msg timestamp="20201124 15:00:20.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:00:20.771" starttime="20201124 15:00:17.378"></status>
</kw>
<msg timestamp="20201124 15:00:20.771" level="INFO">${result} = 2020-11-24 15:00:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:00:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 ...</msg>
<status status="PASS" endtime="20201124 15:00:20.771" starttime="20201124 15:00:17.378"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:00:20.778" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:00:22.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:00:22.452" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 14:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 15:00 o3fs://bucket1.volume1.om/ozone-57570
dr...</msg>
<status status="PASS" endtime="20201124 15:00:22.452" starttime="20201124 15:00:20.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:00:22.453" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 14:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 15:00 o3fs://bucket1.volume1.om/ozone-57570
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:00 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:00:22.453" starttime="20201124 15:00:22.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:00:22.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:00:22.454" starttime="20201124 15:00:22.454"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:22.454" starttime="20201124 15:00:20.773"></status>
</kw>
<msg timestamp="20201124 15:00:22.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:00:22.455" starttime="20201124 15:00:20.772"></status>
</kw>
<msg timestamp="20201124 15:00:22.455" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 14:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 15:00 o3fs://bucket1.volume1.om/ozone-57570
dr...</msg>
<status status="PASS" endtime="20201124 15:00:22.455" starttime="20201124 15:00:20.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:00:22.455" starttime="20201124 15:00:22.455"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:00:22.456" critical="yes" starttime="20201124 15:00:17.371"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 15:00:22.457" starttime="20201124 15:00:17.315"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:01:53.643" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:01:53.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:01:53.646" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:01:53.646" starttime="20201124 15:01:53.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:01:53.647" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:01:53.647" starttime="20201124 15:01:53.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:01:53.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:01:53.648" starttime="20201124 15:01:53.647"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:53.648" starttime="20201124 15:01:53.637"></status>
</kw>
<msg timestamp="20201124 15:01:53.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:01:53.648" starttime="20201124 15:01:53.636"></status>
</kw>
<msg timestamp="20201124 15:01:53.649" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:01:53.649" starttime="20201124 15:01:53.636"></status>
</kw>
<msg timestamp="20201124 15:01:53.649" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:01:53.649" starttime="20201124 15:01:53.636"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:01:53.653" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:01:53.653" starttime="20201124 15:01:53.653"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:01:53.654" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:01:53.654" starttime="20201124 15:01:53.654"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:53.654" starttime="20201124 15:01:53.652"></status>
</kw>
<msg timestamp="20201124 15:01:53.654" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:01:53.654" starttime="20201124 15:01:53.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:01:53.655" starttime="20201124 15:01:53.655"></status>
</kw>
<msg timestamp="20201124 15:01:53.655" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:01:53.655" starttime="20201124 15:01:53.655"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:53.656" starttime="20201124 15:01:53.650"></status>
</kw>
<msg timestamp="20201124 15:01:53.656" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:01:53.656" starttime="20201124 15:01:53.650"></status>
</kw>
<msg timestamp="20201124 15:01:53.656" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:01:53.656" starttime="20201124 15:01:53.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:01:53.660" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:02:29.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:02:29.325" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:01:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:01:55 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201124 15:02:29.325" starttime="20201124 15:01:53.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:02:29.326" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:01:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:01:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 15:01:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 15:01:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:01:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-35E5CAA09FA4-&gt;6ccd5334-ecd5-4081-86fd-94f8f64fc151
2020-11-24 15:01:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 15:01:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-24 15:01:57 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:01:57 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-24 15:01:57 INFO  JobSubmitter:198 - number of splits:3
2020-11-24 15:02:00 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606229951037_0003
2020-11-24 15:02:00 INFO  YarnClientImpl:273 - Submitted application application_1606229951037_0003
2020-11-24 15:02:00 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606229951037_0003/
2020-11-24 15:02:00 INFO  Job:1339 - Running job: job_1606229951037_0003
2020-11-24 15:02:07 INFO  Job:1360 - Job job_1606229951037_0003 running in uber mode : false
2020-11-24 15:02:07 INFO  Job:1367 -  map 0% reduce 0%
2020-11-24 15:02:14 INFO  Job:1367 -  map 33% reduce 0%
2020-11-24 15:02:19 INFO  Job:1367 -  map 67% reduce 0%
2020-11-24 15:02:24 INFO  Job:1367 -  map 100% reduce 0%
2020-11-24 15:02:28 INFO  Job:1367 -  map 100% reduce 100%
2020-11-24 15:02:28 INFO  Job:1378 - Job job_1606229951037_0003 completed successfully
2020-11-24 15:02:28 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610689
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39440
		Total time spent by all reduces in occupied slots (ms)=14256
		Total time spent by all map tasks (ms)=9860
		Total time spent by all reduce tasks (ms)=3564
		Total vcore-milliseconds taken by all map tasks=9860
		Total vcore-milliseconds taken by all reduce tasks=3564
		Total megabyte-milliseconds taken by all map tasks=40386560
		Total megabyte-milliseconds taken by all reduce tasks=14598144
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=588
		CPU time spent (ms)=6670
		Physical memory (bytes) snapshot=1150054400
		Virtual memory (bytes) snapshot=15782531072
		Total committed heap usage (bytes)=1052246016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.076 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 15:02:29.327" starttime="20201124 15:02:29.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:02:29.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:02:29.327" starttime="20201124 15:02:29.327"></status>
</kw>
<status status="PASS" endtime="20201124 15:02:29.327" starttime="20201124 15:01:53.657"></status>
</kw>
<msg timestamp="20201124 15:02:29.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:02:29.328" starttime="20201124 15:01:53.657"></status>
</kw>
<msg timestamp="20201124 15:02:29.328" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:01:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:01:55 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201124 15:02:29.328" starttime="20201124 15:01:53.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:02:29.329" starttime="20201124 15:02:29.328"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:02:29.329" critical="yes" starttime="20201124 15:01:53.635"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:02:29.336" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:02:29.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:02:29.341" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:02:29.341" starttime="20201124 15:02:29.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:02:29.342" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:02:29.342" starttime="20201124 15:02:29.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:02:29.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:02:29.342" starttime="20201124 15:02:29.342"></status>
</kw>
<status status="PASS" endtime="20201124 15:02:29.343" starttime="20201124 15:02:29.331"></status>
</kw>
<msg timestamp="20201124 15:02:29.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:02:29.343" starttime="20201124 15:02:29.331"></status>
</kw>
<msg timestamp="20201124 15:02:29.343" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:02:29.343" starttime="20201124 15:02:29.331"></status>
</kw>
<msg timestamp="20201124 15:02:29.343" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:02:29.343" starttime="20201124 15:02:29.330"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:02:29.344" level="INFO">${random} = 74</msg>
<status status="PASS" endtime="20201124 15:02:29.344" starttime="20201124 15:02:29.344"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:02:29.348" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:02:29.348" starttime="20201124 15:02:29.347"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:02:29.348" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:02:29.348" starttime="20201124 15:02:29.348"></status>
</kw>
<status status="PASS" endtime="20201124 15:02:29.348" starttime="20201124 15:02:29.347"></status>
</kw>
<msg timestamp="20201124 15:02:29.348" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:02:29.348" starttime="20201124 15:02:29.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:02:29.349" starttime="20201124 15:02:29.349"></status>
</kw>
<msg timestamp="20201124 15:02:29.349" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:02:29.349" starttime="20201124 15:02:29.348"></status>
</kw>
<status status="PASS" endtime="20201124 15:02:29.350" starttime="20201124 15:02:29.346"></status>
</kw>
<msg timestamp="20201124 15:02:29.350" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:02:29.350" starttime="20201124 15:02:29.345"></status>
</kw>
<msg timestamp="20201124 15:02:29.350" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:02:29.350" starttime="20201124 15:02:29.344"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:02:29.353" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:02:29.353" starttime="20201124 15:02:29.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:02:29.353" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:02:29.353" starttime="20201124 15:02:29.353"></status>
</kw>
<status status="PASS" endtime="20201124 15:02:29.354" starttime="20201124 15:02:29.352"></status>
</kw>
<msg timestamp="20201124 15:02:29.354" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:02:29.354" starttime="20201124 15:02:29.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:02:29.355" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201124 15:02:29.355" starttime="20201124 15:02:29.355"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:02:29.356" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201124 15:02:29.356" starttime="20201124 15:02:29.355"></status>
</kw>
<status status="PASS" endtime="20201124 15:02:29.356" starttime="20201124 15:02:29.354"></status>
</kw>
<msg timestamp="20201124 15:02:29.356" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201124 15:02:29.356" starttime="20201124 15:02:29.354"></status>
</kw>
<status status="PASS" endtime="20201124 15:02:29.356" starttime="20201124 15:02:29.351"></status>
</kw>
<msg timestamp="20201124 15:02:29.356" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 15:02:29.356" starttime="20201124 15:02:29.351"></status>
</kw>
<msg timestamp="20201124 15:02:29.357" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 15:02:29.357" starttime="20201124 15:02:29.350"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:02:29.360" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:02:29.360" starttime="20201124 15:02:29.359"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:02:29.360" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:02:29.360" starttime="20201124 15:02:29.360"></status>
</kw>
<status status="PASS" endtime="20201124 15:02:29.360" starttime="20201124 15:02:29.359"></status>
</kw>
<msg timestamp="20201124 15:02:29.361" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:02:29.361" starttime="20201124 15:02:29.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:02:29.362" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201124 15:02:29.362" starttime="20201124 15:02:29.361"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:02:29.362" level="INFO">${result} = /wordcount-74.txt</msg>
<status status="PASS" endtime="20201124 15:02:29.362" starttime="20201124 15:02:29.362"></status>
</kw>
<status status="PASS" endtime="20201124 15:02:29.363" starttime="20201124 15:02:29.361"></status>
</kw>
<msg timestamp="20201124 15:02:29.363" level="INFO">${path_with_leading} = /wordcount-74.txt</msg>
<status status="PASS" endtime="20201124 15:02:29.363" starttime="20201124 15:02:29.361"></status>
</kw>
<status status="PASS" endtime="20201124 15:02:29.363" starttime="20201124 15:02:29.358"></status>
</kw>
<msg timestamp="20201124 15:02:29.363" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-74.txt</msg>
<status status="PASS" endtime="20201124 15:02:29.363" starttime="20201124 15:02:29.357"></status>
</kw>
<msg timestamp="20201124 15:02:29.363" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-74.txt</msg>
<status status="PASS" endtime="20201124 15:02:29.363" starttime="20201124 15:02:29.357"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:02:29.368" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-74.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:03:06.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:03:06.192" level="INFO">${output} = 2020-11-24 15:02:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-24 15:02:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201124 15:03:06.192" starttime="20201124 15:02:29.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:03:06.193" level="INFO">2020-11-24 15:02:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-24 15:02:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:02:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:02:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 15:02:31 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 15:02:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:02:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FC88CB8B54BF-&gt;6ccd5334-ecd5-4081-86fd-94f8f64fc151
2020-11-24 15:02:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:02:32 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-24 15:02:32 INFO  JobSubmitter:198 - number of splits:3
2020-11-24 15:02:33 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606229951037_0004
2020-11-24 15:02:33 INFO  YarnClientImpl:273 - Submitted application application_1606229951037_0004
2020-11-24 15:02:33 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606229951037_0004/
2020-11-24 15:02:33 INFO  Job:1339 - Running job: job_1606229951037_0004
2020-11-24 15:02:41 INFO  Job:1360 - Job job_1606229951037_0004 running in uber mode : false
2020-11-24 15:02:41 INFO  Job:1367 -  map 0% reduce 0%
2020-11-24 15:02:48 INFO  Job:1367 -  map 33% reduce 0%
2020-11-24 15:02:53 INFO  Job:1367 -  map 67% reduce 0%
2020-11-24 15:02:57 INFO  Job:1367 -  map 100% reduce 0%
2020-11-24 15:03:04 INFO  Job:1367 -  map 100% reduce 100%
2020-11-24 15:03:05 INFO  Job:1378 - Job job_1606229951037_0004 completed successfully
2020-11-24 15:03:05 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673159
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39544
		Total time spent by all reduces in occupied slots (ms)=23860
		Total time spent by all map tasks (ms)=9886
		Total time spent by all reduce tasks (ms)=5965
		Total vcore-milliseconds taken by all map tasks=9886
		Total vcore-milliseconds taken by all reduce tasks=5965
		Total megabyte-milliseconds taken by all map tasks=40493056
		Total megabyte-milliseconds taken by all reduce tasks=24432640
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=575
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1148203008
		Virtual memory (bytes) snapshot=15773204480
		Total committed heap usage (bytes)=1041760256
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 15:03:06.193" starttime="20201124 15:03:06.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:03:06.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:03:06.194" starttime="20201124 15:03:06.193"></status>
</kw>
<status status="PASS" endtime="20201124 15:03:06.194" starttime="20201124 15:02:29.364"></status>
</kw>
<msg timestamp="20201124 15:03:06.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:03:06.194" starttime="20201124 15:02:29.364"></status>
</kw>
<msg timestamp="20201124 15:03:06.195" level="INFO">${output} = 2020-11-24 15:02:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-24 15:02:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201124 15:03:06.195" starttime="20201124 15:02:29.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 15:03:06.195" starttime="20201124 15:03:06.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:03:06.196" starttime="20201124 15:03:06.196"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:03:06.196" critical="yes" starttime="20201124 15:02:29.330"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 15:03:06.197" starttime="20201124 15:01:53.584"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:00:27.110" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:00:27.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:00:27.117" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:00:27.117" starttime="20201124 15:00:27.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:00:27.117" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:00:27.118" starttime="20201124 15:00:27.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:00:27.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:00:27.118" starttime="20201124 15:00:27.118"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:27.118" starttime="20201124 15:00:27.106"></status>
</kw>
<msg timestamp="20201124 15:00:27.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:00:27.119" starttime="20201124 15:00:27.106"></status>
</kw>
<msg timestamp="20201124 15:00:27.119" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:00:27.119" starttime="20201124 15:00:27.105"></status>
</kw>
<msg timestamp="20201124 15:00:27.119" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:00:27.119" starttime="20201124 15:00:27.105"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:00:27.123" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:00:27.123" starttime="20201124 15:00:27.123"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:00:27.124" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:00:27.124" starttime="20201124 15:00:27.123"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:27.124" starttime="20201124 15:00:27.121"></status>
</kw>
<msg timestamp="20201124 15:00:27.124" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:00:27.124" starttime="20201124 15:00:27.121"></status>
</kw>
<status status="PASS" endtime="20201124 15:00:27.124" starttime="20201124 15:00:27.120"></status>
</kw>
<msg timestamp="20201124 15:00:27.125" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:00:27.125" starttime="20201124 15:00:27.120"></status>
</kw>
<msg timestamp="20201124 15:00:27.125" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:00:27.125" starttime="20201124 15:00:27.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:00:27.130" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:01:03.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:01:03.536" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:00:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:00:29 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201124 15:01:03.536" starttime="20201124 15:00:27.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:01:03.537" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:00:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:00:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 15:00:29 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 15:00:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:00:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-78FF31F58F8A-&gt;6ccd5334-ecd5-4081-86fd-94f8f64fc151
2020-11-24 15:00:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 15:00:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-24 15:00:30 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-24 15:00:30 INFO  JobSubmitter:198 - number of splits:3
2020-11-24 15:00:30 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606229951037_0001
2020-11-24 15:00:31 INFO  YarnClientImpl:273 - Submitted application application_1606229951037_0001
2020-11-24 15:00:31 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606229951037_0001/
2020-11-24 15:00:31 INFO  Job:1339 - Running job: job_1606229951037_0001
2020-11-24 15:00:41 INFO  Job:1360 - Job job_1606229951037_0001 running in uber mode : false
2020-11-24 15:00:41 INFO  Job:1367 -  map 0% reduce 0%
2020-11-24 15:00:46 INFO  Job:1367 -  map 33% reduce 0%
2020-11-24 15:00:51 INFO  Job:1367 -  map 67% reduce 0%
2020-11-24 15:00:56 INFO  Job:1367 -  map 100% reduce 0%
2020-11-24 15:01:01 INFO  Job:1367 -  map 100% reduce 100%
2020-11-24 15:01:02 INFO  Job:1378 - Job job_1606229951037_0001 completed successfully
2020-11-24 15:01:02 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610901
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38504
		Total time spent by all reduces in occupied slots (ms)=15268
		Total time spent by all map tasks (ms)=9626
		Total time spent by all reduce tasks (ms)=3817
		Total vcore-milliseconds taken by all map tasks=9626
		Total vcore-milliseconds taken by all reduce tasks=3817
		Total megabyte-milliseconds taken by all map tasks=39428096
		Total megabyte-milliseconds taken by all reduce tasks=15634432
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=581
		CPU time spent (ms)=6340
		Physical memory (bytes) snapshot=1151336448
		Virtual memory (bytes) snapshot=15792701440
		Total committed heap usage (bytes)=1002438656
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.866 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 15:01:03.537" starttime="20201124 15:01:03.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:01:03.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:01:03.538" starttime="20201124 15:01:03.537"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:03.538" starttime="20201124 15:00:27.126"></status>
</kw>
<msg timestamp="20201124 15:01:03.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:01:03.539" starttime="20201124 15:00:27.126"></status>
</kw>
<msg timestamp="20201124 15:01:03.539" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:00:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:00:29 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201124 15:01:03.539" starttime="20201124 15:00:27.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:01:03.540" starttime="20201124 15:01:03.539"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:01:03.540" critical="yes" starttime="20201124 15:00:27.104"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:01:03.545" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:01:03.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:01:03.551" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:01:03.551" starttime="20201124 15:01:03.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:01:03.553" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:01:03.553" starttime="20201124 15:01:03.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:01:03.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:01:03.553" starttime="20201124 15:01:03.553"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:03.554" starttime="20201124 15:01:03.542"></status>
</kw>
<msg timestamp="20201124 15:01:03.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:01:03.554" starttime="20201124 15:01:03.542"></status>
</kw>
<msg timestamp="20201124 15:01:03.554" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:01:03.554" starttime="20201124 15:01:03.542"></status>
</kw>
<msg timestamp="20201124 15:01:03.554" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 15:01:03.554" starttime="20201124 15:01:03.541"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:01:03.555" level="INFO">${random} = 72</msg>
<status status="PASS" endtime="20201124 15:01:03.555" starttime="20201124 15:01:03.554"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:01:03.559" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:01:03.559" starttime="20201124 15:01:03.558"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:01:03.559" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:01:03.559" starttime="20201124 15:01:03.559"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:03.559" starttime="20201124 15:01:03.558"></status>
</kw>
<msg timestamp="20201124 15:01:03.559" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:01:03.559" starttime="20201124 15:01:03.557"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:03.560" starttime="20201124 15:01:03.556"></status>
</kw>
<msg timestamp="20201124 15:01:03.560" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:01:03.560" starttime="20201124 15:01:03.556"></status>
</kw>
<msg timestamp="20201124 15:01:03.560" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:01:03.560" starttime="20201124 15:01:03.555"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:01:03.564" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:01:03.564" starttime="20201124 15:01:03.563"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:01:03.564" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:01:03.564" starttime="20201124 15:01:03.564"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:03.564" starttime="20201124 15:01:03.563"></status>
</kw>
<msg timestamp="20201124 15:01:03.565" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:01:03.565" starttime="20201124 15:01:03.562"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:03.565" starttime="20201124 15:01:03.562"></status>
</kw>
<msg timestamp="20201124 15:01:03.565" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 15:01:03.565" starttime="20201124 15:01:03.561"></status>
</kw>
<msg timestamp="20201124 15:01:03.565" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 15:01:03.565" starttime="20201124 15:01:03.560"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:01:03.568" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:01:03.568" starttime="20201124 15:01:03.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:01:03.569" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:01:03.569" starttime="20201124 15:01:03.569"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:03.569" starttime="20201124 15:01:03.568"></status>
</kw>
<msg timestamp="20201124 15:01:03.569" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:01:03.569" starttime="20201124 15:01:03.567"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:03.570" starttime="20201124 15:01:03.566"></status>
</kw>
<msg timestamp="20201124 15:01:03.570" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-72.txt</msg>
<status status="PASS" endtime="20201124 15:01:03.570" starttime="20201124 15:01:03.566"></status>
</kw>
<msg timestamp="20201124 15:01:03.570" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-72.txt</msg>
<status status="PASS" endtime="20201124 15:01:03.570" starttime="20201124 15:01:03.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:01:03.573" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-72.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:01:39.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:01:39.391" level="INFO">${output} = 2020-11-24 15:01:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-24 15:01:05 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201124 15:01:39.391" starttime="20201124 15:01:03.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:01:39.392" level="INFO">2020-11-24 15:01:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-24 15:01:05 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:01:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:01:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 15:01:05 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 15:01:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:01:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A70EADBCE3DC-&gt;6ccd5334-ecd5-4081-86fd-94f8f64fc151
2020-11-24 15:01:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:01:06 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-24 15:01:07 INFO  JobSubmitter:198 - number of splits:3
2020-11-24 15:01:07 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606229951037_0002
2020-11-24 15:01:07 INFO  YarnClientImpl:273 - Submitted application application_1606229951037_0002
2020-11-24 15:01:07 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606229951037_0002/
2020-11-24 15:01:07 INFO  Job:1339 - Running job: job_1606229951037_0002
2020-11-24 15:01:15 INFO  Job:1360 - Job job_1606229951037_0002 running in uber mode : false
2020-11-24 15:01:15 INFO  Job:1367 -  map 0% reduce 0%
2020-11-24 15:01:21 INFO  Job:1367 -  map 33% reduce 0%
2020-11-24 15:01:26 INFO  Job:1367 -  map 67% reduce 0%
2020-11-24 15:01:31 INFO  Job:1367 -  map 100% reduce 0%
2020-11-24 15:01:35 INFO  Job:1367 -  map 100% reduce 100%
2020-11-24 15:01:38 INFO  Job:1378 - Job job_1606229951037_0002 completed successfully
2020-11-24 15:01:39 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673243
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40160
		Total time spent by all reduces in occupied slots (ms)=13976
		Total time spent by all map tasks (ms)=10040
		Total time spent by all reduce tasks (ms)=3494
		Total vcore-milliseconds taken by all map tasks=10040
		Total vcore-milliseconds taken by all reduce tasks=3494
		Total megabyte-milliseconds taken by all map tasks=41123840
		Total megabyte-milliseconds taken by all reduce tasks=14311424
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=595
		CPU time spent (ms)=6650
		Physical memory (bytes) snapshot=1153351680
		Virtual memory (bytes) snapshot=15782998016
		Total committed heap usage (bytes)=1049100288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 15:01:39.392" starttime="20201124 15:01:39.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:01:39.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:01:39.393" starttime="20201124 15:01:39.392"></status>
</kw>
<status status="PASS" endtime="20201124 15:01:39.393" starttime="20201124 15:01:03.571"></status>
</kw>
<msg timestamp="20201124 15:01:39.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:01:39.393" starttime="20201124 15:01:03.571"></status>
</kw>
<msg timestamp="20201124 15:01:39.394" level="INFO">${output} = 2020-11-24 15:01:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-24 15:01:05 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201124 15:01:39.394" starttime="20201124 15:01:03.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 15:01:39.394" starttime="20201124 15:01:39.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:01:39.395" starttime="20201124 15:01:39.395"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:01:39.395" critical="yes" starttime="20201124 15:01:03.541"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 15:01:39.396" starttime="20201124 15:00:27.054"></status>
</suite>
<status status="PASS" elapsedtime="183747" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:10.818" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:13.053" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 15:04:13.053" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 15:04:13.053" starttime="20201124 15:04:10.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:13.054" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 15:04:13.054" starttime="20201124 15:04:13.053"></status>
</kw>
<msg timestamp="20201124 15:04:13.054" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 15:04:13.054" starttime="20201124 15:04:10.811"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:13.060" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:15.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:15.333" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:04:15.333" starttime="20201124 15:04:13.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:15.334" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:04:15.334" starttime="20201124 15:04:15.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:15.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:15.335" starttime="20201124 15:04:15.334"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:15.335" starttime="20201124 15:04:13.056"></status>
</kw>
<msg timestamp="20201124 15:04:15.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:15.335" starttime="20201124 15:04:13.056"></status>
</kw>
<msg timestamp="20201124 15:04:15.335" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201124 15:04:15.335" starttime="20201124 15:04:13.055"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201124 15:04:15.336" starttime="20201124 15:04:15.335"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:15.336" starttime="20201124 15:04:13.055"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:15.336" starttime="20201124 15:04:13.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:15.341" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:17.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:17.339" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:04:17.339" starttime="20201124 15:04:15.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:17.340" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:04:17.340" starttime="20201124 15:04:17.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:17.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:17.341" starttime="20201124 15:04:17.340"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:17.341" starttime="20201124 15:04:15.338"></status>
</kw>
<msg timestamp="20201124 15:04:17.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:17.341" starttime="20201124 15:04:15.337"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:17.341" starttime="20201124 15:04:15.337"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:17.342" starttime="20201124 15:04:15.337"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:17.342" starttime="20201124 15:04:15.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 15:04:17.342" starttime="20201124 15:04:17.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:17.347" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:19.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:19.389" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:04:17.312Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 15:04:19.389" starttime="20201124 15:04:17.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:19.390" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:04:17.312Z",
  "modificationTime" : "2020-11-24T15:04:17.312Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 15:04:19.391" starttime="20201124 15:04:19.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:19.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:19.391" starttime="20201124 15:04:19.391"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:19.391" starttime="20201124 15:04:17.343"></status>
</kw>
<msg timestamp="20201124 15:04:19.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:19.392" starttime="20201124 15:04:17.343"></status>
</kw>
<msg timestamp="20201124 15:04:19.392" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:04:17.312Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 15:04:19.392" starttime="20201124 15:04:17.342"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201124 15:04:19.392" starttime="20201124 15:04:19.392"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:04:19.396" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:04:19.396" starttime="20201124 15:04:19.396"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:04:19.397" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:04:19.397" starttime="20201124 15:04:19.396"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:19.397" starttime="20201124 15:04:19.395"></status>
</kw>
<msg timestamp="20201124 15:04:19.397" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:04:19.397" starttime="20201124 15:04:19.395"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:19.398" starttime="20201124 15:04:19.394"></status>
</kw>
<msg timestamp="20201124 15:04:19.398" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 15:04:19.398" starttime="20201124 15:04:19.393"></status>
</kw>
<msg timestamp="20201124 15:04:19.398" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 15:04:19.398" starttime="20201124 15:04:19.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:19.403" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:21.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:21.457" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:04:21.457" starttime="20201124 15:04:19.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:21.458" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:04:21.458" starttime="20201124 15:04:21.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:21.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:21.459" starttime="20201124 15:04:21.458"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:21.459" starttime="20201124 15:04:19.399"></status>
</kw>
<msg timestamp="20201124 15:04:21.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:21.459" starttime="20201124 15:04:19.399"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:21.459" starttime="20201124 15:04:19.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:21.463" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:26.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:26.445" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:04:26.445" starttime="20201124 15:04:21.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:26.446" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:04:26.446" starttime="20201124 15:04:26.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:26.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:26.447" starttime="20201124 15:04:26.446"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:26.447" starttime="20201124 15:04:21.461"></status>
</kw>
<msg timestamp="20201124 15:04:26.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:26.447" starttime="20201124 15:04:21.460"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:26.447" starttime="20201124 15:04:21.459"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:26.451" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:30.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:30.229" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:04:30.229" starttime="20201124 15:04:26.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:30.230" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:04:30.230" starttime="20201124 15:04:30.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:30.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:30.231" starttime="20201124 15:04:30.231"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:30.231" starttime="20201124 15:04:26.449"></status>
</kw>
<msg timestamp="20201124 15:04:30.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:30.232" starttime="20201124 15:04:26.448"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:30.232" starttime="20201124 15:04:26.448"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:30.237" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:34.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:34.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:04:34.144" starttime="20201124 15:04:30.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:34.145" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:04:34.145" starttime="20201124 15:04:34.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:34.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:34.146" starttime="20201124 15:04:34.145"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:34.146" starttime="20201124 15:04:30.233"></status>
</kw>
<msg timestamp="20201124 15:04:34.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:34.146" starttime="20201124 15:04:30.232"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:34.146" starttime="20201124 15:04:30.232"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:04:34.147" critical="yes" starttime="20201124 15:04:10.810"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:04:34.151" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:04:34.151" starttime="20201124 15:04:34.150"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:04:34.152" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:04:34.152" starttime="20201124 15:04:34.151"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:34.152" starttime="20201124 15:04:34.150"></status>
</kw>
<msg timestamp="20201124 15:04:34.152" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:04:34.152" starttime="20201124 15:04:34.150"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:34.152" starttime="20201124 15:04:34.149"></status>
</kw>
<msg timestamp="20201124 15:04:34.152" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:04:34.152" starttime="20201124 15:04:34.149"></status>
</kw>
<msg timestamp="20201124 15:04:34.153" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:04:34.153" starttime="20201124 15:04:34.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:34.156" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:36.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:36.290" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:04:36.290" starttime="20201124 15:04:34.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:36.291" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:04:36.291" starttime="20201124 15:04:36.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:36.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:36.291" starttime="20201124 15:04:36.291"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:36.292" starttime="20201124 15:04:34.153"></status>
</kw>
<msg timestamp="20201124 15:04:36.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:36.292" starttime="20201124 15:04:34.153"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:36.292" starttime="20201124 15:04:34.153"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:36.296" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:38.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:38.369" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:04:38.369" starttime="20201124 15:04:36.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:38.370" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:04:38.370" starttime="20201124 15:04:38.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:38.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:38.371" starttime="20201124 15:04:38.371"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:38.371" starttime="20201124 15:04:36.293"></status>
</kw>
<msg timestamp="20201124 15:04:38.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:38.372" starttime="20201124 15:04:36.293"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:38.372" starttime="20201124 15:04:36.292"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:04:38.372" critical="yes" starttime="20201124 15:04:34.147"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201124 15:04:38.373" starttime="20201124 15:04:10.757"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:06:22.139" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:06:22.139" starttime="20201124 15:06:22.138"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:06:22.139" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:06:22.139" starttime="20201124 15:06:22.139"></status>
</kw>
<status status="PASS" endtime="20201124 15:06:22.139" starttime="20201124 15:06:22.138"></status>
</kw>
<msg timestamp="20201124 15:06:22.140" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:06:22.140" starttime="20201124 15:06:22.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:06:22.141" starttime="20201124 15:06:22.140"></status>
</kw>
<msg timestamp="20201124 15:06:22.141" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:06:22.141" starttime="20201124 15:06:22.140"></status>
</kw>
<status status="PASS" endtime="20201124 15:06:22.141" starttime="20201124 15:06:22.136"></status>
</kw>
<msg timestamp="20201124 15:06:22.141" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:06:22.141" starttime="20201124 15:06:22.136"></status>
</kw>
<msg timestamp="20201124 15:06:22.141" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:06:22.141" starttime="20201124 15:06:22.135"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:06:22.142" level="INFO">${random} = 68705</msg>
<status status="PASS" endtime="20201124 15:06:22.142" starttime="20201124 15:06:22.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:06:22.148" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-68705 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:06:25.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:06:25.785" level="INFO">${output} = 2020-11-24 15:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:06:25.785" starttime="20201124 15:06:22.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:06:25.789" level="INFO">2020-11-24 15:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:24 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 15:06:24 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:06:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:06:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:06:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:06:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-777AE8CC907F-&gt;4730ce71-ffee-467f-8be9-1c7b72fa03e3
2020-11-24 15:06:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:06:25 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 15:06:25.790" starttime="20201124 15:06:25.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:06:25.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:06:25.791" starttime="20201124 15:06:25.790"></status>
</kw>
<status status="PASS" endtime="20201124 15:06:25.791" starttime="20201124 15:06:22.143"></status>
</kw>
<msg timestamp="20201124 15:06:25.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:06:25.791" starttime="20201124 15:06:22.143"></status>
</kw>
<msg timestamp="20201124 15:06:25.791" level="INFO">${result} = 2020-11-24 15:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:06:25.792" starttime="20201124 15:06:22.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:06:25.797" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:06:27.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:06:27.599" level="INFO">${output} = 2020-11-24 15:06:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:06:27.599" starttime="20201124 15:06:25.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:06:27.600" level="INFO">2020-11-24 15:06:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:27 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-24 15:04 ofs://om/volume1/bucket1/ozone-03594
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-24 15:06 ofs://om/volume1/bucket1/ozone-68705
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:04 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:05 ofs://om/volume1/bucket1/wordcount-58.txt
2020-11-24 15:06:27 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 15:06:27.600" starttime="20201124 15:06:27.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:06:27.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:06:27.601" starttime="20201124 15:06:27.600"></status>
</kw>
<status status="PASS" endtime="20201124 15:06:27.601" starttime="20201124 15:06:25.794"></status>
</kw>
<msg timestamp="20201124 15:06:27.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:06:27.601" starttime="20201124 15:06:25.793"></status>
</kw>
<msg timestamp="20201124 15:06:27.602" level="INFO">${result} = 2020-11-24 15:06:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:06:27.602" starttime="20201124 15:06:25.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:06:27.602" starttime="20201124 15:06:27.602"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:06:27.602" critical="yes" starttime="20201124 15:06:22.134"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 15:06:27.604" starttime="20201124 15:06:22.084"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:04:42.981" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:04:42.981" starttime="20201124 15:04:42.980"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:04:42.981" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:04:42.981" starttime="20201124 15:04:42.981"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:42.982" starttime="20201124 15:04:42.980"></status>
</kw>
<msg timestamp="20201124 15:04:42.982" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:04:42.982" starttime="20201124 15:04:42.979"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:42.982" starttime="20201124 15:04:42.979"></status>
</kw>
<msg timestamp="20201124 15:04:42.982" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:04:42.982" starttime="20201124 15:04:42.978"></status>
</kw>
<msg timestamp="20201124 15:04:42.982" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:04:42.982" starttime="20201124 15:04:42.977"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:04:42.983" level="INFO">${random} = 03594</msg>
<status status="PASS" endtime="20201124 15:04:42.983" starttime="20201124 15:04:42.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:42.988" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-03594 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:46.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:46.614" level="INFO">${output} = 2020-11-24 15:04:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:04:46.615" starttime="20201124 15:04:42.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:46.615" level="INFO">2020-11-24 15:04:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 15:04:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:04:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:04:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:04:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:04:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E8D0D9665580-&gt;4730ce71-ffee-467f-8be9-1c7b72fa03e3
2020-11-24 15:04:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:04:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 15:04:46.616" starttime="20201124 15:04:46.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:46.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:46.616" starttime="20201124 15:04:46.616"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:46.616" starttime="20201124 15:04:42.984"></status>
</kw>
<msg timestamp="20201124 15:04:46.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:46.617" starttime="20201124 15:04:42.984"></status>
</kw>
<msg timestamp="20201124 15:04:46.617" level="INFO">${result} = 2020-11-24 15:04:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:04:46.617" starttime="20201124 15:04:42.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:46.622" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:48.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:48.385" level="INFO">${output} = 2020-11-24 15:04:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:04:48.385" starttime="20201124 15:04:46.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:48.386" level="INFO">2020-11-24 15:04:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:48 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-24 15:04 o3fs://bucket1.volume1.om/ozone-03594
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:04 o3fs://bucket1.volume1.om/user
2020-11-24 15:04:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 15:04:48.386" starttime="20201124 15:04:48.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:48.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:48.387" starttime="20201124 15:04:48.387"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:48.387" starttime="20201124 15:04:46.619"></status>
</kw>
<msg timestamp="20201124 15:04:48.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:48.388" starttime="20201124 15:04:46.618"></status>
</kw>
<msg timestamp="20201124 15:04:48.388" level="INFO">${result} = 2020-11-24 15:04:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:04:48.388" starttime="20201124 15:04:46.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:04:48.389" starttime="20201124 15:04:48.388"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:04:48.389" critical="yes" starttime="20201124 15:04:42.977"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 15:04:48.390" starttime="20201124 15:04:42.927"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:06:32.359" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:06:32.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:06:32.363" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:06:32.363" starttime="20201124 15:06:32.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:06:32.364" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:06:32.364" starttime="20201124 15:06:32.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:06:32.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:06:32.365" starttime="20201124 15:06:32.365"></status>
</kw>
<status status="PASS" endtime="20201124 15:06:32.365" starttime="20201124 15:06:32.353"></status>
</kw>
<msg timestamp="20201124 15:06:32.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:06:32.365" starttime="20201124 15:06:32.353"></status>
</kw>
<msg timestamp="20201124 15:06:32.366" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:06:32.366" starttime="20201124 15:06:32.352"></status>
</kw>
<msg timestamp="20201124 15:06:32.366" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:06:32.366" starttime="20201124 15:06:32.352"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:06:32.370" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:06:32.370" starttime="20201124 15:06:32.370"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:06:32.371" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:06:32.371" starttime="20201124 15:06:32.370"></status>
</kw>
<status status="PASS" endtime="20201124 15:06:32.371" starttime="20201124 15:06:32.368"></status>
</kw>
<msg timestamp="20201124 15:06:32.371" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:06:32.371" starttime="20201124 15:06:32.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:06:32.372" starttime="20201124 15:06:32.371"></status>
</kw>
<msg timestamp="20201124 15:06:32.372" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:06:32.372" starttime="20201124 15:06:32.371"></status>
</kw>
<status status="PASS" endtime="20201124 15:06:32.372" starttime="20201124 15:06:32.367"></status>
</kw>
<msg timestamp="20201124 15:06:32.372" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:06:32.372" starttime="20201124 15:06:32.367"></status>
</kw>
<msg timestamp="20201124 15:06:32.372" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:06:32.372" starttime="20201124 15:06:32.366"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:06:32.376" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:07:10.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:07:10.474" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06...</msg>
<status status="PASS" endtime="20201124 15:07:10.474" starttime="20201124 15:06:32.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:07:10.475" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 15:06:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:06:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:06:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:06:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:06:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-15474FE8A4AE-&gt;4730ce71-ffee-467f-8be9-1c7b72fa03e3
2020-11-24 15:06:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 15:06:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-24 15:06:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:06:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:36 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:06:38 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:06:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606230228231_0003
2020-11-24 15:06:38 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 15:06:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:39 INFO  Configuration:2752 - resource-types.xml not found
2020-11-24 15:06:39 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-24 15:06:39 INFO  YarnClientImpl:324 - Submitted application application_1606230228231_0003
2020-11-24 15:06:39 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606230228231_0003/
2020-11-24 15:06:39 INFO  Job:1619 - Running job: job_1606230228231_0003
2020-11-24 15:06:46 INFO  Job:1640 - Job job_1606230228231_0003 running in uber mode : false
2020-11-24 15:06:46 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:06:53 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:06:59 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:07:04 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:07:08 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:07:09 INFO  Job:1658 - Job job_1606230228231_0003 completed successfully
2020-11-24 15:07:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016145
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39808
		Total time spent by all reduces in occupied slots (ms)=14820
		Total time spent by all map tasks (ms)=9952
		Total time spent by all reduce tasks (ms)=3705
		Total vcore-milliseconds taken by all map tasks=9952
		Total vcore-milliseconds taken by all reduce tasks=3705
		Total megabyte-milliseconds taken by all map tasks=40763392
		Total megabyte-milliseconds taken by all reduce tasks=15175680
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=622
		CPU time spent (ms)=6630
		Physical memory (bytes) snapshot=1223335936
		Virtual memory (bytes) snapshot=15802179584
		Total committed heap usage (bytes)=1060110336
		Peak Map Physical memory (bytes)=309727232
		Peak Map Virtual memory (bytes)=3945455616
		Peak Reduce Physical memory (bytes)=300146688
		Peak Reduce Virtual memory (bytes)=3969540096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.246 seconds
2020-11-24 15:07:09 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-24 15:07:10 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 15:07:10.475" starttime="20201124 15:07:10.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:07:10.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:07:10.476" starttime="20201124 15:07:10.475"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:10.476" starttime="20201124 15:06:32.373"></status>
</kw>
<msg timestamp="20201124 15:07:10.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:07:10.476" starttime="20201124 15:06:32.373"></status>
</kw>
<msg timestamp="20201124 15:07:10.477" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06...</msg>
<status status="PASS" endtime="20201124 15:07:10.477" starttime="20201124 15:06:32.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:07:10.477" starttime="20201124 15:07:10.477"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:07:10.478" critical="yes" starttime="20201124 15:06:32.351"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:07:10.483" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:07:10.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:07:10.490" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:07:10.490" starttime="20201124 15:07:10.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:07:10.491" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:07:10.491" starttime="20201124 15:07:10.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:07:10.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:07:10.491" starttime="20201124 15:07:10.491"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:10.492" starttime="20201124 15:07:10.480"></status>
</kw>
<msg timestamp="20201124 15:07:10.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:07:10.492" starttime="20201124 15:07:10.480"></status>
</kw>
<msg timestamp="20201124 15:07:10.492" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:07:10.492" starttime="20201124 15:07:10.479"></status>
</kw>
<msg timestamp="20201124 15:07:10.493" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:07:10.493" starttime="20201124 15:07:10.479"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:07:10.493" level="INFO">${random} = 45</msg>
<status status="PASS" endtime="20201124 15:07:10.493" starttime="20201124 15:07:10.493"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:07:10.497" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:07:10.497" starttime="20201124 15:07:10.497"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:07:10.498" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:07:10.498" starttime="20201124 15:07:10.497"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:10.498" starttime="20201124 15:07:10.496"></status>
</kw>
<msg timestamp="20201124 15:07:10.498" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:07:10.498" starttime="20201124 15:07:10.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:07:10.499" starttime="20201124 15:07:10.499"></status>
</kw>
<msg timestamp="20201124 15:07:10.499" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:07:10.499" starttime="20201124 15:07:10.498"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:10.500" starttime="20201124 15:07:10.495"></status>
</kw>
<msg timestamp="20201124 15:07:10.500" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:07:10.500" starttime="20201124 15:07:10.494"></status>
</kw>
<msg timestamp="20201124 15:07:10.500" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:07:10.500" starttime="20201124 15:07:10.493"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:07:10.503" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:07:10.503" starttime="20201124 15:07:10.503"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:07:10.504" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:07:10.504" starttime="20201124 15:07:10.503"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:10.504" starttime="20201124 15:07:10.502"></status>
</kw>
<msg timestamp="20201124 15:07:10.504" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:07:10.504" starttime="20201124 15:07:10.502"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:07:10.506" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201124 15:07:10.506" starttime="20201124 15:07:10.505"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:07:10.506" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201124 15:07:10.506" starttime="20201124 15:07:10.506"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:10.506" starttime="20201124 15:07:10.505"></status>
</kw>
<msg timestamp="20201124 15:07:10.507" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201124 15:07:10.507" starttime="20201124 15:07:10.504"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:10.507" starttime="20201124 15:07:10.501"></status>
</kw>
<msg timestamp="20201124 15:07:10.507" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 15:07:10.507" starttime="20201124 15:07:10.501"></status>
</kw>
<msg timestamp="20201124 15:07:10.507" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 15:07:10.507" starttime="20201124 15:07:10.500"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:07:10.510" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:07:10.510" starttime="20201124 15:07:10.510"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:07:10.511" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:07:10.511" starttime="20201124 15:07:10.511"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:10.511" starttime="20201124 15:07:10.510"></status>
</kw>
<msg timestamp="20201124 15:07:10.511" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:07:10.511" starttime="20201124 15:07:10.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:07:10.513" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201124 15:07:10.513" starttime="20201124 15:07:10.512"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:07:10.513" level="INFO">${result} = /wordcount-45.txt</msg>
<status status="PASS" endtime="20201124 15:07:10.513" starttime="20201124 15:07:10.513"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:10.514" starttime="20201124 15:07:10.512"></status>
</kw>
<msg timestamp="20201124 15:07:10.514" level="INFO">${path_with_leading} = /wordcount-45.txt</msg>
<status status="PASS" endtime="20201124 15:07:10.514" starttime="20201124 15:07:10.512"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:10.514" starttime="20201124 15:07:10.509"></status>
</kw>
<msg timestamp="20201124 15:07:10.514" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201124 15:07:10.514" starttime="20201124 15:07:10.508"></status>
</kw>
<msg timestamp="20201124 15:07:10.515" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201124 15:07:10.515" starttime="20201124 15:07:10.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:07:10.520" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-45.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:07:51.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:07:51.950" level="INFO">${output} = 2020-11-24 15:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:07:51.950" starttime="20201124 15:07:10.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:07:51.951" level="INFO">2020-11-24 15:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-24 15:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 15:07:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:07:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:07:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:07:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:07:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DDC567F577FA-&gt;4730ce71-ffee-467f-8be9-1c7b72fa03e3
2020-11-24 15:07:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:07:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:07:16 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:07:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606230228231_0004
2020-11-24 15:07:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 15:07:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:16 INFO  Configuration:2752 - resource-types.xml not found
2020-11-24 15:07:16 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-24 15:07:16 INFO  YarnClientImpl:324 - Submitted application application_1606230228231_0004
2020-11-24 15:07:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606230228231_0004/
2020-11-24 15:07:17 INFO  Job:1619 - Running job: job_1606230228231_0004
2020-11-24 15:07:25 INFO  Job:1640 - Job job_1606230228231_0004 running in uber mode : false
2020-11-24 15:07:25 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:07:31 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:07:36 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:07:41 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:07:45 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:07:51 INFO  Job:1658 - Job job_1606230228231_0004 completed successfully
2020-11-24 15:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39836
		Total time spent by all reduces in occupied slots (ms)=14484
		Total time spent by all map tasks (ms)=9959
		Total time spent by all reduce tasks (ms)=3621
		Total vcore-milliseconds taken by all map tasks=9959
		Total vcore-milliseconds taken by all reduce tasks=3621
		Total megabyte-milliseconds taken by all map tasks=40792064
		Total megabyte-milliseconds taken by all reduce tasks=14831616
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=631
		CPU time spent (ms)=7210
		Physical memory (bytes) snapshot=1226993664
		Virtual memory (bytes) snapshot=15803899904
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=313368576
		Peak Map Virtual memory (bytes)=3948134400
		Peak Reduce Physical memory (bytes)=295243776
		Peak Reduce Virtual memory (bytes)=3966320640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-24 15:07:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 15:07:51.952" starttime="20201124 15:07:51.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:07:51.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:07:51.952" starttime="20201124 15:07:51.952"></status>
</kw>
<status status="PASS" endtime="20201124 15:07:51.953" starttime="20201124 15:07:10.516"></status>
</kw>
<msg timestamp="20201124 15:07:51.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:07:51.953" starttime="20201124 15:07:10.515"></status>
</kw>
<msg timestamp="20201124 15:07:51.953" level="INFO">${output} = 2020-11-24 15:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:07:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:07:51.953" starttime="20201124 15:07:10.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 15:07:51.954" starttime="20201124 15:07:51.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:07:51.955" starttime="20201124 15:07:51.954"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:07:51.955" critical="yes" starttime="20201124 15:07:10.478"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 15:07:51.956" starttime="20201124 15:06:32.306"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:53.111" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:04:53.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:04:53.116" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:04:53.116" starttime="20201124 15:04:53.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:04:53.117" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:04:53.117" starttime="20201124 15:04:53.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:04:53.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:04:53.117" starttime="20201124 15:04:53.117"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:53.118" starttime="20201124 15:04:53.106"></status>
</kw>
<msg timestamp="20201124 15:04:53.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:04:53.118" starttime="20201124 15:04:53.106"></status>
</kw>
<msg timestamp="20201124 15:04:53.118" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:04:53.118" starttime="20201124 15:04:53.105"></status>
</kw>
<msg timestamp="20201124 15:04:53.118" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:04:53.118" starttime="20201124 15:04:53.105"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:04:53.123" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:04:53.123" starttime="20201124 15:04:53.123"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:04:53.124" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:04:53.124" starttime="20201124 15:04:53.123"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:53.124" starttime="20201124 15:04:53.121"></status>
</kw>
<msg timestamp="20201124 15:04:53.124" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:04:53.124" starttime="20201124 15:04:53.121"></status>
</kw>
<status status="PASS" endtime="20201124 15:04:53.124" starttime="20201124 15:04:53.120"></status>
</kw>
<msg timestamp="20201124 15:04:53.124" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:04:53.125" starttime="20201124 15:04:53.119"></status>
</kw>
<msg timestamp="20201124 15:04:53.125" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:04:53.125" starttime="20201124 15:04:53.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:04:53.128" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:05:34.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:05:34.354" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04...</msg>
<status status="PASS" endtime="20201124 15:05:34.354" starttime="20201124 15:04:53.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:05:34.356" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:55 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 15:04:55 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:04:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:04:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:04:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:04:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-31160D7CBBDF-&gt;4730ce71-ffee-467f-8be9-1c7b72fa03e3
2020-11-24 15:04:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 15:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-24 15:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:57 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:04:57 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:04:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606230228231_0001
2020-11-24 15:04:57 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 15:04:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:57 INFO  Configuration:2752 - resource-types.xml not found
2020-11-24 15:04:57 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-24 15:04:58 INFO  YarnClientImpl:324 - Submitted application application_1606230228231_0001
2020-11-24 15:04:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606230228231_0001/
2020-11-24 15:04:58 INFO  Job:1619 - Running job: job_1606230228231_0001
2020-11-24 15:05:08 INFO  Job:1640 - Job job_1606230228231_0001 running in uber mode : false
2020-11-24 15:05:08 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:05:15 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:05:21 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:05:26 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:05:33 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:05:33 INFO  Job:1658 - Job job_1606230228231_0001 completed successfully
2020-11-24 15:05:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:33 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016349
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39484
		Total time spent by all reduces in occupied slots (ms)=25776
		Total time spent by all map tasks (ms)=9871
		Total time spent by all reduce tasks (ms)=6444
		Total vcore-milliseconds taken by all map tasks=9871
		Total vcore-milliseconds taken by all reduce tasks=6444
		Total megabyte-milliseconds taken by all map tasks=40431616
		Total megabyte-milliseconds taken by all reduce tasks=26394624
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=648
		CPU time spent (ms)=6340
		Physical memory (bytes) snapshot=1230393344
		Virtual memory (bytes) snapshot=15789527040
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=311779328
		Peak Map Virtual memory (bytes)=3943608320
		Peak Reduce Physical memory (bytes)=301371392
		Peak Reduce Virtual memory (bytes)=3966787584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.289 seconds
2020-11-24 15:05:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:33 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-24 15:05:34 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 15:05:34.356" starttime="20201124 15:05:34.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:05:34.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:05:34.357" starttime="20201124 15:05:34.356"></status>
</kw>
<status status="PASS" endtime="20201124 15:05:34.357" starttime="20201124 15:04:53.126"></status>
</kw>
<msg timestamp="20201124 15:05:34.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:05:34.357" starttime="20201124 15:04:53.125"></status>
</kw>
<msg timestamp="20201124 15:05:34.358" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:04...</msg>
<status status="PASS" endtime="20201124 15:05:34.358" starttime="20201124 15:04:53.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:05:34.358" starttime="20201124 15:05:34.358"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:05:34.359" critical="yes" starttime="20201124 15:04:53.104"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:05:34.364" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:05:34.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:05:34.371" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:05:34.371" starttime="20201124 15:05:34.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:05:34.372" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:05:34.372" starttime="20201124 15:05:34.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:05:34.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:05:34.373" starttime="20201124 15:05:34.372"></status>
</kw>
<status status="PASS" endtime="20201124 15:05:34.373" starttime="20201124 15:05:34.361"></status>
</kw>
<msg timestamp="20201124 15:05:34.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:05:34.373" starttime="20201124 15:05:34.361"></status>
</kw>
<msg timestamp="20201124 15:05:34.374" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:05:34.374" starttime="20201124 15:05:34.361"></status>
</kw>
<msg timestamp="20201124 15:05:34.374" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 15:05:34.374" starttime="20201124 15:05:34.360"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:05:34.374" level="INFO">${random} = 58</msg>
<status status="PASS" endtime="20201124 15:05:34.374" starttime="20201124 15:05:34.374"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:05:34.378" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:05:34.378" starttime="20201124 15:05:34.378"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:05:34.379" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:05:34.379" starttime="20201124 15:05:34.378"></status>
</kw>
<status status="PASS" endtime="20201124 15:05:34.379" starttime="20201124 15:05:34.377"></status>
</kw>
<msg timestamp="20201124 15:05:34.379" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:05:34.379" starttime="20201124 15:05:34.377"></status>
</kw>
<status status="PASS" endtime="20201124 15:05:34.380" starttime="20201124 15:05:34.376"></status>
</kw>
<msg timestamp="20201124 15:05:34.380" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:05:34.380" starttime="20201124 15:05:34.375"></status>
</kw>
<msg timestamp="20201124 15:05:34.380" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:05:34.380" starttime="20201124 15:05:34.375"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:05:34.383" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:05:34.383" starttime="20201124 15:05:34.383"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:05:34.384" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:05:34.384" starttime="20201124 15:05:34.383"></status>
</kw>
<status status="PASS" endtime="20201124 15:05:34.384" starttime="20201124 15:05:34.382"></status>
</kw>
<msg timestamp="20201124 15:05:34.384" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:05:34.384" starttime="20201124 15:05:34.382"></status>
</kw>
<status status="PASS" endtime="20201124 15:05:34.385" starttime="20201124 15:05:34.381"></status>
</kw>
<msg timestamp="20201124 15:05:34.385" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 15:05:34.385" starttime="20201124 15:05:34.381"></status>
</kw>
<msg timestamp="20201124 15:05:34.385" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 15:05:34.385" starttime="20201124 15:05:34.380"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:05:34.388" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:05:34.388" starttime="20201124 15:05:34.388"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:05:34.389" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:05:34.389" starttime="20201124 15:05:34.388"></status>
</kw>
<status status="PASS" endtime="20201124 15:05:34.389" starttime="20201124 15:05:34.387"></status>
</kw>
<msg timestamp="20201124 15:05:34.389" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:05:34.389" starttime="20201124 15:05:34.387"></status>
</kw>
<status status="PASS" endtime="20201124 15:05:34.389" starttime="20201124 15:05:34.386"></status>
</kw>
<msg timestamp="20201124 15:05:34.389" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-58.txt</msg>
<status status="PASS" endtime="20201124 15:05:34.389" starttime="20201124 15:05:34.386"></status>
</kw>
<msg timestamp="20201124 15:05:34.390" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-58.txt</msg>
<status status="PASS" endtime="20201124 15:05:34.390" starttime="20201124 15:05:34.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:05:34.394" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-58.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:06:17.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:06:17.365" level="INFO">${output} = 2020-11-24 15:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:36 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:06:17.365" starttime="20201124 15:05:34.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:06:17.366" level="INFO">2020-11-24 15:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:36 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-24 15:05:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:36 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:05:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:36 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 15:05:37 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 15:05:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:05:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:05:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:05:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-85F287AB7116-&gt;4730ce71-ffee-467f-8be9-1c7b72fa03e3
2020-11-24 15:05:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:05:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:05:43 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:05:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606230228231_0002
2020-11-24 15:05:46 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 15:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:46 INFO  Configuration:2752 - resource-types.xml not found
2020-11-24 15:05:46 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-24 15:05:46 INFO  YarnClientImpl:324 - Submitted application application_1606230228231_0002
2020-11-24 15:05:46 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606230228231_0002/
2020-11-24 15:05:46 INFO  Job:1619 - Running job: job_1606230228231_0002
2020-11-24 15:05:54 INFO  Job:1640 - Job job_1606230228231_0002 running in uber mode : false
2020-11-24 15:05:54 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:06:00 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:06:06 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:06:11 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:06:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:06:16 INFO  Job:1658 - Job job_1606230228231_0002 completed successfully
2020-11-24 15:06:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:06:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39916
		Total time spent by all reduces in occupied slots (ms)=15008
		Total time spent by all map tasks (ms)=9979
		Total time spent by all reduce tasks (ms)=3752
		Total vcore-milliseconds taken by all map tasks=9979
		Total vcore-milliseconds taken by all reduce tasks=3752
		Total megabyte-milliseconds taken by all map tasks=40873984
		Total megabyte-milliseconds taken by all reduce tasks=15368192
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1247731712
		Virtual memory (bytes) snapshot=15804493824
		Total committed heap usage (bytes)=1060110336
		Peak Map Physical memory (bytes)=324296704
		Peak Map Virtual memory (bytes)=3947360256
		Peak Reduce Physical memory (bytes)=300437504
		Peak Reduce Virtual memory (bytes)=3971919872
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-24 15:06:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 15:06:17.367" starttime="20201124 15:06:17.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:06:17.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:06:17.367" starttime="20201124 15:06:17.367"></status>
</kw>
<status status="PASS" endtime="20201124 15:06:17.368" starttime="20201124 15:05:34.391"></status>
</kw>
<msg timestamp="20201124 15:06:17.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:06:17.368" starttime="20201124 15:05:34.390"></status>
</kw>
<msg timestamp="20201124 15:06:17.368" level="INFO">${output} = 2020-11-24 15:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 15:05:36 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 15:06:17.368" starttime="20201124 15:05:34.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 15:06:17.369" starttime="20201124 15:06:17.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:06:17.369" starttime="20201124 15:06:17.369"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:06:17.370" critical="yes" starttime="20201124 15:05:34.359"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 15:06:17.371" starttime="20201124 15:04:53.053"></status>
</suite>
<status status="PASS" elapsedtime="202567" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:01.452" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:05.806" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 15:09:05.807" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 15:09:05.807" starttime="20201124 15:09:01.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:05.808" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 15:09:05.808" starttime="20201124 15:09:05.807"></status>
</kw>
<msg timestamp="20201124 15:09:05.808" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 15:09:05.808" starttime="20201124 15:09:01.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:05.815" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:09.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:09.717" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:09:09.717" starttime="20201124 15:09:05.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:09.718" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:09:09.718" starttime="20201124 15:09:09.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:09.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:09.719" starttime="20201124 15:09:09.719"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:09.719" starttime="20201124 15:09:05.810"></status>
</kw>
<msg timestamp="20201124 15:09:09.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:09.720" starttime="20201124 15:09:05.810"></status>
</kw>
<msg timestamp="20201124 15:09:09.720" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201124 15:09:09.720" starttime="20201124 15:09:05.809"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201124 15:09:09.720" starttime="20201124 15:09:09.720"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:09.721" starttime="20201124 15:09:05.809"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:09.721" starttime="20201124 15:09:05.808"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:09.732" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:13.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:13.181" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:09:13.181" starttime="20201124 15:09:09.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:13.182" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:09:13.182" starttime="20201124 15:09:13.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:13.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:13.183" starttime="20201124 15:09:13.182"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:13.183" starttime="20201124 15:09:09.727"></status>
</kw>
<msg timestamp="20201124 15:09:13.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:13.183" starttime="20201124 15:09:09.727"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:13.184" starttime="20201124 15:09:09.722"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:13.184" starttime="20201124 15:09:09.721"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:13.184" starttime="20201124 15:09:09.721"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 15:09:13.184" starttime="20201124 15:09:13.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:13.188" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:16.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:16.253" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:09:12.901Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 15:09:16.253" starttime="20201124 15:09:13.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:16.254" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:09:12.901Z",
  "modificationTime" : "2020-11-24T15:09:12.901Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 15:09:16.254" starttime="20201124 15:09:16.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:16.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:16.255" starttime="20201124 15:09:16.254"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:16.255" starttime="20201124 15:09:13.186"></status>
</kw>
<msg timestamp="20201124 15:09:16.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:16.255" starttime="20201124 15:09:13.185"></status>
</kw>
<msg timestamp="20201124 15:09:16.256" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:09:12.901Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 15:09:16.256" starttime="20201124 15:09:13.185"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201124 15:09:16.256" starttime="20201124 15:09:16.256"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:09:16.260" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:09:16.260" starttime="20201124 15:09:16.260"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:09:16.261" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:09:16.261" starttime="20201124 15:09:16.260"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:16.261" starttime="20201124 15:09:16.259"></status>
</kw>
<msg timestamp="20201124 15:09:16.261" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:09:16.261" starttime="20201124 15:09:16.259"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:16.261" starttime="20201124 15:09:16.258"></status>
</kw>
<msg timestamp="20201124 15:09:16.261" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 15:09:16.261" starttime="20201124 15:09:16.257"></status>
</kw>
<msg timestamp="20201124 15:09:16.262" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 15:09:16.262" starttime="20201124 15:09:16.256"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:16.265" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:19.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:19.213" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:09:19.213" starttime="20201124 15:09:16.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:19.214" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:09:19.215" starttime="20201124 15:09:19.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:19.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:19.215" starttime="20201124 15:09:19.215"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:19.216" starttime="20201124 15:09:16.263"></status>
</kw>
<msg timestamp="20201124 15:09:19.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:19.216" starttime="20201124 15:09:16.262"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:19.216" starttime="20201124 15:09:16.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:19.220" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:25.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:25.917" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:09:25.917" starttime="20201124 15:09:19.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:25.918" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:09:25.918" starttime="20201124 15:09:25.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:25.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:25.919" starttime="20201124 15:09:25.919"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:25.919" starttime="20201124 15:09:19.217"></status>
</kw>
<msg timestamp="20201124 15:09:25.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:25.919" starttime="20201124 15:09:19.217"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:25.920" starttime="20201124 15:09:19.216"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:25.924" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:30.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:30.960" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:09:30.960" starttime="20201124 15:09:25.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:30.961" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:09:30.961" starttime="20201124 15:09:30.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:30.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:30.962" starttime="20201124 15:09:30.961"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:30.962" starttime="20201124 15:09:25.921"></status>
</kw>
<msg timestamp="20201124 15:09:30.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:30.962" starttime="20201124 15:09:25.920"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:30.962" starttime="20201124 15:09:25.920"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:30.967" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:36.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:36.231" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:09:36.231" starttime="20201124 15:09:30.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:36.232" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:09:36.232" starttime="20201124 15:09:36.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:36.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:36.233" starttime="20201124 15:09:36.232"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:36.233" starttime="20201124 15:09:30.963"></status>
</kw>
<msg timestamp="20201124 15:09:36.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:36.233" starttime="20201124 15:09:30.963"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:36.233" starttime="20201124 15:09:30.962"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:09:36.234" critical="yes" starttime="20201124 15:09:01.434"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:09:36.239" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:09:36.239" starttime="20201124 15:09:36.238"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:09:36.239" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:09:36.239" starttime="20201124 15:09:36.239"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:36.240" starttime="20201124 15:09:36.238"></status>
</kw>
<msg timestamp="20201124 15:09:36.240" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:09:36.240" starttime="20201124 15:09:36.237"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:36.240" starttime="20201124 15:09:36.236"></status>
</kw>
<msg timestamp="20201124 15:09:36.240" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:09:36.240" starttime="20201124 15:09:36.236"></status>
</kw>
<msg timestamp="20201124 15:09:36.240" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:09:36.240" starttime="20201124 15:09:36.235"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:36.244" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:39.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:39.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:09:39.495" starttime="20201124 15:09:36.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:39.496" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:09:39.497" starttime="20201124 15:09:39.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:39.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:39.497" starttime="20201124 15:09:39.497"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:39.498" starttime="20201124 15:09:36.241"></status>
</kw>
<msg timestamp="20201124 15:09:39.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:39.498" starttime="20201124 15:09:36.241"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:39.498" starttime="20201124 15:09:36.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:39.502" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:42.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:42.504" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:09:42.504" starttime="20201124 15:09:39.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:42.505" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:09:42.505" starttime="20201124 15:09:42.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:42.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:42.506" starttime="20201124 15:09:42.505"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:42.506" starttime="20201124 15:09:39.499"></status>
</kw>
<msg timestamp="20201124 15:09:42.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:42.507" starttime="20201124 15:09:39.499"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:42.507" starttime="20201124 15:09:39.498"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:09:42.507" critical="yes" starttime="20201124 15:09:36.234"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201124 15:09:42.509" starttime="20201124 15:09:01.314"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:11:17.849" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:11:17.850" starttime="20201124 15:11:17.849"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:11:17.850" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:11:17.850" starttime="20201124 15:11:17.850"></status>
</kw>
<status status="PASS" endtime="20201124 15:11:17.850" starttime="20201124 15:11:17.849"></status>
</kw>
<msg timestamp="20201124 15:11:17.850" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:11:17.850" starttime="20201124 15:11:17.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:11:17.851" starttime="20201124 15:11:17.851"></status>
</kw>
<msg timestamp="20201124 15:11:17.852" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:11:17.852" starttime="20201124 15:11:17.851"></status>
</kw>
<status status="PASS" endtime="20201124 15:11:17.852" starttime="20201124 15:11:17.847"></status>
</kw>
<msg timestamp="20201124 15:11:17.852" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:11:17.852" starttime="20201124 15:11:17.847"></status>
</kw>
<msg timestamp="20201124 15:11:17.852" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:11:17.852" starttime="20201124 15:11:17.846"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:11:17.853" level="INFO">${random} = 27253</msg>
<status status="PASS" endtime="20201124 15:11:17.853" starttime="20201124 15:11:17.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:11:17.859" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-27253 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:11:21.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:11:21.246" level="INFO">${output} = 2020-11-24 15:11:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:11:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 15:11:21.246" starttime="20201124 15:11:17.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:11:21.247" level="INFO">2020-11-24 15:11:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:11:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:11:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:11:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:11:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6B39249C7A78-&gt;0ea53cce-54bf-457b-b0e5-5cb4068e53be
2020-11-24 15:11:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 15:11:21.247" starttime="20201124 15:11:21.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:11:21.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:11:21.248" starttime="20201124 15:11:21.247"></status>
</kw>
<status status="PASS" endtime="20201124 15:11:21.248" starttime="20201124 15:11:17.854"></status>
</kw>
<msg timestamp="20201124 15:11:21.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:11:21.248" starttime="20201124 15:11:17.853"></status>
</kw>
<msg timestamp="20201124 15:11:21.249" level="INFO">${result} = 2020-11-24 15:11:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:11:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 15:11:21.249" starttime="20201124 15:11:17.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:11:21.253" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:11:23.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:11:23.094" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:11 ofs://om/volume1/bucket1/ozone-27253
-rw-...</msg>
<status status="PASS" endtime="20201124 15:11:23.094" starttime="20201124 15:11:21.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:11:23.095" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:11 ofs://om/volume1/bucket1/ozone-27253
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:09 ofs://om/volume1/bucket1/ozone-77656
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:09 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:10 ofs://om/volume1/bucket1/wordcount-80.txt</msg>
<status status="PASS" endtime="20201124 15:11:23.095" starttime="20201124 15:11:23.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:11:23.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:11:23.096" starttime="20201124 15:11:23.095"></status>
</kw>
<status status="PASS" endtime="20201124 15:11:23.096" starttime="20201124 15:11:21.251"></status>
</kw>
<msg timestamp="20201124 15:11:23.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:11:23.096" starttime="20201124 15:11:21.250"></status>
</kw>
<msg timestamp="20201124 15:11:23.096" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:11 ofs://om/volume1/bucket1/ozone-27253
-rw-...</msg>
<status status="PASS" endtime="20201124 15:11:23.096" starttime="20201124 15:11:21.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:11:23.097" starttime="20201124 15:11:23.097"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:11:23.097" critical="yes" starttime="20201124 15:11:17.845"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 15:11:23.099" starttime="20201124 15:11:17.793"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:09:47.264" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:09:47.264" starttime="20201124 15:09:47.264"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:09:47.265" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:09:47.265" starttime="20201124 15:09:47.264"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:47.265" starttime="20201124 15:09:47.263"></status>
</kw>
<msg timestamp="20201124 15:09:47.265" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:09:47.265" starttime="20201124 15:09:47.263"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:47.265" starttime="20201124 15:09:47.262"></status>
</kw>
<msg timestamp="20201124 15:09:47.265" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:09:47.265" starttime="20201124 15:09:47.262"></status>
</kw>
<msg timestamp="20201124 15:09:47.266" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:09:47.266" starttime="20201124 15:09:47.261"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:09:47.266" level="INFO">${random} = 77656</msg>
<status status="PASS" endtime="20201124 15:09:47.266" starttime="20201124 15:09:47.266"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:47.272" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-77656 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:50.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:50.959" level="INFO">${output} = 2020-11-24 15:09:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:09:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 15:09:50.959" starttime="20201124 15:09:47.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:50.960" level="INFO">2020-11-24 15:09:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:09:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:09:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:09:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:09:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D6926C1904A5-&gt;0ea53cce-54bf-457b-b0e5-5cb4068e53be
2020-11-24 15:09:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 15:09:50.960" starttime="20201124 15:09:50.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:50.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:50.961" starttime="20201124 15:09:50.960"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:50.961" starttime="20201124 15:09:47.267"></status>
</kw>
<msg timestamp="20201124 15:09:50.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:50.961" starttime="20201124 15:09:47.267"></status>
</kw>
<msg timestamp="20201124 15:09:50.961" level="INFO">${result} = 2020-11-24 15:09:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:09:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 15:09:50.961" starttime="20201124 15:09:47.266"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:50.966" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:52.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:52.741" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:09 o3fs://bucket1.volume1.om/ozone-77656
dr...</msg>
<status status="PASS" endtime="20201124 15:09:52.741" starttime="20201124 15:09:50.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:52.742" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:09 o3fs://bucket1.volume1.om/ozone-77656
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:09 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 15:09:52.742" starttime="20201124 15:09:52.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:52.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:52.743" starttime="20201124 15:09:52.743"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:52.743" starttime="20201124 15:09:50.963"></status>
</kw>
<msg timestamp="20201124 15:09:52.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:52.744" starttime="20201124 15:09:50.962"></status>
</kw>
<msg timestamp="20201124 15:09:52.744" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 15:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 15:09 o3fs://bucket1.volume1.om/ozone-77656
dr...</msg>
<status status="PASS" endtime="20201124 15:09:52.744" starttime="20201124 15:09:50.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:09:52.744" starttime="20201124 15:09:52.744"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:09:52.745" critical="yes" starttime="20201124 15:09:47.260"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 15:09:52.746" starttime="20201124 15:09:47.211"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:11:27.916" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:11:27.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:11:27.921" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:11:27.921" starttime="20201124 15:11:27.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:11:27.921" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:11:27.922" starttime="20201124 15:11:27.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:11:27.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:11:27.922" starttime="20201124 15:11:27.922"></status>
</kw>
<status status="PASS" endtime="20201124 15:11:27.922" starttime="20201124 15:11:27.911"></status>
</kw>
<msg timestamp="20201124 15:11:27.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:11:27.923" starttime="20201124 15:11:27.910"></status>
</kw>
<msg timestamp="20201124 15:11:27.923" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:11:27.923" starttime="20201124 15:11:27.910"></status>
</kw>
<msg timestamp="20201124 15:11:27.923" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:11:27.923" starttime="20201124 15:11:27.909"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:11:27.927" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:11:27.927" starttime="20201124 15:11:27.927"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:11:27.928" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:11:27.928" starttime="20201124 15:11:27.927"></status>
</kw>
<status status="PASS" endtime="20201124 15:11:27.928" starttime="20201124 15:11:27.925"></status>
</kw>
<msg timestamp="20201124 15:11:27.928" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:11:27.928" starttime="20201124 15:11:27.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:11:27.929" starttime="20201124 15:11:27.929"></status>
</kw>
<msg timestamp="20201124 15:11:27.929" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:11:27.929" starttime="20201124 15:11:27.928"></status>
</kw>
<status status="PASS" endtime="20201124 15:11:27.930" starttime="20201124 15:11:27.924"></status>
</kw>
<msg timestamp="20201124 15:11:27.930" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:11:27.930" starttime="20201124 15:11:27.924"></status>
</kw>
<msg timestamp="20201124 15:11:27.930" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:11:27.930" starttime="20201124 15:11:27.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:11:27.934" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:12:02.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:12:02.722" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:11:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:11:30 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 15:12:02.722" starttime="20201124 15:11:27.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:12:02.724" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:11:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:11:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:11:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:11:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:11:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6DD1A148C9B4-&gt;0ea53cce-54bf-457b-b0e5-5cb4068e53be
2020-11-24 15:11:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 15:11:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-24 15:11:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:11:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:11:32 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:11:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606230514599_0003
2020-11-24 15:11:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 15:11:32 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 15:11:32 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 15:11:32 INFO  YarnClientImpl:329 - Submitted application application_1606230514599_0003
2020-11-24 15:11:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606230514599_0003/
2020-11-24 15:11:32 INFO  Job:1619 - Running job: job_1606230514599_0003
2020-11-24 15:11:39 INFO  Job:1640 - Job job_1606230514599_0003 running in uber mode : false
2020-11-24 15:11:39 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:11:46 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:11:51 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:11:56 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:12:01 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:12:02 INFO  Job:1658 - Job job_1606230514599_0003 completed successfully
2020-11-24 15:12:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056225
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=750
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39192
		Total time spent by all reduces in occupied slots (ms)=15380
		Total time spent by all map tasks (ms)=9798
		Total time spent by all reduce tasks (ms)=3845
		Total vcore-milliseconds taken by all map tasks=9798
		Total vcore-milliseconds taken by all reduce tasks=3845
		Total megabyte-milliseconds taken by all map tasks=40132608
		Total megabyte-milliseconds taken by all reduce tasks=15749120
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=396
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=710
		CPU time spent (ms)=7320
		Physical memory (bytes) snapshot=1493159936
		Virtual memory (bytes) snapshot=15813259264
		Total committed heap usage (bytes)=1729101824
		Peak Map Physical memory (bytes)=374960128
		Peak Map Virtual memory (bytes)=3952521216
		Peak Reduce Physical memory (bytes)=384233472
		Peak Reduce Virtual memory (bytes)=3967500288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.85 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 15:12:02.724" starttime="20201124 15:12:02.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:12:02.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:12:02.724" starttime="20201124 15:12:02.724"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:02.725" starttime="20201124 15:11:27.931"></status>
</kw>
<msg timestamp="20201124 15:12:02.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:12:02.725" starttime="20201124 15:11:27.931"></status>
</kw>
<msg timestamp="20201124 15:12:02.725" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:11:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:11:30 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 15:12:02.726" starttime="20201124 15:11:27.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:12:02.726" starttime="20201124 15:12:02.726"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:12:02.726" critical="yes" starttime="20201124 15:11:27.909"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:12:02.732" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:12:02.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:12:02.737" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:12:02.737" starttime="20201124 15:12:02.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:12:02.738" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:12:02.738" starttime="20201124 15:12:02.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:12:02.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:12:02.738" starttime="20201124 15:12:02.738"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:02.739" starttime="20201124 15:12:02.729"></status>
</kw>
<msg timestamp="20201124 15:12:02.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:12:02.739" starttime="20201124 15:12:02.729"></status>
</kw>
<msg timestamp="20201124 15:12:02.739" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:12:02.739" starttime="20201124 15:12:02.728"></status>
</kw>
<msg timestamp="20201124 15:12:02.739" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:12:02.739" starttime="20201124 15:12:02.728"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:12:02.740" level="INFO">${random} = 68</msg>
<status status="PASS" endtime="20201124 15:12:02.740" starttime="20201124 15:12:02.739"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:12:02.744" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:12:02.744" starttime="20201124 15:12:02.744"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:12:02.745" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:12:02.745" starttime="20201124 15:12:02.745"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:02.745" starttime="20201124 15:12:02.743"></status>
</kw>
<msg timestamp="20201124 15:12:02.745" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:12:02.745" starttime="20201124 15:12:02.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:12:02.746" starttime="20201124 15:12:02.746"></status>
</kw>
<msg timestamp="20201124 15:12:02.746" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 15:12:02.746" starttime="20201124 15:12:02.746"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:02.747" starttime="20201124 15:12:02.742"></status>
</kw>
<msg timestamp="20201124 15:12:02.747" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:12:02.747" starttime="20201124 15:12:02.741"></status>
</kw>
<msg timestamp="20201124 15:12:02.747" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 15:12:02.747" starttime="20201124 15:12:02.740"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:12:02.750" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:12:02.750" starttime="20201124 15:12:02.750"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:12:02.751" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:12:02.751" starttime="20201124 15:12:02.750"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:02.751" starttime="20201124 15:12:02.749"></status>
</kw>
<msg timestamp="20201124 15:12:02.751" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:12:02.751" starttime="20201124 15:12:02.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:12:02.753" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201124 15:12:02.753" starttime="20201124 15:12:02.752"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:12:02.753" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201124 15:12:02.753" starttime="20201124 15:12:02.753"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:02.753" starttime="20201124 15:12:02.752"></status>
</kw>
<msg timestamp="20201124 15:12:02.753" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201124 15:12:02.753" starttime="20201124 15:12:02.751"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:02.754" starttime="20201124 15:12:02.748"></status>
</kw>
<msg timestamp="20201124 15:12:02.754" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 15:12:02.754" starttime="20201124 15:12:02.748"></status>
</kw>
<msg timestamp="20201124 15:12:02.754" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 15:12:02.754" starttime="20201124 15:12:02.747"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 15:12:02.757" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 15:12:02.757" starttime="20201124 15:12:02.757"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:12:02.758" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 15:12:02.758" starttime="20201124 15:12:02.757"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:02.758" starttime="20201124 15:12:02.756"></status>
</kw>
<msg timestamp="20201124 15:12:02.758" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 15:12:02.758" starttime="20201124 15:12:02.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:12:02.759" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201124 15:12:02.759" starttime="20201124 15:12:02.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:12:02.760" level="INFO">${result} = /wordcount-68.txt</msg>
<status status="PASS" endtime="20201124 15:12:02.760" starttime="20201124 15:12:02.759"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:02.760" starttime="20201124 15:12:02.759"></status>
</kw>
<msg timestamp="20201124 15:12:02.760" level="INFO">${path_with_leading} = /wordcount-68.txt</msg>
<status status="PASS" endtime="20201124 15:12:02.760" starttime="20201124 15:12:02.758"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:02.760" starttime="20201124 15:12:02.755"></status>
</kw>
<msg timestamp="20201124 15:12:02.761" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-68.txt</msg>
<status status="PASS" endtime="20201124 15:12:02.761" starttime="20201124 15:12:02.755"></status>
</kw>
<msg timestamp="20201124 15:12:02.761" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-68.txt</msg>
<status status="PASS" endtime="20201124 15:12:02.761" starttime="20201124 15:12:02.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:12:02.764" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-68.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:12:42.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:12:42.785" level="INFO">${output} = 2020-11-24 15:12:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-24 15:12:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201124 15:12:42.785" starttime="20201124 15:12:02.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:12:42.786" level="INFO">2020-11-24 15:12:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-24 15:12:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:12:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:12:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:12:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:12:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:12:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C9A943F5931D-&gt;0ea53cce-54bf-457b-b0e5-5cb4068e53be
2020-11-24 15:12:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:12:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:12:08 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:12:11 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606230514599_0004
2020-11-24 15:12:11 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 15:12:11 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 15:12:11 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 15:12:11 INFO  YarnClientImpl:329 - Submitted application application_1606230514599_0004
2020-11-24 15:12:11 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606230514599_0004/
2020-11-24 15:12:11 INFO  Job:1619 - Running job: job_1606230514599_0004
2020-11-24 15:12:20 INFO  Job:1640 - Job job_1606230514599_0004 running in uber mode : false
2020-11-24 15:12:20 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:12:26 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:12:32 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:12:37 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:12:41 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:12:42 INFO  Job:1658 - Job job_1606230514599_0004 completed successfully
2020-11-24 15:12:42 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118611
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38736
		Total time spent by all reduces in occupied slots (ms)=14256
		Total time spent by all map tasks (ms)=9684
		Total time spent by all reduce tasks (ms)=3564
		Total vcore-milliseconds taken by all map tasks=9684
		Total vcore-milliseconds taken by all reduce tasks=3564
		Total megabyte-milliseconds taken by all map tasks=39665664
		Total megabyte-milliseconds taken by all reduce tasks=14598144
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=639
		CPU time spent (ms)=7080
		Physical memory (bytes) snapshot=1477013504
		Virtual memory (bytes) snapshot=15804243968
		Total committed heap usage (bytes)=1676673024
		Peak Map Physical memory (bytes)=371736576
		Peak Map Virtual memory (bytes)=3947094016
		Peak Reduce Physical memory (bytes)=376274944
		Peak Reduce Virtual memory (bytes)=3971805184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 15:12:42.786" starttime="20201124 15:12:42.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:12:42.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:12:42.787" starttime="20201124 15:12:42.787"></status>
</kw>
<status status="PASS" endtime="20201124 15:12:42.787" starttime="20201124 15:12:02.762"></status>
</kw>
<msg timestamp="20201124 15:12:42.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:12:42.788" starttime="20201124 15:12:02.761"></status>
</kw>
<msg timestamp="20201124 15:12:42.788" level="INFO">${output} = 2020-11-24 15:12:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-24 15:12:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201124 15:12:42.788" starttime="20201124 15:12:02.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 15:12:42.789" starttime="20201124 15:12:42.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:12:42.789" starttime="20201124 15:12:42.789"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:12:42.789" critical="yes" starttime="20201124 15:12:02.727"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 15:12:42.791" starttime="20201124 15:11:27.858"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:57.540" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:09:57.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:09:57.546" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:09:57.546" starttime="20201124 15:09:57.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:09:57.547" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:09:57.547" starttime="20201124 15:09:57.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:09:57.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:09:57.548" starttime="20201124 15:09:57.547"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:57.548" starttime="20201124 15:09:57.535"></status>
</kw>
<msg timestamp="20201124 15:09:57.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:09:57.548" starttime="20201124 15:09:57.534"></status>
</kw>
<msg timestamp="20201124 15:09:57.548" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:09:57.548" starttime="20201124 15:09:57.534"></status>
</kw>
<msg timestamp="20201124 15:09:57.548" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:09:57.549" starttime="20201124 15:09:57.533"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:09:57.553" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:09:57.553" starttime="20201124 15:09:57.553"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:09:57.554" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:09:57.554" starttime="20201124 15:09:57.553"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:57.554" starttime="20201124 15:09:57.551"></status>
</kw>
<msg timestamp="20201124 15:09:57.554" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:09:57.554" starttime="20201124 15:09:57.551"></status>
</kw>
<status status="PASS" endtime="20201124 15:09:57.555" starttime="20201124 15:09:57.550"></status>
</kw>
<msg timestamp="20201124 15:09:57.555" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:09:57.555" starttime="20201124 15:09:57.549"></status>
</kw>
<msg timestamp="20201124 15:09:57.555" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:09:57.555" starttime="20201124 15:09:57.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:09:57.558" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:10:37.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:10:37.544" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:09:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:09:59 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 15:10:37.544" starttime="20201124 15:09:57.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:10:37.545" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:09:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:09:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:09:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:10:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:10:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-602A78E91998-&gt;0ea53cce-54bf-457b-b0e5-5cb4068e53be
2020-11-24 15:10:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 15:10:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-24 15:10:01 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:10:01 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:10:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606230514599_0001
2020-11-24 15:10:01 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 15:10:02 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 15:10:02 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 15:10:02 INFO  YarnClientImpl:329 - Submitted application application_1606230514599_0001
2020-11-24 15:10:02 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606230514599_0001/
2020-11-24 15:10:02 INFO  Job:1619 - Running job: job_1606230514599_0001
2020-11-24 15:10:12 INFO  Job:1640 - Job job_1606230514599_0001 running in uber mode : false
2020-11-24 15:10:12 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:10:19 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:10:25 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:10:30 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:10:35 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:10:36 INFO  Job:1658 - Job job_1606230514599_0001 completed successfully
2020-11-24 15:10:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41264
		Total time spent by all reduces in occupied slots (ms)=15324
		Total time spent by all map tasks (ms)=10316
		Total time spent by all reduce tasks (ms)=3831
		Total vcore-milliseconds taken by all map tasks=10316
		Total vcore-milliseconds taken by all reduce tasks=3831
		Total megabyte-milliseconds taken by all map tasks=42254336
		Total megabyte-milliseconds taken by all reduce tasks=15691776
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=689
		CPU time spent (ms)=6970
		Physical memory (bytes) snapshot=1471516672
		Virtual memory (bytes) snapshot=15797936128
		Total committed heap usage (bytes)=1701838848
		Peak Map Physical memory (bytes)=372027392
		Peak Map Virtual memory (bytes)=3947098112
		Peak Reduce Physical memory (bytes)=375042048
		Peak Reduce Virtual memory (bytes)=3963600896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.073 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 15:10:37.545" starttime="20201124 15:10:37.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:10:37.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:10:37.546" starttime="20201124 15:10:37.545"></status>
</kw>
<status status="PASS" endtime="20201124 15:10:37.546" starttime="20201124 15:09:57.556"></status>
</kw>
<msg timestamp="20201124 15:10:37.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:10:37.547" starttime="20201124 15:09:57.556"></status>
</kw>
<msg timestamp="20201124 15:10:37.547" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 15:09:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:09:59 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 15:10:37.547" starttime="20201124 15:09:57.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:10:37.548" starttime="20201124 15:10:37.547"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:10:37.548" critical="yes" starttime="20201124 15:09:57.533"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:10:37.553" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:10:37.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:10:37.558" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:10:37.558" starttime="20201124 15:10:37.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:10:37.559" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:10:37.559" starttime="20201124 15:10:37.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:10:37.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:10:37.560" starttime="20201124 15:10:37.559"></status>
</kw>
<status status="PASS" endtime="20201124 15:10:37.560" starttime="20201124 15:10:37.550"></status>
</kw>
<msg timestamp="20201124 15:10:37.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:10:37.560" starttime="20201124 15:10:37.550"></status>
</kw>
<msg timestamp="20201124 15:10:37.561" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:10:37.561" starttime="20201124 15:10:37.549"></status>
</kw>
<msg timestamp="20201124 15:10:37.561" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 15:10:37.561" starttime="20201124 15:10:37.549"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:10:37.561" level="INFO">${random} = 80</msg>
<status status="PASS" endtime="20201124 15:10:37.561" starttime="20201124 15:10:37.561"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:10:37.565" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:10:37.565" starttime="20201124 15:10:37.565"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:10:37.566" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:10:37.566" starttime="20201124 15:10:37.565"></status>
</kw>
<status status="PASS" endtime="20201124 15:10:37.566" starttime="20201124 15:10:37.564"></status>
</kw>
<msg timestamp="20201124 15:10:37.566" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:10:37.566" starttime="20201124 15:10:37.563"></status>
</kw>
<status status="PASS" endtime="20201124 15:10:37.566" starttime="20201124 15:10:37.563"></status>
</kw>
<msg timestamp="20201124 15:10:37.566" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:10:37.566" starttime="20201124 15:10:37.562"></status>
</kw>
<msg timestamp="20201124 15:10:37.566" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 15:10:37.567" starttime="20201124 15:10:37.562"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:10:37.570" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:10:37.570" starttime="20201124 15:10:37.570"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:10:37.570" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:10:37.570" starttime="20201124 15:10:37.570"></status>
</kw>
<status status="PASS" endtime="20201124 15:10:37.571" starttime="20201124 15:10:37.569"></status>
</kw>
<msg timestamp="20201124 15:10:37.571" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:10:37.571" starttime="20201124 15:10:37.569"></status>
</kw>
<status status="PASS" endtime="20201124 15:10:37.571" starttime="20201124 15:10:37.568"></status>
</kw>
<msg timestamp="20201124 15:10:37.571" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 15:10:37.571" starttime="20201124 15:10:37.567"></status>
</kw>
<msg timestamp="20201124 15:10:37.571" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 15:10:37.571" starttime="20201124 15:10:37.567"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 15:10:37.574" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 15:10:37.574" starttime="20201124 15:10:37.574"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:10:37.575" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 15:10:37.575" starttime="20201124 15:10:37.575"></status>
</kw>
<status status="PASS" endtime="20201124 15:10:37.575" starttime="20201124 15:10:37.574"></status>
</kw>
<msg timestamp="20201124 15:10:37.575" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 15:10:37.575" starttime="20201124 15:10:37.573"></status>
</kw>
<status status="PASS" endtime="20201124 15:10:37.576" starttime="20201124 15:10:37.573"></status>
</kw>
<msg timestamp="20201124 15:10:37.576" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-80.txt</msg>
<status status="PASS" endtime="20201124 15:10:37.576" starttime="20201124 15:10:37.572"></status>
</kw>
<msg timestamp="20201124 15:10:37.576" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-80.txt</msg>
<status status="PASS" endtime="20201124 15:10:37.576" starttime="20201124 15:10:37.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:10:37.581" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-80.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:11:13.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:11:13.073" level="INFO">${output} = 2020-11-24 15:10:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-24 15:10:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201124 15:11:13.073" starttime="20201124 15:10:37.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:11:13.074" level="INFO">2020-11-24 15:10:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-24 15:10:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 15:10:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 15:10:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:10:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 15:10:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:10:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-34B360AC142C-&gt;0ea53cce-54bf-457b-b0e5-5cb4068e53be
2020-11-24 15:10:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:10:41 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 15:10:41 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 15:10:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606230514599_0002
2020-11-24 15:10:41 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 15:10:42 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 15:10:42 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 15:10:42 INFO  YarnClientImpl:329 - Submitted application application_1606230514599_0002
2020-11-24 15:10:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606230514599_0002/
2020-11-24 15:10:42 INFO  Job:1619 - Running job: job_1606230514599_0002
2020-11-24 15:10:50 INFO  Job:1640 - Job job_1606230514599_0002 running in uber mode : false
2020-11-24 15:10:50 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 15:10:56 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 15:11:02 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 15:11:07 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 15:11:11 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 15:11:12 INFO  Job:1658 - Job job_1606230514599_0002 completed successfully
2020-11-24 15:11:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39620
		Total time spent by all reduces in occupied slots (ms)=14672
		Total time spent by all map tasks (ms)=9905
		Total time spent by all reduce tasks (ms)=3668
		Total vcore-milliseconds taken by all map tasks=9905
		Total vcore-milliseconds taken by all reduce tasks=3668
		Total megabyte-milliseconds taken by all map tasks=40570880
		Total megabyte-milliseconds taken by all reduce tasks=15024128
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=660
		CPU time spent (ms)=6710
		Physical memory (bytes) snapshot=1422012416
		Virtual memory (bytes) snapshot=15768641536
		Total committed heap usage (bytes)=1691877376
		Peak Map Physical memory (bytes)=373280768
		Peak Map Virtual memory (bytes)=3950125056
		Peak Reduce Physical memory (bytes)=352903168
		Peak Reduce Virtual memory (bytes)=3950747648
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 15:11:13.074" starttime="20201124 15:11:13.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:11:13.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:11:13.075" starttime="20201124 15:11:13.075"></status>
</kw>
<status status="PASS" endtime="20201124 15:11:13.075" starttime="20201124 15:10:37.577"></status>
</kw>
<msg timestamp="20201124 15:11:13.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:11:13.076" starttime="20201124 15:10:37.577"></status>
</kw>
<msg timestamp="20201124 15:11:13.076" level="INFO">${output} = 2020-11-24 15:10:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-24 15:10:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201124 15:11:13.076" starttime="20201124 15:10:37.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 15:11:13.077" starttime="20201124 15:11:13.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 15:11:13.077" starttime="20201124 15:11:13.077"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 15:11:13.077" critical="yes" starttime="20201124 15:10:37.548"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 15:11:13.078" starttime="20201124 15:09:57.481"></status>
</suite>
<status status="PASS" elapsedtime="202566" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="588880" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
