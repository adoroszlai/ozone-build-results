<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201124 15:40:03.819" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:00.769" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:36:11.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:36:11.416" level="INFO">${output} = 2020-11-24 15:36:02,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:02,628 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 15:36:11.416" starttime="20201124 15:36:00.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:36:11.417" level="INFO">2020-11-24 15:36:02,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:02,628 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:36:02,628 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-24 15:36:05,052 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-24 15:36:05,053 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-24 15:36:05,053 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-24 15:36:05,053 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-24 15:36:05,053 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-24 15:36:05,053 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-24 15:36:05,053 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-24 15:36:05,056 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-24 15:36:05,058 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:05,125 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-53379, with testuser/scm@EXAMPLE.COM as owner.
2020-11-24 15:36:05,676 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-53379/bucket-0-78298, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-24 15:36:06,090 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:07,100 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:08,103 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:08,946 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-24 15:36:09,105 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:10,105 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,503
Average Time spent in bucket creation: 00:00:00,216
Average Time spent in key creation: 00:00:01,111
Average Time spent in key write: 00:00:02,462
Total bytes written: 10240
Total Execution time: 00:00:08,253
***************************************************</msg>
<status status="PASS" endtime="20201124 15:36:11.417" starttime="20201124 15:36:11.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:36:11.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:36:11.418" starttime="20201124 15:36:11.417"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:11.418" starttime="20201124 15:36:00.762"></status>
</kw>
<msg timestamp="20201124 15:36:11.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:36:11.418" starttime="20201124 15:36:00.762"></status>
</kw>
<msg timestamp="20201124 15:36:11.419" level="INFO">${result} = 2020-11-24 15:36:02,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:02,628 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 15:36:11.419" starttime="20201124 15:36:00.761"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201124 15:36:11.420" starttime="20201124 15:36:11.419"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:11.420" starttime="20201124 15:36:11.419"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:36:11.420" critical="yes" starttime="20201124 15:36:00.761"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:11.427" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:36:19.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:36:19.401" level="INFO">${output} = 2020-11-24 15:36:13,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:13,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 15:36:19.401" starttime="20201124 15:36:11.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:36:19.403" level="INFO">2020-11-24 15:36:13,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:13,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:36:13,256 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-24 15:36:13,443 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wlvns6l2kg
2020-11-24 15:36:13,454 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-24 15:36:14,460 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:14,757 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-24 15:36:14,825 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-24 15:36:15,460 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:15,582 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-24 15:36:15,946 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 15:36:15,947 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-2EAB5B4BCB36-&gt;270b926f-ac95-4149-bec0-50650dd1fd0b
2020-11-24 15:36:15,948 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 15:36:16,461 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:17,461 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:18,462 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-24 15:36:19,058 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3425.818338, max=3425.818338, mean=3425.818338, stddev=0.0, median=3425.818338, p75=3425.818338, p95=3425.818338, p98=3425.818338, p99=3425.818338, p999=3425.818338, mean_rate=0.24038749483386243, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-24 15:36:19,059 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-11-24 15:36:19,068 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-24 15:36:19,068 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201124 15:36:19.403" starttime="20201124 15:36:19.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:36:19.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:36:19.404" starttime="20201124 15:36:19.403"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:19.404" starttime="20201124 15:36:11.424"></status>
</kw>
<msg timestamp="20201124 15:36:19.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:36:19.404" starttime="20201124 15:36:11.423"></status>
</kw>
<msg timestamp="20201124 15:36:19.405" level="INFO">${result} = 2020-11-24 15:36:13,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:13,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 15:36:19.405" starttime="20201124 15:36:11.423"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201124 15:36:19.406" starttime="20201124 15:36:19.406"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:19.406" starttime="20201124 15:36:19.405"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:36:19.406" critical="yes" starttime="20201124 15:36:11.422"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:19.412" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:36:23.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:36:23.995" level="INFO">${output} = 2020-11-24 15:36:21,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:21,147 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 15:36:23.995" starttime="20201124 15:36:19.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:36:23.996" level="INFO">2020-11-24 15:36:21,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:21,147 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:36:21,147 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-24 15:36:21,318 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 5vmi3znsec
2020-11-24 15:36:21,340 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-24 15:36:22,342 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:23,342 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-24 15:36:23,927 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=237.618007, max=237.618007, mean=237.618007, stddev=0.0, median=237.618007, p75=237.618007, p95=237.618007, p98=237.618007, p99=237.618007, p999=237.618007, mean_rate=0.8881755710083854, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-24 15:36:23,932 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-24 15:36:23,933 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-24 15:36:23,933 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201124 15:36:23.996" starttime="20201124 15:36:23.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:36:23.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:36:23.997" starttime="20201124 15:36:23.996"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:23.997" starttime="20201124 15:36:19.409"></status>
</kw>
<msg timestamp="20201124 15:36:23.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:36:23.997" starttime="20201124 15:36:19.408"></status>
</kw>
<msg timestamp="20201124 15:36:23.998" level="INFO">${result} = 2020-11-24 15:36:21,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:21,147 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 15:36:23.998" starttime="20201124 15:36:19.408"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201124 15:36:23.999" starttime="20201124 15:36:23.998"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:23.999" starttime="20201124 15:36:23.998"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:36:23.999" critical="yes" starttime="20201124 15:36:19.407"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:24.005" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:36:28.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:36:28.632" level="INFO">${output} = 2020-11-24 15:36:25,607 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:25,844 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 15:36:28.632" starttime="20201124 15:36:24.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:36:28.633" level="INFO">2020-11-24 15:36:25,607 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:25,844 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-24 15:36:25,844 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-24 15:36:26,015 [main] INFO freon.BaseFreonGenerator: Executing test with prefix rmfbljmq9k
2020-11-24 15:36:26,036 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-24 15:36:27,042 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 15:36:28,043 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-24 15:36:28,599 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=67.935843, max=67.935843, mean=67.935843, stddev=0.0, median=67.935843, p75=67.935843, p95=67.935843, p98=67.935843, p99=67.935843, p999=67.935843, mean_rate=0.878977273938863, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-24 15:36:28,600 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-24 15:36:28,603 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-24 15:36:28,603 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201124 15:36:28.633" starttime="20201124 15:36:28.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:36:28.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:36:28.634" starttime="20201124 15:36:28.633"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:28.634" starttime="20201124 15:36:24.002"></status>
</kw>
<msg timestamp="20201124 15:36:28.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:36:28.634" starttime="20201124 15:36:24.002"></status>
</kw>
<msg timestamp="20201124 15:36:28.634" level="INFO">${result} = 2020-11-24 15:36:25,607 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 15:36:25,844 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 15:36:28.634" starttime="20201124 15:36:24.001"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201124 15:36:28.635" starttime="20201124 15:36:28.635"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:28.635" starttime="20201124 15:36:28.635"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 15:36:28.636" critical="yes" starttime="20201124 15:36:24.000"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201124 15:36:28.637" starttime="20201124 15:36:00.736"></status>
</suite>
<status status="PASS" endtime="20201124 15:36:28.640" starttime="20201124 15:36:00.709"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:35:52.439" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:35:52.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:35:52.445" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:35:52.445" starttime="20201124 15:35:52.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:35:52.446" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:35:52.446" starttime="20201124 15:35:52.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:35:52.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:35:52.447" starttime="20201124 15:35:52.446"></status>
</kw>
<status status="PASS" endtime="20201124 15:35:52.447" starttime="20201124 15:35:52.434"></status>
</kw>
<msg timestamp="20201124 15:35:52.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:35:52.447" starttime="20201124 15:35:52.434"></status>
</kw>
<msg timestamp="20201124 15:35:52.447" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:35:52.447" starttime="20201124 15:35:52.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:35:52.454" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:35:52.454" starttime="20201124 15:35:52.447"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:35:52.461" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:35:52.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:35:52.481" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:35:52.481" starttime="20201124 15:35:52.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:35:52.482" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:35:52.482" starttime="20201124 15:35:52.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:35:52.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:35:52.483" starttime="20201124 15:35:52.482"></status>
</kw>
<status status="PASS" endtime="20201124 15:35:52.483" starttime="20201124 15:35:52.457"></status>
</kw>
<msg timestamp="20201124 15:35:52.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:35:52.483" starttime="20201124 15:35:52.456"></status>
</kw>
<status status="PASS" endtime="20201124 15:35:52.483" starttime="20201124 15:35:52.454"></status>
</kw>
<status status="PASS" endtime="20201124 15:35:52.483" starttime="20201124 15:35:52.454"></status>
</kw>
<status status="PASS" endtime="20201124 15:35:52.483" starttime="20201124 15:35:52.433"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:35:52.484" critical="yes" starttime="20201124 15:35:52.426"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201124 15:35:52.485" starttime="20201124 15:35:52.330"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 15:36:34.205" level="INFO">${random} = 72989</msg>
<status status="PASS" endtime="20201124 15:36:34.205" starttime="20201124 15:36:34.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201124 15:36:34.206" level="INFO">${source} = 72989-source</msg>
<status status="PASS" endtime="20201124 15:36:34.206" starttime="20201124 15:36:34.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201124 15:36:34.207" level="INFO">${target} = 72989-target</msg>
<status status="PASS" endtime="20201124 15:36:34.207" starttime="20201124 15:36:34.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:34.213" level="INFO">Running command 'ozone sh volume create 72989-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:36:37.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:36:37.649" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:36:37.649" starttime="20201124 15:36:34.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:36:37.650" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:36:37.650" starttime="20201124 15:36:37.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:36:37.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:36:37.650" starttime="20201124 15:36:37.650"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:37.651" starttime="20201124 15:36:34.208"></status>
</kw>
<msg timestamp="20201124 15:36:37.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:36:37.651" starttime="20201124 15:36:34.208"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:37.651" starttime="20201124 15:36:34.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:37.655" level="INFO">Running command 'ozone sh volume create 72989-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:36:41.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:36:41.172" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:36:41.172" starttime="20201124 15:36:37.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:36:41.173" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:36:41.173" starttime="20201124 15:36:41.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:36:41.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:36:41.175" starttime="20201124 15:36:41.173"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:41.176" starttime="20201124 15:36:37.652"></status>
</kw>
<msg timestamp="20201124 15:36:41.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:36:41.176" starttime="20201124 15:36:37.652"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:41.176" starttime="20201124 15:36:37.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:41.185" level="INFO">Running command 'ozone sh bucket create 72989-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:36:45.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:36:45.417" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:36:45.417" starttime="20201124 15:36:41.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:36:45.418" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:36:45.418" starttime="20201124 15:36:45.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:36:45.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:36:45.419" starttime="20201124 15:36:45.419"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:45.419" starttime="20201124 15:36:41.178"></status>
</kw>
<msg timestamp="20201124 15:36:45.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:36:45.420" starttime="20201124 15:36:41.177"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:45.420" starttime="20201124 15:36:41.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:45.423" level="INFO">Running command 'ozone sh key put 72989-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:36:51.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:36:51.215" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:36:51.215" starttime="20201124 15:36:45.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:36:51.217" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:36:51.217" starttime="20201124 15:36:51.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:36:51.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:36:51.217" starttime="20201124 15:36:51.217"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:51.218" starttime="20201124 15:36:45.421"></status>
</kw>
<msg timestamp="20201124 15:36:51.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:36:51.218" starttime="20201124 15:36:45.420"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:51.219" starttime="20201124 15:36:45.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:51.224" level="INFO">Running command 'ozone sh bucket create 72989-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:36:54.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:36:54.744" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:36:54.744" starttime="20201124 15:36:51.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:36:54.745" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:36:54.745" starttime="20201124 15:36:54.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:36:54.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:36:54.746" starttime="20201124 15:36:54.745"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:54.746" starttime="20201124 15:36:51.221"></status>
</kw>
<msg timestamp="20201124 15:36:54.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:36:54.746" starttime="20201124 15:36:51.219"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:54.746" starttime="20201124 15:36:51.219"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:54.751" level="INFO">Running command 'ozone sh bucket link 72989-source/readable-bucket 72989-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:36:58.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:36:58.269" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:36:58.269" starttime="20201124 15:36:54.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:36:58.270" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:36:58.270" starttime="20201124 15:36:58.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:36:58.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:36:58.271" starttime="20201124 15:36:58.270"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:58.271" starttime="20201124 15:36:54.747"></status>
</kw>
<msg timestamp="20201124 15:36:58.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:36:58.271" starttime="20201124 15:36:54.747"></status>
</kw>
<status status="PASS" endtime="20201124 15:36:58.272" starttime="20201124 15:36:54.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:36:58.275" level="INFO">Running command 'ozone sh bucket link 72989-source/readable-bucket 72989-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:01.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:01.713" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:01.714" starttime="20201124 15:36:58.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:01.714" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:37:01.715" starttime="20201124 15:37:01.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:01.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:01.715" starttime="20201124 15:37:01.715"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:01.715" starttime="20201124 15:36:58.272"></status>
</kw>
<msg timestamp="20201124 15:37:01.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:01.716" starttime="20201124 15:36:58.272"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:01.716" starttime="20201124 15:36:58.272"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:01.721" level="INFO">Running command 'ozone sh bucket link 72989-source/unreadable-bucket 72989-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:05.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:05.468" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:05.468" starttime="20201124 15:37:01.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:05.469" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:37:05.469" starttime="20201124 15:37:05.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:05.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:05.470" starttime="20201124 15:37:05.469"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:05.470" starttime="20201124 15:37:01.717"></status>
</kw>
<msg timestamp="20201124 15:37:05.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:05.470" starttime="20201124 15:37:01.717"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:05.471" starttime="20201124 15:37:01.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:05.475" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 72989-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:09.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:09.303" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:09.303" starttime="20201124 15:37:05.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:09.304" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 15:37:09.304" starttime="20201124 15:37:09.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:09.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:09.305" starttime="20201124 15:37:09.304"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:09.305" starttime="20201124 15:37:05.471"></status>
</kw>
<msg timestamp="20201124 15:37:09.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:09.305" starttime="20201124 15:37:05.471"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:09.305" starttime="20201124 15:37:05.471"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:09.310" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 72989-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:12.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:12.737" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:12.737" starttime="20201124 15:37:09.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:12.738" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 15:37:12.738" starttime="20201124 15:37:12.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:12.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:12.738" starttime="20201124 15:37:12.738"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:12.738" starttime="20201124 15:37:09.306"></status>
</kw>
<msg timestamp="20201124 15:37:12.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:12.739" starttime="20201124 15:37:09.306"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:12.739" starttime="20201124 15:37:09.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:12.743" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 72989-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:16.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:16.183" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:16.183" starttime="20201124 15:37:12.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:16.184" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 15:37:16.184" starttime="20201124 15:37:16.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:16.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:16.185" starttime="20201124 15:37:16.185"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:16.185" starttime="20201124 15:37:12.740"></status>
</kw>
<msg timestamp="20201124 15:37:16.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:16.186" starttime="20201124 15:37:12.740"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:16.186" starttime="20201124 15:37:12.739"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:16.189" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 72989-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:19.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:19.973" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:19.973" starttime="20201124 15:37:16.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:19.974" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 15:37:19.974" starttime="20201124 15:37:19.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:19.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:19.975" starttime="20201124 15:37:19.974"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:19.975" starttime="20201124 15:37:16.187"></status>
</kw>
<msg timestamp="20201124 15:37:19.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:19.975" starttime="20201124 15:37:16.186"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:19.975" starttime="20201124 15:37:16.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:19.979" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 72989-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:23.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:23.193" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:23.193" starttime="20201124 15:37:19.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:23.194" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 15:37:23.194" starttime="20201124 15:37:23.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:23.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:23.194" starttime="20201124 15:37:23.194"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.195" starttime="20201124 15:37:19.976"></status>
</kw>
<msg timestamp="20201124 15:37:23.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:23.195" starttime="20201124 15:37:19.976"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.195" starttime="20201124 15:37:19.976"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.195" starttime="20201124 15:36:41.177"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.195" starttime="20201124 15:36:41.176"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.196" starttime="20201124 15:36:34.204"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:23.201" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:23.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:23.204" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:37:23.204" starttime="20201124 15:37:23.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:23.205" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:37:23.205" starttime="20201124 15:37:23.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:23.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:23.206" starttime="20201124 15:37:23.205"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.206" starttime="20201124 15:37:23.199"></status>
</kw>
<msg timestamp="20201124 15:37:23.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:23.206" starttime="20201124 15:37:23.199"></status>
</kw>
<msg timestamp="20201124 15:37:23.207" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:37:23.207" starttime="20201124 15:37:23.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:37:23.208" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:37:23.208" starttime="20201124 15:37:23.207"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:23.214" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:23.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:23.232" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:37:23.232" starttime="20201124 15:37:23.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:23.233" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:37:23.233" starttime="20201124 15:37:23.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:23.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:23.234" starttime="20201124 15:37:23.233"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.234" starttime="20201124 15:37:23.210"></status>
</kw>
<msg timestamp="20201124 15:37:23.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:23.234" starttime="20201124 15:37:23.210"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.235" starttime="20201124 15:37:23.209"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.235" starttime="20201124 15:37:23.209"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.235" starttime="20201124 15:37:23.197"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:23.235" starttime="20201124 15:37:23.197"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:23.239" level="INFO">Running command 'ozone sh bucket link 72989-source/no-such-bucket 72989-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:26.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:26.831" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:26.831" starttime="20201124 15:37:23.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:26.832" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:37:26.833" starttime="20201124 15:37:26.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:26.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:26.833" starttime="20201124 15:37:26.833"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:26.834" starttime="20201124 15:37:23.236"></status>
</kw>
<msg timestamp="20201124 15:37:26.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:26.834" starttime="20201124 15:37:23.236"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:26.834" starttime="20201124 15:37:23.235"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:26.838" level="INFO">Running command 'ozone sh key list 72989-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:30.446" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 15:37:30.446" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:30.446" starttime="20201124 15:37:26.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:30.447" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201124 15:37:30.447" starttime="20201124 15:37:30.446"></status>
</kw>
<msg timestamp="20201124 15:37:30.448" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:30.448" starttime="20201124 15:37:26.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201124 15:37:30.448" starttime="20201124 15:37:30.448"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:37:30.448" critical="yes" starttime="20201124 15:37:23.196"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:30.455" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:30.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:30.457" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:37:30.457" starttime="20201124 15:37:30.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:30.458" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:37:30.458" starttime="20201124 15:37:30.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:30.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:30.459" starttime="20201124 15:37:30.458"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:30.459" starttime="20201124 15:37:30.452"></status>
</kw>
<msg timestamp="20201124 15:37:30.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:30.459" starttime="20201124 15:37:30.452"></status>
</kw>
<msg timestamp="20201124 15:37:30.460" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:37:30.460" starttime="20201124 15:37:30.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:37:30.461" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:37:30.461" starttime="20201124 15:37:30.460"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:30.465" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:30.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:30.476" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:37:30.476" starttime="20201124 15:37:30.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:30.477" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:37:30.477" starttime="20201124 15:37:30.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:30.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:30.478" starttime="20201124 15:37:30.477"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:30.478" starttime="20201124 15:37:30.462"></status>
</kw>
<msg timestamp="20201124 15:37:30.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:30.478" starttime="20201124 15:37:30.462"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:30.479" starttime="20201124 15:37:30.461"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:30.479" starttime="20201124 15:37:30.461"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:30.479" starttime="20201124 15:37:30.451"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:30.479" starttime="20201124 15:37:30.450"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:30.484" level="INFO">Running command 'ozone sh bucket link 72989-source/bucket1 72989-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:33.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:33.899" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:33.899" starttime="20201124 15:37:30.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:33.900" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:37:33.900" starttime="20201124 15:37:33.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:33.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:33.901" starttime="20201124 15:37:33.900"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:33.901" starttime="20201124 15:37:30.480"></status>
</kw>
<msg timestamp="20201124 15:37:33.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:33.901" starttime="20201124 15:37:30.480"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:33.902" starttime="20201124 15:37:30.479"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:33.906" level="INFO">Running command 'ozone sh bucket create 72989-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:37.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:37.449" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:37.449" starttime="20201124 15:37:33.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:37.450" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:37:37.450" starttime="20201124 15:37:37.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:37.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:37.451" starttime="20201124 15:37:37.450"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:37.451" starttime="20201124 15:37:33.903"></status>
</kw>
<msg timestamp="20201124 15:37:37.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:37.451" starttime="20201124 15:37:33.902"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:37.451" starttime="20201124 15:37:33.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:37.456" level="INFO">Running command 'ozone sh key put 72989-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:43.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:43.478" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:43.478" starttime="20201124 15:37:37.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:43.479" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:37:43.479" starttime="20201124 15:37:43.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:43.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:43.480" starttime="20201124 15:37:43.479"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:43.480" starttime="20201124 15:37:37.452"></status>
</kw>
<msg timestamp="20201124 15:37:43.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:43.481" starttime="20201124 15:37:37.452"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:43.481" starttime="20201124 15:37:37.452"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201124 15:37:43.483" level="INFO">${postfix} = 85504</msg>
<status status="PASS" endtime="20201124 15:37:43.483" starttime="20201124 15:37:43.482"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201124 15:37:43.483" level="INFO">${tmpfile} = /tmp/tempkey-85504</msg>
<status status="PASS" endtime="20201124 15:37:43.483" starttime="20201124 15:37:43.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:43.488" level="INFO">Running command 'ozone sh key get -f 72989-target/link1/key1 /tmp/tempkey-85504 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:49.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:49.089" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:49.089" starttime="20201124 15:37:43.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:49.090" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:37:49.091" starttime="20201124 15:37:49.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:49.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:49.091" starttime="20201124 15:37:49.091"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.091" starttime="20201124 15:37:43.484"></status>
</kw>
<msg timestamp="20201124 15:37:49.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:49.092" starttime="20201124 15:37:43.484"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.092" starttime="20201124 15:37:43.484"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201124 15:37:49.094" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-85504 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:49.096" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201124 15:37:49.096" starttime="20201124 15:37:49.092"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:49.100" level="INFO">Running command 'rm -f /tmp/tempkey-85504 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:49.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:49.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:37:49.103" starttime="20201124 15:37:49.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:49.104" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:37:49.104" starttime="20201124 15:37:49.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:49.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:49.105" starttime="20201124 15:37:49.104"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.105" starttime="20201124 15:37:49.098"></status>
</kw>
<msg timestamp="20201124 15:37:49.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:49.105" starttime="20201124 15:37:49.097"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.105" starttime="20201124 15:37:49.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:37:49.106" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201124 15:37:49.106" starttime="20201124 15:37:49.106"></status>
</kw>
<msg timestamp="20201124 15:37:49.106" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201124 15:37:49.106" starttime="20201124 15:37:43.482"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:37:49.107" starttime="20201124 15:37:49.106"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.107" starttime="20201124 15:37:43.481"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:37:49.107" critical="yes" starttime="20201124 15:37:30.449"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:49.112" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:49.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:49.114" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:37:49.114" starttime="20201124 15:37:49.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:49.115" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:37:49.115" starttime="20201124 15:37:49.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:49.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:49.116" starttime="20201124 15:37:49.116"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.116" starttime="20201124 15:37:49.110"></status>
</kw>
<msg timestamp="20201124 15:37:49.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:49.116" starttime="20201124 15:37:49.109"></status>
</kw>
<msg timestamp="20201124 15:37:49.117" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:37:49.117" starttime="20201124 15:37:49.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:37:49.117" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:37:49.117" starttime="20201124 15:37:49.117"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:49.120" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:49.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:49.136" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:37:49.136" starttime="20201124 15:37:49.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:49.137" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:37:49.137" starttime="20201124 15:37:49.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:49.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:49.138" starttime="20201124 15:37:49.137"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.138" starttime="20201124 15:37:49.118"></status>
</kw>
<msg timestamp="20201124 15:37:49.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:49.138" starttime="20201124 15:37:49.118"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.138" starttime="20201124 15:37:49.117"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.138" starttime="20201124 15:37:49.117"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.138" starttime="20201124 15:37:49.109"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:49.139" starttime="20201124 15:37:49.108"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:49.143" level="INFO">Running command 'ozone sh key put 72989-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:37:57.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:37:57.202" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:37:57.203" starttime="20201124 15:37:49.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:37:57.204" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:37:57.204" starttime="20201124 15:37:57.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:37:57.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:37:57.205" starttime="20201124 15:37:57.204"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:57.205" starttime="20201124 15:37:49.140"></status>
</kw>
<msg timestamp="20201124 15:37:57.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:37:57.205" starttime="20201124 15:37:49.139"></status>
</kw>
<status status="PASS" endtime="20201124 15:37:57.205" starttime="20201124 15:37:49.139"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201124 15:37:57.207" level="INFO">${postfix} = 85199</msg>
<status status="PASS" endtime="20201124 15:37:57.207" starttime="20201124 15:37:57.207"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201124 15:37:57.208" level="INFO">${tmpfile} = /tmp/tempkey-85199</msg>
<status status="PASS" endtime="20201124 15:37:57.208" starttime="20201124 15:37:57.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:37:57.212" level="INFO">Running command 'ozone sh key get -f 72989-source/bucket1/key2 /tmp/tempkey-85199 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:02.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:02.531" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:38:02.531" starttime="20201124 15:37:57.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:02.532" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:38:02.532" starttime="20201124 15:38:02.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:02.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:02.533" starttime="20201124 15:38:02.533"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.534" starttime="20201124 15:37:57.209"></status>
</kw>
<msg timestamp="20201124 15:38:02.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:02.534" starttime="20201124 15:37:57.208"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.534" starttime="20201124 15:37:57.208"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201124 15:38:02.536" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-85199 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:02.539" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201124 15:38:02.539" starttime="20201124 15:38:02.534"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:02.543" level="INFO">Running command 'rm -f /tmp/tempkey-85199 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:02.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:02.546" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:38:02.546" starttime="20201124 15:38:02.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:02.547" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:38:02.547" starttime="20201124 15:38:02.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:02.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:02.548" starttime="20201124 15:38:02.547"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.549" starttime="20201124 15:38:02.541"></status>
</kw>
<msg timestamp="20201124 15:38:02.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:02.549" starttime="20201124 15:38:02.540"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.549" starttime="20201124 15:38:02.540"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:38:02.550" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201124 15:38:02.550" starttime="20201124 15:38:02.549"></status>
</kw>
<msg timestamp="20201124 15:38:02.550" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201124 15:38:02.550" starttime="20201124 15:37:57.206"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:02.550" starttime="20201124 15:38:02.550"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.551" starttime="20201124 15:37:57.206"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:38:02.551" critical="yes" starttime="20201124 15:37:49.108"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:02.557" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:02.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:02.560" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:38:02.560" starttime="20201124 15:38:02.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:02.561" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:38:02.561" starttime="20201124 15:38:02.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:02.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:02.561" starttime="20201124 15:38:02.561"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.562" starttime="20201124 15:38:02.555"></status>
</kw>
<msg timestamp="20201124 15:38:02.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:02.562" starttime="20201124 15:38:02.555"></status>
</kw>
<msg timestamp="20201124 15:38:02.562" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:38:02.562" starttime="20201124 15:38:02.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:38:02.563" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:38:02.563" starttime="20201124 15:38:02.562"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:02.567" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:02.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:02.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:38:02.590" starttime="20201124 15:38:02.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:02.591" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:38:02.591" starttime="20201124 15:38:02.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:02.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:02.592" starttime="20201124 15:38:02.591"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.592" starttime="20201124 15:38:02.564"></status>
</kw>
<msg timestamp="20201124 15:38:02.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:02.593" starttime="20201124 15:38:02.564"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.593" starttime="20201124 15:38:02.564"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.593" starttime="20201124 15:38:02.563"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.593" starttime="20201124 15:38:02.553"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:02.593" starttime="20201124 15:38:02.553"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:02.598" level="INFO">Running command 'ozone sh key list 72989-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:06.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:06.057" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201124 15:38:06.057" starttime="20201124 15:38:02.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:06.058" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201124 15:38:06.058" starttime="20201124 15:38:06.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:06.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:06.059" starttime="20201124 15:38:06.058"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:06.059" starttime="20201124 15:38:02.594"></status>
</kw>
<msg timestamp="20201124 15:38:06.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:06.059" starttime="20201124 15:38:02.594"></status>
</kw>
<msg timestamp="20201124 15:38:06.060" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201124 15:38:06.060" starttime="20201124 15:38:02.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:06.065" level="INFO">Running command 'ozone sh key list 72989-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:09.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:09.764" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201124 15:38:09.764" starttime="20201124 15:38:06.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:09.765" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201124 15:38:09.765" starttime="20201124 15:38:09.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:09.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:09.766" starttime="20201124 15:38:09.765"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:09.766" starttime="20201124 15:38:06.061"></status>
</kw>
<msg timestamp="20201124 15:38:09.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:09.766" starttime="20201124 15:38:06.060"></status>
</kw>
<msg timestamp="20201124 15:38:09.767" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201124 15:38:09.767" starttime="20201124 15:38:06.060"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:09.767" starttime="20201124 15:38:09.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:09.768" starttime="20201124 15:38:09.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:09.768" starttime="20201124 15:38:09.768"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:38:09.769" critical="yes" starttime="20201124 15:38:02.552"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:09.774" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:09.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:09.777" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:38:09.777" starttime="20201124 15:38:09.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:09.778" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:38:09.778" starttime="20201124 15:38:09.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:09.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:09.779" starttime="20201124 15:38:09.779"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:09.779" starttime="20201124 15:38:09.772"></status>
</kw>
<msg timestamp="20201124 15:38:09.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:09.780" starttime="20201124 15:38:09.771"></status>
</kw>
<msg timestamp="20201124 15:38:09.780" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:38:09.780" starttime="20201124 15:38:09.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:38:09.781" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:38:09.781" starttime="20201124 15:38:09.780"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:09.785" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:09.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:09.796" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:38:09.796" starttime="20201124 15:38:09.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:09.797" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:38:09.797" starttime="20201124 15:38:09.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:09.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:09.797" starttime="20201124 15:38:09.797"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:09.798" starttime="20201124 15:38:09.782"></status>
</kw>
<msg timestamp="20201124 15:38:09.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:09.798" starttime="20201124 15:38:09.782"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:09.798" starttime="20201124 15:38:09.781"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:09.798" starttime="20201124 15:38:09.781"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:09.798" starttime="20201124 15:38:09.770"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:09.798" starttime="20201124 15:38:09.770"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:09.804" level="INFO">Running command 'ozone sh key delete 72989-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:13.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:13.250" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:38:13.250" starttime="20201124 15:38:09.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:13.251" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:38:13.251" starttime="20201124 15:38:13.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:13.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:13.252" starttime="20201124 15:38:13.252"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:13.252" starttime="20201124 15:38:09.799"></status>
</kw>
<msg timestamp="20201124 15:38:13.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:13.253" starttime="20201124 15:38:09.799"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:13.253" starttime="20201124 15:38:09.798"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:13.256" level="INFO">Running command 'ozone sh key list 72989-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:16.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:16.863" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201124 15:38:16.863" starttime="20201124 15:38:13.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:16.865" level="INFO">key1</msg>
<status status="PASS" endtime="20201124 15:38:16.865" starttime="20201124 15:38:16.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:16.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:16.866" starttime="20201124 15:38:16.865"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:16.866" starttime="20201124 15:38:13.254"></status>
</kw>
<msg timestamp="20201124 15:38:16.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:16.866" starttime="20201124 15:38:13.254"></status>
</kw>
<msg timestamp="20201124 15:38:16.866" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201124 15:38:16.866" starttime="20201124 15:38:13.253"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:16.867" starttime="20201124 15:38:16.866"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:38:16.867" critical="yes" starttime="20201124 15:38:09.769"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:16.874" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:16.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:16.877" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:38:16.877" starttime="20201124 15:38:16.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:16.878" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:38:16.878" starttime="20201124 15:38:16.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:16.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:16.879" starttime="20201124 15:38:16.879"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:16.879" starttime="20201124 15:38:16.871"></status>
</kw>
<msg timestamp="20201124 15:38:16.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:16.879" starttime="20201124 15:38:16.871"></status>
</kw>
<msg timestamp="20201124 15:38:16.880" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:38:16.880" starttime="20201124 15:38:16.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:38:16.880" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:38:16.881" starttime="20201124 15:38:16.880"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:16.886" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:16.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:16.903" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:38:16.903" starttime="20201124 15:38:16.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:16.905" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:38:16.905" starttime="20201124 15:38:16.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:16.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:16.906" starttime="20201124 15:38:16.905"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:16.906" starttime="20201124 15:38:16.883"></status>
</kw>
<msg timestamp="20201124 15:38:16.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:16.906" starttime="20201124 15:38:16.883"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:16.906" starttime="20201124 15:38:16.882"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:16.906" starttime="20201124 15:38:16.881"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:16.906" starttime="20201124 15:38:16.870"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:16.906" starttime="20201124 15:38:16.870"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:16.911" level="INFO">Running command 'ozone sh bucket list 72989-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:20.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:20.471" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:38:20.471" starttime="20201124 15:38:16.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:20.472" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:37:26.741Z",
  "modificationTime" : "2020-11-24T15:37:26.741Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:37:05.278Z",
  "modificationTime" : "2020-11-24T15:37:23.007Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:37:33.723Z",
  "modificationTime" : "2020-11-24T15:37:33.723Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:36:58.034Z",
  "modificationTime" : "2020-11-24T15:37:19.647Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:37:01.534Z",
  "modificationTime" : "2020-11-24T15:37:01.534Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 15:38:20.472" starttime="20201124 15:38:20.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:20.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:20.473" starttime="20201124 15:38:20.473"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:20.473" starttime="20201124 15:38:16.908"></status>
</kw>
<msg timestamp="20201124 15:38:20.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:20.474" starttime="20201124 15:38:16.907"></status>
</kw>
<msg timestamp="20201124 15:38:20.474" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:38:20.474" starttime="20201124 15:38:16.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:20.475" starttime="20201124 15:38:20.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:20.475" starttime="20201124 15:38:20.475"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:38:20.475" critical="yes" starttime="20201124 15:38:16.869"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:20.482" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:20.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:20.484" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:38:20.484" starttime="20201124 15:38:20.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:20.485" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:38:20.485" starttime="20201124 15:38:20.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:20.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:20.486" starttime="20201124 15:38:20.485"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:20.486" starttime="20201124 15:38:20.478"></status>
</kw>
<msg timestamp="20201124 15:38:20.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:20.486" starttime="20201124 15:38:20.478"></status>
</kw>
<msg timestamp="20201124 15:38:20.487" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:38:20.487" starttime="20201124 15:38:20.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:38:20.487" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:38:20.487" starttime="20201124 15:38:20.487"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:20.492" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:20.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:20.512" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:38:20.512" starttime="20201124 15:38:20.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:20.513" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:38:20.513" starttime="20201124 15:38:20.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:20.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:20.514" starttime="20201124 15:38:20.513"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:20.514" starttime="20201124 15:38:20.489"></status>
</kw>
<msg timestamp="20201124 15:38:20.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:20.514" starttime="20201124 15:38:20.489"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:20.515" starttime="20201124 15:38:20.488"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:20.515" starttime="20201124 15:38:20.488"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:20.515" starttime="20201124 15:38:20.477"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:20.515" starttime="20201124 15:38:20.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:20.518" level="INFO">Running command 'ozone sh bucket info 72989-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:24.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:24.179" level="INFO">${output} = 72989-source bucket1</msg>
<status status="PASS" endtime="20201124 15:38:24.179" starttime="20201124 15:38:20.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:24.180" level="INFO">72989-source bucket1</msg>
<status status="PASS" endtime="20201124 15:38:24.180" starttime="20201124 15:38:24.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:24.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:24.181" starttime="20201124 15:38:24.180"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:24.181" starttime="20201124 15:38:20.516"></status>
</kw>
<msg timestamp="20201124 15:38:24.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:24.181" starttime="20201124 15:38:20.516"></status>
</kw>
<msg timestamp="20201124 15:38:24.181" level="INFO">${result} = 72989-source bucket1</msg>
<status status="PASS" endtime="20201124 15:38:24.182" starttime="20201124 15:38:20.515"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:24.182" starttime="20201124 15:38:24.182"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:38:24.182" critical="yes" starttime="20201124 15:38:20.476"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:24.189" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:24.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:24.191" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:38:24.191" starttime="20201124 15:38:24.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:24.192" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:38:24.192" starttime="20201124 15:38:24.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:24.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:24.193" starttime="20201124 15:38:24.192"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:24.193" starttime="20201124 15:38:24.185"></status>
</kw>
<msg timestamp="20201124 15:38:24.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:24.193" starttime="20201124 15:38:24.185"></status>
</kw>
<msg timestamp="20201124 15:38:24.194" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:38:24.194" starttime="20201124 15:38:24.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:38:24.194" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:38:24.194" starttime="20201124 15:38:24.194"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:24.199" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:24.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:24.210" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:38:24.210" starttime="20201124 15:38:24.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:24.212" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:38:24.212" starttime="20201124 15:38:24.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:24.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:24.212" starttime="20201124 15:38:24.212"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:24.213" starttime="20201124 15:38:24.196"></status>
</kw>
<msg timestamp="20201124 15:38:24.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:24.213" starttime="20201124 15:38:24.195"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:24.213" starttime="20201124 15:38:24.195"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:24.213" starttime="20201124 15:38:24.194"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:24.213" starttime="20201124 15:38:24.184"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:24.213" starttime="20201124 15:38:24.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:24.217" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 72989-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:27.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:27.603" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:38:27.603" starttime="20201124 15:38:24.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:27.604" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 15:38:27.604" starttime="20201124 15:38:27.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:27.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:27.605" starttime="20201124 15:38:27.604"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:27.605" starttime="20201124 15:38:24.214"></status>
</kw>
<msg timestamp="20201124 15:38:27.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:27.605" starttime="20201124 15:38:24.214"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:27.606" starttime="20201124 15:38:24.214"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:27.610" level="INFO">Running command 'ozone sh bucket getacl 72989-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:31.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:31.212" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201124 15:38:31.212" starttime="20201124 15:38:27.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:31.213" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201124 15:38:31.213" starttime="20201124 15:38:31.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:31.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:31.214" starttime="20201124 15:38:31.213"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:31.214" starttime="20201124 15:38:27.608"></status>
</kw>
<msg timestamp="20201124 15:38:31.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:31.214" starttime="20201124 15:38:27.607"></status>
</kw>
<msg timestamp="20201124 15:38:31.214" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201124 15:38:31.214" starttime="20201124 15:38:27.607"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:31.215" starttime="20201124 15:38:31.215"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:31.215" starttime="20201124 15:38:27.606"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:31.221" level="INFO">Running command 'ozone sh bucket getacl 72989-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:34.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:34.850" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:38:34.850" starttime="20201124 15:38:31.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:34.851" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:38:34.851" starttime="20201124 15:38:34.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:34.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:34.852" starttime="20201124 15:38:34.852"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:34.852" starttime="20201124 15:38:31.217"></status>
</kw>
<msg timestamp="20201124 15:38:34.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:34.853" starttime="20201124 15:38:31.217"></status>
</kw>
<msg timestamp="20201124 15:38:34.853" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201124 15:38:34.853" starttime="20201124 15:38:31.216"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:34.853" starttime="20201124 15:38:34.853"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:34.854" starttime="20201124 15:38:31.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:34.859" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 72989-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:38.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:38.139" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:38:38.140" starttime="20201124 15:38:34.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:38.141" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 15:38:38.141" starttime="20201124 15:38:38.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:38.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:38.141" starttime="20201124 15:38:38.141"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:38.142" starttime="20201124 15:38:34.855"></status>
</kw>
<msg timestamp="20201124 15:38:38.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:38.142" starttime="20201124 15:38:34.854"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:38.142" starttime="20201124 15:38:34.854"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:38.147" level="INFO">Running command 'ozone sh bucket getacl 72989-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:41.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:41.661" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:38:41.661" starttime="20201124 15:38:38.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:41.662" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:38:41.662" starttime="20201124 15:38:41.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:41.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:41.663" starttime="20201124 15:38:41.662"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:41.663" starttime="20201124 15:38:38.144"></status>
</kw>
<msg timestamp="20201124 15:38:41.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:41.663" starttime="20201124 15:38:38.144"></status>
</kw>
<msg timestamp="20201124 15:38:41.663" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201124 15:38:41.663" starttime="20201124 15:38:38.143"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:41.664" starttime="20201124 15:38:41.663"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:41.664" starttime="20201124 15:38:38.142"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:41.668" level="INFO">Running command 'ozone sh bucket getacl 72989-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:45.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:45.271" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201124 15:38:45.271" starttime="20201124 15:38:41.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:45.272" level="INFO">READ</msg>
<status status="PASS" endtime="20201124 15:38:45.272" starttime="20201124 15:38:45.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:45.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:45.273" starttime="20201124 15:38:45.272"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:45.273" starttime="20201124 15:38:41.666"></status>
</kw>
<msg timestamp="20201124 15:38:45.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:45.273" starttime="20201124 15:38:41.666"></status>
</kw>
<msg timestamp="20201124 15:38:45.274" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201124 15:38:45.274" starttime="20201124 15:38:41.665"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:45.274" starttime="20201124 15:38:45.274"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:45.274" starttime="20201124 15:38:41.664"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:38:45.275" critical="yes" starttime="20201124 15:38:24.183"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:45.281" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:45.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:45.284" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:38:45.284" starttime="20201124 15:38:45.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:45.285" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:38:45.285" starttime="20201124 15:38:45.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:45.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:45.285" starttime="20201124 15:38:45.285"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:45.286" starttime="20201124 15:38:45.278"></status>
</kw>
<msg timestamp="20201124 15:38:45.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:45.286" starttime="20201124 15:38:45.278"></status>
</kw>
<msg timestamp="20201124 15:38:45.286" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:38:45.286" starttime="20201124 15:38:45.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:38:45.287" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:38:45.287" starttime="20201124 15:38:45.286"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:45.292" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:45.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:45.324" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:38:45.324" starttime="20201124 15:38:45.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:45.325" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:38:45.325" starttime="20201124 15:38:45.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:45.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:45.326" starttime="20201124 15:38:45.326"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:45.326" starttime="20201124 15:38:45.288"></status>
</kw>
<msg timestamp="20201124 15:38:45.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:45.327" starttime="20201124 15:38:45.288"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:45.327" starttime="20201124 15:38:45.287"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:45.327" starttime="20201124 15:38:45.287"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:45.327" starttime="20201124 15:38:45.277"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:45.327" starttime="20201124 15:38:45.276"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:45.330" level="INFO">Running command 'ozone sh bucket link 72989-source/bucket2 72989-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:48.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:48.994" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:38:48.994" starttime="20201124 15:38:45.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:48.995" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:38:48.995" starttime="20201124 15:38:48.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:48.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:48.995" starttime="20201124 15:38:48.995"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:48.996" starttime="20201124 15:38:45.328"></status>
</kw>
<msg timestamp="20201124 15:38:48.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:48.996" starttime="20201124 15:38:45.328"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:48.996" starttime="20201124 15:38:45.327"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:48.999" level="INFO">Running command 'ozone sh bucket create 72989-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:52.462" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 15:38:52.462" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:38:52.463" starttime="20201124 15:38:48.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:52.464" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201124 15:38:52.464" starttime="20201124 15:38:52.463"></status>
</kw>
<msg timestamp="20201124 15:38:52.464" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:38:52.464" starttime="20201124 15:38:48.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201124 15:38:52.465" starttime="20201124 15:38:52.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:52.469" level="INFO">Running command 'ozone sh bucket create 72989-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:38:56.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:38:56.486" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:38:56.486" starttime="20201124 15:38:52.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:38:56.487" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:38:56.487" starttime="20201124 15:38:56.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:38:56.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:38:56.488" starttime="20201124 15:38:56.487"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:56.488" starttime="20201124 15:38:52.466"></status>
</kw>
<msg timestamp="20201124 15:38:56.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:38:56.488" starttime="20201124 15:38:52.466"></status>
</kw>
<status status="PASS" endtime="20201124 15:38:56.488" starttime="20201124 15:38:52.465"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:38:56.492" level="INFO">Running command 'ozone sh bucket link 72989-source/bucket1 72989-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:00.080" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 15:39:00.080" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:00.080" starttime="20201124 15:38:56.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.081" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201124 15:39:00.081" starttime="20201124 15:39:00.080"></status>
</kw>
<msg timestamp="20201124 15:39:00.081" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:00.081" starttime="20201124 15:38:56.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201124 15:39:00.082" starttime="20201124 15:39:00.082"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:39:00.082" critical="yes" starttime="20201124 15:38:45.275"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:00.089" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:00.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:00.090" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:39:00.090" starttime="20201124 15:39:00.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.091" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:39:00.091" starttime="20201124 15:39:00.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:00.092" starttime="20201124 15:39:00.092"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.093" starttime="20201124 15:39:00.085"></status>
</kw>
<msg timestamp="20201124 15:39:00.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:00.093" starttime="20201124 15:39:00.085"></status>
</kw>
<msg timestamp="20201124 15:39:00.093" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:39:00.093" starttime="20201124 15:39:00.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:39:00.094" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:39:00.094" starttime="20201124 15:39:00.093"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:00.098" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:00.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:00.108" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:00.108" starttime="20201124 15:39:00.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.109" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:00.109" starttime="20201124 15:39:00.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:00.110" starttime="20201124 15:39:00.109"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.110" starttime="20201124 15:39:00.095"></status>
</kw>
<msg timestamp="20201124 15:39:00.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:00.110" starttime="20201124 15:39:00.095"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.110" starttime="20201124 15:39:00.094"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.110" starttime="20201124 15:39:00.094"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.110" starttime="20201124 15:39:00.084"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.111" starttime="20201124 15:39:00.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:00.116" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:00.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:00.119" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:00.119" starttime="20201124 15:39:00.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.120" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:00.120" starttime="20201124 15:39:00.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:00.121" starttime="20201124 15:39:00.120"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.121" starttime="20201124 15:39:00.113"></status>
</kw>
<msg timestamp="20201124 15:39:00.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:00.121" starttime="20201124 15:39:00.112"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.121" starttime="20201124 15:39:00.112"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:00.126" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:00.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:00.128" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:39:00.128" starttime="20201124 15:39:00.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.129" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:39:00.129" starttime="20201124 15:39:00.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:00.130" starttime="20201124 15:39:00.129"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.130" starttime="20201124 15:39:00.123"></status>
</kw>
<msg timestamp="20201124 15:39:00.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:00.130" starttime="20201124 15:39:00.123"></status>
</kw>
<msg timestamp="20201124 15:39:00.131" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:39:00.131" starttime="20201124 15:39:00.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:39:00.131" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:39:00.131" starttime="20201124 15:39:00.131"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:00.136" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:00.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:00.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:00.147" starttime="20201124 15:39:00.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.148" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:00.148" starttime="20201124 15:39:00.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:00.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:00.149" starttime="20201124 15:39:00.148"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.150" starttime="20201124 15:39:00.133"></status>
</kw>
<msg timestamp="20201124 15:39:00.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:00.150" starttime="20201124 15:39:00.133"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.150" starttime="20201124 15:39:00.132"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.150" starttime="20201124 15:39:00.131"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.150" starttime="20201124 15:39:00.122"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:00.150" starttime="20201124 15:39:00.121"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:00.153" level="INFO">Running command 'ozone sh key list 72989-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:04.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:04.030" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:04.030" starttime="20201124 15:39:00.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.031" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "72989-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-24T15:36:48.931Z",
  "modificationTime" : "2020-11-24T15:36:50.677Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201124 15:39:04.031" starttime="20201124 15:39:04.031"></status>
</kw>
<msg timestamp="20201124 15:39:04.032" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:04.032" starttime="20201124 15:39:00.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 15:39:04.032" starttime="20201124 15:39:04.032"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.032" starttime="20201124 15:39:00.111"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.033" starttime="20201124 15:39:00.111"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:39:04.033" critical="yes" starttime="20201124 15:39:00.083"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:04.040" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:04.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:04.043" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:39:04.044" starttime="20201124 15:39:04.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.044" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:39:04.045" starttime="20201124 15:39:04.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:04.045" starttime="20201124 15:39:04.045"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.045" starttime="20201124 15:39:04.037"></status>
</kw>
<msg timestamp="20201124 15:39:04.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:04.046" starttime="20201124 15:39:04.037"></status>
</kw>
<msg timestamp="20201124 15:39:04.046" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:39:04.046" starttime="20201124 15:39:04.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:39:04.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:39:04.048" starttime="20201124 15:39:04.046"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:04.055" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:04.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:04.075" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:04.075" starttime="20201124 15:39:04.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.076" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:04.077" starttime="20201124 15:39:04.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:04.077" starttime="20201124 15:39:04.077"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.078" starttime="20201124 15:39:04.049"></status>
</kw>
<msg timestamp="20201124 15:39:04.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:04.078" starttime="20201124 15:39:04.049"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.078" starttime="20201124 15:39:04.048"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.078" starttime="20201124 15:39:04.048"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.078" starttime="20201124 15:39:04.036"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.078" starttime="20201124 15:39:04.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:04.083" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:04.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:04.087" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:04.087" starttime="20201124 15:39:04.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.088" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:04.088" starttime="20201124 15:39:04.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:04.089" starttime="20201124 15:39:04.088"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.089" starttime="20201124 15:39:04.080"></status>
</kw>
<msg timestamp="20201124 15:39:04.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:04.089" starttime="20201124 15:39:04.080"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.089" starttime="20201124 15:39:04.079"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:04.093" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:04.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:04.096" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:39:04.096" starttime="20201124 15:39:04.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.097" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:39:04.097" starttime="20201124 15:39:04.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:04.098" starttime="20201124 15:39:04.097"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.098" starttime="20201124 15:39:04.091"></status>
</kw>
<msg timestamp="20201124 15:39:04.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:04.098" starttime="20201124 15:39:04.091"></status>
</kw>
<msg timestamp="20201124 15:39:04.098" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:39:04.098" starttime="20201124 15:39:04.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:39:04.099" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:39:04.099" starttime="20201124 15:39:04.099"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:04.102" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:04.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:04.112" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:04.112" starttime="20201124 15:39:04.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.113" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:04.113" starttime="20201124 15:39:04.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:04.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:04.114" starttime="20201124 15:39:04.113"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.114" starttime="20201124 15:39:04.100"></status>
</kw>
<msg timestamp="20201124 15:39:04.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:04.114" starttime="20201124 15:39:04.100"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.114" starttime="20201124 15:39:04.100"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.115" starttime="20201124 15:39:04.099"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.115" starttime="20201124 15:39:04.090"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:04.115" starttime="20201124 15:39:04.090"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:04.118" level="INFO">Running command 'ozone sh key list 72989-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:08.175" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 15:39:08.175" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:08.175" starttime="20201124 15:39:04.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.176" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201124 15:39:08.176" starttime="20201124 15:39:08.175"></status>
</kw>
<msg timestamp="20201124 15:39:08.177" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:08.177" starttime="20201124 15:39:04.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201124 15:39:08.177" starttime="20201124 15:39:08.177"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.178" starttime="20201124 15:39:04.079"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.178" starttime="20201124 15:39:04.079"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:39:08.178" critical="yes" starttime="20201124 15:39:04.034"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:08.184" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:08.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:08.186" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:39:08.186" starttime="20201124 15:39:08.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.187" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:39:08.187" starttime="20201124 15:39:08.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:08.188" starttime="20201124 15:39:08.188"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.189" starttime="20201124 15:39:08.181"></status>
</kw>
<msg timestamp="20201124 15:39:08.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:08.189" starttime="20201124 15:39:08.181"></status>
</kw>
<msg timestamp="20201124 15:39:08.189" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:39:08.189" starttime="20201124 15:39:08.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:39:08.190" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:39:08.190" starttime="20201124 15:39:08.189"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:08.193" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:08.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:08.205" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:08.205" starttime="20201124 15:39:08.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.206" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:08.206" starttime="20201124 15:39:08.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:08.207" starttime="20201124 15:39:08.207"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.207" starttime="20201124 15:39:08.191"></status>
</kw>
<msg timestamp="20201124 15:39:08.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:08.208" starttime="20201124 15:39:08.191"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.208" starttime="20201124 15:39:08.190"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.208" starttime="20201124 15:39:08.190"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.208" starttime="20201124 15:39:08.180"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.208" starttime="20201124 15:39:08.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:08.214" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:08.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:08.216" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:08.216" starttime="20201124 15:39:08.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.217" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:08.217" starttime="20201124 15:39:08.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:08.218" starttime="20201124 15:39:08.217"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.218" starttime="20201124 15:39:08.210"></status>
</kw>
<msg timestamp="20201124 15:39:08.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:08.219" starttime="20201124 15:39:08.210"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.219" starttime="20201124 15:39:08.209"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:08.224" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:08.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:08.225" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:39:08.226" starttime="20201124 15:39:08.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.227" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:39:08.227" starttime="20201124 15:39:08.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:08.228" starttime="20201124 15:39:08.227"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.228" starttime="20201124 15:39:08.220"></status>
</kw>
<msg timestamp="20201124 15:39:08.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:08.228" starttime="20201124 15:39:08.220"></status>
</kw>
<msg timestamp="20201124 15:39:08.229" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:39:08.229" starttime="20201124 15:39:08.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:39:08.229" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:39:08.229" starttime="20201124 15:39:08.229"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:08.234" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:08.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:08.253" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:08.253" starttime="20201124 15:39:08.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.254" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:08.254" starttime="20201124 15:39:08.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:08.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:08.255" starttime="20201124 15:39:08.254"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.255" starttime="20201124 15:39:08.231"></status>
</kw>
<msg timestamp="20201124 15:39:08.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:08.255" starttime="20201124 15:39:08.231"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.256" starttime="20201124 15:39:08.230"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.256" starttime="20201124 15:39:08.230"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.256" starttime="20201124 15:39:08.219"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:08.256" starttime="20201124 15:39:08.219"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:08.262" level="INFO">Running command 'ozone sh bucket info 72989-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:12.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:12.506" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:12.506" starttime="20201124 15:39:08.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:12.508" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:37:05.278Z",
  "modificationTime" : "2020-11-24T15:37:23.007Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 15:39:12.508" starttime="20201124 15:39:12.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:12.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:12.509" starttime="20201124 15:39:12.508"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:12.509" starttime="20201124 15:39:08.257"></status>
</kw>
<msg timestamp="20201124 15:39:12.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:12.509" starttime="20201124 15:39:08.257"></status>
</kw>
<msg timestamp="20201124 15:39:12.509" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:12.509" starttime="20201124 15:39:08.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 15:39:12.510" starttime="20201124 15:39:12.509"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201124 15:39:12.510" starttime="20201124 15:39:12.510"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:12.514" level="INFO">Running command 'ozone sh key list 72989-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:16.351" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 15:39:16.351" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:16.351" starttime="20201124 15:39:12.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:16.352" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201124 15:39:16.352" starttime="20201124 15:39:16.352"></status>
</kw>
<msg timestamp="20201124 15:39:16.353" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:16.353" starttime="20201124 15:39:12.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201124 15:39:16.353" starttime="20201124 15:39:16.353"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:16.354" starttime="20201124 15:39:08.209"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:16.354" starttime="20201124 15:39:08.209"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:39:16.354" critical="yes" starttime="20201124 15:39:08.179"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:16.361" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:16.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:16.362" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:39:16.362" starttime="20201124 15:39:16.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:16.363" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:39:16.363" starttime="20201124 15:39:16.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:16.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:16.364" starttime="20201124 15:39:16.363"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:16.364" starttime="20201124 15:39:16.357"></status>
</kw>
<msg timestamp="20201124 15:39:16.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:16.364" starttime="20201124 15:39:16.357"></status>
</kw>
<msg timestamp="20201124 15:39:16.365" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:39:16.365" starttime="20201124 15:39:16.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:39:16.365" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:39:16.365" starttime="20201124 15:39:16.365"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:16.370" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:16.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:16.380" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:16.380" starttime="20201124 15:39:16.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:16.381" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:16.382" starttime="20201124 15:39:16.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:16.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:16.382" starttime="20201124 15:39:16.382"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:16.382" starttime="20201124 15:39:16.367"></status>
</kw>
<msg timestamp="20201124 15:39:16.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:16.383" starttime="20201124 15:39:16.366"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:16.383" starttime="20201124 15:39:16.366"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:16.383" starttime="20201124 15:39:16.365"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:16.383" starttime="20201124 15:39:16.356"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:16.383" starttime="20201124 15:39:16.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:16.388" level="INFO">Running command 'ozone sh bucket link 72989-target/loop1 72989-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:20.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:20.092" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:20.092" starttime="20201124 15:39:16.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:20.093" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:39:20.093" starttime="20201124 15:39:20.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:20.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:20.094" starttime="20201124 15:39:20.093"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:20.094" starttime="20201124 15:39:16.384"></status>
</kw>
<msg timestamp="20201124 15:39:20.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:20.094" starttime="20201124 15:39:16.384"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:20.094" starttime="20201124 15:39:16.383"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:20.099" level="INFO">Running command 'ozone sh bucket link 72989-target/loop2 72989-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:23.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:23.398" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:23.398" starttime="20201124 15:39:20.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:23.399" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:39:23.400" starttime="20201124 15:39:23.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:23.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:23.400" starttime="20201124 15:39:23.400"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:23.401" starttime="20201124 15:39:20.095"></status>
</kw>
<msg timestamp="20201124 15:39:23.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:23.402" starttime="20201124 15:39:20.095"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:23.402" starttime="20201124 15:39:20.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:23.411" level="INFO">Running command 'ozone sh bucket link 72989-target/loop3 72989-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:26.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:26.795" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:26.795" starttime="20201124 15:39:23.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:26.796" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:39:26.797" starttime="20201124 15:39:26.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:26.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:26.797" starttime="20201124 15:39:26.797"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:26.798" starttime="20201124 15:39:23.403"></status>
</kw>
<msg timestamp="20201124 15:39:26.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:26.798" starttime="20201124 15:39:23.403"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:26.798" starttime="20201124 15:39:23.403"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:26.801" level="INFO">Running command 'ozone sh key list 72989-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:30.302" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 15:39:30.303" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:30.303" starttime="20201124 15:39:26.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:30.304" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201124 15:39:30.304" starttime="20201124 15:39:30.303"></status>
</kw>
<msg timestamp="20201124 15:39:30.304" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:30.304" starttime="20201124 15:39:26.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201124 15:39:30.305" starttime="20201124 15:39:30.304"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:39:30.305" critical="yes" starttime="20201124 15:39:16.354"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:30.312" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:30.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:30.314" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:39:30.314" starttime="20201124 15:39:30.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:30.315" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:39:30.316" starttime="20201124 15:39:30.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:30.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:30.316" starttime="20201124 15:39:30.316"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:30.317" starttime="20201124 15:39:30.308"></status>
</kw>
<msg timestamp="20201124 15:39:30.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:30.317" starttime="20201124 15:39:30.308"></status>
</kw>
<msg timestamp="20201124 15:39:30.317" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:39:30.317" starttime="20201124 15:39:30.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:39:30.318" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:39:30.318" starttime="20201124 15:39:30.317"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:30.323" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:30.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:30.347" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:30.347" starttime="20201124 15:39:30.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:30.348" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:30.348" starttime="20201124 15:39:30.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:30.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:30.349" starttime="20201124 15:39:30.348"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:30.349" starttime="20201124 15:39:30.319"></status>
</kw>
<msg timestamp="20201124 15:39:30.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:30.349" starttime="20201124 15:39:30.319"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:30.349" starttime="20201124 15:39:30.318"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:30.350" starttime="20201124 15:39:30.318"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:30.350" starttime="20201124 15:39:30.307"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:30.350" starttime="20201124 15:39:30.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:30.355" level="INFO">Running command 'ozone sh bucket link 72989-source/bucket1 72989-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:33.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:33.604" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:33.604" starttime="20201124 15:39:30.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:33.605" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:39:33.605" starttime="20201124 15:39:33.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:33.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:33.605" starttime="20201124 15:39:33.605"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:33.606" starttime="20201124 15:39:30.351"></status>
</kw>
<msg timestamp="20201124 15:39:33.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:33.606" starttime="20201124 15:39:30.351"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:33.606" starttime="20201124 15:39:30.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:33.610" level="INFO">Running command 'ozone sh key put 72989-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:38.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:38.770" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:38.770" starttime="20201124 15:39:33.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:38.771" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:39:38.771" starttime="20201124 15:39:38.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:38.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:38.772" starttime="20201124 15:39:38.772"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:38.773" starttime="20201124 15:39:33.607"></status>
</kw>
<msg timestamp="20201124 15:39:38.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:38.773" starttime="20201124 15:39:33.607"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:38.773" starttime="20201124 15:39:33.606"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201124 15:39:38.775" level="INFO">${postfix} = 13768</msg>
<status status="PASS" endtime="20201124 15:39:38.775" starttime="20201124 15:39:38.774"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201124 15:39:38.776" level="INFO">${tmpfile} = /tmp/tempkey-13768</msg>
<status status="PASS" endtime="20201124 15:39:38.776" starttime="20201124 15:39:38.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:38.780" level="INFO">Running command 'ozone sh key get -f 72989-target/link1/key3 /tmp/tempkey-13768 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:44.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:44.245" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:44.245" starttime="20201124 15:39:38.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:44.246" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:39:44.246" starttime="20201124 15:39:44.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:44.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:44.247" starttime="20201124 15:39:44.246"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.247" starttime="20201124 15:39:38.777"></status>
</kw>
<msg timestamp="20201124 15:39:44.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:44.247" starttime="20201124 15:39:38.777"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.248" starttime="20201124 15:39:38.776"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201124 15:39:44.252" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-13768 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:44.254" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201124 15:39:44.254" starttime="20201124 15:39:44.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:44.259" level="INFO">Running command 'rm -f /tmp/tempkey-13768 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:44.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:44.260" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:44.260" starttime="20201124 15:39:44.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:44.261" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:44.262" starttime="20201124 15:39:44.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:44.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:44.262" starttime="20201124 15:39:44.262"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.263" starttime="20201124 15:39:44.255"></status>
</kw>
<msg timestamp="20201124 15:39:44.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:44.263" starttime="20201124 15:39:44.255"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.263" starttime="20201124 15:39:44.254"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 15:39:44.263" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201124 15:39:44.264" starttime="20201124 15:39:44.263"></status>
</kw>
<msg timestamp="20201124 15:39:44.264" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201124 15:39:44.264" starttime="20201124 15:39:38.774"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201124 15:39:44.264" starttime="20201124 15:39:44.264"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.265" starttime="20201124 15:39:38.773"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:39:44.265" critical="yes" starttime="20201124 15:39:30.306"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:44.271" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:44.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:44.273" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 15:39:44.273" starttime="20201124 15:39:44.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:44.274" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 15:39:44.274" starttime="20201124 15:39:44.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:44.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:44.275" starttime="20201124 15:39:44.274"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.275" starttime="20201124 15:39:44.268"></status>
</kw>
<msg timestamp="20201124 15:39:44.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:44.275" starttime="20201124 15:39:44.267"></status>
</kw>
<msg timestamp="20201124 15:39:44.276" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 15:39:44.276" starttime="20201124 15:39:44.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 15:39:44.276" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 15:39:44.276" starttime="20201124 15:39:44.276"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:44.280" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:44.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:44.304" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 15:39:44.304" starttime="20201124 15:39:44.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:44.305" level="INFO"></msg>
<status status="PASS" endtime="20201124 15:39:44.306" starttime="20201124 15:39:44.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:44.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:44.306" starttime="20201124 15:39:44.306"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.306" starttime="20201124 15:39:44.278"></status>
</kw>
<msg timestamp="20201124 15:39:44.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:44.307" starttime="20201124 15:39:44.277"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.307" starttime="20201124 15:39:44.277"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.307" starttime="20201124 15:39:44.277"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.307" starttime="20201124 15:39:44.266"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:44.307" starttime="20201124 15:39:44.266"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:44.312" level="INFO">Running command 'ozone sh bucket delete 72989-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:47.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:47.952" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:47.952" starttime="20201124 15:39:44.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:47.960" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 15:39:47.960" starttime="20201124 15:39:47.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:47.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:47.961" starttime="20201124 15:39:47.960"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:47.961" starttime="20201124 15:39:44.308"></status>
</kw>
<msg timestamp="20201124 15:39:47.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:47.961" starttime="20201124 15:39:44.308"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:47.962" starttime="20201124 15:39:44.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:47.968" level="INFO">Running command 'ozone sh bucket list 72989-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:51.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:51.479" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:51.479" starttime="20201124 15:39:47.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:51.481" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:38:56.328Z",
  "modificationTime" : "2020-11-24T15:38:56.328Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:37:26.741Z",
  "modificationTime" : "2020-11-24T15:37:26.741Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:37:05.278Z",
  "modificationTime" : "2020-11-24T15:37:23.007Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:38:48.838Z",
  "modificationTime" : "2020-11-24T15:38:48.838Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:39:33.480Z",
  "modificationTime" : "2020-11-24T15:39:33.480Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:39:26.690Z",
  "modificationTime" : "2020-11-24T15:39:26.690Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:39:19.840Z",
  "modificationTime" : "2020-11-24T15:39:19.840Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:39:23.275Z",
  "modificationTime" : "2020-11-24T15:39:23.275Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:36:58.034Z",
  "modificationTime" : "2020-11-24T15:37:19.647Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "72989-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T15:37:01.534Z",
  "modificationTime" : "2020-11-24T15:37:01.534Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "72989-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 15:39:51.481" starttime="20201124 15:39:51.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:51.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:51.482" starttime="20201124 15:39:51.481"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:51.482" starttime="20201124 15:39:47.963"></status>
</kw>
<msg timestamp="20201124 15:39:51.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:51.482" starttime="20201124 15:39:47.962"></status>
</kw>
<msg timestamp="20201124 15:39:51.482" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 15:39:51.482" starttime="20201124 15:39:47.962"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201124 15:39:51.483" starttime="20201124 15:39:51.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 15:39:51.488" level="INFO">Running command 'ozone sh key list 72989-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 15:39:54.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 15:39:54.991" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201124 15:39:54.991" starttime="20201124 15:39:51.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 15:39:54.992" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201124 15:39:54.992" starttime="20201124 15:39:54.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 15:39:54.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 15:39:54.993" starttime="20201124 15:39:54.993"></status>
</kw>
<status status="PASS" endtime="20201124 15:39:54.993" starttime="20201124 15:39:51.484"></status>
</kw>
<msg timestamp="20201124 15:39:54.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 15:39:54.994" starttime="20201124 15:39:51.484"></status>
</kw>
<msg timestamp="20201124 15:39:54.994" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201124 15:39:54.994" starttime="20201124 15:39:51.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201124 15:39:54.994" starttime="20201124 15:39:54.994"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 15:39:54.995" critical="yes" starttime="20201124 15:39:44.265"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201124 15:39:54.998" starttime="20201124 15:36:34.143"></status>
</suite>
<status status="PASS" elapsedtime="228941" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
