<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201124 23:47:06.931" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:42:50.010" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:01.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:01.522" level="INFO">${output} = 2020-11-24 23:42:51,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:42:52,122 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 23:43:01.522" starttime="20201124 23:42:50.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:01.523" level="INFO">2020-11-24 23:42:51,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:42:52,122 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:42:52,122 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-24 23:42:55,685 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-24 23:42:55,686 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-24 23:42:55,686 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-24 23:42:55,686 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-24 23:42:55,686 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-24 23:42:55,686 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-24 23:42:55,687 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-24 23:42:55,694 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-24 23:42:55,700 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:42:55,733 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-31571, with testuser/scm@EXAMPLE.COM as owner.
2020-11-24 23:42:56,259 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31571/bucket-0-33849, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-24 23:42:56,702 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:42:57,702 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:42:58,703 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:42:59,104 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-24 23:42:59,703 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,453
Average Time spent in bucket creation: 00:00:00,297
Average Time spent in key creation: 00:00:01,068
Average Time spent in key write: 00:00:01,947
Total bytes written: 10240
Total Execution time: 00:00:08,827
***************************************************</msg>
<status status="PASS" endtime="20201124 23:43:01.523" starttime="20201124 23:43:01.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:01.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:01.524" starttime="20201124 23:43:01.523"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:01.524" starttime="20201124 23:42:50.005"></status>
</kw>
<msg timestamp="20201124 23:43:01.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:01.525" starttime="20201124 23:42:50.004"></status>
</kw>
<msg timestamp="20201124 23:43:01.525" level="INFO">${result} = 2020-11-24 23:42:51,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:42:52,122 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 23:43:01.525" starttime="20201124 23:42:50.003"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201124 23:43:01.526" starttime="20201124 23:43:01.526"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:01.526" starttime="20201124 23:43:01.525"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 23:43:01.527" critical="yes" starttime="20201124 23:42:50.002"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:01.532" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:09.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:09.317" level="INFO">${output} = 2020-11-24 23:43:03,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:43:03,607 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 23:43:09.317" starttime="20201124 23:43:01.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:09.319" level="INFO">2020-11-24 23:43:03,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:43:03,607 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:43:03,607 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-24 23:43:03,781 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kezms1dqq8
2020-11-24 23:43:03,793 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-24 23:43:04,811 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:43:05,641 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-24 23:43:05,709 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-24 23:43:05,815 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:43:06,297 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-24 23:43:06,680 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:43:06,680 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-52134CAB958A-&gt;72458ad6-d63e-4254-88e2-0d9df3da404a
2020-11-24 23:43:06,681 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 23:43:06,816 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:43:07,816 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:43:08,816 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-24 23:43:08,984 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=2973.712048, max=2973.712048, mean=2973.712048, stddev=0.0, median=2973.712048, p75=2973.712048, p95=2973.712048, p98=2973.712048, p99=2973.712048, p999=2973.712048, mean_rate=0.3113779466500782, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-24 23:43:08,985 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2020-11-24 23:43:08,985 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-24 23:43:08,985 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201124 23:43:09.319" starttime="20201124 23:43:09.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:09.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:09.320" starttime="20201124 23:43:09.319"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:09.320" starttime="20201124 23:43:01.529"></status>
</kw>
<msg timestamp="20201124 23:43:09.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:09.320" starttime="20201124 23:43:01.529"></status>
</kw>
<msg timestamp="20201124 23:43:09.321" level="INFO">${result} = 2020-11-24 23:43:03,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:43:03,607 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 23:43:09.321" starttime="20201124 23:43:01.528"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201124 23:43:09.322" starttime="20201124 23:43:09.321"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:09.322" starttime="20201124 23:43:09.321"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 23:43:09.322" critical="yes" starttime="20201124 23:43:01.527"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:09.328" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:14.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:14.496" level="INFO">${output} = 2020-11-24 23:43:10,988 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:43:11,147 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 23:43:14.496" starttime="20201124 23:43:09.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:14.497" level="INFO">2020-11-24 23:43:10,988 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:43:11,147 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:43:11,147 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-24 23:43:11,307 [main] INFO freon.BaseFreonGenerator: Executing test with prefix crrxyfsevh
2020-11-24 23:43:11,319 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-24 23:43:12,323 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:43:13,323 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:43:14,324 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-24 23:43:14,461 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=262.263626, max=262.263626, mean=262.263626, stddev=0.0, median=262.263626, p75=262.263626, p95=262.263626, p98=262.263626, p99=262.263626, p999=262.263626, mean_rate=0.7313618795167136, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-24 23:43:14,461 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-24 23:43:14,461 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-24 23:43:14,461 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201124 23:43:14.497" starttime="20201124 23:43:14.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:14.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:14.498" starttime="20201124 23:43:14.497"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:14.498" starttime="20201124 23:43:09.324"></status>
</kw>
<msg timestamp="20201124 23:43:14.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:14.498" starttime="20201124 23:43:09.324"></status>
</kw>
<msg timestamp="20201124 23:43:14.498" level="INFO">${result} = 2020-11-24 23:43:10,988 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:43:11,147 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 23:43:14.499" starttime="20201124 23:43:09.323"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201124 23:43:14.500" starttime="20201124 23:43:14.499"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:14.500" starttime="20201124 23:43:14.499"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 23:43:14.500" critical="yes" starttime="20201124 23:43:09.323"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:14.506" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:19.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:19.533" level="INFO">${output} = 2020-11-24 23:43:16,263 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:43:16,507 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 23:43:19.534" starttime="20201124 23:43:14.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:19.535" level="INFO">2020-11-24 23:43:16,263 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:43:16,507 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:43:16,507 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-24 23:43:16,683 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zrbkwlubhh
2020-11-24 23:43:16,699 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-24 23:43:17,702 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-24 23:43:18,702 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-24 23:43:19,500 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=150.318427, max=150.318427, mean=150.318427, stddev=0.0, median=150.318427, p75=150.318427, p95=150.318427, p98=150.318427, p99=150.318427, p999=150.318427, mean_rate=0.8716843419074056, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-24 23:43:19,501 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-24 23:43:19,502 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-24 23:43:19,502 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201124 23:43:19.535" starttime="20201124 23:43:19.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:19.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:19.536" starttime="20201124 23:43:19.535"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:19.536" starttime="20201124 23:43:14.503"></status>
</kw>
<msg timestamp="20201124 23:43:19.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:19.536" starttime="20201124 23:43:14.502"></status>
</kw>
<msg timestamp="20201124 23:43:19.536" level="INFO">${result} = 2020-11-24 23:43:16,263 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-24 23:43:16,507 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201124 23:43:19.537" starttime="20201124 23:43:14.502"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201124 23:43:19.538" starttime="20201124 23:43:19.537"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:19.538" starttime="20201124 23:43:19.537"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 23:43:19.538" critical="yes" starttime="20201124 23:43:14.501"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201124 23:43:19.540" starttime="20201124 23:42:49.973"></status>
</suite>
<status status="PASS" endtime="20201124 23:43:19.545" starttime="20201124 23:42:49.941"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:42:41.471" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:42:41.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:42:41.483" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:42:41.483" starttime="20201124 23:42:41.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:42:41.484" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:42:41.484" starttime="20201124 23:42:41.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:42:41.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:42:41.485" starttime="20201124 23:42:41.484"></status>
</kw>
<status status="PASS" endtime="20201124 23:42:41.485" starttime="20201124 23:42:41.457"></status>
</kw>
<msg timestamp="20201124 23:42:41.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:42:41.485" starttime="20201124 23:42:41.457"></status>
</kw>
<msg timestamp="20201124 23:42:41.486" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:42:41.486" starttime="20201124 23:42:41.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:42:41.486" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:42:41.486" starttime="20201124 23:42:41.486"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:42:41.500" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:42:41.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:42:41.517" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:42:41.517" starttime="20201124 23:42:41.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:42:41.518" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:42:41.518" starttime="20201124 23:42:41.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:42:41.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:42:41.519" starttime="20201124 23:42:41.518"></status>
</kw>
<status status="PASS" endtime="20201124 23:42:41.522" starttime="20201124 23:42:41.488"></status>
</kw>
<msg timestamp="20201124 23:42:41.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:42:41.522" starttime="20201124 23:42:41.488"></status>
</kw>
<status status="PASS" endtime="20201124 23:42:41.523" starttime="20201124 23:42:41.487"></status>
</kw>
<status status="PASS" endtime="20201124 23:42:41.523" starttime="20201124 23:42:41.487"></status>
</kw>
<status status="PASS" endtime="20201124 23:42:41.523" starttime="20201124 23:42:41.455"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:42:41.523" critical="yes" starttime="20201124 23:42:41.451"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201124 23:42:41.528" starttime="20201124 23:42:41.312"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:43:25.024" level="INFO">${random} = 19897</msg>
<status status="PASS" endtime="20201124 23:43:25.024" starttime="20201124 23:43:25.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201124 23:43:25.025" level="INFO">${source} = 19897-source</msg>
<status status="PASS" endtime="20201124 23:43:25.025" starttime="20201124 23:43:25.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201124 23:43:25.026" level="INFO">${target} = 19897-target</msg>
<status status="PASS" endtime="20201124 23:43:25.026" starttime="20201124 23:43:25.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:25.031" level="INFO">Running command 'ozone sh volume create 19897-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:28.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:28.857" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:43:28.857" starttime="20201124 23:43:25.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:28.858" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:43:28.858" starttime="20201124 23:43:28.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:28.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:28.859" starttime="20201124 23:43:28.858"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:28.859" starttime="20201124 23:43:25.027"></status>
</kw>
<msg timestamp="20201124 23:43:28.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:28.859" starttime="20201124 23:43:25.027"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:28.860" starttime="20201124 23:43:25.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:28.865" level="INFO">Running command 'ozone sh volume create 19897-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:33.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:33.461" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:43:33.461" starttime="20201124 23:43:28.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:33.462" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:43:33.462" starttime="20201124 23:43:33.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:33.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:33.462" starttime="20201124 23:43:33.462"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:33.463" starttime="20201124 23:43:28.861"></status>
</kw>
<msg timestamp="20201124 23:43:33.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:33.463" starttime="20201124 23:43:28.860"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:33.463" starttime="20201124 23:43:28.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:33.468" level="INFO">Running command 'ozone sh bucket create 19897-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:37.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:37.094" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:43:37.094" starttime="20201124 23:43:33.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:37.095" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:43:37.096" starttime="20201124 23:43:37.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:37.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:37.096" starttime="20201124 23:43:37.096"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:37.096" starttime="20201124 23:43:33.465"></status>
</kw>
<msg timestamp="20201124 23:43:37.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:37.097" starttime="20201124 23:43:33.465"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:37.097" starttime="20201124 23:43:33.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:37.101" level="INFO">Running command 'ozone sh key put 19897-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:43.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:43.323" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:43:43.323" starttime="20201124 23:43:37.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:43.324" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:43:43.324" starttime="20201124 23:43:43.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:43.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:43.325" starttime="20201124 23:43:43.324"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:43.325" starttime="20201124 23:43:37.098"></status>
</kw>
<msg timestamp="20201124 23:43:43.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:43.325" starttime="20201124 23:43:37.098"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:43.325" starttime="20201124 23:43:37.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:43.329" level="INFO">Running command 'ozone sh bucket create 19897-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:46.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:46.839" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:43:46.840" starttime="20201124 23:43:43.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:46.840" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:43:46.841" starttime="20201124 23:43:46.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:46.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:46.841" starttime="20201124 23:43:46.841"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:46.841" starttime="20201124 23:43:43.326"></status>
</kw>
<msg timestamp="20201124 23:43:46.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:46.842" starttime="20201124 23:43:43.326"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:46.842" starttime="20201124 23:43:43.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:46.845" level="INFO">Running command 'ozone sh bucket link 19897-source/readable-bucket 19897-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:50.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:50.394" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:43:50.394" starttime="20201124 23:43:46.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:50.395" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:43:50.395" starttime="20201124 23:43:50.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:50.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:50.396" starttime="20201124 23:43:50.396"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:50.396" starttime="20201124 23:43:46.843"></status>
</kw>
<msg timestamp="20201124 23:43:50.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:50.397" starttime="20201124 23:43:46.843"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:50.397" starttime="20201124 23:43:46.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:50.401" level="INFO">Running command 'ozone sh bucket link 19897-source/readable-bucket 19897-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:54.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:54.189" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:43:54.189" starttime="20201124 23:43:50.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:54.190" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:43:54.190" starttime="20201124 23:43:54.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:54.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:54.191" starttime="20201124 23:43:54.190"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:54.191" starttime="20201124 23:43:50.398"></status>
</kw>
<msg timestamp="20201124 23:43:54.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:54.191" starttime="20201124 23:43:50.397"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:54.192" starttime="20201124 23:43:50.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:54.195" level="INFO">Running command 'ozone sh bucket link 19897-source/unreadable-bucket 19897-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:43:57.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:43:57.664" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:43:57.664" starttime="20201124 23:43:54.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:43:57.671" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:43:57.671" starttime="20201124 23:43:57.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:43:57.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:43:57.672" starttime="20201124 23:43:57.671"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:57.672" starttime="20201124 23:43:54.193"></status>
</kw>
<msg timestamp="20201124 23:43:57.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:43:57.672" starttime="20201124 23:43:54.192"></status>
</kw>
<status status="PASS" endtime="20201124 23:43:57.673" starttime="20201124 23:43:54.192"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:43:57.681" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 19897-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:01.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:01.062" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:01.062" starttime="20201124 23:43:57.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:01.063" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 23:44:01.063" starttime="20201124 23:44:01.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:01.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:01.064" starttime="20201124 23:44:01.063"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:01.064" starttime="20201124 23:43:57.678"></status>
</kw>
<msg timestamp="20201124 23:44:01.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:01.065" starttime="20201124 23:43:57.673"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:01.066" starttime="20201124 23:43:57.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:01.070" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 19897-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:04.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:04.712" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:04.712" starttime="20201124 23:44:01.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:04.714" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 23:44:04.714" starttime="20201124 23:44:04.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:04.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:04.714" starttime="20201124 23:44:04.714"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:04.715" starttime="20201124 23:44:01.067"></status>
</kw>
<msg timestamp="20201124 23:44:04.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:04.715" starttime="20201124 23:44:01.067"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:04.715" starttime="20201124 23:44:01.066"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:04.720" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 19897-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:08.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:08.584" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:08.584" starttime="20201124 23:44:04.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:08.585" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 23:44:08.585" starttime="20201124 23:44:08.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:08.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:08.586" starttime="20201124 23:44:08.585"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:08.586" starttime="20201124 23:44:04.716"></status>
</kw>
<msg timestamp="20201124 23:44:08.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:08.586" starttime="20201124 23:44:04.716"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:08.587" starttime="20201124 23:44:04.715"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:08.591" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 19897-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:12.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:12.678" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:12.678" starttime="20201124 23:44:08.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:12.679" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 23:44:12.679" starttime="20201124 23:44:12.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:12.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:12.679" starttime="20201124 23:44:12.679"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:12.680" starttime="20201124 23:44:08.588"></status>
</kw>
<msg timestamp="20201124 23:44:12.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:12.680" starttime="20201124 23:44:08.587"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:12.680" starttime="20201124 23:44:08.587"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:12.684" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 19897-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:16.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:16.396" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:16.396" starttime="20201124 23:44:12.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:16.397" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 23:44:16.397" starttime="20201124 23:44:16.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:16.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:16.398" starttime="20201124 23:44:16.397"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.398" starttime="20201124 23:44:12.681"></status>
</kw>
<msg timestamp="20201124 23:44:16.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:16.398" starttime="20201124 23:44:12.681"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.399" starttime="20201124 23:44:12.680"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.399" starttime="20201124 23:43:33.464"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.399" starttime="20201124 23:43:33.464"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.399" starttime="20201124 23:43:25.023"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:16.406" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:16.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:16.408" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:44:16.408" starttime="20201124 23:44:16.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:16.409" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:44:16.409" starttime="20201124 23:44:16.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:16.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:16.410" starttime="20201124 23:44:16.409"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.410" starttime="20201124 23:44:16.402"></status>
</kw>
<msg timestamp="20201124 23:44:16.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:16.410" starttime="20201124 23:44:16.402"></status>
</kw>
<msg timestamp="20201124 23:44:16.411" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:44:16.411" starttime="20201124 23:44:16.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:44:16.412" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:44:16.412" starttime="20201124 23:44:16.411"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:16.417" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:16.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:16.432" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:44:16.432" starttime="20201124 23:44:16.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:16.433" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:44:16.433" starttime="20201124 23:44:16.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:16.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:16.434" starttime="20201124 23:44:16.434"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.434" starttime="20201124 23:44:16.414"></status>
</kw>
<msg timestamp="20201124 23:44:16.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:16.435" starttime="20201124 23:44:16.413"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.435" starttime="20201124 23:44:16.413"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.435" starttime="20201124 23:44:16.412"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.435" starttime="20201124 23:44:16.401"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:16.435" starttime="20201124 23:44:16.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:16.439" level="INFO">Running command 'ozone sh bucket link 19897-source/no-such-bucket 19897-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:20.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:20.091" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:20.091" starttime="20201124 23:44:16.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:20.092" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:44:20.093" starttime="20201124 23:44:20.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:20.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:20.093" starttime="20201124 23:44:20.093"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:20.094" starttime="20201124 23:44:16.436"></status>
</kw>
<msg timestamp="20201124 23:44:20.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:20.094" starttime="20201124 23:44:16.436"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:20.094" starttime="20201124 23:44:16.436"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:20.097" level="INFO">Running command 'ozone sh key list 19897-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:24.220" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 23:44:24.220" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:24.220" starttime="20201124 23:44:20.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:24.221" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201124 23:44:24.222" starttime="20201124 23:44:24.221"></status>
</kw>
<msg timestamp="20201124 23:44:24.222" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:24.222" starttime="20201124 23:44:20.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201124 23:44:24.223" starttime="20201124 23:44:24.222"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:44:24.223" critical="yes" starttime="20201124 23:44:16.399"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:24.229" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:24.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:24.231" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:44:24.232" starttime="20201124 23:44:24.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:24.232" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:44:24.233" starttime="20201124 23:44:24.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:24.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:24.233" starttime="20201124 23:44:24.233"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:24.234" starttime="20201124 23:44:24.226"></status>
</kw>
<msg timestamp="20201124 23:44:24.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:24.234" starttime="20201124 23:44:24.226"></status>
</kw>
<msg timestamp="20201124 23:44:24.234" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:44:24.234" starttime="20201124 23:44:24.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:44:24.235" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:44:24.235" starttime="20201124 23:44:24.234"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:24.239" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:24.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:24.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:44:24.259" starttime="20201124 23:44:24.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:24.261" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:44:24.261" starttime="20201124 23:44:24.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:24.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:24.261" starttime="20201124 23:44:24.261"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:24.262" starttime="20201124 23:44:24.237"></status>
</kw>
<msg timestamp="20201124 23:44:24.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:24.262" starttime="20201124 23:44:24.236"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:24.262" starttime="20201124 23:44:24.236"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:24.262" starttime="20201124 23:44:24.235"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:24.262" starttime="20201124 23:44:24.225"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:24.262" starttime="20201124 23:44:24.224"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:24.266" level="INFO">Running command 'ozone sh bucket link 19897-source/bucket1 19897-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:28.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:28.028" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:28.028" starttime="20201124 23:44:24.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:28.029" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:44:28.029" starttime="20201124 23:44:28.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:28.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:28.030" starttime="20201124 23:44:28.030"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:28.030" starttime="20201124 23:44:24.264"></status>
</kw>
<msg timestamp="20201124 23:44:28.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:28.031" starttime="20201124 23:44:24.263"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:28.031" starttime="20201124 23:44:24.263"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:28.035" level="INFO">Running command 'ozone sh bucket create 19897-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:31.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:31.917" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:31.917" starttime="20201124 23:44:28.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:31.918" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:44:31.918" starttime="20201124 23:44:31.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:31.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:31.919" starttime="20201124 23:44:31.919"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:31.920" starttime="20201124 23:44:28.032"></status>
</kw>
<msg timestamp="20201124 23:44:31.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:31.920" starttime="20201124 23:44:28.032"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:31.920" starttime="20201124 23:44:28.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:31.924" level="INFO">Running command 'ozone sh key put 19897-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:38.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:38.436" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:38.436" starttime="20201124 23:44:31.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:38.438" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:44:38.438" starttime="20201124 23:44:38.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:38.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:38.439" starttime="20201124 23:44:38.439"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:38.440" starttime="20201124 23:44:31.921"></status>
</kw>
<msg timestamp="20201124 23:44:38.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:38.440" starttime="20201124 23:44:31.921"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:38.440" starttime="20201124 23:44:31.920"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201124 23:44:38.442" level="INFO">${postfix} = 73193</msg>
<status status="PASS" endtime="20201124 23:44:38.442" starttime="20201124 23:44:38.441"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201124 23:44:38.443" level="INFO">${tmpfile} = /tmp/tempkey-73193</msg>
<status status="PASS" endtime="20201124 23:44:38.443" starttime="20201124 23:44:38.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:38.447" level="INFO">Running command 'ozone sh key get -f 19897-target/link1/key1 /tmp/tempkey-73193 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:44.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:44.655" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:44.655" starttime="20201124 23:44:38.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:44.656" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:44:44.656" starttime="20201124 23:44:44.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:44.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:44.657" starttime="20201124 23:44:44.656"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.657" starttime="20201124 23:44:38.444"></status>
</kw>
<msg timestamp="20201124 23:44:44.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:44.657" starttime="20201124 23:44:38.444"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.658" starttime="20201124 23:44:38.443"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201124 23:44:44.660" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-73193 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:44.664" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201124 23:44:44.664" starttime="20201124 23:44:44.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:44.670" level="INFO">Running command 'rm -f /tmp/tempkey-73193 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:44.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:44.671" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:44:44.671" starttime="20201124 23:44:44.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:44.672" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:44:44.672" starttime="20201124 23:44:44.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:44.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:44.673" starttime="20201124 23:44:44.672"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.673" starttime="20201124 23:44:44.666"></status>
</kw>
<msg timestamp="20201124 23:44:44.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:44.674" starttime="20201124 23:44:44.665"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.674" starttime="20201124 23:44:44.665"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:44:44.675" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201124 23:44:44.675" starttime="20201124 23:44:44.674"></status>
</kw>
<msg timestamp="20201124 23:44:44.675" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201124 23:44:44.675" starttime="20201124 23:44:38.441"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:44:44.675" starttime="20201124 23:44:44.675"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.676" starttime="20201124 23:44:38.440"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:44:44.676" critical="yes" starttime="20201124 23:44:24.223"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:44.683" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:44.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:44.686" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:44:44.686" starttime="20201124 23:44:44.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:44.687" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:44:44.687" starttime="20201124 23:44:44.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:44.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:44.688" starttime="20201124 23:44:44.687"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.688" starttime="20201124 23:44:44.680"></status>
</kw>
<msg timestamp="20201124 23:44:44.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:44.688" starttime="20201124 23:44:44.680"></status>
</kw>
<msg timestamp="20201124 23:44:44.688" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:44:44.688" starttime="20201124 23:44:44.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:44:44.689" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:44:44.689" starttime="20201124 23:44:44.689"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:44.694" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:44.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:44.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:44:44.709" starttime="20201124 23:44:44.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:44.710" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:44:44.710" starttime="20201124 23:44:44.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:44.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:44.711" starttime="20201124 23:44:44.711"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.711" starttime="20201124 23:44:44.691"></status>
</kw>
<msg timestamp="20201124 23:44:44.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:44.712" starttime="20201124 23:44:44.691"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.712" starttime="20201124 23:44:44.690"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.712" starttime="20201124 23:44:44.690"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.712" starttime="20201124 23:44:44.679"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:44.712" starttime="20201124 23:44:44.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:44.717" level="INFO">Running command 'ozone sh key put 19897-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:50.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:50.743" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:50.743" starttime="20201124 23:44:44.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:50.744" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:44:50.744" starttime="20201124 23:44:50.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:50.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:50.745" starttime="20201124 23:44:50.745"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:50.746" starttime="20201124 23:44:44.713"></status>
</kw>
<msg timestamp="20201124 23:44:50.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:50.746" starttime="20201124 23:44:44.713"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:50.746" starttime="20201124 23:44:44.712"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201124 23:44:50.748" level="INFO">${postfix} = 29957</msg>
<status status="PASS" endtime="20201124 23:44:50.748" starttime="20201124 23:44:50.747"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201124 23:44:50.749" level="INFO">${tmpfile} = /tmp/tempkey-29957</msg>
<status status="PASS" endtime="20201124 23:44:50.749" starttime="20201124 23:44:50.748"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:50.754" level="INFO">Running command 'ozone sh key get -f 19897-source/bucket1/key2 /tmp/tempkey-29957 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:56.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:56.316" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:44:56.316" starttime="20201124 23:44:50.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:56.317" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:44:56.317" starttime="20201124 23:44:56.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:56.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:56.318" starttime="20201124 23:44:56.317"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.318" starttime="20201124 23:44:50.750"></status>
</kw>
<msg timestamp="20201124 23:44:56.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:56.318" starttime="20201124 23:44:50.749"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.319" starttime="20201124 23:44:50.749"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201124 23:44:56.322" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-29957 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:56.323" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201124 23:44:56.323" starttime="20201124 23:44:56.319"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:56.328" level="INFO">Running command 'rm -f /tmp/tempkey-29957 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:56.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:56.329" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:44:56.329" starttime="20201124 23:44:56.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:56.330" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:44:56.331" starttime="20201124 23:44:56.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:56.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:56.331" starttime="20201124 23:44:56.331"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.332" starttime="20201124 23:44:56.325"></status>
</kw>
<msg timestamp="20201124 23:44:56.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:56.332" starttime="20201124 23:44:56.324"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.332" starttime="20201124 23:44:56.323"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:44:56.333" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201124 23:44:56.333" starttime="20201124 23:44:56.332"></status>
</kw>
<msg timestamp="20201124 23:44:56.333" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201124 23:44:56.333" starttime="20201124 23:44:50.747"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:44:56.334" starttime="20201124 23:44:56.333"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.334" starttime="20201124 23:44:50.746"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:44:56.334" critical="yes" starttime="20201124 23:44:44.677"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:56.340" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:56.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:56.342" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:44:56.342" starttime="20201124 23:44:56.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:56.343" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:44:56.344" starttime="20201124 23:44:56.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:56.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:56.344" starttime="20201124 23:44:56.344"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.345" starttime="20201124 23:44:56.337"></status>
</kw>
<msg timestamp="20201124 23:44:56.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:56.345" starttime="20201124 23:44:56.337"></status>
</kw>
<msg timestamp="20201124 23:44:56.345" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:44:56.345" starttime="20201124 23:44:56.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:44:56.346" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:44:56.346" starttime="20201124 23:44:56.345"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:56.351" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:44:56.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:44:56.366" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:44:56.366" starttime="20201124 23:44:56.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:44:56.367" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:44:56.368" starttime="20201124 23:44:56.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:44:56.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:44:56.368" starttime="20201124 23:44:56.368"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.369" starttime="20201124 23:44:56.348"></status>
</kw>
<msg timestamp="20201124 23:44:56.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:44:56.369" starttime="20201124 23:44:56.347"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.369" starttime="20201124 23:44:56.347"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.369" starttime="20201124 23:44:56.346"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.370" starttime="20201124 23:44:56.336"></status>
</kw>
<status status="PASS" endtime="20201124 23:44:56.370" starttime="20201124 23:44:56.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:44:56.373" level="INFO">Running command 'ozone sh key list 19897-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:00.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:00.443" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201124 23:45:00.443" starttime="20201124 23:44:56.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:00.444" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201124 23:45:00.444" starttime="20201124 23:45:00.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:00.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:00.445" starttime="20201124 23:45:00.444"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:00.445" starttime="20201124 23:44:56.371"></status>
</kw>
<msg timestamp="20201124 23:45:00.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:00.445" starttime="20201124 23:44:56.371"></status>
</kw>
<msg timestamp="20201124 23:45:00.446" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201124 23:45:00.446" starttime="20201124 23:44:56.370"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:00.451" level="INFO">Running command 'ozone sh key list 19897-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:04.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:04.366" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201124 23:45:04.366" starttime="20201124 23:45:00.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:04.367" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201124 23:45:04.367" starttime="20201124 23:45:04.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:04.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:04.368" starttime="20201124 23:45:04.367"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:04.368" starttime="20201124 23:45:00.447"></status>
</kw>
<msg timestamp="20201124 23:45:04.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:04.369" starttime="20201124 23:45:00.446"></status>
</kw>
<msg timestamp="20201124 23:45:04.369" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201124 23:45:04.369" starttime="20201124 23:45:00.446"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:04.370" starttime="20201124 23:45:04.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:04.370" starttime="20201124 23:45:04.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:04.371" starttime="20201124 23:45:04.370"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:45:04.371" critical="yes" starttime="20201124 23:44:56.335"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:04.378" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:04.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:04.380" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:45:04.380" starttime="20201124 23:45:04.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:04.381" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:45:04.381" starttime="20201124 23:45:04.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:04.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:04.382" starttime="20201124 23:45:04.381"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:04.382" starttime="20201124 23:45:04.375"></status>
</kw>
<msg timestamp="20201124 23:45:04.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:04.383" starttime="20201124 23:45:04.374"></status>
</kw>
<msg timestamp="20201124 23:45:04.383" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:45:04.383" starttime="20201124 23:45:04.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:45:04.383" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:45:04.384" starttime="20201124 23:45:04.383"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:04.389" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:04.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:04.398" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:45:04.398" starttime="20201124 23:45:04.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:04.399" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:45:04.399" starttime="20201124 23:45:04.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:04.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:04.400" starttime="20201124 23:45:04.399"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:04.400" starttime="20201124 23:45:04.385"></status>
</kw>
<msg timestamp="20201124 23:45:04.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:04.401" starttime="20201124 23:45:04.385"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:04.401" starttime="20201124 23:45:04.384"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:04.401" starttime="20201124 23:45:04.384"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:04.401" starttime="20201124 23:45:04.373"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:04.401" starttime="20201124 23:45:04.373"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:04.406" level="INFO">Running command 'ozone sh key delete 19897-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:08.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:08.278" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:08.278" starttime="20201124 23:45:04.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:08.279" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:45:08.279" starttime="20201124 23:45:08.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:08.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:08.280" starttime="20201124 23:45:08.279"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:08.280" starttime="20201124 23:45:04.402"></status>
</kw>
<msg timestamp="20201124 23:45:08.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:08.280" starttime="20201124 23:45:04.402"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:08.281" starttime="20201124 23:45:04.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:08.291" level="INFO">Running command 'ozone sh key list 19897-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:12.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:12.557" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201124 23:45:12.557" starttime="20201124 23:45:08.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:12.558" level="INFO">key1</msg>
<status status="PASS" endtime="20201124 23:45:12.558" starttime="20201124 23:45:12.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:12.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:12.559" starttime="20201124 23:45:12.558"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:12.559" starttime="20201124 23:45:08.282"></status>
</kw>
<msg timestamp="20201124 23:45:12.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:12.560" starttime="20201124 23:45:08.282"></status>
</kw>
<msg timestamp="20201124 23:45:12.560" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201124 23:45:12.560" starttime="20201124 23:45:08.281"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:12.560" starttime="20201124 23:45:12.560"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:45:12.561" critical="yes" starttime="20201124 23:45:04.372"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:12.567" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:12.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:12.569" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:45:12.569" starttime="20201124 23:45:12.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:12.570" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:45:12.570" starttime="20201124 23:45:12.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:12.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:12.571" starttime="20201124 23:45:12.570"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:12.571" starttime="20201124 23:45:12.564"></status>
</kw>
<msg timestamp="20201124 23:45:12.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:12.572" starttime="20201124 23:45:12.564"></status>
</kw>
<msg timestamp="20201124 23:45:12.572" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:45:12.572" starttime="20201124 23:45:12.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:45:12.573" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:45:12.573" starttime="20201124 23:45:12.572"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:12.578" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:12.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:12.598" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:45:12.598" starttime="20201124 23:45:12.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:12.599" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:45:12.599" starttime="20201124 23:45:12.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:12.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:12.600" starttime="20201124 23:45:12.599"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:12.600" starttime="20201124 23:45:12.574"></status>
</kw>
<msg timestamp="20201124 23:45:12.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:12.600" starttime="20201124 23:45:12.574"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:12.600" starttime="20201124 23:45:12.573"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:12.600" starttime="20201124 23:45:12.573"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:12.601" starttime="20201124 23:45:12.563"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:12.601" starttime="20201124 23:45:12.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:12.604" level="INFO">Running command 'ozone sh bucket list 19897-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:16.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:16.384" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:16.384" starttime="20201124 23:45:12.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:16.385" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:44:19.980Z",
  "modificationTime" : "2020-11-24T23:44:19.980Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:43:57.502Z",
  "modificationTime" : "2020-11-24T23:44:16.286Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:44:27.946Z",
  "modificationTime" : "2020-11-24T23:44:27.946Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:43:50.139Z",
  "modificationTime" : "2020-11-24T23:44:12.364Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:43:53.985Z",
  "modificationTime" : "2020-11-24T23:43:53.985Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 23:45:16.385" starttime="20201124 23:45:16.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:16.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:16.386" starttime="20201124 23:45:16.385"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:16.386" starttime="20201124 23:45:12.602"></status>
</kw>
<msg timestamp="20201124 23:45:16.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:16.386" starttime="20201124 23:45:12.601"></status>
</kw>
<msg timestamp="20201124 23:45:16.387" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:16.387" starttime="20201124 23:45:12.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:16.387" starttime="20201124 23:45:16.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:16.388" starttime="20201124 23:45:16.388"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:45:16.388" critical="yes" starttime="20201124 23:45:12.561"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:16.394" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:16.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:16.397" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:45:16.397" starttime="20201124 23:45:16.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:16.398" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:45:16.398" starttime="20201124 23:45:16.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:16.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:16.398" starttime="20201124 23:45:16.398"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:16.399" starttime="20201124 23:45:16.391"></status>
</kw>
<msg timestamp="20201124 23:45:16.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:16.399" starttime="20201124 23:45:16.391"></status>
</kw>
<msg timestamp="20201124 23:45:16.399" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:45:16.399" starttime="20201124 23:45:16.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:45:16.400" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:45:16.400" starttime="20201124 23:45:16.399"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:16.405" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:16.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:16.414" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:45:16.414" starttime="20201124 23:45:16.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:16.415" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:45:16.416" starttime="20201124 23:45:16.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:16.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:16.416" starttime="20201124 23:45:16.416"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:16.417" starttime="20201124 23:45:16.402"></status>
</kw>
<msg timestamp="20201124 23:45:16.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:16.417" starttime="20201124 23:45:16.401"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:16.417" starttime="20201124 23:45:16.401"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:16.417" starttime="20201124 23:45:16.400"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:16.417" starttime="20201124 23:45:16.390"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:16.417" starttime="20201124 23:45:16.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:16.421" level="INFO">Running command 'ozone sh bucket info 19897-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:20.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:20.266" level="INFO">${output} = 19897-source bucket1</msg>
<status status="PASS" endtime="20201124 23:45:20.266" starttime="20201124 23:45:16.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:20.267" level="INFO">19897-source bucket1</msg>
<status status="PASS" endtime="20201124 23:45:20.267" starttime="20201124 23:45:20.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:20.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:20.268" starttime="20201124 23:45:20.267"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:20.268" starttime="20201124 23:45:16.418"></status>
</kw>
<msg timestamp="20201124 23:45:20.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:20.268" starttime="20201124 23:45:16.418"></status>
</kw>
<msg timestamp="20201124 23:45:20.269" level="INFO">${result} = 19897-source bucket1</msg>
<status status="PASS" endtime="20201124 23:45:20.269" starttime="20201124 23:45:16.418"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:20.270" starttime="20201124 23:45:20.269"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:45:20.270" critical="yes" starttime="20201124 23:45:16.389"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:20.276" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:20.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:20.279" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:45:20.279" starttime="20201124 23:45:20.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:20.280" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:45:20.281" starttime="20201124 23:45:20.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:20.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:20.281" starttime="20201124 23:45:20.281"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:20.282" starttime="20201124 23:45:20.273"></status>
</kw>
<msg timestamp="20201124 23:45:20.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:20.282" starttime="20201124 23:45:20.273"></status>
</kw>
<msg timestamp="20201124 23:45:20.282" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:45:20.282" starttime="20201124 23:45:20.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:45:20.283" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:45:20.283" starttime="20201124 23:45:20.282"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:20.288" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:20.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:20.298" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:45:20.298" starttime="20201124 23:45:20.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:20.300" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:45:20.300" starttime="20201124 23:45:20.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:20.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:20.301" starttime="20201124 23:45:20.300"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:20.301" starttime="20201124 23:45:20.285"></status>
</kw>
<msg timestamp="20201124 23:45:20.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:20.301" starttime="20201124 23:45:20.285"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:20.301" starttime="20201124 23:45:20.284"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:20.301" starttime="20201124 23:45:20.283"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:20.301" starttime="20201124 23:45:20.272"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:20.302" starttime="20201124 23:45:20.271"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:20.306" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 19897-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:23.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:23.963" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:23.963" starttime="20201124 23:45:20.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:23.965" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 23:45:23.965" starttime="20201124 23:45:23.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:23.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:23.966" starttime="20201124 23:45:23.965"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:23.966" starttime="20201124 23:45:20.303"></status>
</kw>
<msg timestamp="20201124 23:45:23.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:23.966" starttime="20201124 23:45:20.302"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:23.966" starttime="20201124 23:45:20.302"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:23.972" level="INFO">Running command 'ozone sh bucket getacl 19897-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:27.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:27.843" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201124 23:45:27.843" starttime="20201124 23:45:23.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:27.844" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201124 23:45:27.844" starttime="20201124 23:45:27.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:27.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:27.845" starttime="20201124 23:45:27.844"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:27.845" starttime="20201124 23:45:23.968"></status>
</kw>
<msg timestamp="20201124 23:45:27.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:27.845" starttime="20201124 23:45:23.968"></status>
</kw>
<msg timestamp="20201124 23:45:27.847" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201124 23:45:27.847" starttime="20201124 23:45:23.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:27.848" starttime="20201124 23:45:27.847"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:27.848" starttime="20201124 23:45:23.967"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:27.854" level="INFO">Running command 'ozone sh bucket getacl 19897-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:31.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:31.707" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:45:31.707" starttime="20201124 23:45:27.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:31.708" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:45:31.709" starttime="20201124 23:45:31.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:31.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:31.709" starttime="20201124 23:45:31.709"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:31.710" starttime="20201124 23:45:27.850"></status>
</kw>
<msg timestamp="20201124 23:45:31.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:31.710" starttime="20201124 23:45:27.850"></status>
</kw>
<msg timestamp="20201124 23:45:31.710" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201124 23:45:31.710" starttime="20201124 23:45:27.849"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:31.711" starttime="20201124 23:45:31.710"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:31.711" starttime="20201124 23:45:27.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:31.715" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 19897-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:35.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:35.582" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:35.582" starttime="20201124 23:45:31.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:35.584" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201124 23:45:35.584" starttime="20201124 23:45:35.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:35.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:35.584" starttime="20201124 23:45:35.584"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:35.585" starttime="20201124 23:45:31.713"></status>
</kw>
<msg timestamp="20201124 23:45:35.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:35.585" starttime="20201124 23:45:31.712"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:35.586" starttime="20201124 23:45:31.711"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:35.592" level="INFO">Running command 'ozone sh bucket getacl 19897-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:39.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:39.539" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:45:39.539" starttime="20201124 23:45:35.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:39.541" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:45:39.541" starttime="20201124 23:45:39.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:39.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:39.542" starttime="20201124 23:45:39.541"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:39.542" starttime="20201124 23:45:35.588"></status>
</kw>
<msg timestamp="20201124 23:45:39.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:39.543" starttime="20201124 23:45:35.588"></status>
</kw>
<msg timestamp="20201124 23:45:39.543" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201124 23:45:39.543" starttime="20201124 23:45:35.587"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:39.545" starttime="20201124 23:45:39.543"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:39.545" starttime="20201124 23:45:35.586"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:39.550" level="INFO">Running command 'ozone sh bucket getacl 19897-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:43.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:43.835" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201124 23:45:43.835" starttime="20201124 23:45:39.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:43.836" level="INFO">READ</msg>
<status status="PASS" endtime="20201124 23:45:43.836" starttime="20201124 23:45:43.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:43.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:43.837" starttime="20201124 23:45:43.836"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:43.837" starttime="20201124 23:45:39.548"></status>
</kw>
<msg timestamp="20201124 23:45:43.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:43.837" starttime="20201124 23:45:39.547"></status>
</kw>
<msg timestamp="20201124 23:45:43.838" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201124 23:45:43.838" starttime="20201124 23:45:39.546"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:43.839" starttime="20201124 23:45:43.838"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:43.839" starttime="20201124 23:45:39.546"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:45:43.839" critical="yes" starttime="20201124 23:45:20.270"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:43.846" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:43.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:43.850" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:45:43.850" starttime="20201124 23:45:43.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:43.851" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:45:43.851" starttime="20201124 23:45:43.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:43.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:43.852" starttime="20201124 23:45:43.852"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:43.853" starttime="20201124 23:45:43.843"></status>
</kw>
<msg timestamp="20201124 23:45:43.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:43.853" starttime="20201124 23:45:43.843"></status>
</kw>
<msg timestamp="20201124 23:45:43.853" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:45:43.853" starttime="20201124 23:45:43.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:45:43.854" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:45:43.854" starttime="20201124 23:45:43.853"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:43.858" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:43.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:43.870" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:45:43.870" starttime="20201124 23:45:43.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:43.871" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:45:43.871" starttime="20201124 23:45:43.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:43.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:43.872" starttime="20201124 23:45:43.871"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:43.872" starttime="20201124 23:45:43.856"></status>
</kw>
<msg timestamp="20201124 23:45:43.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:43.872" starttime="20201124 23:45:43.855"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:43.873" starttime="20201124 23:45:43.855"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:43.873" starttime="20201124 23:45:43.854"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:43.873" starttime="20201124 23:45:43.842"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:43.873" starttime="20201124 23:45:43.841"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:43.877" level="INFO">Running command 'ozone sh bucket link 19897-source/bucket2 19897-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:48.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:48.024" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:48.024" starttime="20201124 23:45:43.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:48.025" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:45:48.025" starttime="20201124 23:45:48.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:48.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:48.026" starttime="20201124 23:45:48.026"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:48.027" starttime="20201124 23:45:43.874"></status>
</kw>
<msg timestamp="20201124 23:45:48.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:48.027" starttime="20201124 23:45:43.874"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:48.027" starttime="20201124 23:45:43.873"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:48.031" level="INFO">Running command 'ozone sh bucket create 19897-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:51.674" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 23:45:51.674" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:51.674" starttime="20201124 23:45:48.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:51.675" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201124 23:45:51.675" starttime="20201124 23:45:51.674"></status>
</kw>
<msg timestamp="20201124 23:45:51.676" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:51.676" starttime="20201124 23:45:48.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:51.676" starttime="20201124 23:45:51.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:51.680" level="INFO">Running command 'ozone sh bucket create 19897-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:55.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:55.317" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:55.317" starttime="20201124 23:45:51.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:55.318" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:45:55.319" starttime="20201124 23:45:55.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:55.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:55.319" starttime="20201124 23:45:55.319"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:55.320" starttime="20201124 23:45:51.677"></status>
</kw>
<msg timestamp="20201124 23:45:55.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:55.320" starttime="20201124 23:45:51.677"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:55.320" starttime="20201124 23:45:51.676"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:55.324" level="INFO">Running command 'ozone sh bucket link 19897-source/bucket1 19897-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:58.922" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 23:45:58.922" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:58.922" starttime="20201124 23:45:55.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.924" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201124 23:45:58.924" starttime="20201124 23:45:58.923"></status>
</kw>
<msg timestamp="20201124 23:45:58.924" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:45:58.924" starttime="20201124 23:45:55.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201124 23:45:58.925" starttime="20201124 23:45:58.924"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:45:58.925" critical="yes" starttime="20201124 23:45:43.840"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:58.932" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:58.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:58.933" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:45:58.934" starttime="20201124 23:45:58.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.935" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:45:58.935" starttime="20201124 23:45:58.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:58.936" starttime="20201124 23:45:58.935"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.936" starttime="20201124 23:45:58.929"></status>
</kw>
<msg timestamp="20201124 23:45:58.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:58.936" starttime="20201124 23:45:58.928"></status>
</kw>
<msg timestamp="20201124 23:45:58.936" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:45:58.936" starttime="20201124 23:45:58.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:45:58.937" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:45:58.937" starttime="20201124 23:45:58.937"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:58.942" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:58.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:58.957" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:45:58.957" starttime="20201124 23:45:58.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.958" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:45:58.958" starttime="20201124 23:45:58.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:58.959" starttime="20201124 23:45:58.959"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.959" starttime="20201124 23:45:58.939"></status>
</kw>
<msg timestamp="20201124 23:45:58.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:58.960" starttime="20201124 23:45:58.938"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.960" starttime="20201124 23:45:58.938"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.960" starttime="20201124 23:45:58.937"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.960" starttime="20201124 23:45:58.927"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.960" starttime="20201124 23:45:58.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:58.966" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:58.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:58.968" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:45:58.968" starttime="20201124 23:45:58.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.969" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:45:58.969" starttime="20201124 23:45:58.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:58.970" starttime="20201124 23:45:58.970"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.970" starttime="20201124 23:45:58.962"></status>
</kw>
<msg timestamp="20201124 23:45:58.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:58.971" starttime="20201124 23:45:58.962"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.971" starttime="20201124 23:45:58.962"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:58.975" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:58.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:58.977" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:45:58.977" starttime="20201124 23:45:58.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.978" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:45:58.978" starttime="20201124 23:45:58.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:58.979" starttime="20201124 23:45:58.979"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.980" starttime="20201124 23:45:58.973"></status>
</kw>
<msg timestamp="20201124 23:45:58.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:58.980" starttime="20201124 23:45:58.972"></status>
</kw>
<msg timestamp="20201124 23:45:58.980" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:45:58.980" starttime="20201124 23:45:58.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:45:58.981" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:45:58.981" starttime="20201124 23:45:58.980"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:58.986" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:45:58.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:45:58.995" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:45:58.995" starttime="20201124 23:45:58.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.996" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:45:58.996" starttime="20201124 23:45:58.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:45:58.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:45:58.998" starttime="20201124 23:45:58.997"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.998" starttime="20201124 23:45:58.983"></status>
</kw>
<msg timestamp="20201124 23:45:58.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:45:58.998" starttime="20201124 23:45:58.983"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.998" starttime="20201124 23:45:58.982"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.998" starttime="20201124 23:45:58.981"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.999" starttime="20201124 23:45:58.971"></status>
</kw>
<status status="PASS" endtime="20201124 23:45:58.999" starttime="20201124 23:45:58.971"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:45:59.001" level="INFO">Running command 'ozone sh key list 19897-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:03.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:03.140" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:03.140" starttime="20201124 23:45:58.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.141" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "19897-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-24T23:43:40.781Z",
  "modificationTime" : "2020-11-24T23:43:42.751Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201124 23:46:03.141" starttime="20201124 23:46:03.141"></status>
</kw>
<msg timestamp="20201124 23:46:03.142" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:03.142" starttime="20201124 23:45:58.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 23:46:03.142" starttime="20201124 23:46:03.142"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.143" starttime="20201124 23:45:58.961"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.143" starttime="20201124 23:45:58.960"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:46:03.143" critical="yes" starttime="20201124 23:45:58.926"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:03.150" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:03.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:03.151" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:46:03.151" starttime="20201124 23:46:03.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.152" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:46:03.152" starttime="20201124 23:46:03.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:03.153" starttime="20201124 23:46:03.153"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.153" starttime="20201124 23:46:03.146"></status>
</kw>
<msg timestamp="20201124 23:46:03.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:03.154" starttime="20201124 23:46:03.146"></status>
</kw>
<msg timestamp="20201124 23:46:03.154" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:46:03.154" starttime="20201124 23:46:03.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:46:03.155" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:46:03.155" starttime="20201124 23:46:03.154"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:03.159" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:03.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:03.169" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:46:03.169" starttime="20201124 23:46:03.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.170" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:46:03.170" starttime="20201124 23:46:03.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:03.171" starttime="20201124 23:46:03.170"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.171" starttime="20201124 23:46:03.156"></status>
</kw>
<msg timestamp="20201124 23:46:03.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:03.172" starttime="20201124 23:46:03.156"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.172" starttime="20201124 23:46:03.155"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.172" starttime="20201124 23:46:03.155"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.172" starttime="20201124 23:46:03.145"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.172" starttime="20201124 23:46:03.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:03.178" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:03.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:03.180" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:46:03.180" starttime="20201124 23:46:03.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.181" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:46:03.181" starttime="20201124 23:46:03.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:03.182" starttime="20201124 23:46:03.181"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.182" starttime="20201124 23:46:03.175"></status>
</kw>
<msg timestamp="20201124 23:46:03.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:03.182" starttime="20201124 23:46:03.174"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.182" starttime="20201124 23:46:03.173"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:03.187" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:03.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:03.189" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:46:03.189" starttime="20201124 23:46:03.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.190" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:46:03.190" starttime="20201124 23:46:03.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:03.191" starttime="20201124 23:46:03.190"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.191" starttime="20201124 23:46:03.184"></status>
</kw>
<msg timestamp="20201124 23:46:03.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:03.191" starttime="20201124 23:46:03.184"></status>
</kw>
<msg timestamp="20201124 23:46:03.192" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:46:03.192" starttime="20201124 23:46:03.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:46:03.192" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:46:03.193" starttime="20201124 23:46:03.192"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:03.197" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:03.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:03.218" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:46:03.219" starttime="20201124 23:46:03.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.219" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:46:03.220" starttime="20201124 23:46:03.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:03.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:03.220" starttime="20201124 23:46:03.220"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.221" starttime="20201124 23:46:03.194"></status>
</kw>
<msg timestamp="20201124 23:46:03.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:03.221" starttime="20201124 23:46:03.194"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.221" starttime="20201124 23:46:03.193"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.221" starttime="20201124 23:46:03.193"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.221" starttime="20201124 23:46:03.183"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:03.221" starttime="20201124 23:46:03.183"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:03.225" level="INFO">Running command 'ozone sh key list 19897-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:06.667" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 23:46:06.667" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:06.667" starttime="20201124 23:46:03.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.669" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201124 23:46:06.669" starttime="20201124 23:46:06.668"></status>
</kw>
<msg timestamp="20201124 23:46:06.669" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:06.669" starttime="20201124 23:46:03.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201124 23:46:06.670" starttime="20201124 23:46:06.670"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.670" starttime="20201124 23:46:03.173"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.670" starttime="20201124 23:46:03.172"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:46:06.671" critical="yes" starttime="20201124 23:46:03.144"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:06.676" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:06.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:06.679" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:46:06.679" starttime="20201124 23:46:06.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.680" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:46:06.680" starttime="20201124 23:46:06.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:06.681" starttime="20201124 23:46:06.680"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.681" starttime="20201124 23:46:06.674"></status>
</kw>
<msg timestamp="20201124 23:46:06.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:06.681" starttime="20201124 23:46:06.674"></status>
</kw>
<msg timestamp="20201124 23:46:06.682" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:46:06.682" starttime="20201124 23:46:06.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:46:06.682" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:46:06.682" starttime="20201124 23:46:06.682"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:06.687" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:06.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:06.708" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:46:06.708" starttime="20201124 23:46:06.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.709" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:46:06.709" starttime="20201124 23:46:06.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:06.710" starttime="20201124 23:46:06.709"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.710" starttime="20201124 23:46:06.684"></status>
</kw>
<msg timestamp="20201124 23:46:06.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:06.710" starttime="20201124 23:46:06.684"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.710" starttime="20201124 23:46:06.683"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.710" starttime="20201124 23:46:06.682"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.711" starttime="20201124 23:46:06.673"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.711" starttime="20201124 23:46:06.672"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:06.715" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:06.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:06.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:46:06.719" starttime="20201124 23:46:06.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.720" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:46:06.720" starttime="20201124 23:46:06.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:06.721" starttime="20201124 23:46:06.720"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.721" starttime="20201124 23:46:06.713"></status>
</kw>
<msg timestamp="20201124 23:46:06.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:06.721" starttime="20201124 23:46:06.712"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.722" starttime="20201124 23:46:06.712"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:06.727" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:06.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:06.728" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:46:06.728" starttime="20201124 23:46:06.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.729" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:46:06.729" starttime="20201124 23:46:06.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:06.730" starttime="20201124 23:46:06.729"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.730" starttime="20201124 23:46:06.723"></status>
</kw>
<msg timestamp="20201124 23:46:06.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:06.730" starttime="20201124 23:46:06.723"></status>
</kw>
<msg timestamp="20201124 23:46:06.730" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:46:06.730" starttime="20201124 23:46:06.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:46:06.731" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:46:06.731" starttime="20201124 23:46:06.731"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:06.735" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:06.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:06.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:46:06.750" starttime="20201124 23:46:06.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.751" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:46:06.751" starttime="20201124 23:46:06.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:06.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:06.752" starttime="20201124 23:46:06.751"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.752" starttime="20201124 23:46:06.733"></status>
</kw>
<msg timestamp="20201124 23:46:06.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:06.752" starttime="20201124 23:46:06.732"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.753" starttime="20201124 23:46:06.732"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.753" starttime="20201124 23:46:06.731"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.753" starttime="20201124 23:46:06.722"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:06.753" starttime="20201124 23:46:06.722"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:06.757" level="INFO">Running command 'ozone sh bucket info 19897-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:10.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:10.815" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:10.815" starttime="20201124 23:46:06.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:10.817" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:43:57.502Z",
  "modificationTime" : "2020-11-24T23:44:16.286Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 23:46:10.817" starttime="20201124 23:46:10.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:10.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:10.818" starttime="20201124 23:46:10.817"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:10.818" starttime="20201124 23:46:06.754"></status>
</kw>
<msg timestamp="20201124 23:46:10.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:10.818" starttime="20201124 23:46:06.754"></status>
</kw>
<msg timestamp="20201124 23:46:10.819" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:10.819" starttime="20201124 23:46:06.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 23:46:10.819" starttime="20201124 23:46:10.819"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201124 23:46:10.820" starttime="20201124 23:46:10.819"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:10.823" level="INFO">Running command 'ozone sh key list 19897-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:14.641" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 23:46:14.641" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:14.641" starttime="20201124 23:46:10.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:14.642" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201124 23:46:14.642" starttime="20201124 23:46:14.642"></status>
</kw>
<msg timestamp="20201124 23:46:14.643" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:14.643" starttime="20201124 23:46:10.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201124 23:46:14.644" starttime="20201124 23:46:14.643"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:14.644" starttime="20201124 23:46:06.712"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:14.644" starttime="20201124 23:46:06.711"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:46:14.644" critical="yes" starttime="20201124 23:46:06.671"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:14.650" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:14.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:14.652" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:46:14.652" starttime="20201124 23:46:14.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:14.653" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:46:14.654" starttime="20201124 23:46:14.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:14.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:14.654" starttime="20201124 23:46:14.654"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:14.655" starttime="20201124 23:46:14.648"></status>
</kw>
<msg timestamp="20201124 23:46:14.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:14.655" starttime="20201124 23:46:14.647"></status>
</kw>
<msg timestamp="20201124 23:46:14.655" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:46:14.655" starttime="20201124 23:46:14.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:46:14.656" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:46:14.656" starttime="20201124 23:46:14.655"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:14.660" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:14.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:14.676" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:46:14.676" starttime="20201124 23:46:14.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:14.677" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:46:14.677" starttime="20201124 23:46:14.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:14.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:14.678" starttime="20201124 23:46:14.677"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:14.679" starttime="20201124 23:46:14.657"></status>
</kw>
<msg timestamp="20201124 23:46:14.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:14.679" starttime="20201124 23:46:14.657"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:14.679" starttime="20201124 23:46:14.657"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:14.679" starttime="20201124 23:46:14.656"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:14.679" starttime="20201124 23:46:14.646"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:14.679" starttime="20201124 23:46:14.646"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:14.683" level="INFO">Running command 'ozone sh bucket link 19897-target/loop1 19897-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:18.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:18.155" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:18.155" starttime="20201124 23:46:14.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:18.156" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:46:18.156" starttime="20201124 23:46:18.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:18.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:18.157" starttime="20201124 23:46:18.156"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:18.157" starttime="20201124 23:46:14.681"></status>
</kw>
<msg timestamp="20201124 23:46:18.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:18.157" starttime="20201124 23:46:14.680"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:18.158" starttime="20201124 23:46:14.680"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:18.162" level="INFO">Running command 'ozone sh bucket link 19897-target/loop2 19897-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:21.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:21.861" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:21.861" starttime="20201124 23:46:18.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:21.863" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:46:21.863" starttime="20201124 23:46:21.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:21.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:21.864" starttime="20201124 23:46:21.863"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:21.864" starttime="20201124 23:46:18.159"></status>
</kw>
<msg timestamp="20201124 23:46:21.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:21.864" starttime="20201124 23:46:18.159"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:21.865" starttime="20201124 23:46:18.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:21.870" level="INFO">Running command 'ozone sh bucket link 19897-target/loop3 19897-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:25.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:25.676" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:25.676" starttime="20201124 23:46:21.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:25.677" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:46:25.677" starttime="20201124 23:46:25.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:25.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:25.678" starttime="20201124 23:46:25.677"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:25.678" starttime="20201124 23:46:21.866"></status>
</kw>
<msg timestamp="20201124 23:46:25.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:25.678" starttime="20201124 23:46:21.865"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:25.678" starttime="20201124 23:46:21.865"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:25.681" level="INFO">Running command 'ozone sh key list 19897-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:29.036" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 23:46:29.036" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:29.036" starttime="20201124 23:46:25.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:29.038" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201124 23:46:29.038" starttime="20201124 23:46:29.037"></status>
</kw>
<msg timestamp="20201124 23:46:29.038" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:29.039" starttime="20201124 23:46:25.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201124 23:46:29.039" starttime="20201124 23:46:29.039"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:46:29.039" critical="yes" starttime="20201124 23:46:14.645"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:29.053" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:29.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:29.056" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:46:29.056" starttime="20201124 23:46:29.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:29.059" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:46:29.059" starttime="20201124 23:46:29.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:29.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:29.059" starttime="20201124 23:46:29.059"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:29.062" starttime="20201124 23:46:29.045"></status>
</kw>
<msg timestamp="20201124 23:46:29.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:29.062" starttime="20201124 23:46:29.044"></status>
</kw>
<msg timestamp="20201124 23:46:29.062" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:46:29.062" starttime="20201124 23:46:29.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:46:29.063" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:46:29.063" starttime="20201124 23:46:29.062"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:29.069" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:29.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:29.089" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:46:29.090" starttime="20201124 23:46:29.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:29.091" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:46:29.091" starttime="20201124 23:46:29.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:29.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:29.092" starttime="20201124 23:46:29.091"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:29.092" starttime="20201124 23:46:29.066"></status>
</kw>
<msg timestamp="20201124 23:46:29.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:29.093" starttime="20201124 23:46:29.065"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:29.093" starttime="20201124 23:46:29.064"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:29.093" starttime="20201124 23:46:29.063"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:29.093" starttime="20201124 23:46:29.043"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:29.093" starttime="20201124 23:46:29.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:29.106" level="INFO">Running command 'ozone sh bucket link 19897-source/bucket1 19897-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:33.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:33.153" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:33.153" starttime="20201124 23:46:29.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:33.154" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:46:33.154" starttime="20201124 23:46:33.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:33.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:33.155" starttime="20201124 23:46:33.154"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:33.155" starttime="20201124 23:46:29.094"></status>
</kw>
<msg timestamp="20201124 23:46:33.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:33.156" starttime="20201124 23:46:29.094"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:33.156" starttime="20201124 23:46:29.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:33.160" level="INFO">Running command 'ozone sh key put 19897-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:39.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:39.473" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:39.473" starttime="20201124 23:46:33.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:39.474" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:46:39.474" starttime="20201124 23:46:39.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:39.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:39.475" starttime="20201124 23:46:39.475"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:39.476" starttime="20201124 23:46:33.157"></status>
</kw>
<msg timestamp="20201124 23:46:39.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:39.476" starttime="20201124 23:46:33.157"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:39.476" starttime="20201124 23:46:33.156"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201124 23:46:39.478" level="INFO">${postfix} = 23393</msg>
<status status="PASS" endtime="20201124 23:46:39.478" starttime="20201124 23:46:39.477"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201124 23:46:39.479" level="INFO">${tmpfile} = /tmp/tempkey-23393</msg>
<status status="PASS" endtime="20201124 23:46:39.479" starttime="20201124 23:46:39.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:39.483" level="INFO">Running command 'ozone sh key get -f 19897-target/link1/key3 /tmp/tempkey-23393 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:45.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:45.710" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:45.710" starttime="20201124 23:46:39.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:45.711" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:46:45.711" starttime="20201124 23:46:45.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:45.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:45.712" starttime="20201124 23:46:45.711"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.712" starttime="20201124 23:46:39.480"></status>
</kw>
<msg timestamp="20201124 23:46:45.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:45.712" starttime="20201124 23:46:39.480"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.712" starttime="20201124 23:46:39.479"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201124 23:46:45.716" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-23393 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:45.717" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201124 23:46:45.717" starttime="20201124 23:46:45.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:45.721" level="INFO">Running command 'rm -f /tmp/tempkey-23393 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:45.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:45.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:46:45.724" starttime="20201124 23:46:45.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:45.725" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:46:45.725" starttime="20201124 23:46:45.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:45.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:45.726" starttime="20201124 23:46:45.725"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.726" starttime="20201124 23:46:45.719"></status>
</kw>
<msg timestamp="20201124 23:46:45.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:45.726" starttime="20201124 23:46:45.719"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.727" starttime="20201124 23:46:45.718"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:46:45.727" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201124 23:46:45.728" starttime="20201124 23:46:45.727"></status>
</kw>
<msg timestamp="20201124 23:46:45.728" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201124 23:46:45.728" starttime="20201124 23:46:39.477"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:46:45.728" starttime="20201124 23:46:45.728"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.729" starttime="20201124 23:46:39.476"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:46:45.729" critical="yes" starttime="20201124 23:46:29.041"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:45.735" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:45.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:45.738" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201124 23:46:45.739" starttime="20201124 23:46:45.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:45.740" level="INFO">scm</msg>
<status status="PASS" endtime="20201124 23:46:45.740" starttime="20201124 23:46:45.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:45.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:45.741" starttime="20201124 23:46:45.740"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.741" starttime="20201124 23:46:45.732"></status>
</kw>
<msg timestamp="20201124 23:46:45.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:45.741" starttime="20201124 23:46:45.732"></status>
</kw>
<msg timestamp="20201124 23:46:45.742" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201124 23:46:45.742" starttime="20201124 23:46:45.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:46:45.742" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:46:45.743" starttime="20201124 23:46:45.742"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:45.747" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:45.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:45.766" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:46:45.766" starttime="20201124 23:46:45.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:45.767" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:46:45.767" starttime="20201124 23:46:45.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:45.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:45.768" starttime="20201124 23:46:45.767"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.768" starttime="20201124 23:46:45.744"></status>
</kw>
<msg timestamp="20201124 23:46:45.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:45.768" starttime="20201124 23:46:45.744"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.769" starttime="20201124 23:46:45.743"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.769" starttime="20201124 23:46:45.743"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.769" starttime="20201124 23:46:45.731"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:45.769" starttime="20201124 23:46:45.731"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:45.774" level="INFO">Running command 'ozone sh bucket delete 19897-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:49.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:49.387" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:49.387" starttime="20201124 23:46:45.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:49.388" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:46:49.388" starttime="20201124 23:46:49.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:49.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:49.389" starttime="20201124 23:46:49.388"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:49.389" starttime="20201124 23:46:45.770"></status>
</kw>
<msg timestamp="20201124 23:46:49.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:49.389" starttime="20201124 23:46:45.770"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:49.390" starttime="20201124 23:46:45.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:49.394" level="INFO">Running command 'ozone sh bucket list 19897-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:53.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:53.249" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:53.249" starttime="20201124 23:46:49.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:53.250" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:45:55.194Z",
  "modificationTime" : "2020-11-24T23:45:55.194Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:44:19.980Z",
  "modificationTime" : "2020-11-24T23:44:19.980Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:43:57.502Z",
  "modificationTime" : "2020-11-24T23:44:16.286Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:45:47.724Z",
  "modificationTime" : "2020-11-24T23:45:47.724Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:46:32.988Z",
  "modificationTime" : "2020-11-24T23:46:32.988Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:46:25.493Z",
  "modificationTime" : "2020-11-24T23:46:25.493Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:46:18.074Z",
  "modificationTime" : "2020-11-24T23:46:18.074Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:46:21.738Z",
  "modificationTime" : "2020-11-24T23:46:21.738Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:43:50.139Z",
  "modificationTime" : "2020-11-24T23:44:12.364Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19897-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:43:53.985Z",
  "modificationTime" : "2020-11-24T23:43:53.985Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19897-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 23:46:53.250" starttime="20201124 23:46:53.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:53.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:53.251" starttime="20201124 23:46:53.250"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:53.251" starttime="20201124 23:46:49.391"></status>
</kw>
<msg timestamp="20201124 23:46:53.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:53.251" starttime="20201124 23:46:49.391"></status>
</kw>
<msg timestamp="20201124 23:46:53.252" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:46:53.252" starttime="20201124 23:46:49.390"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201124 23:46:53.253" starttime="20201124 23:46:53.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:46:53.258" level="INFO">Running command 'ozone sh key list 19897-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:46:57.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:46:57.150" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201124 23:46:57.150" starttime="20201124 23:46:53.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:46:57.151" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201124 23:46:57.151" starttime="20201124 23:46:57.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:46:57.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:46:57.152" starttime="20201124 23:46:57.151"></status>
</kw>
<status status="PASS" endtime="20201124 23:46:57.152" starttime="20201124 23:46:53.254"></status>
</kw>
<msg timestamp="20201124 23:46:57.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:46:57.152" starttime="20201124 23:46:53.254"></status>
</kw>
<msg timestamp="20201124 23:46:57.153" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201124 23:46:57.153" starttime="20201124 23:46:53.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201124 23:46:57.153" starttime="20201124 23:46:57.153"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:46:57.154" critical="yes" starttime="20201124 23:46:45.730"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201124 23:46:57.157" starttime="20201124 23:43:24.961"></status>
</suite>
<status status="PASS" elapsedtime="242016" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
