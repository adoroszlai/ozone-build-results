<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201124 23:40:27.192" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:36:23.690" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:36:27.875" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 23:36:27.875" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:36:27.875" starttime="20201124 23:36:23.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:36:27.876" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 23:36:27.876" starttime="20201124 23:36:27.875"></status>
</kw>
<msg timestamp="20201124 23:36:27.877" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:36:27.877" starttime="20201124 23:36:23.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:36:27.883" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:36:31.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:36:31.737" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:36:31.737" starttime="20201124 23:36:27.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:36:31.738" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:36:31.738" starttime="20201124 23:36:31.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:36:31.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:36:31.739" starttime="20201124 23:36:31.739"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:31.740" starttime="20201124 23:36:27.879"></status>
</kw>
<msg timestamp="20201124 23:36:31.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:36:31.740" starttime="20201124 23:36:27.878"></status>
</kw>
<msg timestamp="20201124 23:36:31.740" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:36:31.740" starttime="20201124 23:36:27.878"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201124 23:36:31.741" starttime="20201124 23:36:31.740"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:31.741" starttime="20201124 23:36:27.877"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:31.741" starttime="20201124 23:36:27.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:36:31.746" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:36:35.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:36:35.125" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:36:35.125" starttime="20201124 23:36:31.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:36:35.126" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:36:35.127" starttime="20201124 23:36:35.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:36:35.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:36:35.127" starttime="20201124 23:36:35.127"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:35.128" starttime="20201124 23:36:31.743"></status>
</kw>
<msg timestamp="20201124 23:36:35.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:36:35.128" starttime="20201124 23:36:31.743"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:35.128" starttime="20201124 23:36:31.742"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:35.128" starttime="20201124 23:36:31.742"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:35.128" starttime="20201124 23:36:31.741"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 23:36:35.129" starttime="20201124 23:36:35.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:36:35.132" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:36:38.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:36:38.722" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:36:38.722" starttime="20201124 23:36:35.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:36:38.723" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:36:34.930Z",
  "modificationTime" : "2020-11-24T23:36:34.930Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 23:36:38.723" starttime="20201124 23:36:38.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:36:38.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:36:38.724" starttime="20201124 23:36:38.723"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:38.724" starttime="20201124 23:36:35.130"></status>
</kw>
<msg timestamp="20201124 23:36:38.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:36:38.724" starttime="20201124 23:36:35.130"></status>
</kw>
<msg timestamp="20201124 23:36:38.725" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:36:38.725" starttime="20201124 23:36:35.129"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201124 23:36:38.725" starttime="20201124 23:36:38.725"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:36:38.729" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:36:38.729" starttime="20201124 23:36:38.729"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:36:38.730" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:36:38.730" starttime="20201124 23:36:38.730"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:38.731" starttime="20201124 23:36:38.728"></status>
</kw>
<msg timestamp="20201124 23:36:38.731" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:36:38.731" starttime="20201124 23:36:38.728"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:38.731" starttime="20201124 23:36:38.727"></status>
</kw>
<msg timestamp="20201124 23:36:38.731" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 23:36:38.731" starttime="20201124 23:36:38.726"></status>
</kw>
<msg timestamp="20201124 23:36:38.731" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 23:36:38.732" starttime="20201124 23:36:38.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:36:38.736" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:36:42.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:36:42.212" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:36:42.212" starttime="20201124 23:36:38.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:36:42.213" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:36:42.213" starttime="20201124 23:36:42.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:36:42.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:36:42.214" starttime="20201124 23:36:42.213"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:42.215" starttime="20201124 23:36:38.732"></status>
</kw>
<msg timestamp="20201124 23:36:42.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:36:42.215" starttime="20201124 23:36:38.732"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:42.215" starttime="20201124 23:36:38.732"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:36:42.220" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:36:50.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:36:50.653" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:36:50.653" starttime="20201124 23:36:42.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:36:50.654" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:36:50.654" starttime="20201124 23:36:50.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:36:50.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:36:50.655" starttime="20201124 23:36:50.654"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:50.655" starttime="20201124 23:36:42.216"></status>
</kw>
<msg timestamp="20201124 23:36:50.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:36:50.656" starttime="20201124 23:36:42.216"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:50.656" starttime="20201124 23:36:42.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:36:50.660" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:36:56.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:36:56.189" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:36:56.190" starttime="20201124 23:36:50.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:36:56.191" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:36:56.191" starttime="20201124 23:36:56.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:36:56.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:36:56.192" starttime="20201124 23:36:56.191"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:56.192" starttime="20201124 23:36:50.657"></status>
</kw>
<msg timestamp="20201124 23:36:56.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:36:56.192" starttime="20201124 23:36:50.657"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:56.192" starttime="20201124 23:36:50.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:36:56.196" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:37:01.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:37:01.843" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:37:01.843" starttime="20201124 23:36:56.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:37:01.844" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:37:01.845" starttime="20201124 23:37:01.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:37:01.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:37:01.845" starttime="20201124 23:37:01.845"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:01.846" starttime="20201124 23:36:56.194"></status>
</kw>
<msg timestamp="20201124 23:37:01.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:37:01.846" starttime="20201124 23:36:56.193"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:01.846" starttime="20201124 23:36:56.193"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:37:01.846" critical="yes" starttime="20201124 23:36:23.684"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:37:01.852" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:37:01.852" starttime="20201124 23:37:01.852"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:37:01.853" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:37:01.853" starttime="20201124 23:37:01.852"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:01.853" starttime="20201124 23:37:01.851"></status>
</kw>
<msg timestamp="20201124 23:37:01.853" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:37:01.853" starttime="20201124 23:37:01.850"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:01.854" starttime="20201124 23:37:01.850"></status>
</kw>
<msg timestamp="20201124 23:37:01.854" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 23:37:01.854" starttime="20201124 23:37:01.849"></status>
</kw>
<msg timestamp="20201124 23:37:01.854" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 23:37:01.854" starttime="20201124 23:37:01.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:37:01.858" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:37:05.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:37:05.275" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:37:05.275" starttime="20201124 23:37:01.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:37:05.277" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:37:05.277" starttime="20201124 23:37:05.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:37:05.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:37:05.277" starttime="20201124 23:37:05.277"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:05.278" starttime="20201124 23:37:01.855"></status>
</kw>
<msg timestamp="20201124 23:37:05.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:37:05.278" starttime="20201124 23:37:01.855"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:05.278" starttime="20201124 23:37:01.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:37:05.283" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:37:08.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:37:08.467" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201124 23:37:08.467" starttime="20201124 23:37:05.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:37:08.468" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201124 23:37:08.468" starttime="20201124 23:37:08.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:37:08.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:37:08.469" starttime="20201124 23:37:08.468"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:08.469" starttime="20201124 23:37:05.279"></status>
</kw>
<msg timestamp="20201124 23:37:08.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:37:08.470" starttime="20201124 23:37:05.279"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:08.470" starttime="20201124 23:37:05.278"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:37:08.470" critical="yes" starttime="20201124 23:37:01.847"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201124 23:37:08.471" starttime="20201124 23:36:23.623"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:38:58.261" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:38:58.261" starttime="20201124 23:38:58.260"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:38:58.261" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:38:58.261" starttime="20201124 23:38:58.261"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:58.262" starttime="20201124 23:38:58.260"></status>
</kw>
<msg timestamp="20201124 23:38:58.262" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:38:58.262" starttime="20201124 23:38:58.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:38:58.263" starttime="20201124 23:38:58.262"></status>
</kw>
<msg timestamp="20201124 23:38:58.263" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 23:38:58.263" starttime="20201124 23:38:58.262"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:58.263" starttime="20201124 23:38:58.258"></status>
</kw>
<msg timestamp="20201124 23:38:58.263" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:38:58.263" starttime="20201124 23:38:58.258"></status>
</kw>
<msg timestamp="20201124 23:38:58.264" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:38:58.264" starttime="20201124 23:38:58.257"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:38:58.264" level="INFO">${random} = 20428</msg>
<status status="PASS" endtime="20201124 23:38:58.264" starttime="20201124 23:38:58.264"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:38:58.271" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-20428 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:39:01.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:39:01.893" level="INFO">${output} = 2020-11-24 23:39:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:39:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 23:39:01.893" starttime="20201124 23:38:58.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:39:01.894" level="INFO">2020-11-24 23:39:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:39:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:39:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:39:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:39:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-469C7B3A0ECD-&gt;ba02f4d3-8e52-49d5-8b80-5f9ba02add41
2020-11-24 23:39:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 23:39:01.894" starttime="20201124 23:39:01.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:39:01.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:39:01.895" starttime="20201124 23:39:01.894"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:01.895" starttime="20201124 23:38:58.265"></status>
</kw>
<msg timestamp="20201124 23:39:01.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:39:01.895" starttime="20201124 23:38:58.265"></status>
</kw>
<msg timestamp="20201124 23:39:01.896" level="INFO">${result} = 2020-11-24 23:39:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:39:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 23:39:01.896" starttime="20201124 23:38:58.265"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:39:01.900" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:39:03.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:39:03.976" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:36 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:39 ofs://om/volume1/bucket1/ozone-20428
-rw-...</msg>
<status status="PASS" endtime="20201124 23:39:03.976" starttime="20201124 23:39:01.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:39:03.977" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:36 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:39 ofs://om/volume1/bucket1/ozone-20428
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:37 ofs://om/volume1/bucket1/ozone-22250
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:37 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:38 ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201124 23:39:03.977" starttime="20201124 23:39:03.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:39:03.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:39:03.978" starttime="20201124 23:39:03.977"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:03.978" starttime="20201124 23:39:01.898"></status>
</kw>
<msg timestamp="20201124 23:39:03.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:39:03.978" starttime="20201124 23:39:01.897"></status>
</kw>
<msg timestamp="20201124 23:39:03.979" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:36 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:39 ofs://om/volume1/bucket1/ozone-20428
-rw-...</msg>
<status status="PASS" endtime="20201124 23:39:03.979" starttime="20201124 23:39:01.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:39:03.979" starttime="20201124 23:39:03.979"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 23:39:03.980" critical="yes" starttime="20201124 23:38:58.256"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 23:39:03.981" starttime="20201124 23:38:58.194"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:37:29.333" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:37:29.334" starttime="20201124 23:37:29.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:37:29.334" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:37:29.334" starttime="20201124 23:37:29.334"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:29.334" starttime="20201124 23:37:29.332"></status>
</kw>
<msg timestamp="20201124 23:37:29.335" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:37:29.335" starttime="20201124 23:37:29.332"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:29.335" starttime="20201124 23:37:29.331"></status>
</kw>
<msg timestamp="20201124 23:37:29.335" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:37:29.335" starttime="20201124 23:37:29.330"></status>
</kw>
<msg timestamp="20201124 23:37:29.335" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:37:29.335" starttime="20201124 23:37:29.329"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:37:29.336" level="INFO">${random} = 22250</msg>
<status status="PASS" endtime="20201124 23:37:29.336" starttime="20201124 23:37:29.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:37:29.343" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-22250 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:37:33.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:37:33.364" level="INFO">${output} = 2020-11-24 23:37:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:37:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 23:37:33.365" starttime="20201124 23:37:29.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:37:33.366" level="INFO">2020-11-24 23:37:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:37:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:37:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:37:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:37:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-83167DF39DA8-&gt;ba02f4d3-8e52-49d5-8b80-5f9ba02add41
2020-11-24 23:37:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 23:37:33.366" starttime="20201124 23:37:33.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:37:33.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:37:33.367" starttime="20201124 23:37:33.366"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:33.367" starttime="20201124 23:37:29.337"></status>
</kw>
<msg timestamp="20201124 23:37:33.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:37:33.367" starttime="20201124 23:37:29.337"></status>
</kw>
<msg timestamp="20201124 23:37:33.367" level="INFO">${result} = 2020-11-24 23:37:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:37:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 23:37:33.367" starttime="20201124 23:37:29.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:37:33.372" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:37:35.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:37:35.352" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:36 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:37 o3fs://bucket1.volume1.om/ozone-22250
dr...</msg>
<status status="PASS" endtime="20201124 23:37:35.352" starttime="20201124 23:37:33.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:37:35.354" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:36 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:37 o3fs://bucket1.volume1.om/ozone-22250
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:37 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 23:37:35.354" starttime="20201124 23:37:35.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:37:35.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:37:35.354" starttime="20201124 23:37:35.354"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:35.355" starttime="20201124 23:37:33.370"></status>
</kw>
<msg timestamp="20201124 23:37:35.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:37:35.355" starttime="20201124 23:37:33.368"></status>
</kw>
<msg timestamp="20201124 23:37:35.355" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:36 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:37 o3fs://bucket1.volume1.om/ozone-22250
dr...</msg>
<status status="PASS" endtime="20201124 23:37:35.355" starttime="20201124 23:37:33.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:37:35.356" starttime="20201124 23:37:35.355"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 23:37:35.356" critical="yes" starttime="20201124 23:37:29.329"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 23:37:35.358" starttime="20201124 23:37:29.267"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:37:24.126" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:37:24.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:37:24.129" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201124 23:37:24.129" starttime="20201124 23:37:24.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:37:24.130" level="INFO">rm</msg>
<status status="PASS" endtime="20201124 23:37:24.130" starttime="20201124 23:37:24.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:37:24.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:37:24.131" starttime="20201124 23:37:24.130"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:24.131" starttime="20201124 23:37:24.121"></status>
</kw>
<msg timestamp="20201124 23:37:24.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:37:24.132" starttime="20201124 23:37:24.121"></status>
</kw>
<msg timestamp="20201124 23:37:24.132" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201124 23:37:24.132" starttime="20201124 23:37:24.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:37:24.133" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:37:24.133" starttime="20201124 23:37:24.132"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:37:24.139" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:37:24.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:37:24.165" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:37:24.165" starttime="20201124 23:37:24.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:37:24.166" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:37:24.166" starttime="20201124 23:37:24.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:37:24.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:37:24.167" starttime="20201124 23:37:24.166"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:24.167" starttime="20201124 23:37:24.135"></status>
</kw>
<msg timestamp="20201124 23:37:24.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:37:24.167" starttime="20201124 23:37:24.134"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:24.168" starttime="20201124 23:37:24.134"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:24.168" starttime="20201124 23:37:24.133"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:24.168" starttime="20201124 23:37:24.120"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:37:24.168" critical="yes" starttime="20201124 23:37:24.119"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201124 23:37:24.169" starttime="20201124 23:37:24.059"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:36:18.615" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:36:18.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:36:18.617" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201124 23:36:18.617" starttime="20201124 23:36:18.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:36:18.618" level="INFO">om</msg>
<status status="PASS" endtime="20201124 23:36:18.618" starttime="20201124 23:36:18.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:36:18.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:36:18.619" starttime="20201124 23:36:18.618"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:18.619" starttime="20201124 23:36:18.610"></status>
</kw>
<msg timestamp="20201124 23:36:18.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:36:18.619" starttime="20201124 23:36:18.610"></status>
</kw>
<msg timestamp="20201124 23:36:18.620" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201124 23:36:18.620" starttime="20201124 23:36:18.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201124 23:36:18.621" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201124 23:36:18.621" starttime="20201124 23:36:18.620"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:36:18.625" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:36:18.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:36:18.641" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:36:18.641" starttime="20201124 23:36:18.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:36:18.642" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:36:18.642" starttime="20201124 23:36:18.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:36:18.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:36:18.643" starttime="20201124 23:36:18.642"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:18.643" starttime="20201124 23:36:18.622"></status>
</kw>
<msg timestamp="20201124 23:36:18.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:36:18.643" starttime="20201124 23:36:18.622"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:18.643" starttime="20201124 23:36:18.621"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:18.643" starttime="20201124 23:36:18.621"></status>
</kw>
<status status="PASS" endtime="20201124 23:36:18.644" starttime="20201124 23:36:18.608"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:36:18.644" critical="yes" starttime="20201124 23:36:18.607"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201124 23:36:18.645" starttime="20201124 23:36:18.551"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:39:09.142" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:39:09.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:39:09.147" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:39:09.147" starttime="20201124 23:39:09.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:39:09.148" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:39:09.148" starttime="20201124 23:39:09.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:39:09.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:39:09.149" starttime="20201124 23:39:09.149"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:09.149" starttime="20201124 23:39:09.138"></status>
</kw>
<msg timestamp="20201124 23:39:09.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:39:09.150" starttime="20201124 23:39:09.137"></status>
</kw>
<msg timestamp="20201124 23:39:09.150" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:39:09.150" starttime="20201124 23:39:09.137"></status>
</kw>
<msg timestamp="20201124 23:39:09.150" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:39:09.150" starttime="20201124 23:39:09.136"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:39:09.155" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:39:09.155" starttime="20201124 23:39:09.155"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:39:09.156" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:39:09.156" starttime="20201124 23:39:09.156"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:09.156" starttime="20201124 23:39:09.153"></status>
</kw>
<msg timestamp="20201124 23:39:09.157" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:39:09.157" starttime="20201124 23:39:09.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:39:09.158" starttime="20201124 23:39:09.157"></status>
</kw>
<msg timestamp="20201124 23:39:09.158" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 23:39:09.158" starttime="20201124 23:39:09.157"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:09.158" starttime="20201124 23:39:09.152"></status>
</kw>
<msg timestamp="20201124 23:39:09.158" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:39:09.158" starttime="20201124 23:39:09.151"></status>
</kw>
<msg timestamp="20201124 23:39:09.159" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:39:09.159" starttime="20201124 23:39:09.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:39:09.162" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:39:43.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:39:43.972" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:39:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:39:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 23:39:43.972" starttime="20201124 23:39:09.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:39:43.973" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:39:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:39:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:39:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:39:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:39:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-195AE83A1DD4-&gt;ba02f4d3-8e52-49d5-8b80-5f9ba02add41
2020-11-24 23:39:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 23:39:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-11-24 23:39:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-11-24 23:39:15 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261155809, maxDate=1606865955809, sequenceNumber=3, masterKeyId=2))
2020-11-24 23:39:15 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fd ce 80 e5 df 2e 38 fd d6 b2 85 e2 2e 40 03 48 01 5a 0d 33 34 38 38 34 37 30 38 38 38 30 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-24 23:39:15 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261155809, maxDate=1606865955809, sequenceNumber=3, masterKeyId=2)
2020-11-24 23:39:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 23:39:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:39:16 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:39:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606260933146_0003
2020-11-24 23:39:16 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261155809, maxDate=1606865955809, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fd ce 80 e5 df 2e 38 fd d6 b2 85 e2 2e 40 03 48 01 5a 0d 33 34 38 38 34 37 30 38 38 38 30 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-24 23:39:17 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 23:39:17 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 23:39:17 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-24 23:39:17 INFO  YarnClientImpl:329 - Submitted application application_1606260933146_0003
2020-11-24 23:39:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606260933146_0003/
2020-11-24 23:39:17 INFO  Job:1619 - Running job: job_1606260933146_0003
2020-11-24 23:39:26 INFO  Job:1640 - Job job_1606260933146_0003 running in uber mode : false
2020-11-24 23:39:26 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:39:36 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:39:38 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:39:39 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:39:42 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:39:43 INFO  Job:1658 - Job job_1606260933146_0003 completed successfully
2020-11-24 23:39:43 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065765
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47356
		Total time spent by all reduces in occupied slots (ms)=7476
		Total time spent by all map tasks (ms)=23678
		Total time spent by all reduce tasks (ms)=3738
		Total vcore-milliseconds taken by all map tasks=23678
		Total vcore-milliseconds taken by all reduce tasks=3738
		Total megabyte-milliseconds taken by all map tasks=48492544
		Total megabyte-milliseconds taken by all reduce tasks=7655424
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1031
		CPU time spent (ms)=7480
		Physical memory (bytes) snapshot=1436098560
		Virtual memory (bytes) snapshot=14054440960
		Total committed heap usage (bytes)=1326972928
		Peak Map Physical memory (bytes)=382754816
		Peak Map Virtual memory (bytes)=3515019264
		Peak Reduce Physical memory (bytes)=287899648
		Peak Reduce Virtual memory (bytes)=3518808064
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.125 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 23:39:43.973" starttime="20201124 23:39:43.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:39:43.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:39:43.974" starttime="20201124 23:39:43.973"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:43.974" starttime="20201124 23:39:09.160"></status>
</kw>
<msg timestamp="20201124 23:39:43.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:39:43.974" starttime="20201124 23:39:09.159"></status>
</kw>
<msg timestamp="20201124 23:39:43.975" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:39:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:39:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 23:39:43.975" starttime="20201124 23:39:09.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:39:43.976" starttime="20201124 23:39:43.975"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:39:43.976" critical="yes" starttime="20201124 23:39:09.136"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:39:43.983" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:39:43.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:39:43.987" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:39:43.987" starttime="20201124 23:39:43.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:39:43.987" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:39:43.988" starttime="20201124 23:39:43.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:39:43.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:39:43.988" starttime="20201124 23:39:43.988"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:43.989" starttime="20201124 23:39:43.978"></status>
</kw>
<msg timestamp="20201124 23:39:43.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:39:43.989" starttime="20201124 23:39:43.978"></status>
</kw>
<msg timestamp="20201124 23:39:43.989" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:39:43.989" starttime="20201124 23:39:43.978"></status>
</kw>
<msg timestamp="20201124 23:39:43.989" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:39:43.989" starttime="20201124 23:39:43.977"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:39:43.990" level="INFO">${random} = 15</msg>
<status status="PASS" endtime="20201124 23:39:43.990" starttime="20201124 23:39:43.990"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:39:43.994" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:39:43.994" starttime="20201124 23:39:43.994"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:39:43.995" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:39:43.995" starttime="20201124 23:39:43.995"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:43.995" starttime="20201124 23:39:43.993"></status>
</kw>
<msg timestamp="20201124 23:39:43.996" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:39:43.996" starttime="20201124 23:39:43.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:39:43.997" starttime="20201124 23:39:43.996"></status>
</kw>
<msg timestamp="20201124 23:39:43.997" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 23:39:43.997" starttime="20201124 23:39:43.996"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:43.997" starttime="20201124 23:39:43.992"></status>
</kw>
<msg timestamp="20201124 23:39:43.997" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:39:43.997" starttime="20201124 23:39:43.991"></status>
</kw>
<msg timestamp="20201124 23:39:43.997" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:39:43.998" starttime="20201124 23:39:43.990"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:39:44.001" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:39:44.001" starttime="20201124 23:39:44.001"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:39:44.002" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:39:44.002" starttime="20201124 23:39:44.001"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:44.002" starttime="20201124 23:39:44.000"></status>
</kw>
<msg timestamp="20201124 23:39:44.002" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:39:44.002" starttime="20201124 23:39:44.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:39:44.004" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201124 23:39:44.004" starttime="20201124 23:39:44.003"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:39:44.005" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201124 23:39:44.005" starttime="20201124 23:39:44.004"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:44.005" starttime="20201124 23:39:44.003"></status>
</kw>
<msg timestamp="20201124 23:39:44.005" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201124 23:39:44.005" starttime="20201124 23:39:44.002"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:44.005" starttime="20201124 23:39:43.999"></status>
</kw>
<msg timestamp="20201124 23:39:44.005" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 23:39:44.005" starttime="20201124 23:39:43.998"></status>
</kw>
<msg timestamp="20201124 23:39:44.006" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 23:39:44.006" starttime="20201124 23:39:43.998"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:39:44.009" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:39:44.009" starttime="20201124 23:39:44.009"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:39:44.010" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:39:44.010" starttime="20201124 23:39:44.010"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:44.010" starttime="20201124 23:39:44.008"></status>
</kw>
<msg timestamp="20201124 23:39:44.010" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:39:44.010" starttime="20201124 23:39:44.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:39:44.012" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201124 23:39:44.012" starttime="20201124 23:39:44.012"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:39:44.013" level="INFO">${result} = /wordcount-15.txt</msg>
<status status="PASS" endtime="20201124 23:39:44.013" starttime="20201124 23:39:44.012"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:44.013" starttime="20201124 23:39:44.011"></status>
</kw>
<msg timestamp="20201124 23:39:44.013" level="INFO">${path_with_leading} = /wordcount-15.txt</msg>
<status status="PASS" endtime="20201124 23:39:44.013" starttime="20201124 23:39:44.011"></status>
</kw>
<status status="PASS" endtime="20201124 23:39:44.013" starttime="20201124 23:39:44.007"></status>
</kw>
<msg timestamp="20201124 23:39:44.014" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201124 23:39:44.014" starttime="20201124 23:39:44.007"></status>
</kw>
<msg timestamp="20201124 23:39:44.014" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201124 23:39:44.014" starttime="20201124 23:39:44.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:39:44.019" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-15.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:40:18.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:40:18.857" level="INFO">${output} = 2020-11-24 23:39:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-11-24 23:39:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
202...</msg>
<status status="PASS" endtime="20201124 23:40:18.858" starttime="20201124 23:39:44.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:40:18.859" level="INFO">2020-11-24 23:39:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-11-24 23:39:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-11-24 23:39:46 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261186402, maxDate=1606865986402, sequenceNumber=4, masterKeyId=2))
2020-11-24 23:39:46 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8b be 82 e5 df 2e 38 8b c6 b4 85 e2 2e 40 04 48 01 5a 0d 33 34 38 38 34 37 30 38 38 38 30 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-24 23:39:46 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261186402, maxDate=1606865986402, sequenceNumber=4, masterKeyId=2)
2020-11-24 23:39:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 23:39:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:39:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:39:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:39:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:39:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7255FBCB0559-&gt;ba02f4d3-8e52-49d5-8b80-5f9ba02add41
2020-11-24 23:39:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 23:39:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:39:48 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:39:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606260933146_0004
2020-11-24 23:39:48 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261186402, maxDate=1606865986402, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8b be 82 e5 df 2e 38 8b c6 b4 85 e2 2e 40 04 48 01 5a 0d 33 34 38 38 34 37 30 38 38 38 30 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-24 23:39:48 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 23:39:48 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 23:39:48 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-24 23:39:49 INFO  YarnClientImpl:329 - Submitted application application_1606260933146_0004
2020-11-24 23:39:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606260933146_0004/
2020-11-24 23:39:49 INFO  Job:1619 - Running job: job_1606260933146_0004
2020-11-24 23:39:58 INFO  Job:1640 - Job job_1606260933146_0004 running in uber mode : false
2020-11-24 23:39:58 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:40:08 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:40:10 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:40:11 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:40:14 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:40:18 INFO  Job:1658 - Job job_1606260933146_0004 completed successfully
2020-11-24 23:40:18 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128115
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47918
		Total time spent by all reduces in occupied slots (ms)=7678
		Total time spent by all map tasks (ms)=23959
		Total time spent by all reduce tasks (ms)=3839
		Total vcore-milliseconds taken by all map tasks=23959
		Total vcore-milliseconds taken by all reduce tasks=3839
		Total megabyte-milliseconds taken by all map tasks=49068032
		Total megabyte-milliseconds taken by all reduce tasks=7862272
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=999
		CPU time spent (ms)=7930
		Physical memory (bytes) snapshot=1354846208
		Virtual memory (bytes) snapshot=14012563456
		Total committed heap usage (bytes)=1114636288
		Peak Map Physical memory (bytes)=383438848
		Peak Map Virtual memory (bytes)=3511197696
		Peak Reduce Physical memory (bytes)=272424960
		Peak Reduce Virtual memory (bytes)=3509530624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 23:40:18.859" starttime="20201124 23:40:18.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:40:18.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:40:18.860" starttime="20201124 23:40:18.859"></status>
</kw>
<status status="PASS" endtime="20201124 23:40:18.860" starttime="20201124 23:39:44.015"></status>
</kw>
<msg timestamp="20201124 23:40:18.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:40:18.861" starttime="20201124 23:39:44.015"></status>
</kw>
<msg timestamp="20201124 23:40:18.861" level="INFO">${output} = 2020-11-24 23:39:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-11-24 23:39:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
202...</msg>
<status status="PASS" endtime="20201124 23:40:18.861" starttime="20201124 23:39:44.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 23:40:18.862" starttime="20201124 23:40:18.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:40:18.863" starttime="20201124 23:40:18.862"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:40:18.863" critical="yes" starttime="20201124 23:39:43.976"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 23:40:18.864" starttime="20201124 23:39:09.076"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:37:40.535" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:37:40.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:37:40.541" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:37:40.541" starttime="20201124 23:37:40.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:37:40.542" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:37:40.542" starttime="20201124 23:37:40.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:37:40.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:37:40.543" starttime="20201124 23:37:40.542"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:40.543" starttime="20201124 23:37:40.529"></status>
</kw>
<msg timestamp="20201124 23:37:40.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:37:40.543" starttime="20201124 23:37:40.529"></status>
</kw>
<msg timestamp="20201124 23:37:40.544" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:37:40.544" starttime="20201124 23:37:40.528"></status>
</kw>
<msg timestamp="20201124 23:37:40.544" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:37:40.544" starttime="20201124 23:37:40.528"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:37:40.549" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:37:40.549" starttime="20201124 23:37:40.548"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:37:40.550" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:37:40.550" starttime="20201124 23:37:40.549"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:40.550" starttime="20201124 23:37:40.547"></status>
</kw>
<msg timestamp="20201124 23:37:40.550" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:37:40.550" starttime="20201124 23:37:40.546"></status>
</kw>
<status status="PASS" endtime="20201124 23:37:40.550" starttime="20201124 23:37:40.545"></status>
</kw>
<msg timestamp="20201124 23:37:40.550" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:37:40.550" starttime="20201124 23:37:40.545"></status>
</kw>
<msg timestamp="20201124 23:37:40.551" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:37:40.551" starttime="20201124 23:37:40.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:37:40.556" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:38:17.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:38:17.072" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:37:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:37:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 23:38:17.072" starttime="20201124 23:37:40.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:38:17.073" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:37:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:37:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:37:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:37:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:37:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7126DDE13841-&gt;ba02f4d3-8e52-49d5-8b80-5f9ba02add41
2020-11-24 23:37:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 23:37:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-11-24 23:37:44 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-11-24 23:37:45 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261064931, maxDate=1606865864931, sequenceNumber=1, masterKeyId=2))
2020-11-24 23:37:45 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c1 87 fb e4 df 2e 38 c1 8f ad 85 e2 2e 40 01 48 01 5a 0d 33 34 38 38 34 37 30 38 38 38 30 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-24 23:37:45 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261064931, maxDate=1606865864931, sequenceNumber=1, masterKeyId=2)
2020-11-24 23:37:45 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:37:45 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:37:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606260933146_0001
2020-11-24 23:37:45 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261064931, maxDate=1606865864931, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c1 87 fb e4 df 2e 38 c1 8f ad 85 e2 2e 40 01 48 01 5a 0d 33 34 38 38 34 37 30 38 38 38 30 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-24 23:37:46 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 23:37:46 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 23:37:46 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-24 23:37:47 INFO  YarnClientImpl:329 - Submitted application application_1606260933146_0001
2020-11-24 23:37:47 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606260933146_0001/
2020-11-24 23:37:47 INFO  Job:1619 - Running job: job_1606260933146_0001
2020-11-24 23:37:59 INFO  Job:1640 - Job job_1606260933146_0001 running in uber mode : false
2020-11-24 23:37:59 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:38:08 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:38:10 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:38:11 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:38:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:38:16 INFO  Job:1658 - Job job_1606260933146_0001 completed successfully
2020-11-24 23:38:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065969
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48696
		Total time spent by all reduces in occupied slots (ms)=8456
		Total time spent by all map tasks (ms)=24348
		Total time spent by all reduce tasks (ms)=4228
		Total vcore-milliseconds taken by all map tasks=24348
		Total vcore-milliseconds taken by all reduce tasks=4228
		Total megabyte-milliseconds taken by all map tasks=49864704
		Total megabyte-milliseconds taken by all reduce tasks=8658944
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1218
		CPU time spent (ms)=7530
		Physical memory (bytes) snapshot=1519955968
		Virtual memory (bytes) snapshot=14059474944
		Total committed heap usage (bytes)=1530920960
		Peak Map Physical memory (bytes)=387317760
		Peak Map Virtual memory (bytes)=3510976512
		Peak Reduce Physical memory (bytes)=374829056
		Peak Reduce Virtual memory (bytes)=3527528448
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.229 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 23:38:17.073" starttime="20201124 23:38:17.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:38:17.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:38:17.074" starttime="20201124 23:38:17.073"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:17.074" starttime="20201124 23:37:40.552"></status>
</kw>
<msg timestamp="20201124 23:38:17.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:38:17.074" starttime="20201124 23:37:40.552"></status>
</kw>
<msg timestamp="20201124 23:38:17.075" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:37:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:37:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 23:38:17.075" starttime="20201124 23:37:40.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:38:17.076" starttime="20201124 23:38:17.075"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:38:17.076" critical="yes" starttime="20201124 23:37:40.527"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:38:17.083" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:38:17.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:38:17.088" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:38:17.088" starttime="20201124 23:38:17.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:38:17.089" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:38:17.089" starttime="20201124 23:38:17.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:38:17.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:38:17.090" starttime="20201124 23:38:17.089"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:17.090" starttime="20201124 23:38:17.079"></status>
</kw>
<msg timestamp="20201124 23:38:17.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:38:17.090" starttime="20201124 23:38:17.079"></status>
</kw>
<msg timestamp="20201124 23:38:17.091" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:38:17.091" starttime="20201124 23:38:17.078"></status>
</kw>
<msg timestamp="20201124 23:38:17.091" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:38:17.091" starttime="20201124 23:38:17.078"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:38:17.092" level="INFO">${random} = 20</msg>
<status status="PASS" endtime="20201124 23:38:17.092" starttime="20201124 23:38:17.091"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:38:17.096" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:38:17.096" starttime="20201124 23:38:17.096"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:38:17.097" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:38:17.097" starttime="20201124 23:38:17.096"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:17.097" starttime="20201124 23:38:17.095"></status>
</kw>
<msg timestamp="20201124 23:38:17.097" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:38:17.097" starttime="20201124 23:38:17.094"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:17.097" starttime="20201124 23:38:17.093"></status>
</kw>
<msg timestamp="20201124 23:38:17.098" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:38:17.098" starttime="20201124 23:38:17.093"></status>
</kw>
<msg timestamp="20201124 23:38:17.098" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:38:17.098" starttime="20201124 23:38:17.092"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:38:17.101" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:38:17.101" starttime="20201124 23:38:17.101"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:38:17.102" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:38:17.102" starttime="20201124 23:38:17.102"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:17.102" starttime="20201124 23:38:17.100"></status>
</kw>
<msg timestamp="20201124 23:38:17.102" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:38:17.102" starttime="20201124 23:38:17.100"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:17.103" starttime="20201124 23:38:17.099"></status>
</kw>
<msg timestamp="20201124 23:38:17.103" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 23:38:17.103" starttime="20201124 23:38:17.099"></status>
</kw>
<msg timestamp="20201124 23:38:17.103" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 23:38:17.103" starttime="20201124 23:38:17.098"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:38:17.107" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:38:17.107" starttime="20201124 23:38:17.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:38:17.108" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:38:17.108" starttime="20201124 23:38:17.107"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:17.108" starttime="20201124 23:38:17.106"></status>
</kw>
<msg timestamp="20201124 23:38:17.108" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:38:17.108" starttime="20201124 23:38:17.105"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:17.108" starttime="20201124 23:38:17.105"></status>
</kw>
<msg timestamp="20201124 23:38:17.108" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-20.txt</msg>
<status status="PASS" endtime="20201124 23:38:17.108" starttime="20201124 23:38:17.104"></status>
</kw>
<msg timestamp="20201124 23:38:17.109" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-20.txt</msg>
<status status="PASS" endtime="20201124 23:38:17.109" starttime="20201124 23:38:17.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:38:17.114" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-20.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:38:52.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:38:52.295" level="INFO">${output} = 2020-11-24 23:38:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-11-24 23:38:19 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
202...</msg>
<status status="PASS" endtime="20201124 23:38:52.295" starttime="20201124 23:38:17.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:38:52.296" level="INFO">2020-11-24 23:38:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-11-24 23:38:19 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-11-24 23:38:20 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261099919, maxDate=1606865899919, sequenceNumber=2, masterKeyId=2))
2020-11-24 23:38:20 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 81 9a fd e4 df 2e 38 81 a2 af 85 e2 2e 40 02 48 01 5a 0d 33 34 38 38 34 37 30 38 38 38 30 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-24 23:38:20 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261099919, maxDate=1606865899919, sequenceNumber=2, masterKeyId=2)
2020-11-24 23:38:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 23:38:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:38:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:38:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:38:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:38:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2E9D61E1C666-&gt;ba02f4d3-8e52-49d5-8b80-5f9ba02add41
2020-11-24 23:38:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 23:38:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:38:23 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:38:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606260933146_0002
2020-11-24 23:38:23 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606261099919, maxDate=1606865899919, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 81 9a fd e4 df 2e 38 81 a2 af 85 e2 2e 40 02 48 01 5a 0d 33 34 38 38 34 37 30 38 38 38 30 38 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-24 23:38:23 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 23:38:23 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 23:38:23 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-24 23:38:24 INFO  YarnClientImpl:329 - Submitted application application_1606260933146_0002
2020-11-24 23:38:24 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606260933146_0002/
2020-11-24 23:38:24 INFO  Job:1619 - Running job: job_1606260933146_0002
2020-11-24 23:38:32 INFO  Job:1640 - Job job_1606260933146_0002 running in uber mode : false
2020-11-24 23:38:32 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:38:43 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:38:45 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:38:50 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:38:51 INFO  Job:1658 - Job job_1606260933146_0002 completed successfully
2020-11-24 23:38:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128199
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48282
		Total time spent by all reduces in occupied slots (ms)=8694
		Total time spent by all map tasks (ms)=24141
		Total time spent by all reduce tasks (ms)=4347
		Total vcore-milliseconds taken by all map tasks=24141
		Total vcore-milliseconds taken by all reduce tasks=4347
		Total megabyte-milliseconds taken by all map tasks=49440768
		Total megabyte-milliseconds taken by all reduce tasks=8902656
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1124
		CPU time spent (ms)=8080
		Physical memory (bytes) snapshot=1454579712
		Virtual memory (bytes) snapshot=14056321024
		Total committed heap usage (bytes)=1357381632
		Peak Map Physical memory (bytes)=385200128
		Peak Map Virtual memory (bytes)=3510996992
		Peak Reduce Physical memory (bytes)=303448064
		Peak Reduce Virtual memory (bytes)=3525836800
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 23:38:52.296" starttime="20201124 23:38:52.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:38:52.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:38:52.297" starttime="20201124 23:38:52.296"></status>
</kw>
<status status="PASS" endtime="20201124 23:38:52.298" starttime="20201124 23:38:17.110"></status>
</kw>
<msg timestamp="20201124 23:38:52.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:38:52.298" starttime="20201124 23:38:17.110"></status>
</kw>
<msg timestamp="20201124 23:38:52.299" level="INFO">${output} = 2020-11-24 23:38:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-11-24 23:38:19 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
202...</msg>
<status status="PASS" endtime="20201124 23:38:52.299" starttime="20201124 23:38:17.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 23:38:52.299" starttime="20201124 23:38:52.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:38:52.300" starttime="20201124 23:38:52.299"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:38:52.300" critical="yes" starttime="20201124 23:38:17.077"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 23:38:52.301" starttime="20201124 23:37:40.466"></status>
</suite>
<status status="PASS" elapsedtime="198553" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
