<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201124 23:09:12.400" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:55:40.485" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:55:42.885" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 22:55:42.885" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 22:55:42.885" starttime="20201124 22:55:40.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:55:42.886" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 22:55:42.886" starttime="20201124 22:55:42.885"></status>
</kw>
<msg timestamp="20201124 22:55:42.887" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 22:55:42.887" starttime="20201124 22:55:40.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:55:42.893" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:55:45.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:55:45.016" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 22:55:45.016" starttime="20201124 22:55:42.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:55:45.017" level="INFO"></msg>
<status status="PASS" endtime="20201124 22:55:45.017" starttime="20201124 22:55:45.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:55:45.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:55:45.018" starttime="20201124 22:55:45.017"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:45.018" starttime="20201124 22:55:42.889"></status>
</kw>
<msg timestamp="20201124 22:55:45.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:55:45.019" starttime="20201124 22:55:42.888"></status>
</kw>
<msg timestamp="20201124 22:55:45.019" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201124 22:55:45.019" starttime="20201124 22:55:42.888"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201124 22:55:45.019" starttime="20201124 22:55:45.019"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:45.020" starttime="20201124 22:55:42.887"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:45.020" starttime="20201124 22:55:42.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:55:45.025" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:55:47.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:55:47.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 22:55:47.079" starttime="20201124 22:55:45.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:55:47.080" level="INFO"></msg>
<status status="PASS" endtime="20201124 22:55:47.080" starttime="20201124 22:55:47.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:55:47.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:55:47.081" starttime="20201124 22:55:47.080"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:47.081" starttime="20201124 22:55:45.022"></status>
</kw>
<msg timestamp="20201124 22:55:47.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:55:47.081" starttime="20201124 22:55:45.021"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:47.082" starttime="20201124 22:55:45.021"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:47.082" starttime="20201124 22:55:45.020"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:47.082" starttime="20201124 22:55:45.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 22:55:47.082" starttime="20201124 22:55:47.082"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:55:47.087" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:55:49.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:55:49.415" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T22:55:46.957Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 22:55:49.416" starttime="20201124 22:55:47.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:55:49.417" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T22:55:46.957Z",
  "modificationTime" : "2020-11-24T22:55:46.957Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 22:55:49.417" starttime="20201124 22:55:49.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:55:49.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:55:49.418" starttime="20201124 22:55:49.417"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:49.418" starttime="20201124 22:55:47.084"></status>
</kw>
<msg timestamp="20201124 22:55:49.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:55:49.418" starttime="20201124 22:55:47.083"></status>
</kw>
<msg timestamp="20201124 22:55:49.418" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T22:55:46.957Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 22:55:49.418" starttime="20201124 22:55:47.083"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201124 22:55:49.419" starttime="20201124 22:55:49.419"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 22:55:49.423" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 22:55:49.423" starttime="20201124 22:55:49.423"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:55:49.424" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 22:55:49.424" starttime="20201124 22:55:49.423"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:49.424" starttime="20201124 22:55:49.422"></status>
</kw>
<msg timestamp="20201124 22:55:49.424" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 22:55:49.424" starttime="20201124 22:55:49.422"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:49.425" starttime="20201124 22:55:49.421"></status>
</kw>
<msg timestamp="20201124 22:55:49.425" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 22:55:49.425" starttime="20201124 22:55:49.420"></status>
</kw>
<msg timestamp="20201124 22:55:49.425" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 22:55:49.425" starttime="20201124 22:55:49.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:55:49.430" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:55:51.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:55:51.741" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 22:55:51.741" starttime="20201124 22:55:49.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:55:51.744" level="INFO"></msg>
<status status="PASS" endtime="20201124 22:55:51.744" starttime="20201124 22:55:51.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:55:51.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:55:51.746" starttime="20201124 22:55:51.744"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:51.746" starttime="20201124 22:55:49.426"></status>
</kw>
<msg timestamp="20201124 22:55:51.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:55:51.747" starttime="20201124 22:55:49.426"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:51.748" starttime="20201124 22:55:49.425"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:55:51.752" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:55:56.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:55:56.959" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 22:55:56.959" starttime="20201124 22:55:51.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:55:56.961" level="INFO"></msg>
<status status="PASS" endtime="20201124 22:55:56.961" starttime="20201124 22:55:56.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:55:56.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:55:56.962" starttime="20201124 22:55:56.961"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:56.962" starttime="20201124 22:55:51.749"></status>
</kw>
<msg timestamp="20201124 22:55:56.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:55:56.962" starttime="20201124 22:55:51.749"></status>
</kw>
<status status="PASS" endtime="20201124 22:55:56.962" starttime="20201124 22:55:51.748"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:55:56.967" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:56:00.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:56:00.786" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 22:56:00.786" starttime="20201124 22:55:56.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:56:00.787" level="INFO"></msg>
<status status="PASS" endtime="20201124 22:56:00.787" starttime="20201124 22:56:00.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:56:00.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:56:00.788" starttime="20201124 22:56:00.788"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:00.788" starttime="20201124 22:55:56.964"></status>
</kw>
<msg timestamp="20201124 22:56:00.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:56:00.789" starttime="20201124 22:55:56.964"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:00.789" starttime="20201124 22:55:56.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:56:00.793" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:56:04.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:56:04.981" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 22:56:04.981" starttime="20201124 22:56:00.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:56:04.983" level="INFO"></msg>
<status status="PASS" endtime="20201124 22:56:04.983" starttime="20201124 22:56:04.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:56:04.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:56:04.983" starttime="20201124 22:56:04.983"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:04.984" starttime="20201124 22:56:00.790"></status>
</kw>
<msg timestamp="20201124 22:56:04.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:56:04.984" starttime="20201124 22:56:00.790"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:04.984" starttime="20201124 22:56:00.789"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 22:56:04.985" critical="yes" starttime="20201124 22:55:40.480"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 22:56:04.990" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 22:56:04.991" starttime="20201124 22:56:04.990"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:56:04.991" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 22:56:04.991" starttime="20201124 22:56:04.991"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:04.992" starttime="20201124 22:56:04.989"></status>
</kw>
<msg timestamp="20201124 22:56:04.992" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 22:56:04.992" starttime="20201124 22:56:04.989"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:04.992" starttime="20201124 22:56:04.988"></status>
</kw>
<msg timestamp="20201124 22:56:04.992" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 22:56:04.992" starttime="20201124 22:56:04.987"></status>
</kw>
<msg timestamp="20201124 22:56:04.992" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 22:56:04.992" starttime="20201124 22:56:04.986"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:56:04.997" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:56:07.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:56:07.058" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 22:56:07.058" starttime="20201124 22:56:04.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:56:07.060" level="INFO"></msg>
<status status="PASS" endtime="20201124 22:56:07.060" starttime="20201124 22:56:07.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:56:07.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:56:07.060" starttime="20201124 22:56:07.060"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:07.061" starttime="20201124 22:56:04.993"></status>
</kw>
<msg timestamp="20201124 22:56:07.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:56:07.061" starttime="20201124 22:56:04.993"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:07.061" starttime="20201124 22:56:04.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:56:07.066" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:56:09.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:56:09.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 22:56:09.111" starttime="20201124 22:56:07.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:56:09.112" level="INFO"></msg>
<status status="PASS" endtime="20201124 22:56:09.112" starttime="20201124 22:56:09.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:56:09.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:56:09.113" starttime="20201124 22:56:09.112"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:09.113" starttime="20201124 22:56:07.062"></status>
</kw>
<msg timestamp="20201124 22:56:09.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:56:09.114" starttime="20201124 22:56:07.062"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:09.114" starttime="20201124 22:56:07.061"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 22:56:09.114" critical="yes" starttime="20201124 22:56:04.985"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201124 22:56:09.115" starttime="20201124 22:55:40.416"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 22:57:45.969" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 22:57:45.969" starttime="20201124 22:57:45.968"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:57:45.969" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 22:57:45.970" starttime="20201124 22:57:45.969"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:45.970" starttime="20201124 22:57:45.968"></status>
</kw>
<msg timestamp="20201124 22:57:45.970" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 22:57:45.970" starttime="20201124 22:57:45.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 22:57:45.971" starttime="20201124 22:57:45.971"></status>
</kw>
<msg timestamp="20201124 22:57:45.971" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 22:57:45.971" starttime="20201124 22:57:45.970"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:45.972" starttime="20201124 22:57:45.966"></status>
</kw>
<msg timestamp="20201124 22:57:45.972" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 22:57:45.972" starttime="20201124 22:57:45.966"></status>
</kw>
<msg timestamp="20201124 22:57:45.972" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 22:57:45.972" starttime="20201124 22:57:45.965"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 22:57:45.973" level="INFO">${random} = 99113</msg>
<status status="PASS" endtime="20201124 22:57:45.973" starttime="20201124 22:57:45.972"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:57:45.977" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-99113 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:57:49.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:57:49.319" level="INFO">${output} = 2020-11-24 22:57:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:57:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 ...</msg>
<status status="PASS" endtime="20201124 22:57:49.319" starttime="20201124 22:57:45.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:57:49.320" level="INFO">2020-11-24 22:57:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:57:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 22:57:48 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 22:57:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 22:57:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1CA9042853C4-&gt;cbfa398b-33e7-4246-a88f-8a770cae3297
2020-11-24 22:57:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 22:57:49.320" starttime="20201124 22:57:49.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:57:49.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:57:49.321" starttime="20201124 22:57:49.321"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:49.321" starttime="20201124 22:57:45.974"></status>
</kw>
<msg timestamp="20201124 22:57:49.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:57:49.322" starttime="20201124 22:57:45.973"></status>
</kw>
<msg timestamp="20201124 22:57:49.322" level="INFO">${result} = 2020-11-24 22:57:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:57:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 ...</msg>
<status status="PASS" endtime="20201124 22:57:49.322" starttime="20201124 22:57:45.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:57:49.328" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:57:51.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:57:51.050" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 22:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 22:56 ofs://om/volume1/bucket1/ozone-26622
-rw-...</msg>
<status status="PASS" endtime="20201124 22:57:51.050" starttime="20201124 22:57:49.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:57:51.051" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 22:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 22:56 ofs://om/volume1/bucket1/ozone-26622
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 22:57 ofs://om/volume1/bucket1/ozone-99113
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 22:56 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 22:57 ofs://om/volume1/bucket1/wordcount-70.txt</msg>
<status status="PASS" endtime="20201124 22:57:51.051" starttime="20201124 22:57:51.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:57:51.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:57:51.052" starttime="20201124 22:57:51.052"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:51.052" starttime="20201124 22:57:49.324"></status>
</kw>
<msg timestamp="20201124 22:57:51.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:57:51.053" starttime="20201124 22:57:49.324"></status>
</kw>
<msg timestamp="20201124 22:57:51.053" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 22:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 22:56 ofs://om/volume1/bucket1/ozone-26622
-rw-...</msg>
<status status="PASS" endtime="20201124 22:57:51.053" starttime="20201124 22:57:49.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 22:57:51.054" starttime="20201124 22:57:51.053"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 22:57:51.054" critical="yes" starttime="20201124 22:57:45.964"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 22:57:51.055" starttime="20201124 22:57:45.904"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 22:56:13.667" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 22:56:13.667" starttime="20201124 22:56:13.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:56:13.667" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 22:56:13.667" starttime="20201124 22:56:13.667"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:13.668" starttime="20201124 22:56:13.665"></status>
</kw>
<msg timestamp="20201124 22:56:13.668" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 22:56:13.668" starttime="20201124 22:56:13.665"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:13.668" starttime="20201124 22:56:13.664"></status>
</kw>
<msg timestamp="20201124 22:56:13.668" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 22:56:13.668" starttime="20201124 22:56:13.664"></status>
</kw>
<msg timestamp="20201124 22:56:13.669" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 22:56:13.669" starttime="20201124 22:56:13.663"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 22:56:13.669" level="INFO">${random} = 26622</msg>
<status status="PASS" endtime="20201124 22:56:13.669" starttime="20201124 22:56:13.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:56:13.675" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-26622 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:56:16.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:56:16.980" level="INFO">${output} = 2020-11-24 22:56:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:56:15 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 ...</msg>
<status status="PASS" endtime="20201124 22:56:16.980" starttime="20201124 22:56:13.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:56:16.981" level="INFO">2020-11-24 22:56:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:56:15 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 22:56:15 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 22:56:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 22:56:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D92EC9B8087F-&gt;cbfa398b-33e7-4246-a88f-8a770cae3297
2020-11-24 22:56:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 22:56:16.981" starttime="20201124 22:56:16.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:56:16.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:56:16.982" starttime="20201124 22:56:16.981"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:16.982" starttime="20201124 22:56:13.670"></status>
</kw>
<msg timestamp="20201124 22:56:16.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:56:16.982" starttime="20201124 22:56:13.670"></status>
</kw>
<msg timestamp="20201124 22:56:16.982" level="INFO">${result} = 2020-11-24 22:56:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:56:15 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 ...</msg>
<status status="PASS" endtime="20201124 22:56:16.983" starttime="20201124 22:56:13.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:56:16.987" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:56:18.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:56:18.764" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 22:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 22:56 o3fs://bucket1.volume1.om/ozone-26622
dr...</msg>
<status status="PASS" endtime="20201124 22:56:18.765" starttime="20201124 22:56:16.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:56:18.766" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 22:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 22:56 o3fs://bucket1.volume1.om/ozone-26622
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 22:56 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 22:56:18.766" starttime="20201124 22:56:18.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:56:18.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:56:18.767" starttime="20201124 22:56:18.766"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:18.767" starttime="20201124 22:56:16.985"></status>
</kw>
<msg timestamp="20201124 22:56:18.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:56:18.767" starttime="20201124 22:56:16.983"></status>
</kw>
<msg timestamp="20201124 22:56:18.767" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 22:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-24 22:56 o3fs://bucket1.volume1.om/ozone-26622
dr...</msg>
<status status="PASS" endtime="20201124 22:56:18.768" starttime="20201124 22:56:16.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 22:56:18.768" starttime="20201124 22:56:18.768"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 22:56:18.768" critical="yes" starttime="20201124 22:56:13.662"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 22:56:18.769" starttime="20201124 22:56:13.602"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:57:55.641" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:57:55.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:57:55.645" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:57:55.645" starttime="20201124 22:57:55.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:57:55.646" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:57:55.646" starttime="20201124 22:57:55.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:57:55.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:57:55.647" starttime="20201124 22:57:55.646"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:55.647" starttime="20201124 22:57:55.635"></status>
</kw>
<msg timestamp="20201124 22:57:55.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:57:55.647" starttime="20201124 22:57:55.634"></status>
</kw>
<msg timestamp="20201124 22:57:55.648" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:57:55.648" starttime="20201124 22:57:55.634"></status>
</kw>
<msg timestamp="20201124 22:57:55.648" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:57:55.648" starttime="20201124 22:57:55.634"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 22:57:55.654" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 22:57:55.654" starttime="20201124 22:57:55.653"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:57:55.655" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 22:57:55.655" starttime="20201124 22:57:55.654"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:55.655" starttime="20201124 22:57:55.652"></status>
</kw>
<msg timestamp="20201124 22:57:55.655" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 22:57:55.655" starttime="20201124 22:57:55.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 22:57:55.656" starttime="20201124 22:57:55.656"></status>
</kw>
<msg timestamp="20201124 22:57:55.657" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 22:57:55.657" starttime="20201124 22:57:55.655"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:55.657" starttime="20201124 22:57:55.650"></status>
</kw>
<msg timestamp="20201124 22:57:55.657" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 22:57:55.657" starttime="20201124 22:57:55.649"></status>
</kw>
<msg timestamp="20201124 22:57:55.657" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 22:57:55.657" starttime="20201124 22:57:55.648"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:57:55.662" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:58:36.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:58:36.894" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 22:57:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:57:57 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201124 22:58:36.895" starttime="20201124 22:57:55.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:58:36.896" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 22:57:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:57:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 22:57:57 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 22:57:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 22:57:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C2941FDF4413-&gt;cbfa398b-33e7-4246-a88f-8a770cae3297
2020-11-24 22:57:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 22:57:58 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-24 22:57:59 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 22:58:01 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-24 22:58:04 INFO  JobSubmitter:198 - number of splits:3
2020-11-24 22:58:04 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606258504225_0003
2020-11-24 22:58:04 INFO  YarnClientImpl:273 - Submitted application application_1606258504225_0003
2020-11-24 22:58:04 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606258504225_0003/
2020-11-24 22:58:04 INFO  Job:1339 - Running job: job_1606258504225_0003
2020-11-24 22:58:11 INFO  Job:1360 - Job job_1606258504225_0003 running in uber mode : false
2020-11-24 22:58:11 INFO  Job:1367 -  map 0% reduce 0%
2020-11-24 22:58:18 INFO  Job:1367 -  map 33% reduce 0%
2020-11-24 22:58:23 INFO  Job:1367 -  map 67% reduce 0%
2020-11-24 22:58:28 INFO  Job:1367 -  map 100% reduce 0%
2020-11-24 22:58:33 INFO  Job:1367 -  map 100% reduce 100%
2020-11-24 22:58:36 INFO  Job:1378 - Job job_1606258504225_0003 completed successfully
2020-11-24 22:58:36 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610697
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40136
		Total time spent by all reduces in occupied slots (ms)=14544
		Total time spent by all map tasks (ms)=10034
		Total time spent by all reduce tasks (ms)=3636
		Total vcore-milliseconds taken by all map tasks=10034
		Total vcore-milliseconds taken by all reduce tasks=3636
		Total megabyte-milliseconds taken by all map tasks=41099264
		Total megabyte-milliseconds taken by all reduce tasks=14893056
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=577
		CPU time spent (ms)=6840
		Physical memory (bytes) snapshot=1116217344
		Virtual memory (bytes) snapshot=15781564416
		Total committed heap usage (bytes)=955777024
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.549 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 22:58:36.896" starttime="20201124 22:58:36.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:58:36.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:58:36.897" starttime="20201124 22:58:36.896"></status>
</kw>
<status status="PASS" endtime="20201124 22:58:36.897" starttime="20201124 22:57:55.659"></status>
</kw>
<msg timestamp="20201124 22:58:36.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:58:36.897" starttime="20201124 22:57:55.658"></status>
</kw>
<msg timestamp="20201124 22:58:36.898" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 22:57:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:57:57 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201124 22:58:36.898" starttime="20201124 22:57:55.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 22:58:36.898" starttime="20201124 22:58:36.898"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 22:58:36.898" critical="yes" starttime="20201124 22:57:55.633"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:58:36.906" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:58:36.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:58:36.910" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:58:36.910" starttime="20201124 22:58:36.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:58:36.912" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:58:36.912" starttime="20201124 22:58:36.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:58:36.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:58:36.913" starttime="20201124 22:58:36.912"></status>
</kw>
<status status="PASS" endtime="20201124 22:58:36.913" starttime="20201124 22:58:36.902"></status>
</kw>
<msg timestamp="20201124 22:58:36.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:58:36.913" starttime="20201124 22:58:36.901"></status>
</kw>
<msg timestamp="20201124 22:58:36.913" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:58:36.913" starttime="20201124 22:58:36.901"></status>
</kw>
<msg timestamp="20201124 22:58:36.914" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:58:36.914" starttime="20201124 22:58:36.900"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 22:58:36.914" level="INFO">${random} = 48</msg>
<status status="PASS" endtime="20201124 22:58:36.914" starttime="20201124 22:58:36.914"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 22:58:36.919" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 22:58:36.919" starttime="20201124 22:58:36.918"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:58:36.920" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 22:58:36.920" starttime="20201124 22:58:36.919"></status>
</kw>
<status status="PASS" endtime="20201124 22:58:36.920" starttime="20201124 22:58:36.918"></status>
</kw>
<msg timestamp="20201124 22:58:36.920" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 22:58:36.920" starttime="20201124 22:58:36.917"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 22:58:36.921" starttime="20201124 22:58:36.921"></status>
</kw>
<msg timestamp="20201124 22:58:36.921" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 22:58:36.921" starttime="20201124 22:58:36.920"></status>
</kw>
<status status="PASS" endtime="20201124 22:58:36.922" starttime="20201124 22:58:36.916"></status>
</kw>
<msg timestamp="20201124 22:58:36.922" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 22:58:36.922" starttime="20201124 22:58:36.915"></status>
</kw>
<msg timestamp="20201124 22:58:36.922" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 22:58:36.922" starttime="20201124 22:58:36.915"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 22:58:36.926" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 22:58:36.926" starttime="20201124 22:58:36.925"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:58:36.926" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 22:58:36.932" starttime="20201124 22:58:36.926"></status>
</kw>
<status status="PASS" endtime="20201124 22:58:36.932" starttime="20201124 22:58:36.925"></status>
</kw>
<msg timestamp="20201124 22:58:36.932" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 22:58:36.932" starttime="20201124 22:58:36.924"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 22:58:36.934" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201124 22:58:36.934" starttime="20201124 22:58:36.933"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:58:36.935" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201124 22:58:36.935" starttime="20201124 22:58:36.934"></status>
</kw>
<status status="PASS" endtime="20201124 22:58:36.935" starttime="20201124 22:58:36.933"></status>
</kw>
<msg timestamp="20201124 22:58:36.935" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201124 22:58:36.935" starttime="20201124 22:58:36.932"></status>
</kw>
<status status="PASS" endtime="20201124 22:58:36.936" starttime="20201124 22:58:36.924"></status>
</kw>
<msg timestamp="20201124 22:58:36.936" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 22:58:36.936" starttime="20201124 22:58:36.923"></status>
</kw>
<msg timestamp="20201124 22:58:36.936" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 22:58:36.936" starttime="20201124 22:58:36.922"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 22:58:36.940" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 22:58:36.940" starttime="20201124 22:58:36.939"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:58:36.940" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 22:58:36.940" starttime="20201124 22:58:36.940"></status>
</kw>
<status status="PASS" endtime="20201124 22:58:36.941" starttime="20201124 22:58:36.939"></status>
</kw>
<msg timestamp="20201124 22:58:36.941" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 22:58:36.941" starttime="20201124 22:58:36.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 22:58:36.942" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201124 22:58:36.943" starttime="20201124 22:58:36.942"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:58:36.943" level="INFO">${result} = /wordcount-48.txt</msg>
<status status="PASS" endtime="20201124 22:58:36.943" starttime="20201124 22:58:36.943"></status>
</kw>
<status status="PASS" endtime="20201124 22:58:36.944" starttime="20201124 22:58:36.942"></status>
</kw>
<msg timestamp="20201124 22:58:36.944" level="INFO">${path_with_leading} = /wordcount-48.txt</msg>
<status status="PASS" endtime="20201124 22:58:36.944" starttime="20201124 22:58:36.941"></status>
</kw>
<status status="PASS" endtime="20201124 22:58:36.944" starttime="20201124 22:58:36.938"></status>
</kw>
<msg timestamp="20201124 22:58:36.944" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-48.txt</msg>
<status status="PASS" endtime="20201124 22:58:36.944" starttime="20201124 22:58:36.937"></status>
</kw>
<msg timestamp="20201124 22:58:36.944" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-48.txt</msg>
<status status="PASS" endtime="20201124 22:58:36.944" starttime="20201124 22:58:36.936"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:58:36.949" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-48.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:59:12.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:59:12.426" level="INFO">${output} = 2020-11-24 22:58:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-24 22:58:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201124 22:59:12.426" starttime="20201124 22:58:36.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:59:12.427" level="INFO">2020-11-24 22:58:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-24 22:58:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 22:58:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:58:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 22:58:39 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 22:58:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 22:58:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-59CC90B1F377-&gt;cbfa398b-33e7-4246-a88f-8a770cae3297
2020-11-24 22:58:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 22:58:40 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-24 22:58:40 INFO  JobSubmitter:198 - number of splits:3
2020-11-24 22:58:40 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606258504225_0004
2020-11-24 22:58:40 INFO  YarnClientImpl:273 - Submitted application application_1606258504225_0004
2020-11-24 22:58:40 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606258504225_0004/
2020-11-24 22:58:40 INFO  Job:1339 - Running job: job_1606258504225_0004
2020-11-24 22:58:48 INFO  Job:1360 - Job job_1606258504225_0004 running in uber mode : false
2020-11-24 22:58:48 INFO  Job:1367 -  map 0% reduce 0%
2020-11-24 22:58:54 INFO  Job:1367 -  map 33% reduce 0%
2020-11-24 22:58:59 INFO  Job:1367 -  map 67% reduce 0%
2020-11-24 22:59:04 INFO  Job:1367 -  map 100% reduce 0%
2020-11-24 22:59:08 INFO  Job:1367 -  map 100% reduce 100%
2020-11-24 22:59:11 INFO  Job:1378 - Job job_1606258504225_0004 completed successfully
2020-11-24 22:59:12 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673159
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39520
		Total time spent by all reduces in occupied slots (ms)=14784
		Total time spent by all map tasks (ms)=9880
		Total time spent by all reduce tasks (ms)=3696
		Total vcore-milliseconds taken by all map tasks=9880
		Total vcore-milliseconds taken by all reduce tasks=3696
		Total megabyte-milliseconds taken by all map tasks=40468480
		Total megabyte-milliseconds taken by all reduce tasks=15138816
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=530
		CPU time spent (ms)=7020
		Physical memory (bytes) snapshot=1137303552
		Virtual memory (bytes) snapshot=15787425792
		Total committed heap usage (bytes)=1018691584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 22:59:12.427" starttime="20201124 22:59:12.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:59:12.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:59:12.428" starttime="20201124 22:59:12.427"></status>
</kw>
<status status="PASS" endtime="20201124 22:59:12.428" starttime="20201124 22:58:36.946"></status>
</kw>
<msg timestamp="20201124 22:59:12.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:59:12.429" starttime="20201124 22:58:36.945"></status>
</kw>
<msg timestamp="20201124 22:59:12.429" level="INFO">${output} = 2020-11-24 22:58:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-24 22:58:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201124 22:59:12.429" starttime="20201124 22:58:36.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 22:59:12.430" starttime="20201124 22:59:12.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 22:59:12.430" starttime="20201124 22:59:12.430"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 22:59:12.431" critical="yes" starttime="20201124 22:58:36.899"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 22:59:12.432" starttime="20201124 22:57:55.574"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:56:23.337" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:56:23.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:56:23.344" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:56:23.344" starttime="20201124 22:56:23.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:56:23.345" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:56:23.345" starttime="20201124 22:56:23.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:56:23.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:56:23.346" starttime="20201124 22:56:23.346"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:23.347" starttime="20201124 22:56:23.333"></status>
</kw>
<msg timestamp="20201124 22:56:23.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:56:23.347" starttime="20201124 22:56:23.332"></status>
</kw>
<msg timestamp="20201124 22:56:23.347" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:56:23.347" starttime="20201124 22:56:23.332"></status>
</kw>
<msg timestamp="20201124 22:56:23.347" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:56:23.348" starttime="20201124 22:56:23.331"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 22:56:23.353" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 22:56:23.353" starttime="20201124 22:56:23.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:56:23.353" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 22:56:23.353" starttime="20201124 22:56:23.353"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:23.354" starttime="20201124 22:56:23.351"></status>
</kw>
<msg timestamp="20201124 22:56:23.354" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 22:56:23.354" starttime="20201124 22:56:23.350"></status>
</kw>
<status status="PASS" endtime="20201124 22:56:23.354" starttime="20201124 22:56:23.349"></status>
</kw>
<msg timestamp="20201124 22:56:23.354" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 22:56:23.354" starttime="20201124 22:56:23.349"></status>
</kw>
<msg timestamp="20201124 22:56:23.355" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 22:56:23.355" starttime="20201124 22:56:23.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:56:23.359" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:57:06.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:57:06.428" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 22:56:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:56:25 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201124 22:57:06.428" starttime="20201124 22:56:23.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:57:06.429" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 22:56:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:56:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 22:56:25 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 22:56:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 22:56:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8FD7CF88D8F0-&gt;cbfa398b-33e7-4246-a88f-8a770cae3297
2020-11-24 22:56:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 22:56:26 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-24 22:56:27 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-24 22:56:27 INFO  JobSubmitter:198 - number of splits:3
2020-11-24 22:56:27 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606258504225_0001
2020-11-24 22:56:28 INFO  YarnClientImpl:273 - Submitted application application_1606258504225_0001
2020-11-24 22:56:28 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606258504225_0001/
2020-11-24 22:56:28 INFO  Job:1339 - Running job: job_1606258504225_0001
2020-11-24 22:56:38 INFO  Job:1360 - Job job_1606258504225_0001 running in uber mode : false
2020-11-24 22:56:38 INFO  Job:1367 -  map 0% reduce 0%
2020-11-24 22:56:45 INFO  Job:1367 -  map 33% reduce 0%
2020-11-24 22:56:50 INFO  Job:1367 -  map 67% reduce 0%
2020-11-24 22:56:55 INFO  Job:1367 -  map 100% reduce 0%
2020-11-24 22:56:59 INFO  Job:1367 -  map 100% reduce 100%
2020-11-24 22:57:05 INFO  Job:1378 - Job job_1606258504225_0001 completed successfully
2020-11-24 22:57:05 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610901
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41532
		Total time spent by all reduces in occupied slots (ms)=14680
		Total time spent by all map tasks (ms)=10383
		Total time spent by all reduce tasks (ms)=3670
		Total vcore-milliseconds taken by all map tasks=10383
		Total vcore-milliseconds taken by all reduce tasks=3670
		Total megabyte-milliseconds taken by all map tasks=42528768
		Total megabyte-milliseconds taken by all reduce tasks=15032320
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=799
		CPU time spent (ms)=6890
		Physical memory (bytes) snapshot=1402118144
		Virtual memory (bytes) snapshot=15795118080
		Total committed heap usage (bytes)=1207959552
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.26 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 22:57:06.430" starttime="20201124 22:57:06.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:57:06.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:57:06.430" starttime="20201124 22:57:06.430"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:06.431" starttime="20201124 22:56:23.356"></status>
</kw>
<msg timestamp="20201124 22:57:06.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:57:06.431" starttime="20201124 22:56:23.356"></status>
</kw>
<msg timestamp="20201124 22:57:06.431" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 22:56:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:56:25 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201124 22:57:06.431" starttime="20201124 22:56:23.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 22:57:06.432" starttime="20201124 22:57:06.432"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 22:57:06.432" critical="yes" starttime="20201124 22:56:23.331"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:57:06.438" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:57:06.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:57:06.442" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:57:06.442" starttime="20201124 22:57:06.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:57:06.443" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:57:06.444" starttime="20201124 22:57:06.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:57:06.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:57:06.444" starttime="20201124 22:57:06.444"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:06.445" starttime="20201124 22:57:06.435"></status>
</kw>
<msg timestamp="20201124 22:57:06.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:57:06.445" starttime="20201124 22:57:06.435"></status>
</kw>
<msg timestamp="20201124 22:57:06.445" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:57:06.445" starttime="20201124 22:57:06.434"></status>
</kw>
<msg timestamp="20201124 22:57:06.445" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201124 22:57:06.445" starttime="20201124 22:57:06.434"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 22:57:06.446" level="INFO">${random} = 70</msg>
<status status="PASS" endtime="20201124 22:57:06.446" starttime="20201124 22:57:06.446"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 22:57:06.450" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 22:57:06.450" starttime="20201124 22:57:06.450"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:57:06.451" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 22:57:06.451" starttime="20201124 22:57:06.451"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:06.451" starttime="20201124 22:57:06.449"></status>
</kw>
<msg timestamp="20201124 22:57:06.452" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 22:57:06.452" starttime="20201124 22:57:06.449"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:06.452" starttime="20201124 22:57:06.448"></status>
</kw>
<msg timestamp="20201124 22:57:06.452" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 22:57:06.452" starttime="20201124 22:57:06.447"></status>
</kw>
<msg timestamp="20201124 22:57:06.452" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 22:57:06.452" starttime="20201124 22:57:06.446"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 22:57:06.456" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 22:57:06.456" starttime="20201124 22:57:06.456"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:57:06.457" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 22:57:06.457" starttime="20201124 22:57:06.456"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:06.457" starttime="20201124 22:57:06.455"></status>
</kw>
<msg timestamp="20201124 22:57:06.457" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 22:57:06.457" starttime="20201124 22:57:06.455"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:06.457" starttime="20201124 22:57:06.454"></status>
</kw>
<msg timestamp="20201124 22:57:06.457" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 22:57:06.458" starttime="20201124 22:57:06.453"></status>
</kw>
<msg timestamp="20201124 22:57:06.458" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 22:57:06.458" starttime="20201124 22:57:06.453"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 22:57:06.461" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 22:57:06.461" starttime="20201124 22:57:06.461"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 22:57:06.462" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 22:57:06.462" starttime="20201124 22:57:06.462"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:06.462" starttime="20201124 22:57:06.460"></status>
</kw>
<msg timestamp="20201124 22:57:06.462" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 22:57:06.462" starttime="20201124 22:57:06.460"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:06.463" starttime="20201124 22:57:06.459"></status>
</kw>
<msg timestamp="20201124 22:57:06.463" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-70.txt</msg>
<status status="PASS" endtime="20201124 22:57:06.463" starttime="20201124 22:57:06.459"></status>
</kw>
<msg timestamp="20201124 22:57:06.463" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-70.txt</msg>
<status status="PASS" endtime="20201124 22:57:06.463" starttime="20201124 22:57:06.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 22:57:06.467" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-70.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 22:57:41.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 22:57:41.245" level="INFO">${output} = 2020-11-24 22:57:08 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-24 22:57:08 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201124 22:57:41.245" starttime="20201124 22:57:06.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 22:57:41.247" level="INFO">2020-11-24 22:57:08 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-24 22:57:08 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 22:57:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-24 22:57:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-24 22:57:08 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-24 22:57:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 22:57:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-052D72DAA28B-&gt;cbfa398b-33e7-4246-a88f-8a770cae3297
2020-11-24 22:57:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 22:57:09 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-24 22:57:09 INFO  JobSubmitter:198 - number of splits:3
2020-11-24 22:57:10 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606258504225_0002
2020-11-24 22:57:10 INFO  YarnClientImpl:273 - Submitted application application_1606258504225_0002
2020-11-24 22:57:10 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606258504225_0002/
2020-11-24 22:57:10 INFO  Job:1339 - Running job: job_1606258504225_0002
2020-11-24 22:57:18 INFO  Job:1360 - Job job_1606258504225_0002 running in uber mode : false
2020-11-24 22:57:18 INFO  Job:1367 -  map 0% reduce 0%
2020-11-24 22:57:25 INFO  Job:1367 -  map 33% reduce 0%
2020-11-24 22:57:29 INFO  Job:1367 -  map 67% reduce 0%
2020-11-24 22:57:35 INFO  Job:1367 -  map 100% reduce 0%
2020-11-24 22:57:39 INFO  Job:1367 -  map 100% reduce 100%
2020-11-24 22:57:40 INFO  Job:1378 - Job job_1606258504225_0002 completed successfully
2020-11-24 22:57:40 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673243
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41372
		Total time spent by all reduces in occupied slots (ms)=15668
		Total time spent by all map tasks (ms)=10343
		Total time spent by all reduce tasks (ms)=3917
		Total vcore-milliseconds taken by all map tasks=10343
		Total vcore-milliseconds taken by all reduce tasks=3917
		Total megabyte-milliseconds taken by all map tasks=42364928
		Total megabyte-milliseconds taken by all reduce tasks=16044032
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=568
		CPU time spent (ms)=7420
		Physical memory (bytes) snapshot=1151860736
		Virtual memory (bytes) snapshot=15792812032
		Total committed heap usage (bytes)=1011875840
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 22:57:41.247" starttime="20201124 22:57:41.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 22:57:41.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 22:57:41.248" starttime="20201124 22:57:41.247"></status>
</kw>
<status status="PASS" endtime="20201124 22:57:41.248" starttime="20201124 22:57:06.465"></status>
</kw>
<msg timestamp="20201124 22:57:41.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 22:57:41.248" starttime="20201124 22:57:06.464"></status>
</kw>
<msg timestamp="20201124 22:57:41.249" level="INFO">${output} = 2020-11-24 22:57:08 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-24 22:57:08 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201124 22:57:41.249" starttime="20201124 22:57:06.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 22:57:41.250" starttime="20201124 22:57:41.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 22:57:41.250" starttime="20201124 22:57:41.250"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 22:57:41.250" critical="yes" starttime="20201124 22:57:06.433"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 22:57:41.252" starttime="20201124 22:56:23.269"></status>
</suite>
<status status="PASS" elapsedtime="193858" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:20.923" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:23.303" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 23:00:23.303" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 23:00:23.303" starttime="20201124 23:00:20.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:23.304" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 23:00:23.305" starttime="20201124 23:00:23.304"></status>
</kw>
<msg timestamp="20201124 23:00:23.305" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 23:00:23.305" starttime="20201124 23:00:20.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:23.311" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:25.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:00:25.544" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:00:25.544" starttime="20201124 23:00:23.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:25.545" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:00:25.546" starttime="20201124 23:00:25.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:00:25.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:00:25.546" starttime="20201124 23:00:25.546"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:25.547" starttime="20201124 23:00:23.308"></status>
</kw>
<msg timestamp="20201124 23:00:25.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:00:25.547" starttime="20201124 23:00:23.307"></status>
</kw>
<msg timestamp="20201124 23:00:25.547" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201124 23:00:25.547" starttime="20201124 23:00:23.307"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201124 23:00:25.548" starttime="20201124 23:00:25.547"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:25.548" starttime="20201124 23:00:23.306"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:25.548" starttime="20201124 23:00:23.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:25.553" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:27.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:00:27.669" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:00:27.669" starttime="20201124 23:00:25.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:27.671" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:00:27.671" starttime="20201124 23:00:27.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:00:27.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:00:27.672" starttime="20201124 23:00:27.672"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:27.672" starttime="20201124 23:00:25.550"></status>
</kw>
<msg timestamp="20201124 23:00:27.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:00:27.673" starttime="20201124 23:00:25.550"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:27.673" starttime="20201124 23:00:25.549"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:27.673" starttime="20201124 23:00:25.549"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:27.673" starttime="20201124 23:00:25.548"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 23:00:27.674" starttime="20201124 23:00:27.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:27.678" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:30.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:00:30.098" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:00:27.636Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 23:00:30.099" starttime="20201124 23:00:27.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:30.100" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:00:27.636Z",
  "modificationTime" : "2020-11-24T23:00:27.636Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 23:00:30.100" starttime="20201124 23:00:30.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:00:30.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:00:30.101" starttime="20201124 23:00:30.100"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:30.101" starttime="20201124 23:00:27.675"></status>
</kw>
<msg timestamp="20201124 23:00:30.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:00:30.101" starttime="20201124 23:00:27.675"></status>
</kw>
<msg timestamp="20201124 23:00:30.101" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:00:27.636Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 23:00:30.101" starttime="20201124 23:00:27.674"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201124 23:00:30.102" starttime="20201124 23:00:30.102"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:00:30.106" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:00:30.106" starttime="20201124 23:00:30.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:00:30.107" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:00:30.107" starttime="20201124 23:00:30.107"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:30.108" starttime="20201124 23:00:30.105"></status>
</kw>
<msg timestamp="20201124 23:00:30.108" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:00:30.108" starttime="20201124 23:00:30.105"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:30.108" starttime="20201124 23:00:30.104"></status>
</kw>
<msg timestamp="20201124 23:00:30.108" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 23:00:30.108" starttime="20201124 23:00:30.103"></status>
</kw>
<msg timestamp="20201124 23:00:30.109" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 23:00:30.109" starttime="20201124 23:00:30.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:30.112" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:32.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:00:32.289" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:00:32.289" starttime="20201124 23:00:30.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:32.290" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:00:32.290" starttime="20201124 23:00:32.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:00:32.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:00:32.291" starttime="20201124 23:00:32.290"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:32.291" starttime="20201124 23:00:30.109"></status>
</kw>
<msg timestamp="20201124 23:00:32.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:00:32.291" starttime="20201124 23:00:30.109"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:32.292" starttime="20201124 23:00:30.109"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:32.295" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:37.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:00:37.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:00:37.947" starttime="20201124 23:00:32.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:37.950" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:00:37.950" starttime="20201124 23:00:37.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:00:37.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:00:37.951" starttime="20201124 23:00:37.950"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:37.951" starttime="20201124 23:00:32.293"></status>
</kw>
<msg timestamp="20201124 23:00:37.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:00:37.951" starttime="20201124 23:00:32.293"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:37.951" starttime="20201124 23:00:32.292"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:37.955" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:41.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:00:41.848" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:00:41.848" starttime="20201124 23:00:37.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:41.849" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:00:41.850" starttime="20201124 23:00:41.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:00:41.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:00:41.850" starttime="20201124 23:00:41.850"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:41.851" starttime="20201124 23:00:37.953"></status>
</kw>
<msg timestamp="20201124 23:00:41.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:00:41.851" starttime="20201124 23:00:37.952"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:41.851" starttime="20201124 23:00:37.952"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:41.855" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:45.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:00:45.781" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:00:45.781" starttime="20201124 23:00:41.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:45.782" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:00:45.783" starttime="20201124 23:00:45.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:00:45.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:00:45.783" starttime="20201124 23:00:45.783"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:45.784" starttime="20201124 23:00:41.853"></status>
</kw>
<msg timestamp="20201124 23:00:45.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:00:45.784" starttime="20201124 23:00:41.852"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:45.784" starttime="20201124 23:00:41.852"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:00:45.784" critical="yes" starttime="20201124 23:00:20.917"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:00:45.790" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:00:45.790" starttime="20201124 23:00:45.789"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:00:45.791" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:00:45.791" starttime="20201124 23:00:45.790"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:45.791" starttime="20201124 23:00:45.788"></status>
</kw>
<msg timestamp="20201124 23:00:45.791" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:00:45.791" starttime="20201124 23:00:45.788"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:45.792" starttime="20201124 23:00:45.787"></status>
</kw>
<msg timestamp="20201124 23:00:45.792" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 23:00:45.792" starttime="20201124 23:00:45.786"></status>
</kw>
<msg timestamp="20201124 23:00:45.792" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 23:00:45.792" starttime="20201124 23:00:45.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:45.797" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:48.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:00:48.036" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:00:48.036" starttime="20201124 23:00:45.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:48.037" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:00:48.038" starttime="20201124 23:00:48.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:00:48.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:00:48.038" starttime="20201124 23:00:48.038"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:48.039" starttime="20201124 23:00:45.793"></status>
</kw>
<msg timestamp="20201124 23:00:48.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:00:48.039" starttime="20201124 23:00:45.793"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:48.039" starttime="20201124 23:00:45.792"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:48.043" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:50.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:00:50.291" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:00:50.291" starttime="20201124 23:00:48.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:50.292" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:00:50.292" starttime="20201124 23:00:50.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:00:50.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:00:50.293" starttime="20201124 23:00:50.292"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:50.293" starttime="20201124 23:00:48.040"></status>
</kw>
<msg timestamp="20201124 23:00:50.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:00:50.294" starttime="20201124 23:00:48.040"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:50.294" starttime="20201124 23:00:48.039"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:00:50.294" critical="yes" starttime="20201124 23:00:45.785"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201124 23:00:50.296" starttime="20201124 23:00:20.850"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:02:29.520" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:02:29.520" starttime="20201124 23:02:29.519"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:02:29.520" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:02:29.521" starttime="20201124 23:02:29.520"></status>
</kw>
<status status="PASS" endtime="20201124 23:02:29.521" starttime="20201124 23:02:29.519"></status>
</kw>
<msg timestamp="20201124 23:02:29.521" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:02:29.521" starttime="20201124 23:02:29.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:02:29.522" starttime="20201124 23:02:29.522"></status>
</kw>
<msg timestamp="20201124 23:02:29.522" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 23:02:29.522" starttime="20201124 23:02:29.521"></status>
</kw>
<status status="PASS" endtime="20201124 23:02:29.522" starttime="20201124 23:02:29.517"></status>
</kw>
<msg timestamp="20201124 23:02:29.523" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:02:29.523" starttime="20201124 23:02:29.517"></status>
</kw>
<msg timestamp="20201124 23:02:29.523" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:02:29.523" starttime="20201124 23:02:29.516"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:02:29.524" level="INFO">${random} = 40536</msg>
<status status="PASS" endtime="20201124 23:02:29.524" starttime="20201124 23:02:29.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:02:29.539" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-40536 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:02:32.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:02:32.938" level="INFO">${output} = 2020-11-24 23:02:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:02:32.938" starttime="20201124 23:02:29.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:02:32.939" level="INFO">2020-11-24 23:02:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:31 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 23:02:31 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 23:02:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:02:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:02:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:02:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8C9034C9AB2E-&gt;d5222137-a08c-4841-99fb-8eeaa8d24db9
2020-11-24 23:02:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 23:02:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 23:02:32.939" starttime="20201124 23:02:32.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:02:32.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:02:32.940" starttime="20201124 23:02:32.939"></status>
</kw>
<status status="PASS" endtime="20201124 23:02:32.940" starttime="20201124 23:02:29.525"></status>
</kw>
<msg timestamp="20201124 23:02:32.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:02:32.940" starttime="20201124 23:02:29.524"></status>
</kw>
<msg timestamp="20201124 23:02:32.941" level="INFO">${result} = 2020-11-24 23:02:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:02:32.941" starttime="20201124 23:02:29.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:02:32.947" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:02:34.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:02:34.686" level="INFO">${output} = 2020-11-24 23:02:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:02:34.686" starttime="20201124 23:02:32.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:02:34.687" level="INFO">2020-11-24 23:02:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:34 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-24 23:00 ofs://om/volume1/bucket1/ozone-01682
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-24 23:02 ofs://om/volume1/bucket1/ozone-40536
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:00 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:01 ofs://om/volume1/bucket1/wordcount-22.txt
2020-11-24 23:02:34 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 23:02:34.687" starttime="20201124 23:02:34.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:02:34.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:02:34.688" starttime="20201124 23:02:34.687"></status>
</kw>
<status status="PASS" endtime="20201124 23:02:34.688" starttime="20201124 23:02:32.943"></status>
</kw>
<msg timestamp="20201124 23:02:34.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:02:34.688" starttime="20201124 23:02:32.943"></status>
</kw>
<msg timestamp="20201124 23:02:34.688" level="INFO">${result} = 2020-11-24 23:02:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:02:34.688" starttime="20201124 23:02:32.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:02:34.689" starttime="20201124 23:02:34.689"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 23:02:34.689" critical="yes" starttime="20201124 23:02:29.515"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 23:02:34.690" starttime="20201124 23:02:29.446"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:00:54.990" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:00:54.990" starttime="20201124 23:00:54.990"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:00:54.991" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:00:54.991" starttime="20201124 23:00:54.990"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:54.991" starttime="20201124 23:00:54.989"></status>
</kw>
<msg timestamp="20201124 23:00:54.991" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:00:54.991" starttime="20201124 23:00:54.988"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:54.991" starttime="20201124 23:00:54.988"></status>
</kw>
<msg timestamp="20201124 23:00:54.992" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:00:54.992" starttime="20201124 23:00:54.987"></status>
</kw>
<msg timestamp="20201124 23:00:54.992" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:00:54.992" starttime="20201124 23:00:54.986"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:00:54.992" level="INFO">${random} = 01682</msg>
<status status="PASS" endtime="20201124 23:00:54.992" starttime="20201124 23:00:54.992"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:54.997" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-01682 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:00:58.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:00:58.629" level="INFO">${output} = 2020-11-24 23:00:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:00:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:00:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:00:58.629" starttime="20201124 23:00:54.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:00:58.630" level="INFO">2020-11-24 23:00:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:00:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:00:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 23:00:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 23:00:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:00:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:00:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:00:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-73EFC9FF397E-&gt;d5222137-a08c-4841-99fb-8eeaa8d24db9
2020-11-24 23:00:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 23:00:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 23:00:58.630" starttime="20201124 23:00:58.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:00:58.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:00:58.631" starttime="20201124 23:00:58.630"></status>
</kw>
<status status="PASS" endtime="20201124 23:00:58.631" starttime="20201124 23:00:54.993"></status>
</kw>
<msg timestamp="20201124 23:00:58.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:00:58.631" starttime="20201124 23:00:54.993"></status>
</kw>
<msg timestamp="20201124 23:00:58.632" level="INFO">${result} = 2020-11-24 23:00:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:00:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:00:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:00:58.632" starttime="20201124 23:00:54.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:00:58.637" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:01:00.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:01:00.530" level="INFO">${output} = 2020-11-24 23:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:01:00.530" starttime="20201124 23:00:58.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:01:00.531" level="INFO">2020-11-24 23:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:00 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-24 23:00 o3fs://bucket1.volume1.om/ozone-01682
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:00 o3fs://bucket1.volume1.om/user
2020-11-24 23:01:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 23:01:00.531" starttime="20201124 23:01:00.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:01:00.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:01:00.532" starttime="20201124 23:01:00.531"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:00.532" starttime="20201124 23:00:58.634"></status>
</kw>
<msg timestamp="20201124 23:01:00.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:01:00.533" starttime="20201124 23:00:58.632"></status>
</kw>
<msg timestamp="20201124 23:01:00.533" level="INFO">${result} = 2020-11-24 23:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:00:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:01:00.533" starttime="20201124 23:00:58.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:01:00.533" starttime="20201124 23:01:00.533"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 23:01:00.534" critical="yes" starttime="20201124 23:00:54.985"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 23:01:00.535" starttime="20201124 23:00:54.926"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:02:39.295" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:02:39.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:02:39.299" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:02:39.299" starttime="20201124 23:02:39.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:02:39.300" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:02:39.300" starttime="20201124 23:02:39.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:02:39.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:02:39.301" starttime="20201124 23:02:39.301"></status>
</kw>
<status status="PASS" endtime="20201124 23:02:39.301" starttime="20201124 23:02:39.288"></status>
</kw>
<msg timestamp="20201124 23:02:39.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:02:39.302" starttime="20201124 23:02:39.288"></status>
</kw>
<msg timestamp="20201124 23:02:39.302" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:02:39.302" starttime="20201124 23:02:39.288"></status>
</kw>
<msg timestamp="20201124 23:02:39.302" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:02:39.302" starttime="20201124 23:02:39.287"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:02:39.308" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:02:39.308" starttime="20201124 23:02:39.307"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:02:39.308" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:02:39.308" starttime="20201124 23:02:39.308"></status>
</kw>
<status status="PASS" endtime="20201124 23:02:39.309" starttime="20201124 23:02:39.306"></status>
</kw>
<msg timestamp="20201124 23:02:39.309" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:02:39.309" starttime="20201124 23:02:39.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:02:39.310" starttime="20201124 23:02:39.309"></status>
</kw>
<msg timestamp="20201124 23:02:39.310" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 23:02:39.310" starttime="20201124 23:02:39.309"></status>
</kw>
<status status="PASS" endtime="20201124 23:02:39.310" starttime="20201124 23:02:39.304"></status>
</kw>
<msg timestamp="20201124 23:02:39.310" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:02:39.310" starttime="20201124 23:02:39.303"></status>
</kw>
<msg timestamp="20201124 23:02:39.311" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:02:39.311" starttime="20201124 23:02:39.303"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:02:39.314" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:03:18.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:03:18.322" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:02:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02...</msg>
<status status="PASS" endtime="20201124 23:03:18.322" starttime="20201124 23:02:39.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:03:18.324" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:02:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:41 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 23:02:41 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 23:02:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:02:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:02:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:02:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E0CA4A25B28A-&gt;d5222137-a08c-4841-99fb-8eeaa8d24db9
2020-11-24 23:02:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 23:02:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-24 23:02:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 23:02:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:43 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:02:43 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:02:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606258795569_0003
2020-11-24 23:02:45 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 23:02:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:46 INFO  Configuration:2752 - resource-types.xml not found
2020-11-24 23:02:46 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-24 23:02:46 INFO  YarnClientImpl:324 - Submitted application application_1606258795569_0003
2020-11-24 23:02:46 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606258795569_0003/
2020-11-24 23:02:46 INFO  Job:1619 - Running job: job_1606258795569_0003
2020-11-24 23:02:54 INFO  Job:1640 - Job job_1606258795569_0003 running in uber mode : false
2020-11-24 23:02:54 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:03:00 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:03:06 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:03:11 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:03:16 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:03:17 INFO  Job:1658 - Job job_1606258795569_0003 completed successfully
2020-11-24 23:03:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016145
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41612
		Total time spent by all reduces in occupied slots (ms)=14672
		Total time spent by all map tasks (ms)=10403
		Total time spent by all reduce tasks (ms)=3668
		Total vcore-milliseconds taken by all map tasks=10403
		Total vcore-milliseconds taken by all reduce tasks=3668
		Total megabyte-milliseconds taken by all map tasks=42610688
		Total megabyte-milliseconds taken by all reduce tasks=15024128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=7120
		Physical memory (bytes) snapshot=1218703360
		Virtual memory (bytes) snapshot=15801339904
		Total committed heap usage (bytes)=1069023232
		Peak Map Physical memory (bytes)=307433472
		Peak Map Virtual memory (bytes)=3945689088
		Peak Reduce Physical memory (bytes)=299118592
		Peak Reduce Virtual memory (bytes)=3967332352
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.224 seconds
2020-11-24 23:03:17 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-24 23:03:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 23:03:18.324" starttime="20201124 23:03:18.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:03:18.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:03:18.325" starttime="20201124 23:03:18.324"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:18.325" starttime="20201124 23:02:39.312"></status>
</kw>
<msg timestamp="20201124 23:03:18.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:03:18.325" starttime="20201124 23:02:39.312"></status>
</kw>
<msg timestamp="20201124 23:03:18.326" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:02:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02...</msg>
<status status="PASS" endtime="20201124 23:03:18.326" starttime="20201124 23:02:39.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:03:18.326" starttime="20201124 23:03:18.326"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:03:18.327" critical="yes" starttime="20201124 23:02:39.286"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:03:18.335" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:03:18.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:03:18.341" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:03:18.341" starttime="20201124 23:03:18.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:03:18.342" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:03:18.342" starttime="20201124 23:03:18.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:03:18.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:03:18.343" starttime="20201124 23:03:18.342"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:18.343" starttime="20201124 23:03:18.331"></status>
</kw>
<msg timestamp="20201124 23:03:18.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:03:18.343" starttime="20201124 23:03:18.330"></status>
</kw>
<msg timestamp="20201124 23:03:18.344" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:03:18.344" starttime="20201124 23:03:18.329"></status>
</kw>
<msg timestamp="20201124 23:03:18.344" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:03:18.344" starttime="20201124 23:03:18.328"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:03:18.345" level="INFO">${random} = 18</msg>
<status status="PASS" endtime="20201124 23:03:18.345" starttime="20201124 23:03:18.344"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:03:18.351" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:03:18.351" starttime="20201124 23:03:18.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:03:18.351" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:03:18.351" starttime="20201124 23:03:18.351"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:18.352" starttime="20201124 23:03:18.349"></status>
</kw>
<msg timestamp="20201124 23:03:18.352" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:03:18.352" starttime="20201124 23:03:18.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:03:18.353" starttime="20201124 23:03:18.353"></status>
</kw>
<msg timestamp="20201124 23:03:18.353" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 23:03:18.353" starttime="20201124 23:03:18.352"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:18.354" starttime="20201124 23:03:18.348"></status>
</kw>
<msg timestamp="20201124 23:03:18.354" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:03:18.354" starttime="20201124 23:03:18.347"></status>
</kw>
<msg timestamp="20201124 23:03:18.354" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:03:18.354" starttime="20201124 23:03:18.345"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:03:18.358" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:03:18.359" starttime="20201124 23:03:18.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:03:18.359" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:03:18.359" starttime="20201124 23:03:18.359"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:18.360" starttime="20201124 23:03:18.357"></status>
</kw>
<msg timestamp="20201124 23:03:18.360" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:03:18.360" starttime="20201124 23:03:18.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:03:18.362" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201124 23:03:18.362" starttime="20201124 23:03:18.361"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:03:18.363" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201124 23:03:18.363" starttime="20201124 23:03:18.362"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:18.363" starttime="20201124 23:03:18.361"></status>
</kw>
<msg timestamp="20201124 23:03:18.363" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201124 23:03:18.363" starttime="20201124 23:03:18.360"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:18.364" starttime="20201124 23:03:18.356"></status>
</kw>
<msg timestamp="20201124 23:03:18.364" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 23:03:18.364" starttime="20201124 23:03:18.355"></status>
</kw>
<msg timestamp="20201124 23:03:18.364" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 23:03:18.364" starttime="20201124 23:03:18.354"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:03:18.368" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:03:18.368" starttime="20201124 23:03:18.368"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:03:18.369" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:03:18.369" starttime="20201124 23:03:18.369"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:18.370" starttime="20201124 23:03:18.367"></status>
</kw>
<msg timestamp="20201124 23:03:18.370" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:03:18.370" starttime="20201124 23:03:18.367"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:03:18.372" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201124 23:03:18.372" starttime="20201124 23:03:18.371"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:03:18.373" level="INFO">${result} = /wordcount-18.txt</msg>
<status status="PASS" endtime="20201124 23:03:18.373" starttime="20201124 23:03:18.372"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:18.373" starttime="20201124 23:03:18.371"></status>
</kw>
<msg timestamp="20201124 23:03:18.373" level="INFO">${path_with_leading} = /wordcount-18.txt</msg>
<status status="PASS" endtime="20201124 23:03:18.373" starttime="20201124 23:03:18.370"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:18.374" starttime="20201124 23:03:18.366"></status>
</kw>
<msg timestamp="20201124 23:03:18.374" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20201124 23:03:18.374" starttime="20201124 23:03:18.365"></status>
</kw>
<msg timestamp="20201124 23:03:18.374" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20201124 23:03:18.374" starttime="20201124 23:03:18.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:03:18.378" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-18.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:03:55.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:03:55.768" level="INFO">${output} = 2020-11-24 23:03:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:03:55.768" starttime="20201124 23:03:18.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:03:55.769" level="INFO">2020-11-24 23:03:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-24 23:03:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 23:03:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 23:03:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 23:03:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:03:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:03:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:03:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-02F26D3660C7-&gt;d5222137-a08c-4841-99fb-8eeaa8d24db9
2020-11-24 23:03:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 23:03:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:03:22 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:03:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606258795569_0004
2020-11-24 23:03:22 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 23:03:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:22 INFO  Configuration:2752 - resource-types.xml not found
2020-11-24 23:03:22 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-24 23:03:22 INFO  YarnClientImpl:324 - Submitted application application_1606258795569_0004
2020-11-24 23:03:22 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606258795569_0004/
2020-11-24 23:03:22 INFO  Job:1619 - Running job: job_1606258795569_0004
2020-11-24 23:03:30 INFO  Job:1640 - Job job_1606258795569_0004 running in uber mode : false
2020-11-24 23:03:30 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:03:37 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:03:43 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:03:48 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:03:55 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:03:55 INFO  Job:1658 - Job job_1606258795569_0004 completed successfully
2020-11-24 23:03:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40612
		Total time spent by all reduces in occupied slots (ms)=24428
		Total time spent by all map tasks (ms)=10153
		Total time spent by all reduce tasks (ms)=6107
		Total vcore-milliseconds taken by all map tasks=10153
		Total vcore-milliseconds taken by all reduce tasks=6107
		Total megabyte-milliseconds taken by all map tasks=41586688
		Total megabyte-milliseconds taken by all reduce tasks=25014272
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=579
		CPU time spent (ms)=7440
		Physical memory (bytes) snapshot=1228423168
		Virtual memory (bytes) snapshot=15807811584
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=312647680
		Peak Map Virtual memory (bytes)=3948838912
		Peak Reduce Physical memory (bytes)=300122112
		Peak Reduce Virtual memory (bytes)=3969441792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-24 23:03:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 23:03:55.769" starttime="20201124 23:03:55.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:03:55.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:03:55.770" starttime="20201124 23:03:55.770"></status>
</kw>
<status status="PASS" endtime="20201124 23:03:55.771" starttime="20201124 23:03:18.376"></status>
</kw>
<msg timestamp="20201124 23:03:55.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:03:55.771" starttime="20201124 23:03:18.375"></status>
</kw>
<msg timestamp="20201124 23:03:55.771" level="INFO">${output} = 2020-11-24 23:03:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:03:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:03:55.771" starttime="20201124 23:03:18.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 23:03:55.772" starttime="20201124 23:03:55.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:03:55.773" starttime="20201124 23:03:55.772"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:03:55.773" critical="yes" starttime="20201124 23:03:18.327"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 23:03:55.774" starttime="20201124 23:02:39.225"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:01:05.179" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:01:05.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:01:05.184" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:01:05.184" starttime="20201124 23:01:05.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:01:05.185" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:01:05.185" starttime="20201124 23:01:05.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:01:05.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:01:05.186" starttime="20201124 23:01:05.185"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:05.186" starttime="20201124 23:01:05.173"></status>
</kw>
<msg timestamp="20201124 23:01:05.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:01:05.186" starttime="20201124 23:01:05.172"></status>
</kw>
<msg timestamp="20201124 23:01:05.186" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:01:05.186" starttime="20201124 23:01:05.172"></status>
</kw>
<msg timestamp="20201124 23:01:05.187" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:01:05.187" starttime="20201124 23:01:05.171"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:01:05.192" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:01:05.192" starttime="20201124 23:01:05.191"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:01:05.192" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:01:05.192" starttime="20201124 23:01:05.192"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:05.193" starttime="20201124 23:01:05.190"></status>
</kw>
<msg timestamp="20201124 23:01:05.193" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:01:05.193" starttime="20201124 23:01:05.189"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:05.193" starttime="20201124 23:01:05.188"></status>
</kw>
<msg timestamp="20201124 23:01:05.193" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:01:05.193" starttime="20201124 23:01:05.188"></status>
</kw>
<msg timestamp="20201124 23:01:05.193" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:01:05.194" starttime="20201124 23:01:05.187"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:01:05.197" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:01:48.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:01:48.010" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01...</msg>
<status status="PASS" endtime="20201124 23:01:48.010" starttime="20201124 23:01:05.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:01:48.011" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:07 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 23:01:07 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 23:01:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:01:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:01:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:01:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-62E1448587E1-&gt;d5222137-a08c-4841-99fb-8eeaa8d24db9
2020-11-24 23:01:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 23:01:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-24 23:01:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:09 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:01:11 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:01:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606258795569_0001
2020-11-24 23:01:12 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 23:01:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:12 INFO  Configuration:2752 - resource-types.xml not found
2020-11-24 23:01:12 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-24 23:01:12 INFO  YarnClientImpl:324 - Submitted application application_1606258795569_0001
2020-11-24 23:01:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606258795569_0001/
2020-11-24 23:01:12 INFO  Job:1619 - Running job: job_1606258795569_0001
2020-11-24 23:01:23 INFO  Job:1640 - Job job_1606258795569_0001 running in uber mode : false
2020-11-24 23:01:23 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:01:30 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:01:36 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:01:42 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:01:46 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:01:47 INFO  Job:1658 - Job job_1606258795569_0001 completed successfully
2020-11-24 23:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41448
		Total time spent by all reduces in occupied slots (ms)=15672
		Total time spent by all map tasks (ms)=10362
		Total time spent by all reduce tasks (ms)=3918
		Total vcore-milliseconds taken by all map tasks=10362
		Total vcore-milliseconds taken by all reduce tasks=3918
		Total megabyte-milliseconds taken by all map tasks=42442752
		Total megabyte-milliseconds taken by all reduce tasks=16048128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=616
		CPU time spent (ms)=6360
		Physical memory (bytes) snapshot=1361436672
		Virtual memory (bytes) snapshot=15785644032
		Total committed heap usage (bytes)=1190133760
		Peak Map Physical memory (bytes)=386863104
		Peak Map Virtual memory (bytes)=3945914368
		Peak Reduce Physical memory (bytes)=278515712
		Peak Reduce Virtual memory (bytes)=3952742400
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.856 seconds
2020-11-24 23:01:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:47 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-24 23:01:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 23:01:48.011" starttime="20201124 23:01:48.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:01:48.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:01:48.012" starttime="20201124 23:01:48.011"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:48.012" starttime="20201124 23:01:05.195"></status>
</kw>
<msg timestamp="20201124 23:01:48.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:01:48.012" starttime="20201124 23:01:05.194"></status>
</kw>
<msg timestamp="20201124 23:01:48.013" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01...</msg>
<status status="PASS" endtime="20201124 23:01:48.013" starttime="20201124 23:01:05.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:01:48.014" starttime="20201124 23:01:48.013"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:01:48.014" critical="yes" starttime="20201124 23:01:05.170"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:01:48.021" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:01:48.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:01:48.025" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:01:48.025" starttime="20201124 23:01:48.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:01:48.026" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:01:48.026" starttime="20201124 23:01:48.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:01:48.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:01:48.027" starttime="20201124 23:01:48.026"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:48.027" starttime="20201124 23:01:48.017"></status>
</kw>
<msg timestamp="20201124 23:01:48.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:01:48.028" starttime="20201124 23:01:48.016"></status>
</kw>
<msg timestamp="20201124 23:01:48.028" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:01:48.028" starttime="20201124 23:01:48.016"></status>
</kw>
<msg timestamp="20201124 23:01:48.028" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201124 23:01:48.028" starttime="20201124 23:01:48.015"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:01:48.029" level="INFO">${random} = 22</msg>
<status status="PASS" endtime="20201124 23:01:48.029" starttime="20201124 23:01:48.028"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:01:48.033" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:01:48.033" starttime="20201124 23:01:48.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:01:48.033" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:01:48.034" starttime="20201124 23:01:48.033"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:48.034" starttime="20201124 23:01:48.032"></status>
</kw>
<msg timestamp="20201124 23:01:48.034" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:01:48.034" starttime="20201124 23:01:48.031"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:48.034" starttime="20201124 23:01:48.030"></status>
</kw>
<msg timestamp="20201124 23:01:48.034" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:01:48.034" starttime="20201124 23:01:48.030"></status>
</kw>
<msg timestamp="20201124 23:01:48.035" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:01:48.035" starttime="20201124 23:01:48.029"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:01:48.038" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:01:48.038" starttime="20201124 23:01:48.038"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:01:48.039" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:01:48.039" starttime="20201124 23:01:48.038"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:48.039" starttime="20201124 23:01:48.037"></status>
</kw>
<msg timestamp="20201124 23:01:48.039" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:01:48.039" starttime="20201124 23:01:48.037"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:48.040" starttime="20201124 23:01:48.036"></status>
</kw>
<msg timestamp="20201124 23:01:48.040" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 23:01:48.040" starttime="20201124 23:01:48.036"></status>
</kw>
<msg timestamp="20201124 23:01:48.040" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 23:01:48.040" starttime="20201124 23:01:48.035"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:01:48.044" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:01:48.044" starttime="20201124 23:01:48.043"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:01:48.044" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:01:48.044" starttime="20201124 23:01:48.044"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:48.045" starttime="20201124 23:01:48.043"></status>
</kw>
<msg timestamp="20201124 23:01:48.045" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:01:48.045" starttime="20201124 23:01:48.042"></status>
</kw>
<status status="PASS" endtime="20201124 23:01:48.045" starttime="20201124 23:01:48.042"></status>
</kw>
<msg timestamp="20201124 23:01:48.045" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-22.txt</msg>
<status status="PASS" endtime="20201124 23:01:48.045" starttime="20201124 23:01:48.041"></status>
</kw>
<msg timestamp="20201124 23:01:48.046" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-22.txt</msg>
<status status="PASS" endtime="20201124 23:01:48.046" starttime="20201124 23:01:48.040"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:01:48.051" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-22.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:02:24.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:02:24.747" level="INFO">${output} = 2020-11-24 23:01:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:02:24.747" starttime="20201124 23:01:48.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:02:24.749" level="INFO">2020-11-24 23:01:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-24 23:01:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 23:01:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:50 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-24 23:01:50 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-24 23:01:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:01:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:01:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:01:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0FB374C8CB54-&gt;d5222137-a08c-4841-99fb-8eeaa8d24db9
2020-11-24 23:01:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 23:01:51 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:01:52 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:01:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606258795569_0002
2020-11-24 23:01:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 23:01:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:52 INFO  Configuration:2752 - resource-types.xml not found
2020-11-24 23:01:52 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-24 23:01:52 INFO  YarnClientImpl:324 - Submitted application application_1606258795569_0002
2020-11-24 23:01:52 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606258795569_0002/
2020-11-24 23:01:52 INFO  Job:1619 - Running job: job_1606258795569_0002
2020-11-24 23:02:01 INFO  Job:1640 - Job job_1606258795569_0002 running in uber mode : false
2020-11-24 23:02:01 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:02:08 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:02:14 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:02:19 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:02:23 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:02:24 INFO  Job:1658 - Job job_1606258795569_0002 completed successfully
2020-11-24 23:02:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:02:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41008
		Total time spent by all reduces in occupied slots (ms)=15432
		Total time spent by all map tasks (ms)=10252
		Total time spent by all reduce tasks (ms)=3858
		Total vcore-milliseconds taken by all map tasks=10252
		Total vcore-milliseconds taken by all reduce tasks=3858
		Total megabyte-milliseconds taken by all map tasks=41992192
		Total megabyte-milliseconds taken by all reduce tasks=15802368
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=574
		CPU time spent (ms)=6640
		Physical memory (bytes) snapshot=1198899200
		Virtual memory (bytes) snapshot=15776829440
		Total committed heap usage (bytes)=1060634624
		Peak Map Physical memory (bytes)=316493824
		Peak Map Virtual memory (bytes)=3946258432
		Peak Reduce Physical memory (bytes)=299769856
		Peak Reduce Virtual memory (bytes)=3972153344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-24 23:02:24 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201124 23:02:24.749" starttime="20201124 23:02:24.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:02:24.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:02:24.750" starttime="20201124 23:02:24.749"></status>
</kw>
<status status="PASS" endtime="20201124 23:02:24.750" starttime="20201124 23:01:48.047"></status>
</kw>
<msg timestamp="20201124 23:02:24.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:02:24.750" starttime="20201124 23:01:48.046"></status>
</kw>
<msg timestamp="20201124 23:02:24.751" level="INFO">${output} = 2020-11-24 23:01:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-24 23:01:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201124 23:02:24.751" starttime="20201124 23:01:48.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 23:02:24.752" starttime="20201124 23:02:24.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:02:24.752" starttime="20201124 23:02:24.752"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:02:24.753" critical="yes" starttime="20201124 23:01:48.015"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 23:02:24.754" starttime="20201124 23:01:05.109"></status>
</suite>
<status status="PASS" elapsedtime="196493" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:04.786" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:10.726" level="INFO">${rc} = 255</msg>
<msg timestamp="20201124 23:05:10.727" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 23:05:10.727" starttime="20201124 23:05:04.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:10.728" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 23:05:10.728" starttime="20201124 23:05:10.727"></status>
</kw>
<msg timestamp="20201124 23:05:10.728" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201124 23:05:10.728" starttime="20201124 23:05:04.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:10.734" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:14.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:14.075" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:05:14.075" starttime="20201124 23:05:10.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:14.076" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:05:14.076" starttime="20201124 23:05:14.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:14.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:14.077" starttime="20201124 23:05:14.076"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:14.077" starttime="20201124 23:05:10.730"></status>
</kw>
<msg timestamp="20201124 23:05:14.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:14.078" starttime="20201124 23:05:10.730"></status>
</kw>
<msg timestamp="20201124 23:05:14.078" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201124 23:05:14.078" starttime="20201124 23:05:10.729"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201124 23:05:14.078" starttime="20201124 23:05:14.078"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:14.079" starttime="20201124 23:05:10.729"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:14.079" starttime="20201124 23:05:10.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:14.083" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:17.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:17.389" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:05:17.389" starttime="20201124 23:05:14.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:17.390" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:05:17.390" starttime="20201124 23:05:17.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:17.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:17.391" starttime="20201124 23:05:17.390"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:17.391" starttime="20201124 23:05:14.081"></status>
</kw>
<msg timestamp="20201124 23:05:17.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:17.391" starttime="20201124 23:05:14.080"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:17.392" starttime="20201124 23:05:14.080"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:17.392" starttime="20201124 23:05:14.079"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:17.392" starttime="20201124 23:05:14.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201124 23:05:17.392" starttime="20201124 23:05:17.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:17.400" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:20.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:20.566" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:05:17.002Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 23:05:20.566" starttime="20201124 23:05:17.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:20.567" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:05:17.002Z",
  "modificationTime" : "2020-11-24T23:05:17.002Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201124 23:05:20.568" starttime="20201124 23:05:20.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:20.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:20.568" starttime="20201124 23:05:20.568"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:20.569" starttime="20201124 23:05:17.394"></status>
</kw>
<msg timestamp="20201124 23:05:20.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:20.569" starttime="20201124 23:05:17.393"></status>
</kw>
<msg timestamp="20201124 23:05:20.569" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-24T23:05:17.002Z",
  "modificat...</msg>
<status status="PASS" endtime="20201124 23:05:20.569" starttime="20201124 23:05:17.393"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201124 23:05:20.570" starttime="20201124 23:05:20.569"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:05:20.575" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:05:20.575" starttime="20201124 23:05:20.574"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:05:20.575" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:05:20.575" starttime="20201124 23:05:20.575"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:20.576" starttime="20201124 23:05:20.573"></status>
</kw>
<msg timestamp="20201124 23:05:20.576" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:05:20.576" starttime="20201124 23:05:20.573"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:20.576" starttime="20201124 23:05:20.572"></status>
</kw>
<msg timestamp="20201124 23:05:20.576" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 23:05:20.576" starttime="20201124 23:05:20.571"></status>
</kw>
<msg timestamp="20201124 23:05:20.577" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201124 23:05:20.577" starttime="20201124 23:05:20.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:20.580" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:24.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:24.053" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:05:24.053" starttime="20201124 23:05:20.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:24.054" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:05:24.054" starttime="20201124 23:05:24.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:24.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:24.055" starttime="20201124 23:05:24.054"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:24.055" starttime="20201124 23:05:20.578"></status>
</kw>
<msg timestamp="20201124 23:05:24.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:24.056" starttime="20201124 23:05:20.577"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:24.056" starttime="20201124 23:05:20.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:24.062" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:31.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:31.617" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:05:31.617" starttime="20201124 23:05:24.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:31.618" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:05:31.618" starttime="20201124 23:05:31.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:31.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:31.619" starttime="20201124 23:05:31.619"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:31.620" starttime="20201124 23:05:24.057"></status>
</kw>
<msg timestamp="20201124 23:05:31.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:31.620" starttime="20201124 23:05:24.057"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:31.620" starttime="20201124 23:05:24.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:31.624" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:36.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:36.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:05:36.895" starttime="20201124 23:05:31.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:36.896" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:05:36.896" starttime="20201124 23:05:36.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:36.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:36.897" starttime="20201124 23:05:36.896"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:36.897" starttime="20201124 23:05:31.621"></status>
</kw>
<msg timestamp="20201124 23:05:36.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:36.897" starttime="20201124 23:05:31.621"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:36.897" starttime="20201124 23:05:31.620"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:36.902" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:42.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:42.990" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:05:42.990" starttime="20201124 23:05:36.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:42.991" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:05:42.991" starttime="20201124 23:05:42.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:42.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:42.992" starttime="20201124 23:05:42.991"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:42.992" starttime="20201124 23:05:36.898"></status>
</kw>
<msg timestamp="20201124 23:05:42.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:42.992" starttime="20201124 23:05:36.898"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:42.992" starttime="20201124 23:05:36.898"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:05:42.993" critical="yes" starttime="20201124 23:05:04.780"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:05:42.998" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:05:42.999" starttime="20201124 23:05:42.998"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:05:42.999" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:05:42.999" starttime="20201124 23:05:42.999"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:43.000" starttime="20201124 23:05:42.997"></status>
</kw>
<msg timestamp="20201124 23:05:43.000" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:05:43.000" starttime="20201124 23:05:42.997"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:43.000" starttime="20201124 23:05:42.996"></status>
</kw>
<msg timestamp="20201124 23:05:43.000" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 23:05:43.000" starttime="20201124 23:05:42.995"></status>
</kw>
<msg timestamp="20201124 23:05:43.000" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 23:05:43.000" starttime="20201124 23:05:42.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:43.005" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:46.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:46.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:05:46.095" starttime="20201124 23:05:43.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:46.096" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:05:46.096" starttime="20201124 23:05:46.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:46.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:46.097" starttime="20201124 23:05:46.096"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:46.097" starttime="20201124 23:05:43.001"></status>
</kw>
<msg timestamp="20201124 23:05:46.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:46.097" starttime="20201124 23:05:43.001"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:46.098" starttime="20201124 23:05:43.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:46.101" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:49.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:49.064" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201124 23:05:49.064" starttime="20201124 23:05:46.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:49.065" level="INFO"></msg>
<status status="PASS" endtime="20201124 23:05:49.065" starttime="20201124 23:05:49.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:49.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:49.066" starttime="20201124 23:05:49.065"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:49.066" starttime="20201124 23:05:46.099"></status>
</kw>
<msg timestamp="20201124 23:05:49.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:49.066" starttime="20201124 23:05:46.098"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:49.067" starttime="20201124 23:05:46.098"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201124 23:05:49.067" critical="yes" starttime="20201124 23:05:42.994"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201124 23:05:49.070" starttime="20201124 23:05:04.708"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:07:35.079" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:07:35.079" starttime="20201124 23:07:35.079"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:07:35.080" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:07:35.080" starttime="20201124 23:07:35.080"></status>
</kw>
<status status="PASS" endtime="20201124 23:07:35.080" starttime="20201124 23:07:35.078"></status>
</kw>
<msg timestamp="20201124 23:07:35.080" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:07:35.080" starttime="20201124 23:07:35.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:07:35.082" starttime="20201124 23:07:35.081"></status>
</kw>
<msg timestamp="20201124 23:07:35.082" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 23:07:35.082" starttime="20201124 23:07:35.081"></status>
</kw>
<status status="PASS" endtime="20201124 23:07:35.082" starttime="20201124 23:07:35.077"></status>
</kw>
<msg timestamp="20201124 23:07:35.082" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:07:35.082" starttime="20201124 23:07:35.076"></status>
</kw>
<msg timestamp="20201124 23:07:35.082" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:07:35.083" starttime="20201124 23:07:35.075"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:07:35.083" level="INFO">${random} = 04565</msg>
<status status="PASS" endtime="20201124 23:07:35.083" starttime="20201124 23:07:35.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:07:35.090" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-04565 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:07:38.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:07:38.619" level="INFO">${output} = 2020-11-24 23:07:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:07:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 23:07:38.619" starttime="20201124 23:07:35.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:07:38.621" level="INFO">2020-11-24 23:07:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:07:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:07:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:07:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:07:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6209A9B35667-&gt;ef67c498-0c41-434a-b421-26833fe72a64
2020-11-24 23:07:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 23:07:38.621" starttime="20201124 23:07:38.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:07:38.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:07:38.621" starttime="20201124 23:07:38.621"></status>
</kw>
<status status="PASS" endtime="20201124 23:07:38.622" starttime="20201124 23:07:35.084"></status>
</kw>
<msg timestamp="20201124 23:07:38.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:07:38.622" starttime="20201124 23:07:35.084"></status>
</kw>
<msg timestamp="20201124 23:07:38.622" level="INFO">${result} = 2020-11-24 23:07:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:07:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 23:07:38.622" starttime="20201124 23:07:35.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:07:38.627" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:07:40.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:07:40.515" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:05 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:07 ofs://om/volume1/bucket1/ozone-04565
-rw-...</msg>
<status status="PASS" endtime="20201124 23:07:40.515" starttime="20201124 23:07:38.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:07:40.516" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:05 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:07 ofs://om/volume1/bucket1/ozone-04565
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:05 ofs://om/volume1/bucket1/ozone-80244
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:05 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:07 ofs://om/volume1/bucket1/wordcount-19.txt</msg>
<status status="PASS" endtime="20201124 23:07:40.516" starttime="20201124 23:07:40.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:07:40.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:07:40.517" starttime="20201124 23:07:40.516"></status>
</kw>
<status status="PASS" endtime="20201124 23:07:40.517" starttime="20201124 23:07:38.625"></status>
</kw>
<msg timestamp="20201124 23:07:40.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:07:40.517" starttime="20201124 23:07:38.624"></status>
</kw>
<msg timestamp="20201124 23:07:40.518" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:05 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:07 ofs://om/volume1/bucket1/ozone-04565
-rw-...</msg>
<status status="PASS" endtime="20201124 23:07:40.518" starttime="20201124 23:07:38.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:07:40.518" starttime="20201124 23:07:40.518"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 23:07:40.519" critical="yes" starttime="20201124 23:07:35.074"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 23:07:40.520" starttime="20201124 23:07:35.014"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:05:53.827" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:05:53.827" starttime="20201124 23:05:53.826"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:05:53.827" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:05:53.827" starttime="20201124 23:05:53.827"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:53.828" starttime="20201124 23:05:53.826"></status>
</kw>
<msg timestamp="20201124 23:05:53.828" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:05:53.828" starttime="20201124 23:05:53.825"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:53.828" starttime="20201124 23:05:53.824"></status>
</kw>
<msg timestamp="20201124 23:05:53.828" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:05:53.828" starttime="20201124 23:05:53.824"></status>
</kw>
<msg timestamp="20201124 23:05:53.829" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:05:53.829" starttime="20201124 23:05:53.823"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:05:53.829" level="INFO">${random} = 80244</msg>
<status status="PASS" endtime="20201124 23:05:53.829" starttime="20201124 23:05:53.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:53.834" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-80244 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:57.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:57.824" level="INFO">${output} = 2020-11-24 23:05:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:05:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 23:05:57.824" starttime="20201124 23:05:53.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:57.825" level="INFO">2020-11-24 23:05:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:05:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:05:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:05:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:05:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-38ABE3D48EB0-&gt;ef67c498-0c41-434a-b421-26833fe72a64
2020-11-24 23:05:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201124 23:05:57.826" starttime="20201124 23:05:57.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:57.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:57.826" starttime="20201124 23:05:57.826"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:57.827" starttime="20201124 23:05:53.830"></status>
</kw>
<msg timestamp="20201124 23:05:57.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:57.827" starttime="20201124 23:05:53.830"></status>
</kw>
<msg timestamp="20201124 23:05:57.828" level="INFO">${result} = 2020-11-24 23:05:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:05:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201124 23:05:57.828" starttime="20201124 23:05:53.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:05:57.833" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:05:59.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:05:59.708" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:05 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:05 o3fs://bucket1.volume1.om/ozone-80244
dr...</msg>
<status status="PASS" endtime="20201124 23:05:59.708" starttime="20201124 23:05:57.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:05:59.709" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:05 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:05 o3fs://bucket1.volume1.om/ozone-80244
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:05 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201124 23:05:59.709" starttime="20201124 23:05:59.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:05:59.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:05:59.710" starttime="20201124 23:05:59.710"></status>
</kw>
<status status="PASS" endtime="20201124 23:05:59.710" starttime="20201124 23:05:57.830"></status>
</kw>
<msg timestamp="20201124 23:05:59.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:05:59.711" starttime="20201124 23:05:57.829"></status>
</kw>
<msg timestamp="20201124 23:05:59.711" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-24 23:05 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-24 23:05 o3fs://bucket1.volume1.om/ozone-80244
dr...</msg>
<status status="PASS" endtime="20201124 23:05:59.711" starttime="20201124 23:05:57.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:05:59.712" starttime="20201124 23:05:59.711"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201124 23:05:59.712" critical="yes" starttime="20201124 23:05:53.822"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201124 23:05:59.713" starttime="20201124 23:05:53.761"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:07:45.227" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:07:45.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:07:45.231" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:07:45.231" starttime="20201124 23:07:45.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:07:45.232" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:07:45.233" starttime="20201124 23:07:45.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:07:45.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:07:45.233" starttime="20201124 23:07:45.233"></status>
</kw>
<status status="PASS" endtime="20201124 23:07:45.233" starttime="20201124 23:07:45.221"></status>
</kw>
<msg timestamp="20201124 23:07:45.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:07:45.234" starttime="20201124 23:07:45.221"></status>
</kw>
<msg timestamp="20201124 23:07:45.234" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:07:45.234" starttime="20201124 23:07:45.220"></status>
</kw>
<msg timestamp="20201124 23:07:45.234" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:07:45.234" starttime="20201124 23:07:45.220"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:07:45.239" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:07:45.239" starttime="20201124 23:07:45.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:07:45.240" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:07:45.240" starttime="20201124 23:07:45.239"></status>
</kw>
<status status="PASS" endtime="20201124 23:07:45.240" starttime="20201124 23:07:45.237"></status>
</kw>
<msg timestamp="20201124 23:07:45.240" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:07:45.240" starttime="20201124 23:07:45.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:07:45.241" starttime="20201124 23:07:45.241"></status>
</kw>
<msg timestamp="20201124 23:07:45.242" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 23:07:45.242" starttime="20201124 23:07:45.241"></status>
</kw>
<status status="PASS" endtime="20201124 23:07:45.242" starttime="20201124 23:07:45.236"></status>
</kw>
<msg timestamp="20201124 23:07:45.242" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:07:45.242" starttime="20201124 23:07:45.235"></status>
</kw>
<msg timestamp="20201124 23:07:45.242" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:07:45.242" starttime="20201124 23:07:45.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:07:45.247" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:08:26.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:08:26.431" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:07:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:07:47 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 23:08:26.431" starttime="20201124 23:07:45.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:08:26.432" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:07:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:07:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:07:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:07:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:07:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-83003370053E-&gt;ef67c498-0c41-434a-b421-26833fe72a64
2020-11-24 23:07:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 23:07:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-11-24 23:07:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 23:07:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:07:51 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:07:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606259079917_0003
2020-11-24 23:07:51 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 23:07:52 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 23:07:52 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 23:07:52 INFO  YarnClientImpl:329 - Submitted application application_1606259079917_0003
2020-11-24 23:07:52 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606259079917_0003/
2020-11-24 23:07:52 INFO  Job:1619 - Running job: job_1606259079917_0003
2020-11-24 23:07:59 INFO  Job:1640 - Job job_1606259079917_0003 running in uber mode : false
2020-11-24 23:07:59 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:08:06 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:08:12 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:08:18 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:08:22 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:08:25 INFO  Job:1658 - Job job_1606259079917_0003 completed successfully
2020-11-24 23:08:25 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056249
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41168
		Total time spent by all reduces in occupied slots (ms)=15172
		Total time spent by all map tasks (ms)=10292
		Total time spent by all reduce tasks (ms)=3793
		Total vcore-milliseconds taken by all map tasks=10292
		Total vcore-milliseconds taken by all reduce tasks=3793
		Total megabyte-milliseconds taken by all map tasks=42156032
		Total megabyte-milliseconds taken by all reduce tasks=15536128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=659
		CPU time spent (ms)=7350
		Physical memory (bytes) snapshot=1470869504
		Virtual memory (bytes) snapshot=15803543552
		Total committed heap usage (bytes)=1683488768
		Peak Map Physical memory (bytes)=365232128
		Peak Map Virtual memory (bytes)=3947651072
		Peak Reduce Physical memory (bytes)=383676416
		Peak Reduce Virtual memory (bytes)=3966992384
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.328 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 23:08:26.432" starttime="20201124 23:08:26.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:08:26.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:08:26.433" starttime="20201124 23:08:26.432"></status>
</kw>
<status status="PASS" endtime="20201124 23:08:26.433" starttime="20201124 23:07:45.244"></status>
</kw>
<msg timestamp="20201124 23:08:26.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:08:26.433" starttime="20201124 23:07:45.243"></status>
</kw>
<msg timestamp="20201124 23:08:26.434" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:07:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:07:47 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 23:08:26.434" starttime="20201124 23:07:45.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:08:26.435" starttime="20201124 23:08:26.434"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:08:26.435" critical="yes" starttime="20201124 23:07:45.219"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:08:26.440" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:08:26.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:08:26.445" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:08:26.446" starttime="20201124 23:08:26.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:08:26.447" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:08:26.447" starttime="20201124 23:08:26.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:08:26.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:08:26.448" starttime="20201124 23:08:26.447"></status>
</kw>
<status status="PASS" endtime="20201124 23:08:26.448" starttime="20201124 23:08:26.438"></status>
</kw>
<msg timestamp="20201124 23:08:26.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:08:26.448" starttime="20201124 23:08:26.438"></status>
</kw>
<msg timestamp="20201124 23:08:26.449" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:08:26.449" starttime="20201124 23:08:26.437"></status>
</kw>
<msg timestamp="20201124 23:08:26.449" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:08:26.449" starttime="20201124 23:08:26.437"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:08:26.450" level="INFO">${random} = 08</msg>
<status status="PASS" endtime="20201124 23:08:26.450" starttime="20201124 23:08:26.449"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:08:26.454" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:08:26.454" starttime="20201124 23:08:26.453"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:08:26.455" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:08:26.455" starttime="20201124 23:08:26.454"></status>
</kw>
<status status="PASS" endtime="20201124 23:08:26.455" starttime="20201124 23:08:26.453"></status>
</kw>
<msg timestamp="20201124 23:08:26.455" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:08:26.455" starttime="20201124 23:08:26.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201124 23:08:26.456" starttime="20201124 23:08:26.456"></status>
</kw>
<msg timestamp="20201124 23:08:26.456" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201124 23:08:26.456" starttime="20201124 23:08:26.455"></status>
</kw>
<status status="PASS" endtime="20201124 23:08:26.457" starttime="20201124 23:08:26.451"></status>
</kw>
<msg timestamp="20201124 23:08:26.457" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:08:26.457" starttime="20201124 23:08:26.451"></status>
</kw>
<msg timestamp="20201124 23:08:26.457" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201124 23:08:26.457" starttime="20201124 23:08:26.450"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:08:26.461" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:08:26.461" starttime="20201124 23:08:26.460"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:08:26.461" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:08:26.462" starttime="20201124 23:08:26.461"></status>
</kw>
<status status="PASS" endtime="20201124 23:08:26.462" starttime="20201124 23:08:26.460"></status>
</kw>
<msg timestamp="20201124 23:08:26.462" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:08:26.462" starttime="20201124 23:08:26.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:08:26.464" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201124 23:08:26.464" starttime="20201124 23:08:26.463"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:08:26.465" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201124 23:08:26.465" starttime="20201124 23:08:26.464"></status>
</kw>
<status status="PASS" endtime="20201124 23:08:26.465" starttime="20201124 23:08:26.463"></status>
</kw>
<msg timestamp="20201124 23:08:26.465" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201124 23:08:26.465" starttime="20201124 23:08:26.462"></status>
</kw>
<status status="PASS" endtime="20201124 23:08:26.465" starttime="20201124 23:08:26.459"></status>
</kw>
<msg timestamp="20201124 23:08:26.465" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 23:08:26.466" starttime="20201124 23:08:26.458"></status>
</kw>
<msg timestamp="20201124 23:08:26.466" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201124 23:08:26.466" starttime="20201124 23:08:26.457"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201124 23:08:26.469" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201124 23:08:26.470" starttime="20201124 23:08:26.469"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:08:26.470" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201124 23:08:26.470" starttime="20201124 23:08:26.470"></status>
</kw>
<status status="PASS" endtime="20201124 23:08:26.470" starttime="20201124 23:08:26.469"></status>
</kw>
<msg timestamp="20201124 23:08:26.471" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201124 23:08:26.471" starttime="20201124 23:08:26.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:08:26.472" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201124 23:08:26.472" starttime="20201124 23:08:26.472"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:08:26.473" level="INFO">${result} = /wordcount-08.txt</msg>
<status status="PASS" endtime="20201124 23:08:26.473" starttime="20201124 23:08:26.472"></status>
</kw>
<status status="PASS" endtime="20201124 23:08:26.473" starttime="20201124 23:08:26.471"></status>
</kw>
<msg timestamp="20201124 23:08:26.473" level="INFO">${path_with_leading} = /wordcount-08.txt</msg>
<status status="PASS" endtime="20201124 23:08:26.473" starttime="20201124 23:08:26.471"></status>
</kw>
<status status="PASS" endtime="20201124 23:08:26.474" starttime="20201124 23:08:26.467"></status>
</kw>
<msg timestamp="20201124 23:08:26.474" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201124 23:08:26.474" starttime="20201124 23:08:26.467"></status>
</kw>
<msg timestamp="20201124 23:08:26.474" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201124 23:08:26.474" starttime="20201124 23:08:26.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:08:26.479" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-08.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:09:05.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:09:05.112" level="INFO">${output} = 2020-11-24 23:08:28 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-11-24 23:08:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201124 23:09:05.112" starttime="20201124 23:08:26.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:09:05.113" level="INFO">2020-11-24 23:08:28 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-11-24 23:08:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 23:08:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:08:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:08:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:08:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:08:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-53A5D651E2D9-&gt;ef67c498-0c41-434a-b421-26833fe72a64
2020-11-24 23:08:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 23:08:30 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:08:30 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:08:30 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606259079917_0004
2020-11-24 23:08:30 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 23:08:30 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 23:08:30 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 23:08:31 INFO  YarnClientImpl:329 - Submitted application application_1606259079917_0004
2020-11-24 23:08:31 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606259079917_0004/
2020-11-24 23:08:31 INFO  Job:1619 - Running job: job_1606259079917_0004
2020-11-24 23:08:39 INFO  Job:1640 - Job job_1606259079917_0004 running in uber mode : false
2020-11-24 23:08:39 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:08:45 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:08:51 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:08:56 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:09:00 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:09:04 INFO  Job:1658 - Job job_1606259079917_0004 completed successfully
2020-11-24 23:09:04 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118611
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41756
		Total time spent by all reduces in occupied slots (ms)=15072
		Total time spent by all map tasks (ms)=10439
		Total time spent by all reduce tasks (ms)=3768
		Total vcore-milliseconds taken by all map tasks=10439
		Total vcore-milliseconds taken by all reduce tasks=3768
		Total megabyte-milliseconds taken by all map tasks=42758144
		Total megabyte-milliseconds taken by all reduce tasks=15433728
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=648
		CPU time spent (ms)=7910
		Physical memory (bytes) snapshot=1494851584
		Virtual memory (bytes) snapshot=15815213056
		Total committed heap usage (bytes)=1719664640
		Peak Map Physical memory (bytes)=377274368
		Peak Map Virtual memory (bytes)=3949121536
		Peak Reduce Physical memory (bytes)=372121600
		Peak Reduce Virtual memory (bytes)=3971809280
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 23:09:05.114" starttime="20201124 23:09:05.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:09:05.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:09:05.114" starttime="20201124 23:09:05.114"></status>
</kw>
<status status="PASS" endtime="20201124 23:09:05.115" starttime="20201124 23:08:26.476"></status>
</kw>
<msg timestamp="20201124 23:09:05.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:09:05.115" starttime="20201124 23:08:26.475"></status>
</kw>
<msg timestamp="20201124 23:09:05.115" level="INFO">${output} = 2020-11-24 23:08:28 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-11-24 23:08:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201124 23:09:05.115" starttime="20201124 23:08:26.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 23:09:05.116" starttime="20201124 23:09:05.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:09:05.117" starttime="20201124 23:09:05.116"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:09:05.117" critical="yes" starttime="20201124 23:08:26.436"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 23:09:05.118" starttime="20201124 23:07:45.155"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:06:04.496" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:06:04.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:06:04.503" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:06:04.503" starttime="20201124 23:06:04.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:06:04.504" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:06:04.504" starttime="20201124 23:06:04.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:06:04.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:06:04.505" starttime="20201124 23:06:04.504"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:04.505" starttime="20201124 23:06:04.492"></status>
</kw>
<msg timestamp="20201124 23:06:04.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:06:04.506" starttime="20201124 23:06:04.492"></status>
</kw>
<msg timestamp="20201124 23:06:04.506" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:06:04.506" starttime="20201124 23:06:04.491"></status>
</kw>
<msg timestamp="20201124 23:06:04.506" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:06:04.506" starttime="20201124 23:06:04.491"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:06:04.512" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:06:04.512" starttime="20201124 23:06:04.511"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:06:04.513" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:06:04.513" starttime="20201124 23:06:04.512"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:04.513" starttime="20201124 23:06:04.509"></status>
</kw>
<msg timestamp="20201124 23:06:04.513" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:06:04.513" starttime="20201124 23:06:04.509"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:04.513" starttime="20201124 23:06:04.508"></status>
</kw>
<msg timestamp="20201124 23:06:04.513" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:06:04.513" starttime="20201124 23:06:04.507"></status>
</kw>
<msg timestamp="20201124 23:06:04.514" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:06:04.514" starttime="20201124 23:06:04.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:06:04.518" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:06:49.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:06:49.311" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:06:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:06:06 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 23:06:49.311" starttime="20201124 23:06:04.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:06:49.313" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:06:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:06:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:06:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:06:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:06:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-265A7B4A63A2-&gt;ef67c498-0c41-434a-b421-26833fe72a64
2020-11-24 23:06:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-24 23:06:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-11-24 23:06:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:06:11 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:06:11 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606259079917_0001
2020-11-24 23:06:11 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 23:06:11 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 23:06:11 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 23:06:12 INFO  YarnClientImpl:329 - Submitted application application_1606259079917_0001
2020-11-24 23:06:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606259079917_0001/
2020-11-24 23:06:12 INFO  Job:1619 - Running job: job_1606259079917_0001
2020-11-24 23:06:22 INFO  Job:1640 - Job job_1606259079917_0001 running in uber mode : false
2020-11-24 23:06:22 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:06:29 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:06:35 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:06:40 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:06:44 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:06:48 INFO  Job:1658 - Job job_1606259079917_0001 completed successfully
2020-11-24 23:06:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40860
		Total time spent by all reduces in occupied slots (ms)=15728
		Total time spent by all map tasks (ms)=10215
		Total time spent by all reduce tasks (ms)=3932
		Total vcore-milliseconds taken by all map tasks=10215
		Total vcore-milliseconds taken by all reduce tasks=3932
		Total megabyte-milliseconds taken by all map tasks=41840640
		Total megabyte-milliseconds taken by all reduce tasks=16105472
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=687
		CPU time spent (ms)=7190
		Physical memory (bytes) snapshot=1358807040
		Virtual memory (bytes) snapshot=15812698112
		Total committed heap usage (bytes)=1407713280
		Peak Map Physical memory (bytes)=382078976
		Peak Map Virtual memory (bytes)=3947462656
		Peak Reduce Physical memory (bytes)=380473344
		Peak Reduce Virtual memory (bytes)=3972231168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.789 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201124 23:06:49.314" starttime="20201124 23:06:49.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:06:49.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:06:49.315" starttime="20201124 23:06:49.315"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:49.316" starttime="20201124 23:06:04.515"></status>
</kw>
<msg timestamp="20201124 23:06:49.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:06:49.316" starttime="20201124 23:06:04.515"></status>
</kw>
<msg timestamp="20201124 23:06:49.316" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-24 23:06:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:06:06 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201124 23:06:49.316" starttime="20201124 23:06:04.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:06:49.317" starttime="20201124 23:06:49.317"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:06:49.317" critical="yes" starttime="20201124 23:06:04.490"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:06:49.322" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:06:49.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:06:49.329" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:06:49.330" starttime="20201124 23:06:49.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:06:49.330" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:06:49.331" starttime="20201124 23:06:49.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:06:49.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:06:49.331" starttime="20201124 23:06:49.331"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:49.332" starttime="20201124 23:06:49.320"></status>
</kw>
<msg timestamp="20201124 23:06:49.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:06:49.332" starttime="20201124 23:06:49.320"></status>
</kw>
<msg timestamp="20201124 23:06:49.332" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:06:49.332" starttime="20201124 23:06:49.319"></status>
</kw>
<msg timestamp="20201124 23:06:49.332" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201124 23:06:49.332" starttime="20201124 23:06:49.319"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201124 23:06:49.333" level="INFO">${random} = 19</msg>
<status status="PASS" endtime="20201124 23:06:49.333" starttime="20201124 23:06:49.333"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:06:49.337" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:06:49.337" starttime="20201124 23:06:49.337"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:06:49.338" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:06:49.338" starttime="20201124 23:06:49.338"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:49.338" starttime="20201124 23:06:49.336"></status>
</kw>
<msg timestamp="20201124 23:06:49.338" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:06:49.338" starttime="20201124 23:06:49.336"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:49.339" starttime="20201124 23:06:49.335"></status>
</kw>
<msg timestamp="20201124 23:06:49.339" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:06:49.339" starttime="20201124 23:06:49.334"></status>
</kw>
<msg timestamp="20201124 23:06:49.339" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201124 23:06:49.339" starttime="20201124 23:06:49.333"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:06:49.343" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:06:49.343" starttime="20201124 23:06:49.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:06:49.344" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:06:49.344" starttime="20201124 23:06:49.343"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:49.344" starttime="20201124 23:06:49.342"></status>
</kw>
<msg timestamp="20201124 23:06:49.344" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:06:49.344" starttime="20201124 23:06:49.342"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:49.345" starttime="20201124 23:06:49.341"></status>
</kw>
<msg timestamp="20201124 23:06:49.345" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 23:06:49.345" starttime="20201124 23:06:49.340"></status>
</kw>
<msg timestamp="20201124 23:06:49.345" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201124 23:06:49.345" starttime="20201124 23:06:49.340"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201124 23:06:49.349" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201124 23:06:49.349" starttime="20201124 23:06:49.348"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201124 23:06:49.349" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201124 23:06:49.349" starttime="20201124 23:06:49.349"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:49.350" starttime="20201124 23:06:49.348"></status>
</kw>
<msg timestamp="20201124 23:06:49.350" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201124 23:06:49.350" starttime="20201124 23:06:49.347"></status>
</kw>
<status status="PASS" endtime="20201124 23:06:49.350" starttime="20201124 23:06:49.346"></status>
</kw>
<msg timestamp="20201124 23:06:49.350" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-19.txt</msg>
<status status="PASS" endtime="20201124 23:06:49.350" starttime="20201124 23:06:49.346"></status>
</kw>
<msg timestamp="20201124 23:06:49.351" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-19.txt</msg>
<status status="PASS" endtime="20201124 23:06:49.351" starttime="20201124 23:06:49.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201124 23:06:49.355" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-19.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201124 23:07:30.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20201124 23:07:30.333" level="INFO">${output} = 2020-11-24 23:06:51 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-11-24 23:06:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201124 23:07:30.333" starttime="20201124 23:06:49.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201124 23:07:30.335" level="INFO">2020-11-24 23:06:51 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-11-24 23:06:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-24 23:06:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-24 23:06:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-24 23:06:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-24 23:06:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-24 23:06:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8BD5D9D12ECB-&gt;ef67c498-0c41-434a-b421-26833fe72a64
2020-11-24 23:06:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-24 23:06:53 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-24 23:06:55 INFO  JobSubmitter:202 - number of splits:3
2020-11-24 23:06:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606259079917_0002
2020-11-24 23:06:56 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-24 23:06:56 INFO  Configuration:2795 - resource-types.xml not found
2020-11-24 23:06:56 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-24 23:06:56 INFO  YarnClientImpl:329 - Submitted application application_1606259079917_0002
2020-11-24 23:06:56 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606259079917_0002/
2020-11-24 23:06:56 INFO  Job:1619 - Running job: job_1606259079917_0002
2020-11-24 23:07:04 INFO  Job:1640 - Job job_1606259079917_0002 running in uber mode : false
2020-11-24 23:07:04 INFO  Job:1647 -  map 0% reduce 0%
2020-11-24 23:07:11 INFO  Job:1647 -  map 33% reduce 0%
2020-11-24 23:07:16 INFO  Job:1647 -  map 67% reduce 0%
2020-11-24 23:07:22 INFO  Job:1647 -  map 100% reduce 0%
2020-11-24 23:07:26 INFO  Job:1647 -  map 100% reduce 100%
2020-11-24 23:07:29 INFO  Job:1658 - Job job_1606259079917_0002 completed successfully
2020-11-24 23:07:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42124
		Total time spent by all reduces in occupied slots (ms)=15044
		Total time spent by all map tasks (ms)=10531
		Total time spent by all reduce tasks (ms)=3761
		Total vcore-milliseconds taken by all map tasks=10531
		Total vcore-milliseconds taken by all reduce tasks=3761
		Total megabyte-milliseconds taken by all map tasks=43134976
		Total megabyte-milliseconds taken by all reduce tasks=15405056
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=681
		CPU time spent (ms)=7160
		Physical memory (bytes) snapshot=1311502336
		Virtual memory (bytes) snapshot=15788130304
		Total committed heap usage (bytes)=1386741760
		Peak Map Physical memory (bytes)=358580224
		Peak Map Virtual memory (bytes)=3948658688
		Peak Reduce Physical memory (bytes)=351543296
		Peak Reduce Virtual memory (bytes)=3949232128
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201124 23:07:30.335" starttime="20201124 23:07:30.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201124 23:07:30.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201124 23:07:30.336" starttime="20201124 23:07:30.335"></status>
</kw>
<status status="PASS" endtime="20201124 23:07:30.336" starttime="20201124 23:06:49.352"></status>
</kw>
<msg timestamp="20201124 23:07:30.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201124 23:07:30.336" starttime="20201124 23:06:49.352"></status>
</kw>
<msg timestamp="20201124 23:07:30.337" level="INFO">${output} = 2020-11-24 23:06:51 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-11-24 23:06:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201124 23:07:30.337" starttime="20201124 23:06:49.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201124 23:07:30.337" starttime="20201124 23:07:30.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201124 23:07:30.338" starttime="20201124 23:07:30.337"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201124 23:07:30.338" critical="yes" starttime="20201124 23:06:49.318"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201124 23:07:30.340" starttime="20201124 23:06:04.426"></status>
</suite>
<status status="PASS" elapsedtime="221697" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="612048" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
