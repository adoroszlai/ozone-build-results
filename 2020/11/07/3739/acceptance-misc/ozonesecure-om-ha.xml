<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201107 13:44:16.778" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:39:21.765" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:39:34.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:39:34.560" level="INFO">${output} = 2020-11-07 13:39:23,850 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:24,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201107 13:39:34.560" starttime="20201107 13:39:21.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:39:34.561" level="INFO">2020-11-07 13:39:23,850 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:24,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:39:24,057 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-07 13:39:26,980 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-07 13:39:28,421 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-07 13:39:28,422 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-07 13:39:28,422 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-07 13:39:28,422 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-07 13:39:28,422 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-07 13:39:28,422 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-07 13:39:28,422 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-07 13:39:28,425 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-07 13:39:28,433 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:28,479 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-27882, with testuser/scm@EXAMPLE.COM as owner.
2020-11-07 13:39:29,319 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27882/bucket-0-91140, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-07 13:39:29,442 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:30,442 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:31,443 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:32,086 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-07 13:39:32,443 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,798
Average Time spent in bucket creation: 00:00:00,247
Average Time spent in key creation: 00:00:01,575
Average Time spent in key write: 00:00:01,245
Total bytes written: 10240
Total Execution time: 00:00:09,902
***************************************************</msg>
<status status="PASS" endtime="20201107 13:39:34.561" starttime="20201107 13:39:34.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:39:34.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:39:34.562" starttime="20201107 13:39:34.561"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:34.562" starttime="20201107 13:39:21.761"></status>
</kw>
<msg timestamp="20201107 13:39:34.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:39:34.563" starttime="20201107 13:39:21.760"></status>
</kw>
<msg timestamp="20201107 13:39:34.563" level="INFO">${result} = 2020-11-07 13:39:23,850 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:24,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201107 13:39:34.563" starttime="20201107 13:39:21.759"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201107 13:39:34.564" starttime="20201107 13:39:34.564"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:34.564" starttime="20201107 13:39:34.563"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:39:34.564" critical="yes" starttime="20201107 13:39:21.759"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:39:34.570" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:39:46.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:39:46.409" level="INFO">${output} = 2020-11-07 13:39:36,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:36,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201107 13:39:46.409" starttime="20201107 13:39:34.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:39:46.412" level="INFO">2020-11-07 13:39:36,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:36,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:39:36,666 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-07 13:39:36,814 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8yboqpuqx3
2020-11-07 13:39:36,831 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-07 13:39:37,832 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:38,175 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-07 13:39:38,652 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-07 13:39:38,784 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-07 13:39:38,841 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:39,545 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-07 13:39:39,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:39,970 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:39:39,970 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1705927A5501-&gt;481c8f85-49d1-4026-bc57-b042947cdb38
2020-11-07 13:39:39,972 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:39:40,843 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:41,843 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:42,844 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:43,845 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:44,845 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:45,846 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-07 13:39:46,075 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=6349.674303, max=6349.674303, mean=6349.674303, stddev=0.0, median=6349.674303, p75=6349.674303, p95=6349.674303, p98=6349.674303, p99=6349.674303, p999=6349.674303, mean_rate=0.1390910502155969, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-07 13:39:46,077 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2020-11-07 13:39:46,078 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-07 13:39:46,078 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201107 13:39:46.412" starttime="20201107 13:39:46.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:39:46.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:39:46.413" starttime="20201107 13:39:46.412"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:46.413" starttime="20201107 13:39:34.567"></status>
</kw>
<msg timestamp="20201107 13:39:46.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:39:46.414" starttime="20201107 13:39:34.567"></status>
</kw>
<msg timestamp="20201107 13:39:46.414" level="INFO">${result} = 2020-11-07 13:39:36,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:36,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201107 13:39:46.414" starttime="20201107 13:39:34.566"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201107 13:39:46.415" starttime="20201107 13:39:46.415"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:46.415" starttime="20201107 13:39:46.414"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:39:46.416" critical="yes" starttime="20201107 13:39:34.565"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:39:46.421" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:39:51.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:39:51.825" level="INFO">${output} = 2020-11-07 13:39:48,220 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:48,435 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201107 13:39:51.825" starttime="20201107 13:39:46.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:39:51.826" level="INFO">2020-11-07 13:39:48,220 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:48,435 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:39:48,435 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-07 13:39:48,607 [main] INFO freon.BaseFreonGenerator: Executing test with prefix rmywq03whl
2020-11-07 13:39:48,619 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-07 13:39:49,636 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:49,864 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-07 13:39:50,494 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-07 13:39:50,637 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:51,642 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-07 13:39:51,795 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=340.448027, max=340.448027, mean=340.448027, stddev=0.0, median=340.448027, p75=340.448027, p95=340.448027, p98=340.448027, p99=340.448027, p999=340.448027, mean_rate=0.6935818097750014, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-07 13:39:51,796 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-07 13:39:51,796 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-07 13:39:51,796 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201107 13:39:51.826" starttime="20201107 13:39:51.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:39:51.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:39:51.827" starttime="20201107 13:39:51.827"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:51.827" starttime="20201107 13:39:46.418"></status>
</kw>
<msg timestamp="20201107 13:39:51.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:39:51.828" starttime="20201107 13:39:46.418"></status>
</kw>
<msg timestamp="20201107 13:39:51.828" level="INFO">${result} = 2020-11-07 13:39:48,220 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:48,435 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201107 13:39:51.828" starttime="20201107 13:39:46.417"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201107 13:39:51.829" starttime="20201107 13:39:51.829"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:51.829" starttime="20201107 13:39:51.828"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:39:51.829" critical="yes" starttime="20201107 13:39:46.416"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:39:51.835" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:39:57.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:39:57.200" level="INFO">${output} = 2020-11-07 13:39:53,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:53,939 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201107 13:39:57.200" starttime="20201107 13:39:51.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:39:57.201" level="INFO">2020-11-07 13:39:53,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:53,939 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:39:53,939 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-07 13:39:54,126 [main] INFO freon.BaseFreonGenerator: Executing test with prefix mpgjk2fxyd
2020-11-07 13:39:54,152 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-07 13:39:55,159 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-07 13:39:55,611 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-07 13:39:56,103 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-07 13:39:56,160 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-07 13:39:57,149 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=135.699388, max=135.699388, mean=135.699388, stddev=0.0, median=135.699388, p75=135.699388, p95=135.699388, p98=135.699388, p99=135.699388, p999=135.699388, mean_rate=0.8776198236351526, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-07 13:39:57,173 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-07 13:39:57,174 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-07 13:39:57,174 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201107 13:39:57.201" starttime="20201107 13:39:57.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:39:57.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:39:57.202" starttime="20201107 13:39:57.201"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:57.202" starttime="20201107 13:39:51.832"></status>
</kw>
<msg timestamp="20201107 13:39:57.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:39:57.202" starttime="20201107 13:39:51.832"></status>
</kw>
<msg timestamp="20201107 13:39:57.203" level="INFO">${result} = 2020-11-07 13:39:53,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-07 13:39:53,939 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201107 13:39:57.203" starttime="20201107 13:39:51.831"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201107 13:39:57.204" starttime="20201107 13:39:57.204"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:57.204" starttime="20201107 13:39:57.203"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:39:57.204" critical="yes" starttime="20201107 13:39:51.830"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201107 13:39:57.206" starttime="20201107 13:39:21.731"></status>
</suite>
<status status="PASS" endtime="20201107 13:39:57.210" starttime="20201107 13:39:21.702"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:39:13.442" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:39:13.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:39:13.452" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:39:13.452" starttime="20201107 13:39:13.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:39:13.453" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:39:13.453" starttime="20201107 13:39:13.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:39:13.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:39:13.454" starttime="20201107 13:39:13.453"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:13.454" starttime="20201107 13:39:13.421"></status>
</kw>
<msg timestamp="20201107 13:39:13.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:39:13.454" starttime="20201107 13:39:13.421"></status>
</kw>
<msg timestamp="20201107 13:39:13.454" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:39:13.454" starttime="20201107 13:39:13.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:39:13.457" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:39:13.458" starttime="20201107 13:39:13.455"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:39:13.479" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:39:13.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:39:13.516" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:39:13.516" starttime="20201107 13:39:13.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:39:13.517" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:39:13.517" starttime="20201107 13:39:13.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:39:13.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:39:13.518" starttime="20201107 13:39:13.517"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:13.518" starttime="20201107 13:39:13.464"></status>
</kw>
<msg timestamp="20201107 13:39:13.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:39:13.519" starttime="20201107 13:39:13.463"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:13.519" starttime="20201107 13:39:13.458"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:13.519" starttime="20201107 13:39:13.458"></status>
</kw>
<status status="PASS" endtime="20201107 13:39:13.519" starttime="20201107 13:39:13.419"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:39:13.519" critical="yes" starttime="20201107 13:39:13.418"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201107 13:39:13.522" starttime="20201107 13:39:13.264"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:40:03.963" level="INFO">${random} = 14675</msg>
<status status="PASS" endtime="20201107 13:40:03.963" starttime="20201107 13:40:03.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201107 13:40:03.965" level="INFO">${source} = 14675-source</msg>
<status status="PASS" endtime="20201107 13:40:03.965" starttime="20201107 13:40:03.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201107 13:40:03.966" level="INFO">${target} = 14675-target</msg>
<status status="PASS" endtime="20201107 13:40:03.966" starttime="20201107 13:40:03.965"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:03.971" level="INFO">Running command 'ozone sh volume create 14675-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:07.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:07.792" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:07.792" starttime="20201107 13:40:03.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:07.793" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:40:07.793" starttime="20201107 13:40:07.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:07.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:07.794" starttime="20201107 13:40:07.793"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:07.794" starttime="20201107 13:40:03.967"></status>
</kw>
<msg timestamp="20201107 13:40:07.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:07.794" starttime="20201107 13:40:03.966"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:07.795" starttime="20201107 13:40:03.966"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:07.799" level="INFO">Running command 'ozone sh volume create 14675-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:12.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:12.042" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:12.042" starttime="20201107 13:40:07.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:12.043" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:40:12.043" starttime="20201107 13:40:12.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:12.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:12.044" starttime="20201107 13:40:12.043"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:12.044" starttime="20201107 13:40:07.796"></status>
</kw>
<msg timestamp="20201107 13:40:12.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:12.044" starttime="20201107 13:40:07.795"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:12.044" starttime="20201107 13:40:07.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:12.052" level="INFO">Running command 'ozone sh bucket create 14675-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:16.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:16.191" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:16.191" starttime="20201107 13:40:12.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:16.192" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:40:16.192" starttime="20201107 13:40:16.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:16.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:16.193" starttime="20201107 13:40:16.192"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:16.193" starttime="20201107 13:40:12.046"></status>
</kw>
<msg timestamp="20201107 13:40:16.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:16.193" starttime="20201107 13:40:12.046"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:16.194" starttime="20201107 13:40:12.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:16.197" level="INFO">Running command 'ozone sh key put 14675-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:25.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:25.060" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:25.060" starttime="20201107 13:40:16.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:25.061" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:40:25.061" starttime="20201107 13:40:25.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:25.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:25.062" starttime="20201107 13:40:25.061"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:25.062" starttime="20201107 13:40:16.195"></status>
</kw>
<msg timestamp="20201107 13:40:25.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:25.062" starttime="20201107 13:40:16.194"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:25.062" starttime="20201107 13:40:16.194"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:25.066" level="INFO">Running command 'ozone sh bucket create 14675-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:28.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:28.924" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:28.924" starttime="20201107 13:40:25.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:28.925" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:40:28.925" starttime="20201107 13:40:28.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:28.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:28.926" starttime="20201107 13:40:28.926"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:28.926" starttime="20201107 13:40:25.063"></status>
</kw>
<msg timestamp="20201107 13:40:28.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:28.927" starttime="20201107 13:40:25.063"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:28.927" starttime="20201107 13:40:25.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:28.931" level="INFO">Running command 'ozone sh bucket link 14675-source/readable-bucket 14675-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:33.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:33.180" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:33.180" starttime="20201107 13:40:28.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:33.181" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:40:33.181" starttime="20201107 13:40:33.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:33.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:33.182" starttime="20201107 13:40:33.182"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:33.182" starttime="20201107 13:40:28.928"></status>
</kw>
<msg timestamp="20201107 13:40:33.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:33.183" starttime="20201107 13:40:28.928"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:33.183" starttime="20201107 13:40:28.927"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:33.186" level="INFO">Running command 'ozone sh bucket link 14675-source/readable-bucket 14675-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:37.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:37.003" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:37.003" starttime="20201107 13:40:33.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:37.004" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:40:37.004" starttime="20201107 13:40:37.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:37.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:37.004" starttime="20201107 13:40:37.004"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:37.005" starttime="20201107 13:40:33.184"></status>
</kw>
<msg timestamp="20201107 13:40:37.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:37.005" starttime="20201107 13:40:33.183"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:37.005" starttime="20201107 13:40:33.183"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:37.011" level="INFO">Running command 'ozone sh bucket link 14675-source/unreadable-bucket 14675-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:41.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:41.092" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:41.092" starttime="20201107 13:40:37.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:41.093" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:40:41.093" starttime="20201107 13:40:41.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:41.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:41.094" starttime="20201107 13:40:41.093"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:41.094" starttime="20201107 13:40:37.006"></status>
</kw>
<msg timestamp="20201107 13:40:41.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:41.094" starttime="20201107 13:40:37.006"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:41.095" starttime="20201107 13:40:37.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:41.100" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 14675-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:45.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:45.139" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:45.139" starttime="20201107 13:40:41.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:45.140" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201107 13:40:45.140" starttime="20201107 13:40:45.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:45.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:45.141" starttime="20201107 13:40:45.140"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:45.141" starttime="20201107 13:40:41.096"></status>
</kw>
<msg timestamp="20201107 13:40:45.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:45.141" starttime="20201107 13:40:41.095"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:45.141" starttime="20201107 13:40:41.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:45.147" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 14675-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:48.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:48.870" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:48.870" starttime="20201107 13:40:45.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:48.871" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201107 13:40:48.871" starttime="20201107 13:40:48.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:48.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:48.872" starttime="20201107 13:40:48.871"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:48.872" starttime="20201107 13:40:45.142"></status>
</kw>
<msg timestamp="20201107 13:40:48.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:48.872" starttime="20201107 13:40:45.142"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:48.872" starttime="20201107 13:40:45.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:48.878" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 14675-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:53.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:53.040" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:53.040" starttime="20201107 13:40:48.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:53.042" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201107 13:40:53.042" starttime="20201107 13:40:53.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:53.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:53.043" starttime="20201107 13:40:53.042"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:53.043" starttime="20201107 13:40:48.873"></status>
</kw>
<msg timestamp="20201107 13:40:53.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:53.043" starttime="20201107 13:40:48.873"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:53.043" starttime="20201107 13:40:48.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:53.049" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 14675-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:40:56.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:40:56.827" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:40:56.828" starttime="20201107 13:40:53.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:40:56.829" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201107 13:40:56.829" starttime="20201107 13:40:56.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:40:56.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:40:56.830" starttime="20201107 13:40:56.829"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:56.830" starttime="20201107 13:40:53.044"></status>
</kw>
<msg timestamp="20201107 13:40:56.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:40:56.830" starttime="20201107 13:40:53.044"></status>
</kw>
<status status="PASS" endtime="20201107 13:40:56.831" starttime="20201107 13:40:53.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:40:56.835" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 14675-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:00.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:00.714" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:41:00.714" starttime="20201107 13:40:56.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:00.715" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201107 13:41:00.716" starttime="20201107 13:41:00.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:00.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:00.716" starttime="20201107 13:41:00.716"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.716" starttime="20201107 13:40:56.832"></status>
</kw>
<msg timestamp="20201107 13:41:00.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:00.717" starttime="20201107 13:40:56.832"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.717" starttime="20201107 13:40:56.831"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.717" starttime="20201107 13:40:12.045"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.717" starttime="20201107 13:40:12.045"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.717" starttime="20201107 13:40:03.962"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:00.725" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:00.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:00.727" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:41:00.727" starttime="20201107 13:41:00.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:00.728" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:41:00.728" starttime="20201107 13:41:00.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:00.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:00.729" starttime="20201107 13:41:00.728"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.729" starttime="20201107 13:41:00.721"></status>
</kw>
<msg timestamp="20201107 13:41:00.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:00.729" starttime="20201107 13:41:00.721"></status>
</kw>
<msg timestamp="20201107 13:41:00.731" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:41:00.731" starttime="20201107 13:41:00.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:41:00.732" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:41:00.733" starttime="20201107 13:41:00.731"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:00.738" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:00.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:00.760" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:41:00.760" starttime="20201107 13:41:00.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:00.761" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:41:00.761" starttime="20201107 13:41:00.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:00.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:00.762" starttime="20201107 13:41:00.761"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.762" starttime="20201107 13:41:00.734"></status>
</kw>
<msg timestamp="20201107 13:41:00.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:00.762" starttime="20201107 13:41:00.734"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.763" starttime="20201107 13:41:00.733"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.763" starttime="20201107 13:41:00.733"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.763" starttime="20201107 13:41:00.719"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:00.763" starttime="20201107 13:41:00.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:00.767" level="INFO">Running command 'ozone sh bucket link 14675-source/no-such-bucket 14675-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:05.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:05.067" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:41:05.067" starttime="20201107 13:41:00.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:05.068" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:41:05.069" starttime="20201107 13:41:05.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:05.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:05.070" starttime="20201107 13:41:05.069"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:05.070" starttime="20201107 13:41:00.764"></status>
</kw>
<msg timestamp="20201107 13:41:05.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:05.070" starttime="20201107 13:41:00.764"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:05.070" starttime="20201107 13:41:00.763"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:05.073" level="INFO">Running command 'ozone sh key list 14675-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:09.104" level="INFO">${rc} = 255</msg>
<msg timestamp="20201107 13:41:09.104" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:41:09.104" starttime="20201107 13:41:05.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:09.106" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201107 13:41:09.106" starttime="20201107 13:41:09.105"></status>
</kw>
<msg timestamp="20201107 13:41:09.106" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:41:09.106" starttime="20201107 13:41:05.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201107 13:41:09.107" starttime="20201107 13:41:09.106"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:41:09.107" critical="yes" starttime="20201107 13:41:00.718"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:09.115" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:09.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:09.118" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:41:09.119" starttime="20201107 13:41:09.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:09.120" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:41:09.120" starttime="20201107 13:41:09.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:09.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:09.121" starttime="20201107 13:41:09.120"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:09.121" starttime="20201107 13:41:09.112"></status>
</kw>
<msg timestamp="20201107 13:41:09.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:09.121" starttime="20201107 13:41:09.112"></status>
</kw>
<msg timestamp="20201107 13:41:09.122" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:41:09.122" starttime="20201107 13:41:09.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:41:09.122" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:41:09.123" starttime="20201107 13:41:09.122"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:09.127" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:09.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:09.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:41:09.147" starttime="20201107 13:41:09.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:09.148" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:41:09.148" starttime="20201107 13:41:09.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:09.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:09.149" starttime="20201107 13:41:09.149"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:09.150" starttime="20201107 13:41:09.124"></status>
</kw>
<msg timestamp="20201107 13:41:09.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:09.150" starttime="20201107 13:41:09.124"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:09.150" starttime="20201107 13:41:09.123"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:09.150" starttime="20201107 13:41:09.123"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:09.150" starttime="20201107 13:41:09.111"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:09.150" starttime="20201107 13:41:09.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:09.155" level="INFO">Running command 'ozone sh bucket link 14675-source/bucket1 14675-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:13.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:13.586" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:41:13.587" starttime="20201107 13:41:09.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:13.588" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:41:13.588" starttime="20201107 13:41:13.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:13.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:13.589" starttime="20201107 13:41:13.588"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:13.589" starttime="20201107 13:41:09.152"></status>
</kw>
<msg timestamp="20201107 13:41:13.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:13.589" starttime="20201107 13:41:09.151"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:13.589" starttime="20201107 13:41:09.151"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:13.595" level="INFO">Running command 'ozone sh bucket create 14675-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:17.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:17.612" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:41:17.612" starttime="20201107 13:41:13.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:17.614" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:41:17.614" starttime="20201107 13:41:17.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:17.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:17.614" starttime="20201107 13:41:17.614"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:17.615" starttime="20201107 13:41:13.591"></status>
</kw>
<msg timestamp="20201107 13:41:17.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:17.615" starttime="20201107 13:41:13.590"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:17.615" starttime="20201107 13:41:13.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:17.619" level="INFO">Running command 'ozone sh key put 14675-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:26.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:26.875" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:41:26.875" starttime="20201107 13:41:17.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:26.876" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:41:26.876" starttime="20201107 13:41:26.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:26.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:26.877" starttime="20201107 13:41:26.877"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:26.878" starttime="20201107 13:41:17.616"></status>
</kw>
<msg timestamp="20201107 13:41:26.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:26.878" starttime="20201107 13:41:17.616"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:26.878" starttime="20201107 13:41:17.615"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201107 13:41:26.881" level="INFO">${postfix} = 18633</msg>
<status status="PASS" endtime="20201107 13:41:26.881" starttime="20201107 13:41:26.880"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201107 13:41:26.881" level="INFO">${tmpfile} = /tmp/tempkey-18633</msg>
<status status="PASS" endtime="20201107 13:41:26.881" starttime="20201107 13:41:26.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:26.886" level="INFO">Running command 'ozone sh key get -f 14675-target/link1/key1 /tmp/tempkey-18633 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:33.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:33.339" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:41:33.339" starttime="20201107 13:41:26.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:33.340" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:41:33.340" starttime="20201107 13:41:33.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:33.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:33.341" starttime="20201107 13:41:33.340"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.341" starttime="20201107 13:41:26.882"></status>
</kw>
<msg timestamp="20201107 13:41:33.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:33.342" starttime="20201107 13:41:26.882"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.342" starttime="20201107 13:41:26.882"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201107 13:41:33.344" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-18633 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:33.347" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201107 13:41:33.347" starttime="20201107 13:41:33.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:33.353" level="INFO">Running command 'rm -f /tmp/tempkey-18633 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:33.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:33.356" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:41:33.356" starttime="20201107 13:41:33.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:33.357" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:41:33.357" starttime="20201107 13:41:33.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:33.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:33.358" starttime="20201107 13:41:33.358"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.358" starttime="20201107 13:41:33.349"></status>
</kw>
<msg timestamp="20201107 13:41:33.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:33.359" starttime="20201107 13:41:33.349"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.359" starttime="20201107 13:41:33.348"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:41:33.360" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201107 13:41:33.360" starttime="20201107 13:41:33.359"></status>
</kw>
<msg timestamp="20201107 13:41:33.360" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201107 13:41:33.360" starttime="20201107 13:41:26.879"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:41:33.361" starttime="20201107 13:41:33.360"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.361" starttime="20201107 13:41:26.879"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:41:33.361" critical="yes" starttime="20201107 13:41:09.108"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:33.369" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:33.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:33.370" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:41:33.370" starttime="20201107 13:41:33.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:33.372" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:41:33.372" starttime="20201107 13:41:33.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:33.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:33.372" starttime="20201107 13:41:33.372"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.373" starttime="20201107 13:41:33.364"></status>
</kw>
<msg timestamp="20201107 13:41:33.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:33.373" starttime="20201107 13:41:33.364"></status>
</kw>
<msg timestamp="20201107 13:41:33.373" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:41:33.373" starttime="20201107 13:41:33.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:41:33.374" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:41:33.374" starttime="20201107 13:41:33.373"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:33.381" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:33.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:33.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:41:33.401" starttime="20201107 13:41:33.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:33.402" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:41:33.402" starttime="20201107 13:41:33.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:33.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:33.403" starttime="20201107 13:41:33.402"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.403" starttime="20201107 13:41:33.375"></status>
</kw>
<msg timestamp="20201107 13:41:33.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:33.403" starttime="20201107 13:41:33.375"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.403" starttime="20201107 13:41:33.374"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.403" starttime="20201107 13:41:33.374"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.404" starttime="20201107 13:41:33.363"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:33.404" starttime="20201107 13:41:33.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:33.409" level="INFO">Running command 'ozone sh key put 14675-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:42.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:42.479" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:41:42.479" starttime="20201107 13:41:33.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:42.481" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:41:42.481" starttime="20201107 13:41:42.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:42.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:42.482" starttime="20201107 13:41:42.481"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:42.482" starttime="20201107 13:41:33.405"></status>
</kw>
<msg timestamp="20201107 13:41:42.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:42.482" starttime="20201107 13:41:33.404"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:42.482" starttime="20201107 13:41:33.404"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201107 13:41:42.484" level="INFO">${postfix} = 39667</msg>
<status status="PASS" endtime="20201107 13:41:42.484" starttime="20201107 13:41:42.484"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201107 13:41:42.485" level="INFO">${tmpfile} = /tmp/tempkey-39667</msg>
<status status="PASS" endtime="20201107 13:41:42.485" starttime="20201107 13:41:42.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:42.490" level="INFO">Running command 'ozone sh key get -f 14675-source/bucket1/key2 /tmp/tempkey-39667 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:48.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:48.663" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:41:48.663" starttime="20201107 13:41:42.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:48.668" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:41:48.668" starttime="20201107 13:41:48.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:48.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:48.670" starttime="20201107 13:41:48.669"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.671" starttime="20201107 13:41:42.486"></status>
</kw>
<msg timestamp="20201107 13:41:48.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:48.671" starttime="20201107 13:41:42.485"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.671" starttime="20201107 13:41:42.485"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201107 13:41:48.677" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-39667 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:48.681" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201107 13:41:48.681" starttime="20201107 13:41:48.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:48.686" level="INFO">Running command 'rm -f /tmp/tempkey-39667 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:48.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:48.689" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:41:48.689" starttime="20201107 13:41:48.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:48.690" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:41:48.690" starttime="20201107 13:41:48.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:48.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:48.691" starttime="20201107 13:41:48.691"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.691" starttime="20201107 13:41:48.683"></status>
</kw>
<msg timestamp="20201107 13:41:48.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:48.692" starttime="20201107 13:41:48.682"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.692" starttime="20201107 13:41:48.681"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:41:48.692" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201107 13:41:48.692" starttime="20201107 13:41:48.692"></status>
</kw>
<msg timestamp="20201107 13:41:48.693" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201107 13:41:48.693" starttime="20201107 13:41:42.483"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:41:48.693" starttime="20201107 13:41:48.693"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.693" starttime="20201107 13:41:42.482"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:41:48.694" critical="yes" starttime="20201107 13:41:33.362"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:48.704" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:48.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:48.707" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:41:48.707" starttime="20201107 13:41:48.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:48.708" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:41:48.709" starttime="20201107 13:41:48.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:48.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:48.709" starttime="20201107 13:41:48.709"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.709" starttime="20201107 13:41:48.697"></status>
</kw>
<msg timestamp="20201107 13:41:48.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:48.710" starttime="20201107 13:41:48.697"></status>
</kw>
<msg timestamp="20201107 13:41:48.710" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:41:48.710" starttime="20201107 13:41:48.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:41:48.711" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:41:48.711" starttime="20201107 13:41:48.710"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:48.716" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:48.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:48.737" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:41:48.737" starttime="20201107 13:41:48.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:48.738" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:41:48.738" starttime="20201107 13:41:48.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:48.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:48.739" starttime="20201107 13:41:48.738"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.739" starttime="20201107 13:41:48.712"></status>
</kw>
<msg timestamp="20201107 13:41:48.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:48.739" starttime="20201107 13:41:48.712"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.739" starttime="20201107 13:41:48.711"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.740" starttime="20201107 13:41:48.711"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.740" starttime="20201107 13:41:48.696"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:48.740" starttime="20201107 13:41:48.695"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:48.744" level="INFO">Running command 'ozone sh key list 14675-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:53.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:53.469" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201107 13:41:53.469" starttime="20201107 13:41:48.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:53.470" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201107 13:41:53.470" starttime="20201107 13:41:53.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:53.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:53.471" starttime="20201107 13:41:53.471"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:53.471" starttime="20201107 13:41:48.741"></status>
</kw>
<msg timestamp="20201107 13:41:53.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:53.472" starttime="20201107 13:41:48.741"></status>
</kw>
<msg timestamp="20201107 13:41:53.472" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201107 13:41:53.472" starttime="20201107 13:41:48.740"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:53.476" level="INFO">Running command 'ozone sh key list 14675-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:58.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:58.090" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201107 13:41:58.090" starttime="20201107 13:41:53.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:58.091" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201107 13:41:58.091" starttime="20201107 13:41:58.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:58.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:58.092" starttime="20201107 13:41:58.092"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:58.092" starttime="20201107 13:41:53.473"></status>
</kw>
<msg timestamp="20201107 13:41:58.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:58.093" starttime="20201107 13:41:53.473"></status>
</kw>
<msg timestamp="20201107 13:41:58.093" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201107 13:41:58.093" starttime="20201107 13:41:53.472"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:41:58.094" starttime="20201107 13:41:58.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201107 13:41:58.094" starttime="20201107 13:41:58.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201107 13:41:58.094" starttime="20201107 13:41:58.094"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:41:58.095" critical="yes" starttime="20201107 13:41:48.694"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:58.103" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:41:58.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:41:58.107" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:41:58.108" starttime="20201107 13:41:58.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:41:58.109" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:41:58.109" starttime="20201107 13:41:58.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:41:58.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:41:58.110" starttime="20201107 13:41:58.109"></status>
</kw>
<status status="PASS" endtime="20201107 13:41:58.110" starttime="20201107 13:41:58.099"></status>
</kw>
<msg timestamp="20201107 13:41:58.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:41:58.110" starttime="20201107 13:41:58.099"></status>
</kw>
<msg timestamp="20201107 13:41:58.110" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:41:58.110" starttime="20201107 13:41:58.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:41:58.111" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:41:58.111" starttime="20201107 13:41:58.111"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:41:58.117" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:03.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:03.140" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:42:03.140" starttime="20201107 13:41:58.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:03.141" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:42:03.141" starttime="20201107 13:42:03.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:03.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:03.142" starttime="20201107 13:42:03.142"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:03.142" starttime="20201107 13:41:58.113"></status>
</kw>
<msg timestamp="20201107 13:42:03.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:03.143" starttime="20201107 13:41:58.112"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:03.143" starttime="20201107 13:41:58.112"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:03.143" starttime="20201107 13:41:58.111"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:03.143" starttime="20201107 13:41:58.098"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:03.144" starttime="20201107 13:41:58.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:03.150" level="INFO">Running command 'ozone sh key delete 14675-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:07.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:07.278" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:42:07.278" starttime="20201107 13:42:03.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:07.279" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:42:07.279" starttime="20201107 13:42:07.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:07.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:07.280" starttime="20201107 13:42:07.280"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:07.280" starttime="20201107 13:42:03.146"></status>
</kw>
<msg timestamp="20201107 13:42:07.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:07.281" starttime="20201107 13:42:03.145"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:07.281" starttime="20201107 13:42:03.144"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:07.285" level="INFO">Running command 'ozone sh key list 14675-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:11.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:11.888" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201107 13:42:11.888" starttime="20201107 13:42:07.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:11.890" level="INFO">key1</msg>
<status status="PASS" endtime="20201107 13:42:11.890" starttime="20201107 13:42:11.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:11.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:11.891" starttime="20201107 13:42:11.890"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:11.891" starttime="20201107 13:42:07.282"></status>
</kw>
<msg timestamp="20201107 13:42:11.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:11.891" starttime="20201107 13:42:07.282"></status>
</kw>
<msg timestamp="20201107 13:42:11.892" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201107 13:42:11.892" starttime="20201107 13:42:07.281"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201107 13:42:11.892" starttime="20201107 13:42:11.892"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:42:11.892" critical="yes" starttime="20201107 13:41:58.096"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:11.899" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:11.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:11.903" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:42:11.903" starttime="20201107 13:42:11.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:11.905" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:42:11.905" starttime="20201107 13:42:11.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:11.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:11.906" starttime="20201107 13:42:11.905"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:11.906" starttime="20201107 13:42:11.896"></status>
</kw>
<msg timestamp="20201107 13:42:11.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:11.906" starttime="20201107 13:42:11.896"></status>
</kw>
<msg timestamp="20201107 13:42:11.906" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:42:11.906" starttime="20201107 13:42:11.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:42:11.907" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:42:11.907" starttime="20201107 13:42:11.907"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:11.912" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:11.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:11.932" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:42:11.932" starttime="20201107 13:42:11.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:11.934" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:42:11.934" starttime="20201107 13:42:11.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:11.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:11.943" starttime="20201107 13:42:11.942"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:11.945" starttime="20201107 13:42:11.909"></status>
</kw>
<msg timestamp="20201107 13:42:11.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:11.946" starttime="20201107 13:42:11.909"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:11.946" starttime="20201107 13:42:11.908"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:11.946" starttime="20201107 13:42:11.907"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:11.946" starttime="20201107 13:42:11.895"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:11.946" starttime="20201107 13:42:11.894"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:11.954" level="INFO">Running command 'ozone sh bucket list 14675-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:16.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:16.894" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:42:16.894" starttime="20201107 13:42:11.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:16.895" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:41:04.907Z",
  "modificationTime" : "2020-11-07T13:41:04.907Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:40:40.867Z",
  "modificationTime" : "2020-11-07T13:41:00.519Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:41:13.379Z",
  "modificationTime" : "2020-11-07T13:41:13.379Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:40:33.085Z",
  "modificationTime" : "2020-11-07T13:40:56.618Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:40:36.903Z",
  "modificationTime" : "2020-11-07T13:40:36.903Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201107 13:42:16.895" starttime="20201107 13:42:16.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:16.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:16.896" starttime="20201107 13:42:16.896"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:16.896" starttime="20201107 13:42:11.949"></status>
</kw>
<msg timestamp="20201107 13:42:16.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:16.897" starttime="20201107 13:42:11.949"></status>
</kw>
<msg timestamp="20201107 13:42:16.897" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:42:16.897" starttime="20201107 13:42:11.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201107 13:42:16.897" starttime="20201107 13:42:16.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201107 13:42:16.898" starttime="20201107 13:42:16.898"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:42:16.898" critical="yes" starttime="20201107 13:42:11.893"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:16.904" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:16.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:16.908" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:42:16.908" starttime="20201107 13:42:16.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:16.909" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:42:16.909" starttime="20201107 13:42:16.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:16.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:16.910" starttime="20201107 13:42:16.909"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:16.910" starttime="20201107 13:42:16.902"></status>
</kw>
<msg timestamp="20201107 13:42:16.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:16.910" starttime="20201107 13:42:16.901"></status>
</kw>
<msg timestamp="20201107 13:42:16.910" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:42:16.910" starttime="20201107 13:42:16.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:42:16.911" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:42:16.911" starttime="20201107 13:42:16.911"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:16.916" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:16.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:16.931" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:42:16.931" starttime="20201107 13:42:16.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:16.932" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:42:16.932" starttime="20201107 13:42:16.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:16.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:16.933" starttime="20201107 13:42:16.932"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:16.933" starttime="20201107 13:42:16.913"></status>
</kw>
<msg timestamp="20201107 13:42:16.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:16.933" starttime="20201107 13:42:16.913"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:16.934" starttime="20201107 13:42:16.912"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:16.934" starttime="20201107 13:42:16.912"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:16.934" starttime="20201107 13:42:16.900"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:16.934" starttime="20201107 13:42:16.900"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:16.939" level="INFO">Running command 'ozone sh bucket info 14675-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:21.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:21.269" level="INFO">${output} = 14675-source bucket1</msg>
<status status="PASS" endtime="20201107 13:42:21.269" starttime="20201107 13:42:16.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:21.270" level="INFO">14675-source bucket1</msg>
<status status="PASS" endtime="20201107 13:42:21.270" starttime="20201107 13:42:21.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:21.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:21.271" starttime="20201107 13:42:21.271"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:21.271" starttime="20201107 13:42:16.935"></status>
</kw>
<msg timestamp="20201107 13:42:21.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:21.272" starttime="20201107 13:42:16.935"></status>
</kw>
<msg timestamp="20201107 13:42:21.272" level="INFO">${result} = 14675-source bucket1</msg>
<status status="PASS" endtime="20201107 13:42:21.272" starttime="20201107 13:42:16.934"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201107 13:42:21.273" starttime="20201107 13:42:21.272"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:42:21.273" critical="yes" starttime="20201107 13:42:16.899"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:21.281" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:21.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:21.282" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:42:21.282" starttime="20201107 13:42:21.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:21.283" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:42:21.284" starttime="20201107 13:42:21.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:21.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:21.284" starttime="20201107 13:42:21.284"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:21.285" starttime="20201107 13:42:21.276"></status>
</kw>
<msg timestamp="20201107 13:42:21.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:21.285" starttime="20201107 13:42:21.276"></status>
</kw>
<msg timestamp="20201107 13:42:21.285" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:42:21.285" starttime="20201107 13:42:21.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:42:21.286" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:42:21.286" starttime="20201107 13:42:21.285"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:21.291" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:21.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:21.303" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:42:21.303" starttime="20201107 13:42:21.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:21.304" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:42:21.304" starttime="20201107 13:42:21.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:21.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:21.305" starttime="20201107 13:42:21.305"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:21.305" starttime="20201107 13:42:21.287"></status>
</kw>
<msg timestamp="20201107 13:42:21.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:21.306" starttime="20201107 13:42:21.287"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:21.306" starttime="20201107 13:42:21.286"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:21.306" starttime="20201107 13:42:21.286"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:21.306" starttime="20201107 13:42:21.275"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:21.306" starttime="20201107 13:42:21.275"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:21.311" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 14675-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:25.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:25.855" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:42:25.855" starttime="20201107 13:42:21.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:25.856" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201107 13:42:25.856" starttime="20201107 13:42:25.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:25.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:25.857" starttime="20201107 13:42:25.856"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:25.857" starttime="20201107 13:42:21.307"></status>
</kw>
<msg timestamp="20201107 13:42:25.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:25.857" starttime="20201107 13:42:21.307"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:25.858" starttime="20201107 13:42:21.306"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:25.863" level="INFO">Running command 'ozone sh bucket getacl 14675-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:30.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:30.277" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201107 13:42:30.277" starttime="20201107 13:42:25.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:30.278" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201107 13:42:30.278" starttime="20201107 13:42:30.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:30.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:30.279" starttime="20201107 13:42:30.278"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:30.279" starttime="20201107 13:42:25.860"></status>
</kw>
<msg timestamp="20201107 13:42:30.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:30.280" starttime="20201107 13:42:25.859"></status>
</kw>
<msg timestamp="20201107 13:42:30.280" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201107 13:42:30.280" starttime="20201107 13:42:25.859"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:42:30.281" starttime="20201107 13:42:30.280"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:30.281" starttime="20201107 13:42:25.858"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:30.287" level="INFO">Running command 'ozone sh bucket getacl 14675-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:34.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:34.748" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:42:34.748" starttime="20201107 13:42:30.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:34.749" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:42:34.749" starttime="20201107 13:42:34.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:34.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:34.750" starttime="20201107 13:42:34.749"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:34.750" starttime="20201107 13:42:30.283"></status>
</kw>
<msg timestamp="20201107 13:42:34.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:34.750" starttime="20201107 13:42:30.283"></status>
</kw>
<msg timestamp="20201107 13:42:34.751" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201107 13:42:34.751" starttime="20201107 13:42:30.282"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:42:34.751" starttime="20201107 13:42:34.751"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:34.752" starttime="20201107 13:42:30.281"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:34.757" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 14675-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:38.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:38.419" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:42:38.419" starttime="20201107 13:42:34.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:38.421" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201107 13:42:38.421" starttime="20201107 13:42:38.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:38.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:38.422" starttime="20201107 13:42:38.421"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:38.422" starttime="20201107 13:42:34.753"></status>
</kw>
<msg timestamp="20201107 13:42:38.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:38.422" starttime="20201107 13:42:34.752"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:38.422" starttime="20201107 13:42:34.752"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:38.428" level="INFO">Running command 'ozone sh bucket getacl 14675-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:42.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:42.853" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:42:42.854" starttime="20201107 13:42:38.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:42.855" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:42:42.855" starttime="20201107 13:42:42.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:42.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:42.856" starttime="20201107 13:42:42.855"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:42.856" starttime="20201107 13:42:38.424"></status>
</kw>
<msg timestamp="20201107 13:42:42.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:42.856" starttime="20201107 13:42:38.424"></status>
</kw>
<msg timestamp="20201107 13:42:42.856" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201107 13:42:42.856" starttime="20201107 13:42:38.423"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:42:42.857" starttime="20201107 13:42:42.857"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:42.857" starttime="20201107 13:42:38.422"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:42.863" level="INFO">Running command 'ozone sh bucket getacl 14675-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:46.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:46.602" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201107 13:42:46.602" starttime="20201107 13:42:42.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:46.603" level="INFO">READ</msg>
<status status="PASS" endtime="20201107 13:42:46.603" starttime="20201107 13:42:46.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:46.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:46.604" starttime="20201107 13:42:46.603"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:46.604" starttime="20201107 13:42:42.859"></status>
</kw>
<msg timestamp="20201107 13:42:46.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:46.604" starttime="20201107 13:42:42.859"></status>
</kw>
<msg timestamp="20201107 13:42:46.605" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201107 13:42:46.605" starttime="20201107 13:42:42.858"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:42:46.605" starttime="20201107 13:42:46.605"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:46.605" starttime="20201107 13:42:42.857"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:42:46.606" critical="yes" starttime="20201107 13:42:21.274"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:46.612" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:46.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:46.616" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:42:46.616" starttime="20201107 13:42:46.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:46.617" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:42:46.618" starttime="20201107 13:42:46.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:46.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:46.618" starttime="20201107 13:42:46.618"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:46.619" starttime="20201107 13:42:46.609"></status>
</kw>
<msg timestamp="20201107 13:42:46.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:46.619" starttime="20201107 13:42:46.609"></status>
</kw>
<msg timestamp="20201107 13:42:46.619" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:42:46.619" starttime="20201107 13:42:46.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:42:46.620" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:42:46.620" starttime="20201107 13:42:46.619"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:46.626" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:46.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:46.650" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:42:46.650" starttime="20201107 13:42:46.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:46.651" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:42:46.651" starttime="20201107 13:42:46.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:46.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:46.652" starttime="20201107 13:42:46.652"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:46.653" starttime="20201107 13:42:46.622"></status>
</kw>
<msg timestamp="20201107 13:42:46.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:46.653" starttime="20201107 13:42:46.621"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:46.653" starttime="20201107 13:42:46.621"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:46.653" starttime="20201107 13:42:46.620"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:46.653" starttime="20201107 13:42:46.608"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:46.653" starttime="20201107 13:42:46.607"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:46.657" level="INFO">Running command 'ozone sh bucket link 14675-source/bucket2 14675-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:50.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:50.439" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:42:50.439" starttime="20201107 13:42:46.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:50.440" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:42:50.441" starttime="20201107 13:42:50.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:50.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:50.441" starttime="20201107 13:42:50.441"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:50.441" starttime="20201107 13:42:46.654"></status>
</kw>
<msg timestamp="20201107 13:42:50.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:50.442" starttime="20201107 13:42:46.654"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:50.442" starttime="20201107 13:42:46.653"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:50.445" level="INFO">Running command 'ozone sh bucket create 14675-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:54.361" level="INFO">${rc} = 255</msg>
<msg timestamp="20201107 13:42:54.361" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:42:54.361" starttime="20201107 13:42:50.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:54.363" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201107 13:42:54.363" starttime="20201107 13:42:54.362"></status>
</kw>
<msg timestamp="20201107 13:42:54.363" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:42:54.363" starttime="20201107 13:42:50.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201107 13:42:54.364" starttime="20201107 13:42:54.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:54.369" level="INFO">Running command 'ozone sh bucket create 14675-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:42:58.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:42:58.417" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:42:58.417" starttime="20201107 13:42:54.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:42:58.418" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:42:58.418" starttime="20201107 13:42:58.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:42:58.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:42:58.419" starttime="20201107 13:42:58.418"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:58.419" starttime="20201107 13:42:54.365"></status>
</kw>
<msg timestamp="20201107 13:42:58.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:42:58.419" starttime="20201107 13:42:54.365"></status>
</kw>
<status status="PASS" endtime="20201107 13:42:58.420" starttime="20201107 13:42:54.364"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:42:58.423" level="INFO">Running command 'ozone sh bucket link 14675-source/bucket1 14675-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:02.533" level="INFO">${rc} = 255</msg>
<msg timestamp="20201107 13:43:02.533" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:02.534" starttime="20201107 13:42:58.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.535" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201107 13:43:02.535" starttime="20201107 13:43:02.534"></status>
</kw>
<msg timestamp="20201107 13:43:02.535" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:02.535" starttime="20201107 13:42:58.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201107 13:43:02.536" starttime="20201107 13:43:02.536"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:43:02.536" critical="yes" starttime="20201107 13:42:46.606"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:02.545" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:02.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:02.546" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:43:02.546" starttime="20201107 13:43:02.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.547" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:43:02.548" starttime="20201107 13:43:02.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:02.548" starttime="20201107 13:43:02.548"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.549" starttime="20201107 13:43:02.540"></status>
</kw>
<msg timestamp="20201107 13:43:02.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:02.549" starttime="20201107 13:43:02.540"></status>
</kw>
<msg timestamp="20201107 13:43:02.549" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:43:02.549" starttime="20201107 13:43:02.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:43:02.550" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:43:02.550" starttime="20201107 13:43:02.549"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:02.555" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:02.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:02.585" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:02.585" starttime="20201107 13:43:02.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.586" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:02.587" starttime="20201107 13:43:02.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:02.587" starttime="20201107 13:43:02.587"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.588" starttime="20201107 13:43:02.551"></status>
</kw>
<msg timestamp="20201107 13:43:02.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:02.588" starttime="20201107 13:43:02.551"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.588" starttime="20201107 13:43:02.550"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.588" starttime="20201107 13:43:02.550"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.588" starttime="20201107 13:43:02.539"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.588" starttime="20201107 13:43:02.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:02.595" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:02.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:02.598" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:02.598" starttime="20201107 13:43:02.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.599" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:02.599" starttime="20201107 13:43:02.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:02.600" starttime="20201107 13:43:02.600"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.600" starttime="20201107 13:43:02.590"></status>
</kw>
<msg timestamp="20201107 13:43:02.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:02.600" starttime="20201107 13:43:02.590"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.601" starttime="20201107 13:43:02.590"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:02.605" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:02.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:02.608" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:43:02.609" starttime="20201107 13:43:02.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.610" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:43:02.610" starttime="20201107 13:43:02.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:02.611" starttime="20201107 13:43:02.610"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.611" starttime="20201107 13:43:02.602"></status>
</kw>
<msg timestamp="20201107 13:43:02.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:02.611" starttime="20201107 13:43:02.602"></status>
</kw>
<msg timestamp="20201107 13:43:02.612" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:43:02.612" starttime="20201107 13:43:02.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:43:02.612" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:43:02.612" starttime="20201107 13:43:02.612"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:02.618" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:02.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:02.648" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:02.648" starttime="20201107 13:43:02.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.649" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:02.649" starttime="20201107 13:43:02.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:02.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:02.650" starttime="20201107 13:43:02.649"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.651" starttime="20201107 13:43:02.614"></status>
</kw>
<msg timestamp="20201107 13:43:02.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:02.651" starttime="20201107 13:43:02.613"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.651" starttime="20201107 13:43:02.613"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.651" starttime="20201107 13:43:02.612"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.651" starttime="20201107 13:43:02.601"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:02.651" starttime="20201107 13:43:02.601"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:02.655" level="INFO">Running command 'ozone sh key list 14675-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:06.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:06.950" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:06.950" starttime="20201107 13:43:02.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:06.952" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "14675-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-07T13:40:20.020Z",
  "modificationTime" : "2020-11-07T13:40:24.484Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201107 13:43:06.952" starttime="20201107 13:43:06.951"></status>
</kw>
<msg timestamp="20201107 13:43:06.952" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:06.952" starttime="20201107 13:43:02.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201107 13:43:06.953" starttime="20201107 13:43:06.952"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:06.953" starttime="20201107 13:43:02.589"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:06.953" starttime="20201107 13:43:02.589"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:43:06.953" critical="yes" starttime="20201107 13:43:02.537"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:06.961" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:06.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:06.963" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:43:06.963" starttime="20201107 13:43:06.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:06.964" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:43:06.964" starttime="20201107 13:43:06.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:06.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:06.965" starttime="20201107 13:43:06.964"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:06.965" starttime="20201107 13:43:06.957"></status>
</kw>
<msg timestamp="20201107 13:43:06.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:06.965" starttime="20201107 13:43:06.956"></status>
</kw>
<msg timestamp="20201107 13:43:06.965" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:43:06.965" starttime="20201107 13:43:06.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:43:06.966" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:43:06.966" starttime="20201107 13:43:06.966"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:06.971" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:07.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:07.001" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:07.001" starttime="20201107 13:43:06.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:07.002" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:07.002" starttime="20201107 13:43:07.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:07.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:07.003" starttime="20201107 13:43:07.002"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.003" starttime="20201107 13:43:06.968"></status>
</kw>
<msg timestamp="20201107 13:43:07.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:07.003" starttime="20201107 13:43:06.968"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.004" starttime="20201107 13:43:06.967"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.004" starttime="20201107 13:43:06.966"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.004" starttime="20201107 13:43:06.955"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.004" starttime="20201107 13:43:06.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:07.009" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:07.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:07.013" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:07.013" starttime="20201107 13:43:07.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:07.014" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:07.014" starttime="20201107 13:43:07.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:07.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:07.015" starttime="20201107 13:43:07.015"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.015" starttime="20201107 13:43:07.006"></status>
</kw>
<msg timestamp="20201107 13:43:07.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:07.016" starttime="20201107 13:43:07.006"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.016" starttime="20201107 13:43:07.005"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:07.022" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:07.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:07.024" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:43:07.024" starttime="20201107 13:43:07.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:07.025" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:43:07.025" starttime="20201107 13:43:07.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:07.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:07.026" starttime="20201107 13:43:07.025"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.026" starttime="20201107 13:43:07.018"></status>
</kw>
<msg timestamp="20201107 13:43:07.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:07.026" starttime="20201107 13:43:07.017"></status>
</kw>
<msg timestamp="20201107 13:43:07.026" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:43:07.026" starttime="20201107 13:43:07.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:43:07.027" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:43:07.027" starttime="20201107 13:43:07.027"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:07.033" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:07.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:07.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:07.050" starttime="20201107 13:43:07.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:07.052" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:07.052" starttime="20201107 13:43:07.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:07.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:07.053" starttime="20201107 13:43:07.052"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.053" starttime="20201107 13:43:07.029"></status>
</kw>
<msg timestamp="20201107 13:43:07.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:07.053" starttime="20201107 13:43:07.028"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.053" starttime="20201107 13:43:07.028"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.053" starttime="20201107 13:43:07.027"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.054" starttime="20201107 13:43:07.017"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:07.054" starttime="20201107 13:43:07.016"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:07.058" level="INFO">Running command 'ozone sh key list 14675-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:10.831" level="INFO">${rc} = 255</msg>
<msg timestamp="20201107 13:43:10.831" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:10.831" starttime="20201107 13:43:07.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.833" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201107 13:43:10.833" starttime="20201107 13:43:10.832"></status>
</kw>
<msg timestamp="20201107 13:43:10.833" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:10.833" starttime="20201107 13:43:07.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201107 13:43:10.834" starttime="20201107 13:43:10.833"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.834" starttime="20201107 13:43:07.005"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.834" starttime="20201107 13:43:07.004"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:43:10.834" critical="yes" starttime="20201107 13:43:06.954"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:10.842" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:10.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:10.846" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:43:10.846" starttime="20201107 13:43:10.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.847" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:43:10.847" starttime="20201107 13:43:10.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:10.848" starttime="20201107 13:43:10.847"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.848" starttime="20201107 13:43:10.839"></status>
</kw>
<msg timestamp="20201107 13:43:10.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:10.849" starttime="20201107 13:43:10.839"></status>
</kw>
<msg timestamp="20201107 13:43:10.849" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:43:10.849" starttime="20201107 13:43:10.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:43:10.850" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:43:10.850" starttime="20201107 13:43:10.849"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:10.855" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:10.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:10.879" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:10.879" starttime="20201107 13:43:10.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.880" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:10.880" starttime="20201107 13:43:10.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:10.881" starttime="20201107 13:43:10.881"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.882" starttime="20201107 13:43:10.852"></status>
</kw>
<msg timestamp="20201107 13:43:10.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:10.883" starttime="20201107 13:43:10.851"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.884" starttime="20201107 13:43:10.851"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.884" starttime="20201107 13:43:10.850"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.885" starttime="20201107 13:43:10.837"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.885" starttime="20201107 13:43:10.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:10.894" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:10.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:10.897" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:10.897" starttime="20201107 13:43:10.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.898" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:10.899" starttime="20201107 13:43:10.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:10.900" starttime="20201107 13:43:10.899"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.900" starttime="20201107 13:43:10.888"></status>
</kw>
<msg timestamp="20201107 13:43:10.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:10.900" starttime="20201107 13:43:10.887"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.900" starttime="20201107 13:43:10.887"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:10.905" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:10.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:10.908" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:43:10.908" starttime="20201107 13:43:10.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.909" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:43:10.909" starttime="20201107 13:43:10.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:10.910" starttime="20201107 13:43:10.909"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.910" starttime="20201107 13:43:10.902"></status>
</kw>
<msg timestamp="20201107 13:43:10.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:10.911" starttime="20201107 13:43:10.902"></status>
</kw>
<msg timestamp="20201107 13:43:10.911" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:43:10.911" starttime="20201107 13:43:10.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:43:10.912" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:43:10.912" starttime="20201107 13:43:10.911"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:10.916" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:10.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:10.930" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:10.930" starttime="20201107 13:43:10.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.933" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:10.934" starttime="20201107 13:43:10.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:10.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:10.940" starttime="20201107 13:43:10.939"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.940" starttime="20201107 13:43:10.913"></status>
</kw>
<msg timestamp="20201107 13:43:10.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:10.941" starttime="20201107 13:43:10.913"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.941" starttime="20201107 13:43:10.912"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.941" starttime="20201107 13:43:10.912"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.941" starttime="20201107 13:43:10.901"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:10.941" starttime="20201107 13:43:10.900"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:10.947" level="INFO">Running command 'ozone sh bucket info 14675-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:15.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:15.476" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:15.476" starttime="20201107 13:43:10.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:15.477" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:40:40.867Z",
  "modificationTime" : "2020-11-07T13:41:00.519Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201107 13:43:15.478" starttime="20201107 13:43:15.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:15.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:15.478" starttime="20201107 13:43:15.478"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:15.479" starttime="20201107 13:43:10.942"></status>
</kw>
<msg timestamp="20201107 13:43:15.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:15.479" starttime="20201107 13:43:10.942"></status>
</kw>
<msg timestamp="20201107 13:43:15.479" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:15.479" starttime="20201107 13:43:10.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201107 13:43:15.480" starttime="20201107 13:43:15.480"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201107 13:43:15.481" starttime="20201107 13:43:15.480"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:15.485" level="INFO">Running command 'ozone sh key list 14675-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:19.493" level="INFO">${rc} = 255</msg>
<msg timestamp="20201107 13:43:19.493" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:19.493" starttime="20201107 13:43:15.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:19.495" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201107 13:43:19.495" starttime="20201107 13:43:19.494"></status>
</kw>
<msg timestamp="20201107 13:43:19.495" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:19.495" starttime="20201107 13:43:15.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201107 13:43:19.496" starttime="20201107 13:43:19.495"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:19.496" starttime="20201107 13:43:10.886"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:19.496" starttime="20201107 13:43:10.886"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:43:19.496" critical="yes" starttime="20201107 13:43:10.836"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:19.503" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:19.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:19.507" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:43:19.507" starttime="20201107 13:43:19.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:19.508" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:43:19.508" starttime="20201107 13:43:19.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:19.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:19.510" starttime="20201107 13:43:19.508"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:19.510" starttime="20201107 13:43:19.500"></status>
</kw>
<msg timestamp="20201107 13:43:19.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:19.510" starttime="20201107 13:43:19.500"></status>
</kw>
<msg timestamp="20201107 13:43:19.511" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:43:19.511" starttime="20201107 13:43:19.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:43:19.512" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:43:19.512" starttime="20201107 13:43:19.511"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:19.517" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:19.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:19.533" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:19.534" starttime="20201107 13:43:19.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:19.535" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:19.535" starttime="20201107 13:43:19.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:19.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:19.536" starttime="20201107 13:43:19.535"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:19.536" starttime="20201107 13:43:19.513"></status>
</kw>
<msg timestamp="20201107 13:43:19.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:19.536" starttime="20201107 13:43:19.513"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:19.536" starttime="20201107 13:43:19.512"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:19.537" starttime="20201107 13:43:19.512"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:19.537" starttime="20201107 13:43:19.499"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:19.537" starttime="20201107 13:43:19.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:19.544" level="INFO">Running command 'ozone sh bucket link 14675-target/loop1 14675-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:23.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:23.656" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:23.656" starttime="20201107 13:43:19.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:23.657" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:43:23.657" starttime="20201107 13:43:23.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:23.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:23.658" starttime="20201107 13:43:23.658"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:23.658" starttime="20201107 13:43:19.538"></status>
</kw>
<msg timestamp="20201107 13:43:23.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:23.659" starttime="20201107 13:43:19.538"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:23.659" starttime="20201107 13:43:19.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:23.664" level="INFO">Running command 'ozone sh bucket link 14675-target/loop2 14675-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:27.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:27.656" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:27.656" starttime="20201107 13:43:23.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:27.657" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:43:27.657" starttime="20201107 13:43:27.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:27.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:27.658" starttime="20201107 13:43:27.658"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:27.659" starttime="20201107 13:43:23.660"></status>
</kw>
<msg timestamp="20201107 13:43:27.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:27.659" starttime="20201107 13:43:23.660"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:27.659" starttime="20201107 13:43:23.659"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:27.665" level="INFO">Running command 'ozone sh bucket link 14675-target/loop3 14675-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:31.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:31.363" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:31.363" starttime="20201107 13:43:27.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:31.364" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:43:31.364" starttime="20201107 13:43:31.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:31.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:31.365" starttime="20201107 13:43:31.364"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:31.365" starttime="20201107 13:43:27.660"></status>
</kw>
<msg timestamp="20201107 13:43:31.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:31.365" starttime="20201107 13:43:27.660"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:31.366" starttime="20201107 13:43:27.659"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:31.370" level="INFO">Running command 'ozone sh key list 14675-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:35.222" level="INFO">${rc} = 255</msg>
<msg timestamp="20201107 13:43:35.222" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:35.222" starttime="20201107 13:43:31.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:35.223" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201107 13:43:35.223" starttime="20201107 13:43:35.223"></status>
</kw>
<msg timestamp="20201107 13:43:35.224" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:35.224" starttime="20201107 13:43:31.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201107 13:43:35.224" starttime="20201107 13:43:35.224"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:43:35.225" critical="yes" starttime="20201107 13:43:19.497"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:35.233" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:35.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:35.235" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:43:35.235" starttime="20201107 13:43:35.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:35.236" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:43:35.236" starttime="20201107 13:43:35.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:35.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:35.237" starttime="20201107 13:43:35.236"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:35.237" starttime="20201107 13:43:35.228"></status>
</kw>
<msg timestamp="20201107 13:43:35.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:35.237" starttime="20201107 13:43:35.228"></status>
</kw>
<msg timestamp="20201107 13:43:35.237" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:43:35.238" starttime="20201107 13:43:35.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:43:35.238" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:43:35.238" starttime="20201107 13:43:35.238"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:35.246" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:35.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:35.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:35.270" starttime="20201107 13:43:35.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:35.271" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:35.271" starttime="20201107 13:43:35.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:35.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:35.272" starttime="20201107 13:43:35.272"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:35.272" starttime="20201107 13:43:35.240"></status>
</kw>
<msg timestamp="20201107 13:43:35.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:35.273" starttime="20201107 13:43:35.240"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:35.273" starttime="20201107 13:43:35.239"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:35.273" starttime="20201107 13:43:35.238"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:35.273" starttime="20201107 13:43:35.227"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:35.273" starttime="20201107 13:43:35.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:35.278" level="INFO">Running command 'ozone sh bucket link 14675-source/bucket1 14675-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:39.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:39.174" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:39.174" starttime="20201107 13:43:35.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:39.175" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:43:39.175" starttime="20201107 13:43:39.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:39.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:39.176" starttime="20201107 13:43:39.175"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:39.176" starttime="20201107 13:43:35.274"></status>
</kw>
<msg timestamp="20201107 13:43:39.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:39.176" starttime="20201107 13:43:35.274"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:39.177" starttime="20201107 13:43:35.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:39.182" level="INFO">Running command 'ozone sh key put 14675-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:48.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:48.234" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:48.234" starttime="20201107 13:43:39.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:48.235" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:43:48.235" starttime="20201107 13:43:48.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:48.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:48.236" starttime="20201107 13:43:48.235"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:48.236" starttime="20201107 13:43:39.178"></status>
</kw>
<msg timestamp="20201107 13:43:48.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:48.236" starttime="20201107 13:43:39.177"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:48.237" starttime="20201107 13:43:39.177"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201107 13:43:48.239" level="INFO">${postfix} = 68084</msg>
<status status="PASS" endtime="20201107 13:43:48.239" starttime="20201107 13:43:48.238"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201107 13:43:48.240" level="INFO">${tmpfile} = /tmp/tempkey-68084</msg>
<status status="PASS" endtime="20201107 13:43:48.240" starttime="20201107 13:43:48.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:48.243" level="INFO">Running command 'ozone sh key get -f 14675-target/link1/key3 /tmp/tempkey-68084 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:54.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:54.162" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:54.162" starttime="20201107 13:43:48.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:54.163" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:43:54.163" starttime="20201107 13:43:54.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:54.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:54.164" starttime="20201107 13:43:54.163"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.164" starttime="20201107 13:43:48.240"></status>
</kw>
<msg timestamp="20201107 13:43:54.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:54.165" starttime="20201107 13:43:48.240"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.165" starttime="20201107 13:43:48.240"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201107 13:43:54.168" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-68084 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:54.171" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201107 13:43:54.171" starttime="20201107 13:43:54.165"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:54.176" level="INFO">Running command 'rm -f /tmp/tempkey-68084 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:54.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:54.180" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:54.180" starttime="20201107 13:43:54.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:54.182" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:54.182" starttime="20201107 13:43:54.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:54.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:54.183" starttime="20201107 13:43:54.182"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.183" starttime="20201107 13:43:54.173"></status>
</kw>
<msg timestamp="20201107 13:43:54.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:54.183" starttime="20201107 13:43:54.172"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.184" starttime="20201107 13:43:54.172"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:43:54.184" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201107 13:43:54.184" starttime="20201107 13:43:54.184"></status>
</kw>
<msg timestamp="20201107 13:43:54.184" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201107 13:43:54.185" starttime="20201107 13:43:48.237"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:43:54.185" starttime="20201107 13:43:54.185"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.185" starttime="20201107 13:43:48.237"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:43:54.185" critical="yes" starttime="20201107 13:43:35.225"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:54.193" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:54.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:54.195" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201107 13:43:54.195" starttime="20201107 13:43:54.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:54.196" level="INFO">scm</msg>
<status status="PASS" endtime="20201107 13:43:54.196" starttime="20201107 13:43:54.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:54.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:54.197" starttime="20201107 13:43:54.196"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.198" starttime="20201107 13:43:54.189"></status>
</kw>
<msg timestamp="20201107 13:43:54.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:54.198" starttime="20201107 13:43:54.189"></status>
</kw>
<msg timestamp="20201107 13:43:54.198" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201107 13:43:54.198" starttime="20201107 13:43:54.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:43:54.199" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:43:54.199" starttime="20201107 13:43:54.198"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:54.206" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:54.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:54.223" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:43:54.223" starttime="20201107 13:43:54.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:54.225" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:43:54.225" starttime="20201107 13:43:54.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:54.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:54.226" starttime="20201107 13:43:54.225"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.226" starttime="20201107 13:43:54.201"></status>
</kw>
<msg timestamp="20201107 13:43:54.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:54.226" starttime="20201107 13:43:54.201"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.226" starttime="20201107 13:43:54.200"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.226" starttime="20201107 13:43:54.199"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.226" starttime="20201107 13:43:54.188"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:54.227" starttime="20201107 13:43:54.187"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:54.231" level="INFO">Running command 'ozone sh bucket delete 14675-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:43:58.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:43:58.518" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:43:58.518" starttime="20201107 13:43:54.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:43:58.520" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:43:58.520" starttime="20201107 13:43:58.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:43:58.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:43:58.520" starttime="20201107 13:43:58.520"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:58.521" starttime="20201107 13:43:54.228"></status>
</kw>
<msg timestamp="20201107 13:43:58.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:43:58.521" starttime="20201107 13:43:54.228"></status>
</kw>
<status status="PASS" endtime="20201107 13:43:58.521" starttime="20201107 13:43:54.227"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:43:58.525" level="INFO">Running command 'ozone sh bucket list 14675-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:44:02.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:44:02.895" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:44:02.895" starttime="20201107 13:43:58.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:44:02.896" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:42:58.249Z",
  "modificationTime" : "2020-11-07T13:42:58.249Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:41:04.907Z",
  "modificationTime" : "2020-11-07T13:41:04.907Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:40:40.867Z",
  "modificationTime" : "2020-11-07T13:41:00.519Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:42:50.316Z",
  "modificationTime" : "2020-11-07T13:42:50.316Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:43:38.966Z",
  "modificationTime" : "2020-11-07T13:43:38.966Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:43:31.185Z",
  "modificationTime" : "2020-11-07T13:43:31.185Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:43:23.461Z",
  "modificationTime" : "2020-11-07T13:43:23.461Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:43:27.437Z",
  "modificationTime" : "2020-11-07T13:43:27.437Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:40:33.085Z",
  "modificationTime" : "2020-11-07T13:40:56.618Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "14675-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:40:36.903Z",
  "modificationTime" : "2020-11-07T13:40:36.903Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "14675-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201107 13:44:02.896" starttime="20201107 13:44:02.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:44:02.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:44:02.897" starttime="20201107 13:44:02.897"></status>
</kw>
<status status="PASS" endtime="20201107 13:44:02.897" starttime="20201107 13:43:58.522"></status>
</kw>
<msg timestamp="20201107 13:44:02.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:44:02.898" starttime="20201107 13:43:58.522"></status>
</kw>
<msg timestamp="20201107 13:44:02.898" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:44:02.898" starttime="20201107 13:43:58.521"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201107 13:44:02.899" starttime="20201107 13:44:02.898"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:44:02.904" level="INFO">Running command 'ozone sh key list 14675-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:44:06.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:44:06.963" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201107 13:44:06.963" starttime="20201107 13:44:02.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:44:06.964" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201107 13:44:06.965" starttime="20201107 13:44:06.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:44:06.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:44:06.965" starttime="20201107 13:44:06.965"></status>
</kw>
<status status="PASS" endtime="20201107 13:44:06.966" starttime="20201107 13:44:02.900"></status>
</kw>
<msg timestamp="20201107 13:44:06.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:44:06.966" starttime="20201107 13:44:02.899"></status>
</kw>
<msg timestamp="20201107 13:44:06.966" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201107 13:44:06.966" starttime="20201107 13:44:02.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201107 13:44:06.967" starttime="20201107 13:44:06.966"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:44:06.967" critical="yes" starttime="20201107 13:43:54.186"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201107 13:44:06.970" starttime="20201107 13:40:03.906"></status>
</suite>
<status status="PASS" elapsedtime="278830" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
