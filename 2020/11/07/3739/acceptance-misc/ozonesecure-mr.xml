<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201107 13:37:02.658" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:32:23.227" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:32:28.270" level="INFO">${rc} = 255</msg>
<msg timestamp="20201107 13:32:28.271" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:32:28.271" starttime="20201107 13:32:23.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:32:28.272" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201107 13:32:28.272" starttime="20201107 13:32:28.271"></status>
</kw>
<msg timestamp="20201107 13:32:28.272" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:32:28.272" starttime="20201107 13:32:23.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:32:28.280" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:32:32.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:32:32.085" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:32:32.085" starttime="20201107 13:32:28.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:32:32.087" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:32:32.087" starttime="20201107 13:32:32.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:32:32.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:32:32.087" starttime="20201107 13:32:32.087"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:32.088" starttime="20201107 13:32:28.274"></status>
</kw>
<msg timestamp="20201107 13:32:32.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:32:32.088" starttime="20201107 13:32:28.274"></status>
</kw>
<msg timestamp="20201107 13:32:32.088" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:32:32.088" starttime="20201107 13:32:28.274"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201107 13:32:32.089" starttime="20201107 13:32:32.088"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:32.089" starttime="20201107 13:32:28.273"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:32.089" starttime="20201107 13:32:28.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:32:32.094" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:32:35.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:32:35.799" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:32:35.799" starttime="20201107 13:32:32.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:32:35.800" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:32:35.800" starttime="20201107 13:32:35.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:32:35.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:32:35.801" starttime="20201107 13:32:35.801"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:35.801" starttime="20201107 13:32:32.091"></status>
</kw>
<msg timestamp="20201107 13:32:35.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:32:35.802" starttime="20201107 13:32:32.091"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:35.802" starttime="20201107 13:32:32.090"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:35.802" starttime="20201107 13:32:32.090"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:35.802" starttime="20201107 13:32:32.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201107 13:32:35.803" starttime="20201107 13:32:35.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:32:35.808" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:32:39.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:32:39.695" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:32:39.695" starttime="20201107 13:32:35.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:32:39.696" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:32:35.544Z",
  "modificationTime" : "2020-11-07T13:32:35.544Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201107 13:32:39.696" starttime="20201107 13:32:39.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:32:39.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:32:39.697" starttime="20201107 13:32:39.696"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:39.697" starttime="20201107 13:32:35.804"></status>
</kw>
<msg timestamp="20201107 13:32:39.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:32:39.697" starttime="20201107 13:32:35.803"></status>
</kw>
<msg timestamp="20201107 13:32:39.698" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:32:39.698" starttime="20201107 13:32:35.803"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201107 13:32:39.698" starttime="20201107 13:32:39.698"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:32:39.702" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:32:39.702" starttime="20201107 13:32:39.702"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:32:39.703" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:32:39.703" starttime="20201107 13:32:39.702"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:39.703" starttime="20201107 13:32:39.701"></status>
</kw>
<msg timestamp="20201107 13:32:39.703" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:32:39.703" starttime="20201107 13:32:39.701"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:39.704" starttime="20201107 13:32:39.700"></status>
</kw>
<msg timestamp="20201107 13:32:39.704" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201107 13:32:39.704" starttime="20201107 13:32:39.699"></status>
</kw>
<msg timestamp="20201107 13:32:39.704" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201107 13:32:39.704" starttime="20201107 13:32:39.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:32:39.709" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:32:43.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:32:43.585" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:32:43.585" starttime="20201107 13:32:39.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:32:43.586" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:32:43.586" starttime="20201107 13:32:43.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:32:43.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:32:43.587" starttime="20201107 13:32:43.586"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:43.587" starttime="20201107 13:32:39.705"></status>
</kw>
<msg timestamp="20201107 13:32:43.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:32:43.587" starttime="20201107 13:32:39.705"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:43.588" starttime="20201107 13:32:39.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:32:43.593" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:32:52.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:32:52.798" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:32:52.798" starttime="20201107 13:32:43.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:32:52.800" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:32:52.800" starttime="20201107 13:32:52.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:32:52.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:32:52.800" starttime="20201107 13:32:52.800"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:52.801" starttime="20201107 13:32:43.589"></status>
</kw>
<msg timestamp="20201107 13:32:52.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:32:52.801" starttime="20201107 13:32:43.589"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:52.801" starttime="20201107 13:32:43.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:32:52.805" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:32:59.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:32:59.153" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:32:59.153" starttime="20201107 13:32:52.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:32:59.155" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:32:59.155" starttime="20201107 13:32:59.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:32:59.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:32:59.155" starttime="20201107 13:32:59.155"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:59.156" starttime="20201107 13:32:52.802"></status>
</kw>
<msg timestamp="20201107 13:32:59.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:32:59.156" starttime="20201107 13:32:52.802"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:59.156" starttime="20201107 13:32:52.801"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:32:59.162" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:33:05.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:33:05.196" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:33:05.196" starttime="20201107 13:32:59.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:33:05.197" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:33:05.197" starttime="20201107 13:33:05.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:33:05.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:33:05.198" starttime="20201107 13:33:05.197"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:05.198" starttime="20201107 13:32:59.157"></status>
</kw>
<msg timestamp="20201107 13:33:05.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:33:05.198" starttime="20201107 13:32:59.157"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:05.198" starttime="20201107 13:32:59.156"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:33:05.199" critical="yes" starttime="20201107 13:32:23.220"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:33:05.204" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:33:05.204" starttime="20201107 13:33:05.204"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:33:05.205" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:33:05.205" starttime="20201107 13:33:05.204"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:05.205" starttime="20201107 13:33:05.203"></status>
</kw>
<msg timestamp="20201107 13:33:05.205" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:33:05.205" starttime="20201107 13:33:05.202"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:05.205" starttime="20201107 13:33:05.202"></status>
</kw>
<msg timestamp="20201107 13:33:05.205" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:33:05.206" starttime="20201107 13:33:05.201"></status>
</kw>
<msg timestamp="20201107 13:33:05.206" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:33:05.206" starttime="20201107 13:33:05.200"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:33:05.211" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:33:09.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:33:09.078" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:33:09.078" starttime="20201107 13:33:05.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:33:09.079" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:33:09.079" starttime="20201107 13:33:09.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:33:09.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:33:09.080" starttime="20201107 13:33:09.079"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:09.080" starttime="20201107 13:33:05.207"></status>
</kw>
<msg timestamp="20201107 13:33:09.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:33:09.080" starttime="20201107 13:33:05.206"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:09.080" starttime="20201107 13:33:05.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:33:09.084" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:33:12.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:33:12.875" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201107 13:33:12.875" starttime="20201107 13:33:09.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:33:12.876" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201107 13:33:12.876" starttime="20201107 13:33:12.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:33:12.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:33:12.877" starttime="20201107 13:33:12.876"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:12.877" starttime="20201107 13:33:09.081"></status>
</kw>
<msg timestamp="20201107 13:33:12.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:33:12.878" starttime="20201107 13:33:09.081"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:12.878" starttime="20201107 13:33:09.081"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:33:12.878" critical="yes" starttime="20201107 13:33:05.200"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201107 13:33:12.879" starttime="20201107 13:32:23.163"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:35:18.764" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:35:18.764" starttime="20201107 13:35:18.764"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:35:18.765" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:35:18.765" starttime="20201107 13:35:18.764"></status>
</kw>
<status status="PASS" endtime="20201107 13:35:18.765" starttime="20201107 13:35:18.763"></status>
</kw>
<msg timestamp="20201107 13:35:18.765" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:35:18.765" starttime="20201107 13:35:18.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:35:18.766" starttime="20201107 13:35:18.766"></status>
</kw>
<msg timestamp="20201107 13:35:18.766" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:35:18.766" starttime="20201107 13:35:18.765"></status>
</kw>
<status status="PASS" endtime="20201107 13:35:18.767" starttime="20201107 13:35:18.762"></status>
</kw>
<msg timestamp="20201107 13:35:18.767" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:35:18.767" starttime="20201107 13:35:18.761"></status>
</kw>
<msg timestamp="20201107 13:35:18.767" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:35:18.767" starttime="20201107 13:35:18.760"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:35:18.768" level="INFO">${random} = 05078</msg>
<status status="PASS" endtime="20201107 13:35:18.768" starttime="20201107 13:35:18.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:35:18.773" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-05078 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:35:22.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:35:22.820" level="INFO">${output} = 2020-11-07 13:35:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:35:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201107 13:35:22.820" starttime="20201107 13:35:18.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:35:22.821" level="INFO">2020-11-07 13:35:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:35:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:35:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:35:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:35:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-985FEACD3E72-&gt;f3ecbdc8-8be8-4df5-81f0-19a97b9cc826
2020-11-07 13:35:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201107 13:35:22.821" starttime="20201107 13:35:22.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:35:22.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:35:22.822" starttime="20201107 13:35:22.821"></status>
</kw>
<status status="PASS" endtime="20201107 13:35:22.822" starttime="20201107 13:35:18.769"></status>
</kw>
<msg timestamp="20201107 13:35:22.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:35:22.822" starttime="20201107 13:35:18.768"></status>
</kw>
<msg timestamp="20201107 13:35:22.823" level="INFO">${result} = 2020-11-07 13:35:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:35:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201107 13:35:22.823" starttime="20201107 13:35:18.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:35:22.829" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:35:25.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:35:25.170" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:32 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:33 ofs://om/volume1/bucket1/ozone-00608
-rw-...</msg>
<status status="PASS" endtime="20201107 13:35:25.170" starttime="20201107 13:35:22.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:35:25.172" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:32 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:33 ofs://om/volume1/bucket1/ozone-00608
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:35 ofs://om/volume1/bucket1/ozone-05078
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:33 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:34 ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201107 13:35:25.172" starttime="20201107 13:35:25.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:35:25.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:35:25.172" starttime="20201107 13:35:25.172"></status>
</kw>
<status status="PASS" endtime="20201107 13:35:25.173" starttime="20201107 13:35:22.825"></status>
</kw>
<msg timestamp="20201107 13:35:25.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:35:25.173" starttime="20201107 13:35:22.825"></status>
</kw>
<msg timestamp="20201107 13:35:25.173" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:32 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:33 ofs://om/volume1/bucket1/ozone-00608
-rw-...</msg>
<status status="PASS" endtime="20201107 13:35:25.173" starttime="20201107 13:35:22.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:35:25.174" starttime="20201107 13:35:25.173"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:35:25.174" critical="yes" starttime="20201107 13:35:18.759"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201107 13:35:25.175" starttime="20201107 13:35:18.701"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:33:38.825" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:33:38.825" starttime="20201107 13:33:38.824"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:33:38.825" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:33:38.825" starttime="20201107 13:33:38.825"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:38.826" starttime="20201107 13:33:38.824"></status>
</kw>
<msg timestamp="20201107 13:33:38.826" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:33:38.826" starttime="20201107 13:33:38.823"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:38.826" starttime="20201107 13:33:38.822"></status>
</kw>
<msg timestamp="20201107 13:33:38.826" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:33:38.826" starttime="20201107 13:33:38.822"></status>
</kw>
<msg timestamp="20201107 13:33:38.826" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:33:38.826" starttime="20201107 13:33:38.821"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:33:38.827" level="INFO">${random} = 00608</msg>
<status status="PASS" endtime="20201107 13:33:38.827" starttime="20201107 13:33:38.826"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:33:38.834" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-00608 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:33:43.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:33:43.363" level="INFO">${output} = 2020-11-07 13:33:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:33:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201107 13:33:43.363" starttime="20201107 13:33:38.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:33:43.365" level="INFO">2020-11-07 13:33:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:33:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:33:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:33:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:33:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9A144475F3DF-&gt;f3ecbdc8-8be8-4df5-81f0-19a97b9cc826
2020-11-07 13:33:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201107 13:33:43.365" starttime="20201107 13:33:43.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:33:43.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:33:43.366" starttime="20201107 13:33:43.365"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:43.366" starttime="20201107 13:33:38.828"></status>
</kw>
<msg timestamp="20201107 13:33:43.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:33:43.366" starttime="20201107 13:33:38.828"></status>
</kw>
<msg timestamp="20201107 13:33:43.367" level="INFO">${result} = 2020-11-07 13:33:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:33:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201107 13:33:43.367" starttime="20201107 13:33:38.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:33:43.373" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:33:45.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:33:45.696" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:32 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:33 o3fs://bucket1.volume1.om/ozone-00608
dr...</msg>
<status status="PASS" endtime="20201107 13:33:45.696" starttime="20201107 13:33:43.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:33:45.697" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:32 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:33 o3fs://bucket1.volume1.om/ozone-00608
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:33 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:33:45.697" starttime="20201107 13:33:45.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:33:45.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:33:45.698" starttime="20201107 13:33:45.697"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:45.698" starttime="20201107 13:33:43.369"></status>
</kw>
<msg timestamp="20201107 13:33:45.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:33:45.698" starttime="20201107 13:33:43.368"></status>
</kw>
<msg timestamp="20201107 13:33:45.698" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:32 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:33 o3fs://bucket1.volume1.om/ozone-00608
dr...</msg>
<status status="PASS" endtime="20201107 13:33:45.698" starttime="20201107 13:33:43.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:33:45.699" starttime="20201107 13:33:45.699"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:33:45.699" critical="yes" starttime="20201107 13:33:38.820"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201107 13:33:45.700" starttime="20201107 13:33:38.763"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:33:33.089" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:33:33.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:33:33.093" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201107 13:33:33.093" starttime="20201107 13:33:33.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:33:33.094" level="INFO">rm</msg>
<status status="PASS" endtime="20201107 13:33:33.094" starttime="20201107 13:33:33.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:33:33.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:33:33.095" starttime="20201107 13:33:33.094"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:33.095" starttime="20201107 13:33:33.084"></status>
</kw>
<msg timestamp="20201107 13:33:33.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:33:33.095" starttime="20201107 13:33:33.084"></status>
</kw>
<msg timestamp="20201107 13:33:33.095" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201107 13:33:33.095" starttime="20201107 13:33:33.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:33:33.097" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:33:33.097" starttime="20201107 13:33:33.096"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:33:33.102" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:33:33.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:33:33.122" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:33:33.122" starttime="20201107 13:33:33.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:33:33.123" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:33:33.124" starttime="20201107 13:33:33.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:33:33.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:33:33.125" starttime="20201107 13:33:33.124"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:33.125" starttime="20201107 13:33:33.098"></status>
</kw>
<msg timestamp="20201107 13:33:33.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:33:33.126" starttime="20201107 13:33:33.098"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:33.126" starttime="20201107 13:33:33.097"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:33.126" starttime="20201107 13:33:33.097"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:33.126" starttime="20201107 13:33:33.083"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:33:33.127" critical="yes" starttime="20201107 13:33:33.082"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201107 13:33:33.128" starttime="20201107 13:33:33.033"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:32:17.382" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:32:17.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:32:17.385" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201107 13:32:17.385" starttime="20201107 13:32:17.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:32:17.386" level="INFO">om</msg>
<status status="PASS" endtime="20201107 13:32:17.386" starttime="20201107 13:32:17.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:32:17.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:32:17.387" starttime="20201107 13:32:17.386"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:17.387" starttime="20201107 13:32:17.377"></status>
</kw>
<msg timestamp="20201107 13:32:17.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:32:17.387" starttime="20201107 13:32:17.376"></status>
</kw>
<msg timestamp="20201107 13:32:17.388" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201107 13:32:17.388" starttime="20201107 13:32:17.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201107 13:32:17.388" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201107 13:32:17.388" starttime="20201107 13:32:17.388"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:32:17.393" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:32:17.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:32:17.406" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:32:17.406" starttime="20201107 13:32:17.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:32:17.408" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:32:17.408" starttime="20201107 13:32:17.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:32:17.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:32:17.409" starttime="20201107 13:32:17.408"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:17.409" starttime="20201107 13:32:17.390"></status>
</kw>
<msg timestamp="20201107 13:32:17.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:32:17.409" starttime="20201107 13:32:17.390"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:17.409" starttime="20201107 13:32:17.389"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:17.409" starttime="20201107 13:32:17.389"></status>
</kw>
<status status="PASS" endtime="20201107 13:32:17.410" starttime="20201107 13:32:17.375"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:32:17.410" critical="yes" starttime="20201107 13:32:17.374"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201107 13:32:17.412" starttime="20201107 13:32:17.318"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:35:30.959" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:35:30.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:35:30.967" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:35:30.967" starttime="20201107 13:35:30.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:35:30.968" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:35:30.968" starttime="20201107 13:35:30.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:35:30.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:35:30.969" starttime="20201107 13:35:30.968"></status>
</kw>
<status status="PASS" endtime="20201107 13:35:30.969" starttime="20201107 13:35:30.954"></status>
</kw>
<msg timestamp="20201107 13:35:30.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:35:30.970" starttime="20201107 13:35:30.954"></status>
</kw>
<msg timestamp="20201107 13:35:30.970" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:35:30.970" starttime="20201107 13:35:30.953"></status>
</kw>
<msg timestamp="20201107 13:35:30.970" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:35:30.970" starttime="20201107 13:35:30.953"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:35:30.975" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:35:30.975" starttime="20201107 13:35:30.975"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:35:30.976" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:35:30.976" starttime="20201107 13:35:30.976"></status>
</kw>
<status status="PASS" endtime="20201107 13:35:30.976" starttime="20201107 13:35:30.973"></status>
</kw>
<msg timestamp="20201107 13:35:30.976" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:35:30.976" starttime="20201107 13:35:30.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:35:30.977" starttime="20201107 13:35:30.977"></status>
</kw>
<msg timestamp="20201107 13:35:30.977" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:35:30.978" starttime="20201107 13:35:30.977"></status>
</kw>
<status status="PASS" endtime="20201107 13:35:30.978" starttime="20201107 13:35:30.972"></status>
</kw>
<msg timestamp="20201107 13:35:30.978" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:35:30.978" starttime="20201107 13:35:30.971"></status>
</kw>
<msg timestamp="20201107 13:35:30.978" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:35:30.978" starttime="20201107 13:35:30.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:35:30.982" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:36:17.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:36:17.932" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:35:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:35:33 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201107 13:36:17.932" starttime="20201107 13:35:30.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:36:17.934" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:35:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:35:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:35:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:35:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:35:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A5111667CC4E-&gt;f3ecbdc8-8be8-4df5-81f0-19a97b9cc826
2020-11-07 13:35:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-07 13:35:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-07 13:35:37 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-07 13:35:37 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756137883, maxDate=1605360937883, sequenceNumber=3, masterKeyId=2))
2020-11-07 13:35:37 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b7 ce ad 97 da 2e 38 b7 d6 df b7 dc 2e 40 03 48 01 5a 0d 33 30 35 35 33 33 37 30 34 39 31 37 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-07 13:35:37 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756137883, maxDate=1605360937883, sequenceNumber=3, masterKeyId=2)
2020-11-07 13:35:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:35:38 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:35:38 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:35:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604755900559_0003
2020-11-07 13:35:41 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756137883, maxDate=1605360937883, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b7 ce ad 97 da 2e 38 b7 d6 df b7 dc 2e 40 03 48 01 5a 0d 33 30 35 35 33 33 37 30 34 39 31 37 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-07 13:35:41 INFO  Configuration:2795 - resource-types.xml not found
2020-11-07 13:35:41 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-07 13:35:41 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-07 13:35:42 INFO  YarnClientImpl:329 - Submitted application application_1604755900559_0003
2020-11-07 13:35:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604755900559_0003/
2020-11-07 13:35:42 INFO  Job:1619 - Running job: job_1604755900559_0003
2020-11-07 13:35:50 INFO  Job:1640 - Job job_1604755900559_0003 running in uber mode : false
2020-11-07 13:35:50 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:36:03 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:36:05 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:36:06 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:36:13 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:36:17 INFO  Job:1658 - Job job_1604755900559_0003 completed successfully
2020-11-07 13:36:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1070937
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=56182
		Total time spent by all reduces in occupied slots (ms)=13900
		Total time spent by all map tasks (ms)=28091
		Total time spent by all reduce tasks (ms)=6950
		Total vcore-milliseconds taken by all map tasks=28091
		Total vcore-milliseconds taken by all reduce tasks=6950
		Total megabyte-milliseconds taken by all map tasks=57530368
		Total megabyte-milliseconds taken by all reduce tasks=14233600
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1763
		CPU time spent (ms)=9080
		Physical memory (bytes) snapshot=1535406080
		Virtual memory (bytes) snapshot=14038994944
		Total committed heap usage (bytes)=1370488832
		Peak Map Physical memory (bytes)=518971392
		Peak Map Virtual memory (bytes)=3510755328
		Peak Reduce Physical memory (bytes)=301117440
		Peak Reduce Virtual memory (bytes)=3525201920
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.966 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201107 13:36:17.934" starttime="20201107 13:36:17.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:36:17.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:36:17.935" starttime="20201107 13:36:17.934"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:17.935" starttime="20201107 13:35:30.979"></status>
</kw>
<msg timestamp="20201107 13:36:17.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:36:17.935" starttime="20201107 13:35:30.979"></status>
</kw>
<msg timestamp="20201107 13:36:17.936" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:35:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:35:33 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201107 13:36:17.936" starttime="20201107 13:35:30.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:36:17.936" starttime="20201107 13:36:17.936"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:36:17.936" critical="yes" starttime="20201107 13:35:30.952"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:36:17.942" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:36:17.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:36:17.950" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:36:17.950" starttime="20201107 13:36:17.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:36:17.951" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:36:17.952" starttime="20201107 13:36:17.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:36:17.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:36:17.952" starttime="20201107 13:36:17.952"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:17.952" starttime="20201107 13:36:17.939"></status>
</kw>
<msg timestamp="20201107 13:36:17.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:36:17.953" starttime="20201107 13:36:17.939"></status>
</kw>
<msg timestamp="20201107 13:36:17.953" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:36:17.953" starttime="20201107 13:36:17.938"></status>
</kw>
<msg timestamp="20201107 13:36:17.953" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:36:17.953" starttime="20201107 13:36:17.938"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:36:17.954" level="INFO">${random} = 41</msg>
<status status="PASS" endtime="20201107 13:36:17.954" starttime="20201107 13:36:17.953"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:36:17.958" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:36:17.958" starttime="20201107 13:36:17.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:36:17.959" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:36:17.959" starttime="20201107 13:36:17.958"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:17.959" starttime="20201107 13:36:17.957"></status>
</kw>
<msg timestamp="20201107 13:36:17.959" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:36:17.959" starttime="20201107 13:36:17.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:36:17.960" starttime="20201107 13:36:17.960"></status>
</kw>
<msg timestamp="20201107 13:36:17.960" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:36:17.960" starttime="20201107 13:36:17.959"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:17.960" starttime="20201107 13:36:17.956"></status>
</kw>
<msg timestamp="20201107 13:36:17.960" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:36:17.961" starttime="20201107 13:36:17.955"></status>
</kw>
<msg timestamp="20201107 13:36:17.961" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:36:17.961" starttime="20201107 13:36:17.954"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:36:17.964" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:36:17.964" starttime="20201107 13:36:17.964"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:36:17.965" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:36:17.965" starttime="20201107 13:36:17.965"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:17.965" starttime="20201107 13:36:17.963"></status>
</kw>
<msg timestamp="20201107 13:36:17.965" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:36:17.965" starttime="20201107 13:36:17.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:36:17.967" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201107 13:36:17.967" starttime="20201107 13:36:17.966"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:36:17.968" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201107 13:36:17.968" starttime="20201107 13:36:17.967"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:17.968" starttime="20201107 13:36:17.966"></status>
</kw>
<msg timestamp="20201107 13:36:17.968" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201107 13:36:17.968" starttime="20201107 13:36:17.966"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:17.968" starttime="20201107 13:36:17.962"></status>
</kw>
<msg timestamp="20201107 13:36:17.968" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201107 13:36:17.968" starttime="20201107 13:36:17.962"></status>
</kw>
<msg timestamp="20201107 13:36:17.969" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201107 13:36:17.969" starttime="20201107 13:36:17.961"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:36:17.972" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:36:17.972" starttime="20201107 13:36:17.972"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:36:17.972" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:36:17.973" starttime="20201107 13:36:17.972"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:17.973" starttime="20201107 13:36:17.971"></status>
</kw>
<msg timestamp="20201107 13:36:17.973" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:36:17.973" starttime="20201107 13:36:17.971"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:36:17.974" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201107 13:36:17.974" starttime="20201107 13:36:17.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:36:17.975" level="INFO">${result} = /wordcount-41.txt</msg>
<status status="PASS" endtime="20201107 13:36:17.975" starttime="20201107 13:36:17.974"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:17.975" starttime="20201107 13:36:17.973"></status>
</kw>
<msg timestamp="20201107 13:36:17.975" level="INFO">${path_with_leading} = /wordcount-41.txt</msg>
<status status="PASS" endtime="20201107 13:36:17.975" starttime="20201107 13:36:17.973"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:17.976" starttime="20201107 13:36:17.970"></status>
</kw>
<msg timestamp="20201107 13:36:17.976" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-41.txt</msg>
<status status="PASS" endtime="20201107 13:36:17.976" starttime="20201107 13:36:17.969"></status>
</kw>
<msg timestamp="20201107 13:36:17.976" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-41.txt</msg>
<status status="PASS" endtime="20201107 13:36:17.976" starttime="20201107 13:36:17.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:36:17.981" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-41.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:36:53.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:36:53.480" level="INFO">${output} = 2020-11-07 13:36:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-07 13:36:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
202...</msg>
<status status="PASS" endtime="20201107 13:36:53.480" starttime="20201107 13:36:17.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:36:53.482" level="INFO">2020-11-07 13:36:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-07 13:36:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-07 13:36:20 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756180721, maxDate=1605360980721, sequenceNumber=4, masterKeyId=2))
2020-11-07 13:36:20 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 83 9d b0 97 da 2e 38 83 a5 e2 b7 dc 2e 40 04 48 01 5a 0d 33 30 35 35 33 33 37 30 34 39 31 37 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-07 13:36:20 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756180721, maxDate=1605360980721, sequenceNumber=4, masterKeyId=2)
2020-11-07 13:36:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:36:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:36:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:36:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:36:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:36:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-17C3516DEE33-&gt;f3ecbdc8-8be8-4df5-81f0-19a97b9cc826
2020-11-07 13:36:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:36:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:36:23 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:36:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604755900559_0004
2020-11-07 13:36:23 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756180721, maxDate=1605360980721, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 83 9d b0 97 da 2e 38 83 a5 e2 b7 dc 2e 40 04 48 01 5a 0d 33 30 35 35 33 33 37 30 34 39 31 37 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-07 13:36:23 INFO  Configuration:2795 - resource-types.xml not found
2020-11-07 13:36:23 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-07 13:36:23 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-07 13:36:24 INFO  YarnClientImpl:329 - Submitted application application_1604755900559_0004
2020-11-07 13:36:24 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604755900559_0004/
2020-11-07 13:36:24 INFO  Job:1619 - Running job: job_1604755900559_0004
2020-11-07 13:36:32 INFO  Job:1640 - Job job_1604755900559_0004 running in uber mode : false
2020-11-07 13:36:32 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:36:44 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:36:45 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:36:46 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:36:51 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:36:52 INFO  Job:1658 - Job job_1604755900559_0004 completed successfully
2020-11-07 13:36:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1133311
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53406
		Total time spent by all reduces in occupied slots (ms)=8980
		Total time spent by all map tasks (ms)=26703
		Total time spent by all reduce tasks (ms)=4490
		Total vcore-milliseconds taken by all map tasks=26703
		Total vcore-milliseconds taken by all reduce tasks=4490
		Total megabyte-milliseconds taken by all map tasks=54687744
		Total megabyte-milliseconds taken by all reduce tasks=9195520
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1085
		CPU time spent (ms)=9500
		Physical memory (bytes) snapshot=1468874752
		Virtual memory (bytes) snapshot=14063022080
		Total committed heap usage (bytes)=1267728384
		Peak Map Physical memory (bytes)=393388032
		Peak Map Virtual memory (bytes)=3512717312
		Peak Reduce Physical memory (bytes)=298835968
		Peak Reduce Virtual memory (bytes)=3529740288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201107 13:36:53.482" starttime="20201107 13:36:53.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:36:53.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:36:53.483" starttime="20201107 13:36:53.482"></status>
</kw>
<status status="PASS" endtime="20201107 13:36:53.483" starttime="20201107 13:36:17.977"></status>
</kw>
<msg timestamp="20201107 13:36:53.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:36:53.483" starttime="20201107 13:36:17.977"></status>
</kw>
<msg timestamp="20201107 13:36:53.484" level="INFO">${output} = 2020-11-07 13:36:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-07 13:36:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
202...</msg>
<status status="PASS" endtime="20201107 13:36:53.484" starttime="20201107 13:36:17.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201107 13:36:53.485" starttime="20201107 13:36:53.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:36:53.485" starttime="20201107 13:36:53.485"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:36:53.486" critical="yes" starttime="20201107 13:36:17.937"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201107 13:36:53.487" starttime="20201107 13:35:30.897"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:33:51.618" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:33:51.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:33:51.625" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:33:51.625" starttime="20201107 13:33:51.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:33:51.626" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:33:51.626" starttime="20201107 13:33:51.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:33:51.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:33:51.628" starttime="20201107 13:33:51.626"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:51.628" starttime="20201107 13:33:51.613"></status>
</kw>
<msg timestamp="20201107 13:33:51.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:33:51.628" starttime="20201107 13:33:51.613"></status>
</kw>
<msg timestamp="20201107 13:33:51.629" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:33:51.629" starttime="20201107 13:33:51.613"></status>
</kw>
<msg timestamp="20201107 13:33:51.629" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:33:51.629" starttime="20201107 13:33:51.612"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:33:51.634" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:33:51.634" starttime="20201107 13:33:51.633"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:33:51.635" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:33:51.635" starttime="20201107 13:33:51.634"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:51.635" starttime="20201107 13:33:51.632"></status>
</kw>
<msg timestamp="20201107 13:33:51.635" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:33:51.635" starttime="20201107 13:33:51.631"></status>
</kw>
<status status="PASS" endtime="20201107 13:33:51.635" starttime="20201107 13:33:51.631"></status>
</kw>
<msg timestamp="20201107 13:33:51.636" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:33:51.636" starttime="20201107 13:33:51.630"></status>
</kw>
<msg timestamp="20201107 13:33:51.636" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:33:51.636" starttime="20201107 13:33:51.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:33:51.639" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:34:35.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:34:35.915" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:33:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:33:54 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201107 13:34:35.915" starttime="20201107 13:33:51.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:34:35.916" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:33:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:33:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:33:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:33:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:33:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-38FE531EB3F0-&gt;f3ecbdc8-8be8-4df5-81f0-19a97b9cc826
2020-11-07 13:33:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-07 13:33:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-07 13:33:58 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-07 13:33:59 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756039184, maxDate=1605360839184, sequenceNumber=1, masterKeyId=2))
2020-11-07 13:33:59 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d9 c9 a7 97 da 2e 38 d9 d1 d9 b7 dc 2e 40 01 48 01 5a 0d 33 30 35 35 33 33 37 30 34 39 31 37 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-07 13:33:59 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756039184, maxDate=1605360839184, sequenceNumber=1, masterKeyId=2)
2020-11-07 13:33:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:33:59 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:34:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604755900559_0001
2020-11-07 13:34:00 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756039184, maxDate=1605360839184, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d9 c9 a7 97 da 2e 38 d9 d1 d9 b7 dc 2e 40 01 48 01 5a 0d 33 30 35 35 33 33 37 30 34 39 31 37 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-07 13:34:00 INFO  Configuration:2795 - resource-types.xml not found
2020-11-07 13:34:00 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-07 13:34:00 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-07 13:34:02 INFO  YarnClientImpl:329 - Submitted application application_1604755900559_0001
2020-11-07 13:34:02 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604755900559_0001/
2020-11-07 13:34:02 INFO  Job:1619 - Running job: job_1604755900559_0001
2020-11-07 13:34:13 INFO  Job:1640 - Job job_1604755900559_0001 running in uber mode : false
2020-11-07 13:34:13 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:34:27 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:34:29 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:34:34 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:34:35 INFO  Job:1658 - Job job_1604755900559_0001 completed successfully
2020-11-07 13:34:35 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1071149
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=60288
		Total time spent by all reduces in occupied slots (ms)=8932
		Total time spent by all map tasks (ms)=30144
		Total time spent by all reduce tasks (ms)=4466
		Total vcore-milliseconds taken by all map tasks=30144
		Total vcore-milliseconds taken by all reduce tasks=4466
		Total megabyte-milliseconds taken by all map tasks=61734912
		Total megabyte-milliseconds taken by all reduce tasks=9146368
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1839
		CPU time spent (ms)=9640
		Physical memory (bytes) snapshot=1608626176
		Virtual memory (bytes) snapshot=14055694336
		Total committed heap usage (bytes)=1413480448
		Peak Map Physical memory (bytes)=539418624
		Peak Map Virtual memory (bytes)=3511033856
		Peak Reduce Physical memory (bytes)=294834176
		Peak Reduce Virtual memory (bytes)=3526438912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.867 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201107 13:34:35.917" starttime="20201107 13:34:35.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:34:35.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:34:35.917" starttime="20201107 13:34:35.917"></status>
</kw>
<status status="PASS" endtime="20201107 13:34:35.918" starttime="20201107 13:33:51.637"></status>
</kw>
<msg timestamp="20201107 13:34:35.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:34:35.918" starttime="20201107 13:33:51.637"></status>
</kw>
<msg timestamp="20201107 13:34:35.918" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:33:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:33:54 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201107 13:34:35.919" starttime="20201107 13:33:51.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:34:35.919" starttime="20201107 13:34:35.919"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:34:35.919" critical="yes" starttime="20201107 13:33:51.611"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:34:35.925" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:34:35.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:34:35.932" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:34:35.932" starttime="20201107 13:34:35.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:34:35.933" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:34:35.933" starttime="20201107 13:34:35.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:34:35.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:34:35.934" starttime="20201107 13:34:35.934"></status>
</kw>
<status status="PASS" endtime="20201107 13:34:35.934" starttime="20201107 13:34:35.922"></status>
</kw>
<msg timestamp="20201107 13:34:35.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:34:35.935" starttime="20201107 13:34:35.922"></status>
</kw>
<msg timestamp="20201107 13:34:35.935" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:34:35.935" starttime="20201107 13:34:35.922"></status>
</kw>
<msg timestamp="20201107 13:34:35.935" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:34:35.935" starttime="20201107 13:34:35.921"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:34:35.936" level="INFO">${random} = 02</msg>
<status status="PASS" endtime="20201107 13:34:35.936" starttime="20201107 13:34:35.935"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:34:35.940" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:34:35.940" starttime="20201107 13:34:35.939"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:34:35.940" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:34:35.940" starttime="20201107 13:34:35.940"></status>
</kw>
<status status="PASS" endtime="20201107 13:34:35.941" starttime="20201107 13:34:35.939"></status>
</kw>
<msg timestamp="20201107 13:34:35.941" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:34:35.941" starttime="20201107 13:34:35.938"></status>
</kw>
<status status="PASS" endtime="20201107 13:34:35.941" starttime="20201107 13:34:35.937"></status>
</kw>
<msg timestamp="20201107 13:34:35.941" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:34:35.942" starttime="20201107 13:34:35.937"></status>
</kw>
<msg timestamp="20201107 13:34:35.942" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:34:35.942" starttime="20201107 13:34:35.936"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:34:35.946" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:34:35.946" starttime="20201107 13:34:35.945"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:34:35.946" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:34:35.946" starttime="20201107 13:34:35.946"></status>
</kw>
<status status="PASS" endtime="20201107 13:34:35.947" starttime="20201107 13:34:35.945"></status>
</kw>
<msg timestamp="20201107 13:34:35.947" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:34:35.947" starttime="20201107 13:34:35.944"></status>
</kw>
<status status="PASS" endtime="20201107 13:34:35.947" starttime="20201107 13:34:35.943"></status>
</kw>
<msg timestamp="20201107 13:34:35.947" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201107 13:34:35.947" starttime="20201107 13:34:35.943"></status>
</kw>
<msg timestamp="20201107 13:34:35.947" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201107 13:34:35.948" starttime="20201107 13:34:35.942"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:34:35.951" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:34:35.951" starttime="20201107 13:34:35.951"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:34:35.952" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:34:35.952" starttime="20201107 13:34:35.951"></status>
</kw>
<status status="PASS" endtime="20201107 13:34:35.952" starttime="20201107 13:34:35.950"></status>
</kw>
<msg timestamp="20201107 13:34:35.952" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:34:35.952" starttime="20201107 13:34:35.950"></status>
</kw>
<status status="PASS" endtime="20201107 13:34:35.952" starttime="20201107 13:34:35.949"></status>
</kw>
<msg timestamp="20201107 13:34:35.952" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-02.txt</msg>
<status status="PASS" endtime="20201107 13:34:35.952" starttime="20201107 13:34:35.949"></status>
</kw>
<msg timestamp="20201107 13:34:35.953" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-02.txt</msg>
<status status="PASS" endtime="20201107 13:34:35.953" starttime="20201107 13:34:35.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:34:35.957" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-02.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:35:11.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:35:11.990" level="INFO">${output} = 2020-11-07 13:34:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-07 13:34:38 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
202...</msg>
<status status="PASS" endtime="20201107 13:35:11.990" starttime="20201107 13:34:35.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:35:11.992" level="INFO">2020-11-07 13:34:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-07 13:34:38 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
2020-11-07 13:34:38 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756078672, maxDate=1605360878672, sequenceNumber=2, masterKeyId=2))
2020-11-07 13:34:38 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e3 ff a9 97 da 2e 38 e3 87 dc b7 dc 2e 40 02 48 01 5a 0d 33 30 35 35 33 33 37 30 34 39 31 37 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-07 13:34:38 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756078672, maxDate=1605360878672, sequenceNumber=2, masterKeyId=2)
2020-11-07 13:34:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:34:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:34:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:34:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:34:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:34:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7DA346CF8CD4-&gt;f3ecbdc8-8be8-4df5-81f0-19a97b9cc826
2020-11-07 13:34:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:34:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:34:40 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:34:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604755900559_0002
2020-11-07 13:34:41 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604756078672, maxDate=1605360878672, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e3 ff a9 97 da 2e 38 e3 87 dc b7 dc 2e 40 02 48 01 5a 0d 33 30 35 35 33 33 37 30 34 39 31 37 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-11-07 13:34:41 INFO  Configuration:2795 - resource-types.xml not found
2020-11-07 13:34:41 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-07 13:34:41 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-07 13:34:42 INFO  YarnClientImpl:329 - Submitted application application_1604755900559_0002
2020-11-07 13:34:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604755900559_0002/
2020-11-07 13:34:43 INFO  Job:1619 - Running job: job_1604755900559_0002
2020-11-07 13:34:51 INFO  Job:1640 - Job job_1604755900559_0002 running in uber mode : false
2020-11-07 13:34:51 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:35:03 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:35:05 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:35:06 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:35:10 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:35:11 INFO  Job:1658 - Job job_1604755900559_0002 completed successfully
2020-11-07 13:35:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1133395
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=55842
		Total time spent by all reduces in occupied slots (ms)=10308
		Total time spent by all map tasks (ms)=27921
		Total time spent by all reduce tasks (ms)=5154
		Total vcore-milliseconds taken by all map tasks=27921
		Total vcore-milliseconds taken by all reduce tasks=5154
		Total megabyte-milliseconds taken by all map tasks=57182208
		Total megabyte-milliseconds taken by all reduce tasks=10555392
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1650
		CPU time spent (ms)=9550
		Physical memory (bytes) snapshot=1617981440
		Virtual memory (bytes) snapshot=14064467968
		Total committed heap usage (bytes)=1440743424
		Peak Map Physical memory (bytes)=543256576
		Peak Map Virtual memory (bytes)=3513917440
		Peak Reduce Physical memory (bytes)=302960640
		Peak Reduce Virtual memory (bytes)=3529248768
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201107 13:35:11.992" starttime="20201107 13:35:11.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:35:11.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:35:11.993" starttime="20201107 13:35:11.992"></status>
</kw>
<status status="PASS" endtime="20201107 13:35:11.993" starttime="20201107 13:34:35.954"></status>
</kw>
<msg timestamp="20201107 13:35:11.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:35:11.993" starttime="20201107 13:34:35.954"></status>
</kw>
<msg timestamp="20201107 13:35:11.994" level="INFO">${output} = 2020-11-07 13:34:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-07 13:34:38 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.7:10200
202...</msg>
<status status="PASS" endtime="20201107 13:35:11.994" starttime="20201107 13:34:35.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201107 13:35:11.995" starttime="20201107 13:35:11.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:35:11.996" starttime="20201107 13:35:11.995"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:35:11.996" critical="yes" starttime="20201107 13:34:35.920"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201107 13:35:11.997" starttime="20201107 13:33:51.552"></status>
</suite>
<status status="PASS" elapsedtime="226351" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
