<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201107 13:14:52.610" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:19.907" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:00:22.401" level="INFO">${rc} = 255</msg>
<msg timestamp="20201107 13:00:22.402" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201107 13:00:22.402" starttime="20201107 13:00:19.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:00:22.403" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201107 13:00:22.403" starttime="20201107 13:00:22.402"></status>
</kw>
<msg timestamp="20201107 13:00:22.403" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201107 13:00:22.403" starttime="20201107 13:00:19.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:22.410" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:00:24.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:00:24.867" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:00:24.868" starttime="20201107 13:00:22.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:00:24.869" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:00:24.869" starttime="20201107 13:00:24.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:00:24.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:00:24.870" starttime="20201107 13:00:24.869"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:24.870" starttime="20201107 13:00:22.405"></status>
</kw>
<msg timestamp="20201107 13:00:24.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:00:24.870" starttime="20201107 13:00:22.405"></status>
</kw>
<msg timestamp="20201107 13:00:24.870" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201107 13:00:24.870" starttime="20201107 13:00:22.404"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201107 13:00:24.871" starttime="20201107 13:00:24.870"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:24.871" starttime="20201107 13:00:22.404"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:24.871" starttime="20201107 13:00:22.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:24.877" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:00:27.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:00:27.204" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:00:27.204" starttime="20201107 13:00:24.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:00:27.205" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:00:27.205" starttime="20201107 13:00:27.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:00:27.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:00:27.206" starttime="20201107 13:00:27.205"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:27.206" starttime="20201107 13:00:24.873"></status>
</kw>
<msg timestamp="20201107 13:00:27.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:00:27.206" starttime="20201107 13:00:24.873"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:27.207" starttime="20201107 13:00:24.872"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:27.207" starttime="20201107 13:00:24.872"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:27.207" starttime="20201107 13:00:24.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201107 13:00:27.208" starttime="20201107 13:00:27.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:27.213" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:00:29.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:00:29.661" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:00:27.069Z",
  "modificat...</msg>
<status status="PASS" endtime="20201107 13:00:29.662" starttime="20201107 13:00:27.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:00:29.663" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:00:27.069Z",
  "modificationTime" : "2020-11-07T13:00:27.069Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201107 13:00:29.663" starttime="20201107 13:00:29.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:00:29.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:00:29.664" starttime="20201107 13:00:29.663"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:29.664" starttime="20201107 13:00:27.209"></status>
</kw>
<msg timestamp="20201107 13:00:29.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:00:29.664" starttime="20201107 13:00:27.208"></status>
</kw>
<msg timestamp="20201107 13:00:29.664" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:00:27.069Z",
  "modificat...</msg>
<status status="PASS" endtime="20201107 13:00:29.664" starttime="20201107 13:00:27.208"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201107 13:00:29.665" starttime="20201107 13:00:29.665"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:00:29.669" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:00:29.669" starttime="20201107 13:00:29.669"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:00:29.670" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:00:29.670" starttime="20201107 13:00:29.670"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:29.670" starttime="20201107 13:00:29.668"></status>
</kw>
<msg timestamp="20201107 13:00:29.671" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:00:29.671" starttime="20201107 13:00:29.668"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:29.671" starttime="20201107 13:00:29.667"></status>
</kw>
<msg timestamp="20201107 13:00:29.671" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201107 13:00:29.671" starttime="20201107 13:00:29.666"></status>
</kw>
<msg timestamp="20201107 13:00:29.671" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201107 13:00:29.671" starttime="20201107 13:00:29.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:29.675" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:00:32.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:00:32.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:00:32.420" starttime="20201107 13:00:29.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:00:32.421" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:00:32.421" starttime="20201107 13:00:32.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:00:32.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:00:32.422" starttime="20201107 13:00:32.422"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:32.422" starttime="20201107 13:00:29.672"></status>
</kw>
<msg timestamp="20201107 13:00:32.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:00:32.423" starttime="20201107 13:00:29.672"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:32.423" starttime="20201107 13:00:29.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:32.427" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:00:39.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:00:39.099" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:00:39.099" starttime="20201107 13:00:32.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:00:39.101" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:00:39.101" starttime="20201107 13:00:39.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:00:39.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:00:39.102" starttime="20201107 13:00:39.101"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:39.102" starttime="20201107 13:00:32.424"></status>
</kw>
<msg timestamp="20201107 13:00:39.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:00:39.102" starttime="20201107 13:00:32.424"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:39.103" starttime="20201107 13:00:32.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:39.108" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:00:43.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:00:43.867" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:00:43.867" starttime="20201107 13:00:39.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:00:43.869" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:00:43.869" starttime="20201107 13:00:43.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:00:43.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:00:43.870" starttime="20201107 13:00:43.869"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:43.870" starttime="20201107 13:00:39.104"></status>
</kw>
<msg timestamp="20201107 13:00:43.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:00:43.870" starttime="20201107 13:00:39.104"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:43.870" starttime="20201107 13:00:39.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:43.875" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:00:48.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:00:48.527" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:00:48.527" starttime="20201107 13:00:43.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:00:48.528" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:00:48.529" starttime="20201107 13:00:48.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:00:48.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:00:48.529" starttime="20201107 13:00:48.529"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:48.529" starttime="20201107 13:00:43.872"></status>
</kw>
<msg timestamp="20201107 13:00:48.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:00:48.530" starttime="20201107 13:00:43.871"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:48.530" starttime="20201107 13:00:43.871"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:00:48.530" critical="yes" starttime="20201107 13:00:19.899"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:00:48.536" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:00:48.536" starttime="20201107 13:00:48.536"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:00:48.537" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:00:48.537" starttime="20201107 13:00:48.536"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:48.537" starttime="20201107 13:00:48.535"></status>
</kw>
<msg timestamp="20201107 13:00:48.537" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:00:48.537" starttime="20201107 13:00:48.535"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:48.538" starttime="20201107 13:00:48.534"></status>
</kw>
<msg timestamp="20201107 13:00:48.538" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:00:48.538" starttime="20201107 13:00:48.533"></status>
</kw>
<msg timestamp="20201107 13:00:48.538" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:00:48.538" starttime="20201107 13:00:48.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:48.542" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:00:50.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:00:50.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:00:50.926" starttime="20201107 13:00:48.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:00:50.928" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:00:50.928" starttime="20201107 13:00:50.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:00:50.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:00:50.928" starttime="20201107 13:00:50.928"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:50.929" starttime="20201107 13:00:48.539"></status>
</kw>
<msg timestamp="20201107 13:00:50.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:00:50.929" starttime="20201107 13:00:48.539"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:50.929" starttime="20201107 13:00:48.538"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:50.933" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:00:53.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:00:53.154" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:00:53.154" starttime="20201107 13:00:50.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:00:53.155" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:00:53.155" starttime="20201107 13:00:53.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:00:53.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:00:53.156" starttime="20201107 13:00:53.155"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:53.156" starttime="20201107 13:00:50.930"></status>
</kw>
<msg timestamp="20201107 13:00:53.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:00:53.156" starttime="20201107 13:00:50.930"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:53.157" starttime="20201107 13:00:50.929"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:00:53.157" critical="yes" starttime="20201107 13:00:48.531"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201107 13:00:53.158" starttime="20201107 13:00:19.839"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:02:37.102" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:02:37.102" starttime="20201107 13:02:37.102"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:02:37.103" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:02:37.103" starttime="20201107 13:02:37.102"></status>
</kw>
<status status="PASS" endtime="20201107 13:02:37.103" starttime="20201107 13:02:37.101"></status>
</kw>
<msg timestamp="20201107 13:02:37.103" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:02:37.103" starttime="20201107 13:02:37.101"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:02:37.104" starttime="20201107 13:02:37.104"></status>
</kw>
<msg timestamp="20201107 13:02:37.104" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:02:37.104" starttime="20201107 13:02:37.104"></status>
</kw>
<status status="PASS" endtime="20201107 13:02:37.105" starttime="20201107 13:02:37.100"></status>
</kw>
<msg timestamp="20201107 13:02:37.105" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:02:37.105" starttime="20201107 13:02:37.099"></status>
</kw>
<msg timestamp="20201107 13:02:37.105" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:02:37.105" starttime="20201107 13:02:37.098"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:02:37.106" level="INFO">${random} = 90065</msg>
<status status="PASS" endtime="20201107 13:02:37.106" starttime="20201107 13:02:37.105"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:02:37.112" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-90065 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:02:41.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:02:41.013" level="INFO">${output} = 2020-11-07 13:02:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:02:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-07 ...</msg>
<status status="PASS" endtime="20201107 13:02:41.013" starttime="20201107 13:02:37.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:02:41.014" level="INFO">2020-11-07 13:02:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:02:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-07 13:02:39 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-07 13:02:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:02:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EA110BC18593-&gt;a0442b40-4857-40cf-be9b-83c129afc9f8
2020-11-07 13:02:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201107 13:02:41.014" starttime="20201107 13:02:41.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:02:41.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:02:41.015" starttime="20201107 13:02:41.014"></status>
</kw>
<status status="PASS" endtime="20201107 13:02:41.015" starttime="20201107 13:02:37.107"></status>
</kw>
<msg timestamp="20201107 13:02:41.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:02:41.015" starttime="20201107 13:02:37.107"></status>
</kw>
<msg timestamp="20201107 13:02:41.016" level="INFO">${result} = 2020-11-07 13:02:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:02:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-07 ...</msg>
<status status="PASS" endtime="20201107 13:02:41.016" starttime="20201107 13:02:37.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:02:41.021" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:02:43.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:02:43.090" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-07 13:01 ofs://om/volume1/bucket1/ozone-72259
-rw-...</msg>
<status status="PASS" endtime="20201107 13:02:43.090" starttime="20201107 13:02:41.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:02:43.092" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-07 13:01 ofs://om/volume1/bucket1/ozone-72259
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-07 13:02 ofs://om/volume1/bucket1/ozone-90065
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:00 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:02 ofs://om/volume1/bucket1/wordcount-43.txt</msg>
<status status="PASS" endtime="20201107 13:02:43.092" starttime="20201107 13:02:43.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:02:43.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:02:43.093" starttime="20201107 13:02:43.092"></status>
</kw>
<status status="PASS" endtime="20201107 13:02:43.093" starttime="20201107 13:02:41.018"></status>
</kw>
<msg timestamp="20201107 13:02:43.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:02:43.093" starttime="20201107 13:02:41.018"></status>
</kw>
<msg timestamp="20201107 13:02:43.093" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-07 13:01 ofs://om/volume1/bucket1/ozone-72259
-rw-...</msg>
<status status="PASS" endtime="20201107 13:02:43.093" starttime="20201107 13:02:41.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:02:43.094" starttime="20201107 13:02:43.093"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:02:43.094" critical="yes" starttime="20201107 13:02:37.097"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201107 13:02:43.096" starttime="20201107 13:02:37.040"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:00:58.849" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:00:58.849" starttime="20201107 13:00:58.848"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:00:58.849" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:00:58.849" starttime="20201107 13:00:58.849"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:58.849" starttime="20201107 13:00:58.847"></status>
</kw>
<msg timestamp="20201107 13:00:58.850" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:00:58.850" starttime="20201107 13:00:58.847"></status>
</kw>
<status status="PASS" endtime="20201107 13:00:58.850" starttime="20201107 13:00:58.846"></status>
</kw>
<msg timestamp="20201107 13:00:58.850" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:00:58.850" starttime="20201107 13:00:58.845"></status>
</kw>
<msg timestamp="20201107 13:00:58.850" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:00:58.850" starttime="20201107 13:00:58.844"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:00:58.851" level="INFO">${random} = 72259</msg>
<status status="PASS" endtime="20201107 13:00:58.851" starttime="20201107 13:00:58.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:00:58.858" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-72259 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:01:02.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:01:02.965" level="INFO">${output} = 2020-11-07 13:01:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:01:01 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-07 ...</msg>
<status status="PASS" endtime="20201107 13:01:02.965" starttime="20201107 13:00:58.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:01:02.967" level="INFO">2020-11-07 13:01:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:01:01 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-07 13:01:01 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-07 13:01:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:01:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7342F2025CFE-&gt;a0442b40-4857-40cf-be9b-83c129afc9f8
2020-11-07 13:01:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201107 13:01:02.967" starttime="20201107 13:01:02.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:01:02.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:01:02.968" starttime="20201107 13:01:02.967"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:02.968" starttime="20201107 13:00:58.852"></status>
</kw>
<msg timestamp="20201107 13:01:02.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:01:02.968" starttime="20201107 13:00:58.852"></status>
</kw>
<msg timestamp="20201107 13:01:02.968" level="INFO">${result} = 2020-11-07 13:01:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:01:01 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-07 ...</msg>
<status status="PASS" endtime="20201107 13:01:02.969" starttime="20201107 13:00:58.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:01:02.976" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:01:05.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:01:05.109" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-07 13:01 o3fs://bucket1.volume1.om/ozone-72259
dr...</msg>
<status status="PASS" endtime="20201107 13:01:05.109" starttime="20201107 13:01:02.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:01:05.110" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-07 13:01 o3fs://bucket1.volume1.om/ozone-72259
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:00 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:01:05.110" starttime="20201107 13:01:05.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:01:05.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:01:05.111" starttime="20201107 13:01:05.111"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:05.112" starttime="20201107 13:01:02.973"></status>
</kw>
<msg timestamp="20201107 13:01:05.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:01:05.112" starttime="20201107 13:01:02.969"></status>
</kw>
<msg timestamp="20201107 13:01:05.112" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-07 13:01 o3fs://bucket1.volume1.om/ozone-72259
dr...</msg>
<status status="PASS" endtime="20201107 13:01:05.112" starttime="20201107 13:01:02.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:01:05.113" starttime="20201107 13:01:05.112"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:01:05.113" critical="yes" starttime="20201107 13:00:58.843"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201107 13:01:05.114" starttime="20201107 13:00:58.787"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:02:48.616" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:02:48.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:02:48.623" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:02:48.623" starttime="20201107 13:02:48.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:02:48.624" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:02:48.624" starttime="20201107 13:02:48.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:02:48.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:02:48.625" starttime="20201107 13:02:48.624"></status>
</kw>
<status status="PASS" endtime="20201107 13:02:48.625" starttime="20201107 13:02:48.608"></status>
</kw>
<msg timestamp="20201107 13:02:48.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:02:48.625" starttime="20201107 13:02:48.608"></status>
</kw>
<msg timestamp="20201107 13:02:48.626" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:02:48.626" starttime="20201107 13:02:48.607"></status>
</kw>
<msg timestamp="20201107 13:02:48.626" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:02:48.626" starttime="20201107 13:02:48.605"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:02:48.632" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:02:48.632" starttime="20201107 13:02:48.631"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:02:48.632" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:02:48.632" starttime="20201107 13:02:48.632"></status>
</kw>
<status status="PASS" endtime="20201107 13:02:48.633" starttime="20201107 13:02:48.629"></status>
</kw>
<msg timestamp="20201107 13:02:48.633" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:02:48.633" starttime="20201107 13:02:48.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:02:48.634" starttime="20201107 13:02:48.633"></status>
</kw>
<msg timestamp="20201107 13:02:48.634" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:02:48.634" starttime="20201107 13:02:48.633"></status>
</kw>
<status status="PASS" endtime="20201107 13:02:48.634" starttime="20201107 13:02:48.628"></status>
</kw>
<msg timestamp="20201107 13:02:48.634" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:02:48.634" starttime="20201107 13:02:48.627"></status>
</kw>
<msg timestamp="20201107 13:02:48.635" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:02:48.635" starttime="20201107 13:02:48.626"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:02:48.639" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:03:24.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:03:24.833" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:02:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:02:51 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201107 13:03:24.833" starttime="20201107 13:02:48.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:03:24.835" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:02:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:02:51 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-07 13:02:51 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-07 13:02:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:02:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DDC8606E109E-&gt;a0442b40-4857-40cf-be9b-83c129afc9f8
2020-11-07 13:02:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-07 13:02:52 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-07 13:02:52 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:02:52 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-07 13:02:53 INFO  JobSubmitter:198 - number of splits:3
2020-11-07 13:02:53 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604753982863_0003
2020-11-07 13:02:53 INFO  YarnClientImpl:273 - Submitted application application_1604753982863_0003
2020-11-07 13:02:53 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604753982863_0003/
2020-11-07 13:02:53 INFO  Job:1339 - Running job: job_1604753982863_0003
2020-11-07 13:03:00 INFO  Job:1360 - Job job_1604753982863_0003 running in uber mode : false
2020-11-07 13:03:00 INFO  Job:1367 -  map 0% reduce 0%
2020-11-07 13:03:07 INFO  Job:1367 -  map 33% reduce 0%
2020-11-07 13:03:13 INFO  Job:1367 -  map 67% reduce 0%
2020-11-07 13:03:18 INFO  Job:1367 -  map 100% reduce 0%
2020-11-07 13:03:24 INFO  Job:1367 -  map 100% reduce 100%
2020-11-07 13:03:24 INFO  Job:1378 - Job job_1604753982863_0003 completed successfully
2020-11-07 13:03:24 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615229
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45688
		Total time spent by all reduces in occupied slots (ms)=17872
		Total time spent by all map tasks (ms)=11422
		Total time spent by all reduce tasks (ms)=4468
		Total vcore-milliseconds taken by all map tasks=11422
		Total vcore-milliseconds taken by all reduce tasks=4468
		Total megabyte-milliseconds taken by all map tasks=46784512
		Total megabyte-milliseconds taken by all reduce tasks=18300928
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=714
		CPU time spent (ms)=8150
		Physical memory (bytes) snapshot=1150537728
		Virtual memory (bytes) snapshot=15789342720
		Total committed heap usage (bytes)=1016594432
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.756 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201107 13:03:24.835" starttime="20201107 13:03:24.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:03:24.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:03:24.836" starttime="20201107 13:03:24.835"></status>
</kw>
<status status="PASS" endtime="20201107 13:03:24.836" starttime="20201107 13:02:48.636"></status>
</kw>
<msg timestamp="20201107 13:03:24.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:03:24.836" starttime="20201107 13:02:48.636"></status>
</kw>
<msg timestamp="20201107 13:03:24.837" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:02:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:02:51 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201107 13:03:24.837" starttime="20201107 13:02:48.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:03:24.837" starttime="20201107 13:03:24.837"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:03:24.838" critical="yes" starttime="20201107 13:02:48.603"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:03:24.844" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:03:24.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:03:24.851" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:03:24.851" starttime="20201107 13:03:24.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:03:24.852" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:03:24.853" starttime="20201107 13:03:24.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:03:24.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:03:24.853" starttime="20201107 13:03:24.853"></status>
</kw>
<status status="PASS" endtime="20201107 13:03:24.854" starttime="20201107 13:03:24.841"></status>
</kw>
<msg timestamp="20201107 13:03:24.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:03:24.854" starttime="20201107 13:03:24.840"></status>
</kw>
<msg timestamp="20201107 13:03:24.854" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:03:24.854" starttime="20201107 13:03:24.840"></status>
</kw>
<msg timestamp="20201107 13:03:24.855" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:03:24.855" starttime="20201107 13:03:24.840"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:03:24.855" level="INFO">${random} = 32</msg>
<status status="PASS" endtime="20201107 13:03:24.855" starttime="20201107 13:03:24.855"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:03:24.860" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:03:24.860" starttime="20201107 13:03:24.859"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:03:24.860" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:03:24.861" starttime="20201107 13:03:24.860"></status>
</kw>
<status status="PASS" endtime="20201107 13:03:24.861" starttime="20201107 13:03:24.859"></status>
</kw>
<msg timestamp="20201107 13:03:24.861" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:03:24.861" starttime="20201107 13:03:24.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:03:24.862" starttime="20201107 13:03:24.862"></status>
</kw>
<msg timestamp="20201107 13:03:24.862" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:03:24.862" starttime="20201107 13:03:24.861"></status>
</kw>
<status status="PASS" endtime="20201107 13:03:24.862" starttime="20201107 13:03:24.857"></status>
</kw>
<msg timestamp="20201107 13:03:24.863" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:03:24.863" starttime="20201107 13:03:24.856"></status>
</kw>
<msg timestamp="20201107 13:03:24.863" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:03:24.863" starttime="20201107 13:03:24.855"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:03:24.866" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:03:24.866" starttime="20201107 13:03:24.866"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:03:24.867" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:03:24.867" starttime="20201107 13:03:24.866"></status>
</kw>
<status status="PASS" endtime="20201107 13:03:24.867" starttime="20201107 13:03:24.865"></status>
</kw>
<msg timestamp="20201107 13:03:24.867" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:03:24.868" starttime="20201107 13:03:24.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:03:24.869" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201107 13:03:24.869" starttime="20201107 13:03:24.869"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:03:24.870" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201107 13:03:24.870" starttime="20201107 13:03:24.869"></status>
</kw>
<status status="PASS" endtime="20201107 13:03:24.870" starttime="20201107 13:03:24.868"></status>
</kw>
<msg timestamp="20201107 13:03:24.870" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201107 13:03:24.870" starttime="20201107 13:03:24.868"></status>
</kw>
<status status="PASS" endtime="20201107 13:03:24.871" starttime="20201107 13:03:24.864"></status>
</kw>
<msg timestamp="20201107 13:03:24.871" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201107 13:03:24.871" starttime="20201107 13:03:24.864"></status>
</kw>
<msg timestamp="20201107 13:03:24.871" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201107 13:03:24.871" starttime="20201107 13:03:24.863"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:03:24.874" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:03:24.874" starttime="20201107 13:03:24.874"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:03:24.875" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:03:24.875" starttime="20201107 13:03:24.875"></status>
</kw>
<status status="PASS" endtime="20201107 13:03:24.875" starttime="20201107 13:03:24.873"></status>
</kw>
<msg timestamp="20201107 13:03:24.875" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:03:24.875" starttime="20201107 13:03:24.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:03:24.877" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201107 13:03:24.877" starttime="20201107 13:03:24.877"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:03:24.878" level="INFO">${result} = /wordcount-32.txt</msg>
<status status="PASS" endtime="20201107 13:03:24.878" starttime="20201107 13:03:24.877"></status>
</kw>
<status status="PASS" endtime="20201107 13:03:24.878" starttime="20201107 13:03:24.876"></status>
</kw>
<msg timestamp="20201107 13:03:24.878" level="INFO">${path_with_leading} = /wordcount-32.txt</msg>
<status status="PASS" endtime="20201107 13:03:24.878" starttime="20201107 13:03:24.876"></status>
</kw>
<status status="PASS" endtime="20201107 13:03:24.878" starttime="20201107 13:03:24.872"></status>
</kw>
<msg timestamp="20201107 13:03:24.878" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-32.txt</msg>
<status status="PASS" endtime="20201107 13:03:24.878" starttime="20201107 13:03:24.872"></status>
</kw>
<msg timestamp="20201107 13:03:24.879" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-32.txt</msg>
<status status="PASS" endtime="20201107 13:03:24.879" starttime="20201107 13:03:24.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:03:24.884" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-32.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:04:05.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:04:05.860" level="INFO">${output} = 2020-11-07 13:03:26 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-07 13:03:27 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201107 13:04:05.860" starttime="20201107 13:03:24.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:04:05.862" level="INFO">2020-11-07 13:03:26 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-07 13:03:27 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:03:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:03:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-07 13:03:27 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-07 13:03:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:03:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3758CD42477D-&gt;a0442b40-4857-40cf-be9b-83c129afc9f8
2020-11-07 13:03:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:03:28 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-07 13:03:31 INFO  JobSubmitter:198 - number of splits:3
2020-11-07 13:03:31 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604753982863_0004
2020-11-07 13:03:31 INFO  YarnClientImpl:273 - Submitted application application_1604753982863_0004
2020-11-07 13:03:31 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604753982863_0004/
2020-11-07 13:03:31 INFO  Job:1339 - Running job: job_1604753982863_0004
2020-11-07 13:03:40 INFO  Job:1360 - Job job_1604753982863_0004 running in uber mode : false
2020-11-07 13:03:40 INFO  Job:1367 -  map 0% reduce 0%
2020-11-07 13:03:47 INFO  Job:1367 -  map 33% reduce 0%
2020-11-07 13:03:53 INFO  Job:1367 -  map 67% reduce 0%
2020-11-07 13:03:58 INFO  Job:1367 -  map 100% reduce 0%
2020-11-07 13:04:02 INFO  Job:1367 -  map 100% reduce 100%
2020-11-07 13:04:05 INFO  Job:1378 - Job job_1604753982863_0004 completed successfully
2020-11-07 13:04:05 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46564
		Total time spent by all reduces in occupied slots (ms)=16948
		Total time spent by all map tasks (ms)=11641
		Total time spent by all reduce tasks (ms)=4237
		Total vcore-milliseconds taken by all map tasks=11641
		Total vcore-milliseconds taken by all reduce tasks=4237
		Total megabyte-milliseconds taken by all map tasks=47681536
		Total megabyte-milliseconds taken by all reduce tasks=17354752
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=662
		CPU time spent (ms)=8240
		Physical memory (bytes) snapshot=1157922816
		Virtual memory (bytes) snapshot=15783563264
		Total committed heap usage (bytes)=1050673152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201107 13:04:05.862" starttime="20201107 13:04:05.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:04:05.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:04:05.863" starttime="20201107 13:04:05.862"></status>
</kw>
<status status="PASS" endtime="20201107 13:04:05.863" starttime="20201107 13:03:24.880"></status>
</kw>
<msg timestamp="20201107 13:04:05.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:04:05.863" starttime="20201107 13:03:24.879"></status>
</kw>
<msg timestamp="20201107 13:04:05.864" level="INFO">${output} = 2020-11-07 13:03:26 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-07 13:03:27 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201107 13:04:05.864" starttime="20201107 13:03:24.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201107 13:04:05.864" starttime="20201107 13:04:05.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:04:05.865" starttime="20201107 13:04:05.865"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:04:05.865" critical="yes" starttime="20201107 13:03:24.839"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201107 13:04:05.867" starttime="20201107 13:02:48.526"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:01:10.676" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:01:10.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:01:10.681" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:01:10.681" starttime="20201107 13:01:10.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:01:10.682" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:01:10.682" starttime="20201107 13:01:10.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:01:10.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:01:10.683" starttime="20201107 13:01:10.682"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:10.683" starttime="20201107 13:01:10.657"></status>
</kw>
<msg timestamp="20201107 13:01:10.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:01:10.683" starttime="20201107 13:01:10.656"></status>
</kw>
<msg timestamp="20201107 13:01:10.684" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:01:10.684" starttime="20201107 13:01:10.656"></status>
</kw>
<msg timestamp="20201107 13:01:10.684" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:01:10.684" starttime="20201107 13:01:10.655"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:01:10.689" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:01:10.690" starttime="20201107 13:01:10.689"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:01:10.690" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:01:10.690" starttime="20201107 13:01:10.690"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:10.690" starttime="20201107 13:01:10.687"></status>
</kw>
<msg timestamp="20201107 13:01:10.691" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:01:10.691" starttime="20201107 13:01:10.686"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:10.691" starttime="20201107 13:01:10.686"></status>
</kw>
<msg timestamp="20201107 13:01:10.691" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:01:10.691" starttime="20201107 13:01:10.685"></status>
</kw>
<msg timestamp="20201107 13:01:10.691" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:01:10.691" starttime="20201107 13:01:10.684"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:01:10.695" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:01:52.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:01:52.361" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:01:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:01:13 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201107 13:01:52.361" starttime="20201107 13:01:10.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:01:52.362" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:01:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:01:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-07 13:01:13 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-07 13:01:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:01:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6A3B8C2036DB-&gt;a0442b40-4857-40cf-be9b-83c129afc9f8
2020-11-07 13:01:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-07 13:01:14 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-07 13:01:15 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-07 13:01:15 INFO  JobSubmitter:198 - number of splits:3
2020-11-07 13:01:15 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604753982863_0001
2020-11-07 13:01:16 INFO  YarnClientImpl:273 - Submitted application application_1604753982863_0001
2020-11-07 13:01:16 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604753982863_0001/
2020-11-07 13:01:16 INFO  Job:1339 - Running job: job_1604753982863_0001
2020-11-07 13:01:27 INFO  Job:1360 - Job job_1604753982863_0001 running in uber mode : false
2020-11-07 13:01:27 INFO  Job:1367 -  map 0% reduce 0%
2020-11-07 13:01:34 INFO  Job:1367 -  map 33% reduce 0%
2020-11-07 13:01:40 INFO  Job:1367 -  map 67% reduce 0%
2020-11-07 13:01:45 INFO  Job:1367 -  map 100% reduce 0%
2020-11-07 13:01:50 INFO  Job:1367 -  map 100% reduce 100%
2020-11-07 13:01:51 INFO  Job:1378 - Job job_1604753982863_0001 completed successfully
2020-11-07 13:01:51 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46380
		Total time spent by all reduces in occupied slots (ms)=17072
		Total time spent by all map tasks (ms)=11595
		Total time spent by all reduce tasks (ms)=4268
		Total vcore-milliseconds taken by all map tasks=11595
		Total vcore-milliseconds taken by all reduce tasks=4268
		Total megabyte-milliseconds taken by all map tasks=47493120
		Total megabyte-milliseconds taken by all reduce tasks=17481728
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=649
		CPU time spent (ms)=7590
		Physical memory (bytes) snapshot=1152094208
		Virtual memory (bytes) snapshot=15779553280
		Total committed heap usage (bytes)=1047527424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.235 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201107 13:01:52.362" starttime="20201107 13:01:52.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:01:52.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:01:52.363" starttime="20201107 13:01:52.362"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:52.364" starttime="20201107 13:01:10.692"></status>
</kw>
<msg timestamp="20201107 13:01:52.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:01:52.364" starttime="20201107 13:01:10.692"></status>
</kw>
<msg timestamp="20201107 13:01:52.364" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:01:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:01:13 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201107 13:01:52.364" starttime="20201107 13:01:10.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:01:52.365" starttime="20201107 13:01:52.365"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:01:52.365" critical="yes" starttime="20201107 13:01:10.654"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:01:52.371" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:01:52.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:01:52.378" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:01:52.378" starttime="20201107 13:01:52.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:01:52.379" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:01:52.379" starttime="20201107 13:01:52.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:01:52.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:01:52.380" starttime="20201107 13:01:52.379"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:52.380" starttime="20201107 13:01:52.368"></status>
</kw>
<msg timestamp="20201107 13:01:52.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:01:52.380" starttime="20201107 13:01:52.368"></status>
</kw>
<msg timestamp="20201107 13:01:52.381" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:01:52.381" starttime="20201107 13:01:52.367"></status>
</kw>
<msg timestamp="20201107 13:01:52.381" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201107 13:01:52.381" starttime="20201107 13:01:52.367"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:01:52.382" level="INFO">${random} = 43</msg>
<status status="PASS" endtime="20201107 13:01:52.382" starttime="20201107 13:01:52.381"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:01:52.386" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:01:52.386" starttime="20201107 13:01:52.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:01:52.386" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:01:52.386" starttime="20201107 13:01:52.386"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:52.387" starttime="20201107 13:01:52.385"></status>
</kw>
<msg timestamp="20201107 13:01:52.387" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:01:52.387" starttime="20201107 13:01:52.384"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:52.387" starttime="20201107 13:01:52.383"></status>
</kw>
<msg timestamp="20201107 13:01:52.387" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:01:52.387" starttime="20201107 13:01:52.383"></status>
</kw>
<msg timestamp="20201107 13:01:52.387" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:01:52.387" starttime="20201107 13:01:52.382"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:01:52.391" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:01:52.391" starttime="20201107 13:01:52.390"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:01:52.392" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:01:52.392" starttime="20201107 13:01:52.391"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:52.392" starttime="20201107 13:01:52.390"></status>
</kw>
<msg timestamp="20201107 13:01:52.392" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:01:52.393" starttime="20201107 13:01:52.390"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:52.393" starttime="20201107 13:01:52.389"></status>
</kw>
<msg timestamp="20201107 13:01:52.393" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201107 13:01:52.393" starttime="20201107 13:01:52.388"></status>
</kw>
<msg timestamp="20201107 13:01:52.394" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201107 13:01:52.394" starttime="20201107 13:01:52.388"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:01:52.398" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:01:52.398" starttime="20201107 13:01:52.397"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:01:52.399" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:01:52.399" starttime="20201107 13:01:52.398"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:52.399" starttime="20201107 13:01:52.397"></status>
</kw>
<msg timestamp="20201107 13:01:52.399" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:01:52.399" starttime="20201107 13:01:52.397"></status>
</kw>
<status status="PASS" endtime="20201107 13:01:52.399" starttime="20201107 13:01:52.396"></status>
</kw>
<msg timestamp="20201107 13:01:52.399" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-43.txt</msg>
<status status="PASS" endtime="20201107 13:01:52.399" starttime="20201107 13:01:52.395"></status>
</kw>
<msg timestamp="20201107 13:01:52.400" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-43.txt</msg>
<status status="PASS" endtime="20201107 13:01:52.400" starttime="20201107 13:01:52.395"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:01:52.404" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-43.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:02:31.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:02:31.596" level="INFO">${output} = 2020-11-07 13:01:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-07 13:01:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201107 13:02:31.597" starttime="20201107 13:01:52.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:02:31.599" level="INFO">2020-11-07 13:01:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-07 13:01:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:01:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:01:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-07 13:01:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-07 13:01:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:01:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-86C0FC739635-&gt;a0442b40-4857-40cf-be9b-83c129afc9f8
2020-11-07 13:01:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:01:56 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-07 13:01:59 INFO  JobSubmitter:198 - number of splits:3
2020-11-07 13:01:59 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604753982863_0002
2020-11-07 13:01:59 INFO  YarnClientImpl:273 - Submitted application application_1604753982863_0002
2020-11-07 13:01:59 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604753982863_0002/
2020-11-07 13:01:59 INFO  Job:1339 - Running job: job_1604753982863_0002
2020-11-07 13:02:08 INFO  Job:1360 - Job job_1604753982863_0002 running in uber mode : false
2020-11-07 13:02:08 INFO  Job:1367 -  map 0% reduce 0%
2020-11-07 13:02:15 INFO  Job:1367 -  map 33% reduce 0%
2020-11-07 13:02:20 INFO  Job:1367 -  map 67% reduce 0%
2020-11-07 13:02:26 INFO  Job:1367 -  map 100% reduce 0%
2020-11-07 13:02:31 INFO  Job:1367 -  map 100% reduce 100%
2020-11-07 13:02:31 INFO  Job:1378 - Job job_1604753982863_0002 completed successfully
2020-11-07 13:02:31 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677783
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45584
		Total time spent by all reduces in occupied slots (ms)=16184
		Total time spent by all map tasks (ms)=11396
		Total time spent by all reduce tasks (ms)=4046
		Total vcore-milliseconds taken by all map tasks=11396
		Total vcore-milliseconds taken by all reduce tasks=4046
		Total megabyte-milliseconds taken by all map tasks=46678016
		Total megabyte-milliseconds taken by all reduce tasks=16572416
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=645
		CPU time spent (ms)=7960
		Physical memory (bytes) snapshot=1168310272
		Virtual memory (bytes) snapshot=15790874624
		Total committed heap usage (bytes)=1003487232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201107 13:02:31.600" starttime="20201107 13:02:31.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:02:31.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:02:31.602" starttime="20201107 13:02:31.600"></status>
</kw>
<status status="PASS" endtime="20201107 13:02:31.602" starttime="20201107 13:01:52.401"></status>
</kw>
<msg timestamp="20201107 13:02:31.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:02:31.603" starttime="20201107 13:01:52.401"></status>
</kw>
<msg timestamp="20201107 13:02:31.603" level="INFO">${output} = 2020-11-07 13:01:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-07 13:01:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201107 13:02:31.603" starttime="20201107 13:01:52.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201107 13:02:31.604" starttime="20201107 13:02:31.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:02:31.605" starttime="20201107 13:02:31.604"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:02:31.605" critical="yes" starttime="20201107 13:01:52.366"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201107 13:02:31.606" starttime="20201107 13:01:10.593"></status>
</suite>
<status status="PASS" elapsedtime="204056" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:15.185" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:17.544" level="INFO">${rc} = 255</msg>
<msg timestamp="20201107 13:05:17.544" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201107 13:05:17.544" starttime="20201107 13:05:15.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:17.545" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201107 13:05:17.546" starttime="20201107 13:05:17.545"></status>
</kw>
<msg timestamp="20201107 13:05:17.546" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201107 13:05:17.546" starttime="20201107 13:05:15.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:17.558" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:19.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:19.843" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:05:19.843" starttime="20201107 13:05:17.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:19.844" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:05:19.844" starttime="20201107 13:05:19.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:19.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:19.845" starttime="20201107 13:05:19.844"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:19.846" starttime="20201107 13:05:17.552"></status>
</kw>
<msg timestamp="20201107 13:05:19.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:19.846" starttime="20201107 13:05:17.552"></status>
</kw>
<msg timestamp="20201107 13:05:19.846" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201107 13:05:19.846" starttime="20201107 13:05:17.551"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201107 13:05:19.847" starttime="20201107 13:05:19.846"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:19.847" starttime="20201107 13:05:17.551"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:19.847" starttime="20201107 13:05:17.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:19.852" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:22.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:22.030" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:05:22.030" starttime="20201107 13:05:19.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:22.031" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:05:22.031" starttime="20201107 13:05:22.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:22.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:22.032" starttime="20201107 13:05:22.031"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:22.032" starttime="20201107 13:05:19.849"></status>
</kw>
<msg timestamp="20201107 13:05:22.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:22.033" starttime="20201107 13:05:19.848"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:22.033" starttime="20201107 13:05:19.848"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:22.033" starttime="20201107 13:05:19.847"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:22.033" starttime="20201107 13:05:19.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201107 13:05:22.034" starttime="20201107 13:05:22.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:22.039" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:24.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:24.558" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:05:21.996Z",
  "modificat...</msg>
<status status="PASS" endtime="20201107 13:05:24.558" starttime="20201107 13:05:22.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:24.560" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:05:21.996Z",
  "modificationTime" : "2020-11-07T13:05:21.996Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201107 13:05:24.560" starttime="20201107 13:05:24.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:24.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:24.560" starttime="20201107 13:05:24.560"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:24.561" starttime="20201107 13:05:22.035"></status>
</kw>
<msg timestamp="20201107 13:05:24.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:24.561" starttime="20201107 13:05:22.034"></status>
</kw>
<msg timestamp="20201107 13:05:24.561" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:05:21.996Z",
  "modificat...</msg>
<status status="PASS" endtime="20201107 13:05:24.561" starttime="20201107 13:05:22.034"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201107 13:05:24.562" starttime="20201107 13:05:24.561"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:05:24.566" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:05:24.566" starttime="20201107 13:05:24.565"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:05:24.566" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:05:24.566" starttime="20201107 13:05:24.566"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:24.567" starttime="20201107 13:05:24.565"></status>
</kw>
<msg timestamp="20201107 13:05:24.567" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:05:24.567" starttime="20201107 13:05:24.564"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:24.567" starttime="20201107 13:05:24.564"></status>
</kw>
<msg timestamp="20201107 13:05:24.567" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201107 13:05:24.567" starttime="20201107 13:05:24.563"></status>
</kw>
<msg timestamp="20201107 13:05:24.567" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201107 13:05:24.567" starttime="20201107 13:05:24.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:24.572" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:27.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:27.153" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:05:27.153" starttime="20201107 13:05:24.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:27.154" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:05:27.155" starttime="20201107 13:05:27.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:27.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:27.155" starttime="20201107 13:05:27.155"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:27.156" starttime="20201107 13:05:24.568"></status>
</kw>
<msg timestamp="20201107 13:05:27.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:27.156" starttime="20201107 13:05:24.568"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:27.156" starttime="20201107 13:05:24.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:27.162" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:33.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:33.183" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:05:33.183" starttime="20201107 13:05:27.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:33.184" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:05:33.184" starttime="20201107 13:05:33.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:33.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:33.185" starttime="20201107 13:05:33.184"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:33.185" starttime="20201107 13:05:27.157"></status>
</kw>
<msg timestamp="20201107 13:05:33.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:33.185" starttime="20201107 13:05:27.157"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:33.186" starttime="20201107 13:05:27.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:33.190" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:38.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:38.119" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:05:38.119" starttime="20201107 13:05:33.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:38.120" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:05:38.120" starttime="20201107 13:05:38.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:38.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:38.121" starttime="20201107 13:05:38.121"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:38.121" starttime="20201107 13:05:33.187"></status>
</kw>
<msg timestamp="20201107 13:05:38.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:38.122" starttime="20201107 13:05:33.186"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:38.122" starttime="20201107 13:05:33.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:38.127" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:42.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:42.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:05:42.452" starttime="20201107 13:05:38.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:42.453" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:05:42.453" starttime="20201107 13:05:42.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:42.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:42.455" starttime="20201107 13:05:42.453"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:42.456" starttime="20201107 13:05:38.123"></status>
</kw>
<msg timestamp="20201107 13:05:42.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:42.456" starttime="20201107 13:05:38.123"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:42.456" starttime="20201107 13:05:38.122"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:05:42.456" critical="yes" starttime="20201107 13:05:15.179"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:05:42.463" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:05:42.463" starttime="20201107 13:05:42.462"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:05:42.464" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:05:42.464" starttime="20201107 13:05:42.463"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:42.464" starttime="20201107 13:05:42.461"></status>
</kw>
<msg timestamp="20201107 13:05:42.464" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:05:42.464" starttime="20201107 13:05:42.461"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:42.465" starttime="20201107 13:05:42.460"></status>
</kw>
<msg timestamp="20201107 13:05:42.465" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:05:42.465" starttime="20201107 13:05:42.459"></status>
</kw>
<msg timestamp="20201107 13:05:42.465" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:05:42.465" starttime="20201107 13:05:42.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:42.469" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:44.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:44.960" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:05:44.960" starttime="20201107 13:05:42.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:44.962" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:05:44.962" starttime="20201107 13:05:44.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:44.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:44.962" starttime="20201107 13:05:44.962"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:44.963" starttime="20201107 13:05:42.466"></status>
</kw>
<msg timestamp="20201107 13:05:44.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:44.963" starttime="20201107 13:05:42.466"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:44.963" starttime="20201107 13:05:42.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:44.967" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:47.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:47.554" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:05:47.555" starttime="20201107 13:05:44.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:47.556" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:05:47.556" starttime="20201107 13:05:47.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:47.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:47.557" starttime="20201107 13:05:47.556"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:47.557" starttime="20201107 13:05:44.964"></status>
</kw>
<msg timestamp="20201107 13:05:47.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:47.557" starttime="20201107 13:05:44.964"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:47.557" starttime="20201107 13:05:44.963"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:05:47.558" critical="yes" starttime="20201107 13:05:42.457"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201107 13:05:47.559" starttime="20201107 13:05:15.115"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:07:35.115" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:07:35.115" starttime="20201107 13:07:35.114"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:07:35.116" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:07:35.116" starttime="20201107 13:07:35.115"></status>
</kw>
<status status="PASS" endtime="20201107 13:07:35.116" starttime="20201107 13:07:35.114"></status>
</kw>
<msg timestamp="20201107 13:07:35.116" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:07:35.116" starttime="20201107 13:07:35.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:07:35.117" starttime="20201107 13:07:35.117"></status>
</kw>
<msg timestamp="20201107 13:07:35.117" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:07:35.117" starttime="20201107 13:07:35.116"></status>
</kw>
<status status="PASS" endtime="20201107 13:07:35.117" starttime="20201107 13:07:35.113"></status>
</kw>
<msg timestamp="20201107 13:07:35.117" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:07:35.118" starttime="20201107 13:07:35.112"></status>
</kw>
<msg timestamp="20201107 13:07:35.118" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:07:35.118" starttime="20201107 13:07:35.111"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:07:35.118" level="INFO">${random} = 82399</msg>
<status status="PASS" endtime="20201107 13:07:35.118" starttime="20201107 13:07:35.118"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:07:35.126" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-82399 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:07:39.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:07:39.105" level="INFO">${output} = 2020-11-07 13:07:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:36 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:07:39.105" starttime="20201107 13:07:35.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:07:39.106" level="INFO">2020-11-07 13:07:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:37 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-07 13:07:37 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:07:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:07:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:07:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:07:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4D600CF51C4C-&gt;dc04b58e-5af7-403b-ba99-23cd4b8c0862
2020-11-07 13:07:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:07:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201107 13:07:39.106" starttime="20201107 13:07:39.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:07:39.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:07:39.107" starttime="20201107 13:07:39.106"></status>
</kw>
<status status="PASS" endtime="20201107 13:07:39.107" starttime="20201107 13:07:35.119"></status>
</kw>
<msg timestamp="20201107 13:07:39.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:07:39.107" starttime="20201107 13:07:35.119"></status>
</kw>
<msg timestamp="20201107 13:07:39.108" level="INFO">${result} = 2020-11-07 13:07:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:36 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:07:39.108" starttime="20201107 13:07:35.118"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:07:39.113" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:07:41.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:07:41.240" level="INFO">${output} = 2020-11-07 13:07:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:07:41.240" starttime="20201107 13:07:39.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:07:41.241" level="INFO">2020-11-07 13:07:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:40 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:05 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-07 13:07 ofs://om/volume1/bucket1/ozone-82399
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-07 13:05 ofs://om/volume1/bucket1/ozone-90434
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:05 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:07 ofs://om/volume1/bucket1/wordcount-83.txt
2020-11-07 13:07:41 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201107 13:07:41.241" starttime="20201107 13:07:41.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:07:41.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:07:41.242" starttime="20201107 13:07:41.241"></status>
</kw>
<status status="PASS" endtime="20201107 13:07:41.242" starttime="20201107 13:07:39.110"></status>
</kw>
<msg timestamp="20201107 13:07:41.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:07:41.242" starttime="20201107 13:07:39.110"></status>
</kw>
<msg timestamp="20201107 13:07:41.243" level="INFO">${result} = 2020-11-07 13:07:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:07:41.243" starttime="20201107 13:07:39.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:07:41.243" starttime="20201107 13:07:41.243"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:07:41.244" critical="yes" starttime="20201107 13:07:35.110"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201107 13:07:41.245" starttime="20201107 13:07:35.053"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:05:53.065" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:05:53.065" starttime="20201107 13:05:53.064"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:05:53.066" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:05:53.066" starttime="20201107 13:05:53.065"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:53.066" starttime="20201107 13:05:53.064"></status>
</kw>
<msg timestamp="20201107 13:05:53.066" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:05:53.066" starttime="20201107 13:05:53.063"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:53.066" starttime="20201107 13:05:53.063"></status>
</kw>
<msg timestamp="20201107 13:05:53.066" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:05:53.066" starttime="20201107 13:05:53.062"></status>
</kw>
<msg timestamp="20201107 13:05:53.067" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:05:53.067" starttime="20201107 13:05:53.061"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:05:53.067" level="INFO">${random} = 90434</msg>
<status status="PASS" endtime="20201107 13:05:53.067" starttime="20201107 13:05:53.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:53.074" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-90434 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:57.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:57.270" level="INFO">${output} = 2020-11-07 13:05:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:54 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:05:57.270" starttime="20201107 13:05:53.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:57.272" level="INFO">2020-11-07 13:05:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:55 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-07 13:05:55 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:05:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:05:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:05:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:05:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8A6BA6E984F3-&gt;dc04b58e-5af7-403b-ba99-23cd4b8c0862
2020-11-07 13:05:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:05:56 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201107 13:05:57.273" starttime="20201107 13:05:57.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:57.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:57.276" starttime="20201107 13:05:57.274"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:57.276" starttime="20201107 13:05:53.068"></status>
</kw>
<msg timestamp="20201107 13:05:57.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:57.276" starttime="20201107 13:05:53.068"></status>
</kw>
<msg timestamp="20201107 13:05:57.277" level="INFO">${result} = 2020-11-07 13:05:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:54 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:05:57.277" starttime="20201107 13:05:53.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:05:57.283" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:05:59.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:05:59.247" level="INFO">${output} = 2020-11-07 13:05:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:05:59.247" starttime="20201107 13:05:57.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:05:59.248" level="INFO">2020-11-07 13:05:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:59 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:05 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-07 13:05 o3fs://bucket1.volume1.om/ozone-90434
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:05 o3fs://bucket1.volume1.om/user
2020-11-07 13:05:59 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201107 13:05:59.248" starttime="20201107 13:05:59.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:05:59.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:05:59.249" starttime="20201107 13:05:59.248"></status>
</kw>
<status status="PASS" endtime="20201107 13:05:59.249" starttime="20201107 13:05:57.280"></status>
</kw>
<msg timestamp="20201107 13:05:59.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:05:59.249" starttime="20201107 13:05:57.278"></status>
</kw>
<msg timestamp="20201107 13:05:59.249" level="INFO">${result} = 2020-11-07 13:05:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:05:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:05:59.250" starttime="20201107 13:05:57.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:05:59.250" starttime="20201107 13:05:59.250"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:05:59.250" critical="yes" starttime="20201107 13:05:53.060"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201107 13:05:59.252" starttime="20201107 13:05:53.006"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:07:46.639" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:07:46.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:07:46.646" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:07:46.646" starttime="20201107 13:07:46.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:07:46.647" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:07:46.647" starttime="20201107 13:07:46.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:07:46.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:07:46.648" starttime="20201107 13:07:46.647"></status>
</kw>
<status status="PASS" endtime="20201107 13:07:46.648" starttime="20201107 13:07:46.630"></status>
</kw>
<msg timestamp="20201107 13:07:46.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:07:46.648" starttime="20201107 13:07:46.630"></status>
</kw>
<msg timestamp="20201107 13:07:46.648" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:07:46.648" starttime="20201107 13:07:46.629"></status>
</kw>
<msg timestamp="20201107 13:07:46.649" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:07:46.649" starttime="20201107 13:07:46.629"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:07:46.654" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:07:46.654" starttime="20201107 13:07:46.654"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:07:46.655" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:07:46.655" starttime="20201107 13:07:46.654"></status>
</kw>
<status status="PASS" endtime="20201107 13:07:46.655" starttime="20201107 13:07:46.652"></status>
</kw>
<msg timestamp="20201107 13:07:46.655" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:07:46.655" starttime="20201107 13:07:46.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:07:46.656" starttime="20201107 13:07:46.656"></status>
</kw>
<msg timestamp="20201107 13:07:46.656" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:07:46.656" starttime="20201107 13:07:46.655"></status>
</kw>
<status status="PASS" endtime="20201107 13:07:46.657" starttime="20201107 13:07:46.651"></status>
</kw>
<msg timestamp="20201107 13:07:46.657" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:07:46.657" starttime="20201107 13:07:46.650"></status>
</kw>
<msg timestamp="20201107 13:07:46.657" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:07:46.657" starttime="20201107 13:07:46.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:07:46.663" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:08:27.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:08:27.255" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:07:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07...</msg>
<status status="PASS" endtime="20201107 13:08:27.255" starttime="20201107 13:07:46.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:08:27.256" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:07:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:48 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-07 13:07:48 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:07:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:07:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:07:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:07:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4114FEF5F475-&gt;dc04b58e-5af7-403b-ba99-23cd4b8c0862
2020-11-07 13:07:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-07 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.2:8032
2020-11-07 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:51 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:07:51 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:07:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604754295116_0003
2020-11-07 13:07:51 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-07 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:51 INFO  Configuration:2752 - resource-types.xml not found
2020-11-07 13:07:51 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-07 13:07:51 INFO  YarnClientImpl:324 - Submitted application application_1604754295116_0003
2020-11-07 13:07:52 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604754295116_0003/
2020-11-07 13:07:52 INFO  Job:1619 - Running job: job_1604754295116_0003
2020-11-07 13:08:01 INFO  Job:1640 - Job job_1604754295116_0003 running in uber mode : false
2020-11-07 13:08:01 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:08:08 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:08:14 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:08:20 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:08:25 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:08:26 INFO  Job:1658 - Job job_1604754295116_0003 completed successfully
2020-11-07 13:08:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46292
		Total time spent by all reduces in occupied slots (ms)=17628
		Total time spent by all map tasks (ms)=11573
		Total time spent by all reduce tasks (ms)=4407
		Total vcore-milliseconds taken by all map tasks=11573
		Total vcore-milliseconds taken by all reduce tasks=4407
		Total megabyte-milliseconds taken by all map tasks=47403008
		Total megabyte-milliseconds taken by all reduce tasks=18051072
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=736
		CPU time spent (ms)=8140
		Physical memory (bytes) snapshot=1206689792
		Virtual memory (bytes) snapshot=15795159040
		Total committed heap usage (bytes)=1031274496
		Peak Map Physical memory (bytes)=307712000
		Peak Map Virtual memory (bytes)=3944513536
		Peak Reduce Physical memory (bytes)=294449152
		Peak Reduce Virtual memory (bytes)=3965722624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.285 seconds
2020-11-07 13:08:26 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-07 13:08:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201107 13:08:27.257" starttime="20201107 13:08:27.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:08:27.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:08:27.257" starttime="20201107 13:08:27.257"></status>
</kw>
<status status="PASS" endtime="20201107 13:08:27.258" starttime="20201107 13:07:46.658"></status>
</kw>
<msg timestamp="20201107 13:08:27.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:08:27.258" starttime="20201107 13:07:46.658"></status>
</kw>
<msg timestamp="20201107 13:08:27.258" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:07:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07...</msg>
<status status="PASS" endtime="20201107 13:08:27.258" starttime="20201107 13:07:46.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:08:27.259" starttime="20201107 13:08:27.258"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:08:27.259" critical="yes" starttime="20201107 13:07:46.628"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:08:27.266" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:08:27.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:08:27.273" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:08:27.273" starttime="20201107 13:08:27.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:08:27.274" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:08:27.274" starttime="20201107 13:08:27.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:08:27.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:08:27.275" starttime="20201107 13:08:27.274"></status>
</kw>
<status status="PASS" endtime="20201107 13:08:27.275" starttime="20201107 13:08:27.263"></status>
</kw>
<msg timestamp="20201107 13:08:27.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:08:27.275" starttime="20201107 13:08:27.263"></status>
</kw>
<msg timestamp="20201107 13:08:27.275" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:08:27.275" starttime="20201107 13:08:27.262"></status>
</kw>
<msg timestamp="20201107 13:08:27.276" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:08:27.276" starttime="20201107 13:08:27.261"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:08:27.276" level="INFO">${random} = 40</msg>
<status status="PASS" endtime="20201107 13:08:27.276" starttime="20201107 13:08:27.276"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:08:27.281" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:08:27.281" starttime="20201107 13:08:27.280"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:08:27.281" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:08:27.281" starttime="20201107 13:08:27.281"></status>
</kw>
<status status="PASS" endtime="20201107 13:08:27.282" starttime="20201107 13:08:27.280"></status>
</kw>
<msg timestamp="20201107 13:08:27.282" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:08:27.282" starttime="20201107 13:08:27.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:08:27.283" starttime="20201107 13:08:27.282"></status>
</kw>
<msg timestamp="20201107 13:08:27.283" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:08:27.283" starttime="20201107 13:08:27.282"></status>
</kw>
<status status="PASS" endtime="20201107 13:08:27.283" starttime="20201107 13:08:27.278"></status>
</kw>
<msg timestamp="20201107 13:08:27.283" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:08:27.283" starttime="20201107 13:08:27.278"></status>
</kw>
<msg timestamp="20201107 13:08:27.284" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:08:27.284" starttime="20201107 13:08:27.277"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:08:27.287" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:08:27.287" starttime="20201107 13:08:27.287"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:08:27.288" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:08:27.288" starttime="20201107 13:08:27.287"></status>
</kw>
<status status="PASS" endtime="20201107 13:08:27.288" starttime="20201107 13:08:27.286"></status>
</kw>
<msg timestamp="20201107 13:08:27.288" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:08:27.288" starttime="20201107 13:08:27.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:08:27.290" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201107 13:08:27.290" starttime="20201107 13:08:27.289"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:08:27.290" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201107 13:08:27.290" starttime="20201107 13:08:27.290"></status>
</kw>
<status status="PASS" endtime="20201107 13:08:27.291" starttime="20201107 13:08:27.289"></status>
</kw>
<msg timestamp="20201107 13:08:27.291" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201107 13:08:27.291" starttime="20201107 13:08:27.288"></status>
</kw>
<status status="PASS" endtime="20201107 13:08:27.291" starttime="20201107 13:08:27.285"></status>
</kw>
<msg timestamp="20201107 13:08:27.291" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201107 13:08:27.291" starttime="20201107 13:08:27.285"></status>
</kw>
<msg timestamp="20201107 13:08:27.291" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201107 13:08:27.291" starttime="20201107 13:08:27.284"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:08:27.295" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:08:27.295" starttime="20201107 13:08:27.295"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:08:27.296" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:08:27.296" starttime="20201107 13:08:27.295"></status>
</kw>
<status status="PASS" endtime="20201107 13:08:27.296" starttime="20201107 13:08:27.294"></status>
</kw>
<msg timestamp="20201107 13:08:27.296" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:08:27.296" starttime="20201107 13:08:27.294"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:08:27.298" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201107 13:08:27.298" starttime="20201107 13:08:27.297"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:08:27.298" level="INFO">${result} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201107 13:08:27.298" starttime="20201107 13:08:27.298"></status>
</kw>
<status status="PASS" endtime="20201107 13:08:27.299" starttime="20201107 13:08:27.297"></status>
</kw>
<msg timestamp="20201107 13:08:27.299" level="INFO">${path_with_leading} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201107 13:08:27.299" starttime="20201107 13:08:27.296"></status>
</kw>
<status status="PASS" endtime="20201107 13:08:27.299" starttime="20201107 13:08:27.293"></status>
</kw>
<msg timestamp="20201107 13:08:27.299" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201107 13:08:27.299" starttime="20201107 13:08:27.293"></status>
</kw>
<msg timestamp="20201107 13:08:27.300" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201107 13:08:27.300" starttime="20201107 13:08:27.292"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:08:27.304" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-40.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:09:12.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:09:12.211" level="INFO">${output} = 2020-11-07 13:08:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:09:12.211" starttime="20201107 13:08:27.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:09:12.212" level="INFO">2020-11-07 13:08:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.2:8032
2020-11-07 13:08:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:08:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:29 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-07 13:08:30 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:08:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:08:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:08:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:08:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AB922767E50E-&gt;dc04b58e-5af7-403b-ba99-23cd4b8c0862
2020-11-07 13:08:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:08:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:08:31 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:08:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604754295116_0004
2020-11-07 13:08:31 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-07 13:08:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:32 INFO  Configuration:2752 - resource-types.xml not found
2020-11-07 13:08:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-07 13:08:32 INFO  YarnClientImpl:324 - Submitted application application_1604754295116_0004
2020-11-07 13:08:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604754295116_0004/
2020-11-07 13:08:32 INFO  Job:1619 - Running job: job_1604754295116_0004
2020-11-07 13:08:40 INFO  Job:1640 - Job job_1604754295116_0004 running in uber mode : false
2020-11-07 13:08:40 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:08:47 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:08:53 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:08:59 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:09:05 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:09:11 INFO  Job:1658 - Job job_1604754295116_0004 completed successfully
2020-11-07 13:09:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:09:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083691
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45744
		Total time spent by all reduces in occupied slots (ms)=18504
		Total time spent by all map tasks (ms)=11436
		Total time spent by all reduce tasks (ms)=4626
		Total vcore-milliseconds taken by all map tasks=11436
		Total vcore-milliseconds taken by all reduce tasks=4626
		Total megabyte-milliseconds taken by all map tasks=46841856
		Total megabyte-milliseconds taken by all reduce tasks=18948096
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=685
		CPU time spent (ms)=7830
		Physical memory (bytes) snapshot=1190510592
		Virtual memory (bytes) snapshot=15772676096
		Total committed heap usage (bytes)=1070596096
		Peak Map Physical memory (bytes)=310104064
		Peak Map Virtual memory (bytes)=3946999808
		Peak Reduce Physical memory (bytes)=297783296
		Peak Reduce Virtual memory (bytes)=3969306624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-07 13:09:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201107 13:09:12.212" starttime="20201107 13:09:12.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:09:12.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:09:12.213" starttime="20201107 13:09:12.212"></status>
</kw>
<status status="PASS" endtime="20201107 13:09:12.213" starttime="20201107 13:08:27.301"></status>
</kw>
<msg timestamp="20201107 13:09:12.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:09:12.213" starttime="20201107 13:08:27.300"></status>
</kw>
<msg timestamp="20201107 13:09:12.214" level="INFO">${output} = 2020-11-07 13:08:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:08:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:09:12.214" starttime="20201107 13:08:27.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201107 13:09:12.214" starttime="20201107 13:09:12.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:09:12.215" starttime="20201107 13:09:12.214"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:09:12.215" critical="yes" starttime="20201107 13:08:27.260"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201107 13:09:12.217" starttime="20201107 13:07:46.572"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:06:04.835" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:06:04.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:06:04.840" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:06:04.841" starttime="20201107 13:06:04.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:06:04.842" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:06:04.842" starttime="20201107 13:06:04.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:06:04.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:06:04.843" starttime="20201107 13:06:04.842"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:04.843" starttime="20201107 13:06:04.827"></status>
</kw>
<msg timestamp="20201107 13:06:04.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:06:04.843" starttime="20201107 13:06:04.827"></status>
</kw>
<msg timestamp="20201107 13:06:04.843" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:06:04.843" starttime="20201107 13:06:04.826"></status>
</kw>
<msg timestamp="20201107 13:06:04.844" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:06:04.844" starttime="20201107 13:06:04.826"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:06:04.850" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:06:04.850" starttime="20201107 13:06:04.849"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:06:04.851" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:06:04.851" starttime="20201107 13:06:04.850"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:04.851" starttime="20201107 13:06:04.847"></status>
</kw>
<msg timestamp="20201107 13:06:04.851" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:06:04.851" starttime="20201107 13:06:04.847"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:04.851" starttime="20201107 13:06:04.846"></status>
</kw>
<msg timestamp="20201107 13:06:04.852" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:06:04.852" starttime="20201107 13:06:04.845"></status>
</kw>
<msg timestamp="20201107 13:06:04.852" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:06:04.852" starttime="20201107 13:06:04.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:06:04.856" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:06:49.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:06:49.014" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:06:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06...</msg>
<status status="PASS" endtime="20201107 13:06:49.014" starttime="20201107 13:06:04.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:06:49.016" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:06:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:07 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-07 13:06:07 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:06:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:06:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:06:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:06:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B42DCDB9C93A-&gt;dc04b58e-5af7-403b-ba99-23cd4b8c0862
2020-11-07 13:06:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-07 13:06:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.2:8032
2020-11-07 13:06:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:09 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:06:09 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:06:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604754295116_0001
2020-11-07 13:06:09 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-07 13:06:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:10 INFO  Configuration:2752 - resource-types.xml not found
2020-11-07 13:06:10 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-07 13:06:10 INFO  YarnClientImpl:324 - Submitted application application_1604754295116_0001
2020-11-07 13:06:10 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604754295116_0001/
2020-11-07 13:06:10 INFO  Job:1619 - Running job: job_1604754295116_0001
2020-11-07 13:06:21 INFO  Job:1640 - Job job_1604754295116_0001 running in uber mode : false
2020-11-07 13:06:21 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:06:29 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:06:35 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:06:41 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:06:47 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:06:48 INFO  Job:1658 - Job job_1604754295116_0001 completed successfully
2020-11-07 13:06:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021529
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46220
		Total time spent by all reduces in occupied slots (ms)=17616
		Total time spent by all map tasks (ms)=11555
		Total time spent by all reduce tasks (ms)=4404
		Total vcore-milliseconds taken by all map tasks=11555
		Total vcore-milliseconds taken by all reduce tasks=4404
		Total megabyte-milliseconds taken by all map tasks=47329280
		Total megabyte-milliseconds taken by all reduce tasks=18038784
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=697
		CPU time spent (ms)=7550
		Physical memory (bytes) snapshot=1220919296
		Virtual memory (bytes) snapshot=15793836032
		Total committed heap usage (bytes)=1062207488
		Peak Map Physical memory (bytes)=307986432
		Peak Map Virtual memory (bytes)=3941384192
		Peak Reduce Physical memory (bytes)=302047232
		Peak Reduce Virtual memory (bytes)=3973701632
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.647 seconds
2020-11-07 13:06:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:48 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-07 13:06:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201107 13:06:49.016" starttime="20201107 13:06:49.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:06:49.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:06:49.017" starttime="20201107 13:06:49.016"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:49.017" starttime="20201107 13:06:04.853"></status>
</kw>
<msg timestamp="20201107 13:06:49.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:06:49.017" starttime="20201107 13:06:04.853"></status>
</kw>
<msg timestamp="20201107 13:06:49.018" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:06:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06...</msg>
<status status="PASS" endtime="20201107 13:06:49.018" starttime="20201107 13:06:04.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:06:49.018" starttime="20201107 13:06:49.018"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:06:49.019" critical="yes" starttime="20201107 13:06:04.822"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:06:49.026" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:06:49.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:06:49.034" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:06:49.034" starttime="20201107 13:06:49.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:06:49.035" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:06:49.036" starttime="20201107 13:06:49.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:06:49.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:06:49.037" starttime="20201107 13:06:49.036"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:49.037" starttime="20201107 13:06:49.022"></status>
</kw>
<msg timestamp="20201107 13:06:49.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:06:49.038" starttime="20201107 13:06:49.021"></status>
</kw>
<msg timestamp="20201107 13:06:49.038" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:06:49.038" starttime="20201107 13:06:49.021"></status>
</kw>
<msg timestamp="20201107 13:06:49.038" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201107 13:06:49.038" starttime="20201107 13:06:49.020"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:06:49.039" level="INFO">${random} = 83</msg>
<status status="PASS" endtime="20201107 13:06:49.039" starttime="20201107 13:06:49.038"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:06:49.043" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:06:49.043" starttime="20201107 13:06:49.043"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:06:49.044" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:06:49.044" starttime="20201107 13:06:49.044"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:49.044" starttime="20201107 13:06:49.042"></status>
</kw>
<msg timestamp="20201107 13:06:49.044" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:06:49.044" starttime="20201107 13:06:49.041"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:49.045" starttime="20201107 13:06:49.040"></status>
</kw>
<msg timestamp="20201107 13:06:49.045" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:06:49.045" starttime="20201107 13:06:49.040"></status>
</kw>
<msg timestamp="20201107 13:06:49.045" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:06:49.045" starttime="20201107 13:06:49.039"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:06:49.049" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:06:49.049" starttime="20201107 13:06:49.049"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:06:49.050" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:06:49.050" starttime="20201107 13:06:49.049"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:49.050" starttime="20201107 13:06:49.048"></status>
</kw>
<msg timestamp="20201107 13:06:49.050" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:06:49.050" starttime="20201107 13:06:49.048"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:49.050" starttime="20201107 13:06:49.047"></status>
</kw>
<msg timestamp="20201107 13:06:49.050" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201107 13:06:49.051" starttime="20201107 13:06:49.046"></status>
</kw>
<msg timestamp="20201107 13:06:49.051" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201107 13:06:49.051" starttime="20201107 13:06:49.045"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:06:49.055" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:06:49.055" starttime="20201107 13:06:49.054"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:06:49.055" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:06:49.055" starttime="20201107 13:06:49.055"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:49.055" starttime="20201107 13:06:49.053"></status>
</kw>
<msg timestamp="20201107 13:06:49.056" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:06:49.056" starttime="20201107 13:06:49.053"></status>
</kw>
<status status="PASS" endtime="20201107 13:06:49.056" starttime="20201107 13:06:49.052"></status>
</kw>
<msg timestamp="20201107 13:06:49.056" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-83.txt</msg>
<status status="PASS" endtime="20201107 13:06:49.056" starttime="20201107 13:06:49.052"></status>
</kw>
<msg timestamp="20201107 13:06:49.056" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-83.txt</msg>
<status status="PASS" endtime="20201107 13:06:49.056" starttime="20201107 13:06:49.051"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:06:49.060" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-83.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:07:29.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:07:29.576" level="INFO">${output} = 2020-11-07 13:06:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:51 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:07:29.576" starttime="20201107 13:06:49.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:07:29.578" level="INFO">2020-11-07 13:06:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:51 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.2:8032
2020-11-07 13:06:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:06:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:51 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-07 13:06:51 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-07 13:06:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:06:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:06:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:06:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-389B0408C9A4-&gt;dc04b58e-5af7-403b-ba99-23cd4b8c0862
2020-11-07 13:06:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:06:53 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:06:53 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:06:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604754295116_0002
2020-11-07 13:06:53 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-07 13:06:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:54 INFO  Configuration:2752 - resource-types.xml not found
2020-11-07 13:06:54 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-07 13:06:54 INFO  YarnClientImpl:324 - Submitted application application_1604754295116_0002
2020-11-07 13:06:54 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604754295116_0002/
2020-11-07 13:06:54 INFO  Job:1619 - Running job: job_1604754295116_0002
2020-11-07 13:07:03 INFO  Job:1640 - Job job_1604754295116_0002 running in uber mode : false
2020-11-07 13:07:03 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:07:10 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:07:15 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:07:21 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:07:28 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:07:29 INFO  Job:1658 - Job job_1604754295116_0002 completed successfully
2020-11-07 13:07:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:07:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083775
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46680
		Total time spent by all reduces in occupied slots (ms)=16852
		Total time spent by all map tasks (ms)=11670
		Total time spent by all reduce tasks (ms)=4213
		Total vcore-milliseconds taken by all map tasks=11670
		Total vcore-milliseconds taken by all reduce tasks=4213
		Total megabyte-milliseconds taken by all map tasks=47800320
		Total megabyte-milliseconds taken by all reduce tasks=17256448
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=683
		CPU time spent (ms)=7950
		Physical memory (bytes) snapshot=1233244160
		Virtual memory (bytes) snapshot=15803748352
		Total committed heap usage (bytes)=1063780352
		Peak Map Physical memory (bytes)=312664064
		Peak Map Virtual memory (bytes)=3945877504
		Peak Reduce Physical memory (bytes)=299819008
		Peak Reduce Virtual memory (bytes)=3972128768
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-07 13:07:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201107 13:07:29.578" starttime="20201107 13:07:29.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:07:29.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:07:29.579" starttime="20201107 13:07:29.578"></status>
</kw>
<status status="PASS" endtime="20201107 13:07:29.579" starttime="20201107 13:06:49.057"></status>
</kw>
<msg timestamp="20201107 13:07:29.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:07:29.579" starttime="20201107 13:06:49.057"></status>
</kw>
<msg timestamp="20201107 13:07:29.580" level="INFO">${output} = 2020-11-07 13:06:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-07 13:06:51 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201107 13:07:29.580" starttime="20201107 13:06:49.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201107 13:07:29.581" starttime="20201107 13:07:29.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:07:29.581" starttime="20201107 13:07:29.581"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:07:29.581" critical="yes" starttime="20201107 13:06:49.019"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201107 13:07:29.583" starttime="20201107 13:06:04.754"></status>
</suite>
<status status="PASS" elapsedtime="215356" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:10:26.387" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:10:31.626" level="INFO">${rc} = 255</msg>
<msg timestamp="20201107 13:10:31.626" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201107 13:10:31.626" starttime="20201107 13:10:26.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:10:31.627" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201107 13:10:31.628" starttime="20201107 13:10:31.627"></status>
</kw>
<msg timestamp="20201107 13:10:31.628" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201107 13:10:31.628" starttime="20201107 13:10:26.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:10:31.635" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:10:35.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:10:35.339" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:10:35.339" starttime="20201107 13:10:31.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:10:35.340" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:10:35.340" starttime="20201107 13:10:35.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:10:35.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:10:35.341" starttime="20201107 13:10:35.340"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:35.341" starttime="20201107 13:10:31.630"></status>
</kw>
<msg timestamp="20201107 13:10:35.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:10:35.341" starttime="20201107 13:10:31.630"></status>
</kw>
<msg timestamp="20201107 13:10:35.342" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201107 13:10:35.342" starttime="20201107 13:10:31.629"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201107 13:10:35.342" starttime="20201107 13:10:35.342"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:35.342" starttime="20201107 13:10:31.629"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:35.342" starttime="20201107 13:10:31.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:10:35.347" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:10:38.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:10:38.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:10:38.847" starttime="20201107 13:10:35.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:10:38.848" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:10:38.848" starttime="20201107 13:10:38.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:10:38.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:10:38.849" starttime="20201107 13:10:38.849"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:38.849" starttime="20201107 13:10:35.344"></status>
</kw>
<msg timestamp="20201107 13:10:38.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:10:38.850" starttime="20201107 13:10:35.344"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:38.850" starttime="20201107 13:10:35.344"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:38.850" starttime="20201107 13:10:35.343"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:38.850" starttime="20201107 13:10:35.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201107 13:10:38.851" starttime="20201107 13:10:38.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:10:38.856" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:10:42.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:10:42.345" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:10:38.690Z",
  "modificat...</msg>
<status status="PASS" endtime="20201107 13:10:42.345" starttime="20201107 13:10:38.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:10:42.346" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:10:38.690Z",
  "modificationTime" : "2020-11-07T13:10:38.690Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201107 13:10:42.347" starttime="20201107 13:10:42.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:10:42.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:10:42.347" starttime="20201107 13:10:42.347"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:42.348" starttime="20201107 13:10:38.853"></status>
</kw>
<msg timestamp="20201107 13:10:42.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:10:42.348" starttime="20201107 13:10:38.852"></status>
</kw>
<msg timestamp="20201107 13:10:42.348" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-07T13:10:38.690Z",
  "modificat...</msg>
<status status="PASS" endtime="20201107 13:10:42.348" starttime="20201107 13:10:38.851"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201107 13:10:42.349" starttime="20201107 13:10:42.348"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:10:42.353" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:10:42.353" starttime="20201107 13:10:42.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:10:42.353" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:10:42.353" starttime="20201107 13:10:42.353"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:42.354" starttime="20201107 13:10:42.352"></status>
</kw>
<msg timestamp="20201107 13:10:42.354" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:10:42.354" starttime="20201107 13:10:42.351"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:42.354" starttime="20201107 13:10:42.350"></status>
</kw>
<msg timestamp="20201107 13:10:42.354" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201107 13:10:42.354" starttime="20201107 13:10:42.350"></status>
</kw>
<msg timestamp="20201107 13:10:42.354" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201107 13:10:42.354" starttime="20201107 13:10:42.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:10:42.358" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:10:46.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:10:46.327" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:10:46.327" starttime="20201107 13:10:42.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:10:46.329" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:10:46.329" starttime="20201107 13:10:46.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:10:46.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:10:46.329" starttime="20201107 13:10:46.329"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:46.330" starttime="20201107 13:10:42.355"></status>
</kw>
<msg timestamp="20201107 13:10:46.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:10:46.330" starttime="20201107 13:10:42.355"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:46.330" starttime="20201107 13:10:42.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:10:46.335" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:10:53.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:10:53.801" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:10:53.801" starttime="20201107 13:10:46.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:10:53.802" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:10:53.803" starttime="20201107 13:10:53.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:10:53.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:10:53.803" starttime="20201107 13:10:53.803"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:53.804" starttime="20201107 13:10:46.332"></status>
</kw>
<msg timestamp="20201107 13:10:53.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:10:53.804" starttime="20201107 13:10:46.331"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:53.804" starttime="20201107 13:10:46.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:10:53.808" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:10:59.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:10:59.792" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:10:59.792" starttime="20201107 13:10:53.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:10:59.793" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:10:59.793" starttime="20201107 13:10:59.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:10:59.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:10:59.793" starttime="20201107 13:10:59.793"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:59.794" starttime="20201107 13:10:53.805"></status>
</kw>
<msg timestamp="20201107 13:10:59.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:10:59.794" starttime="20201107 13:10:53.805"></status>
</kw>
<status status="PASS" endtime="20201107 13:10:59.794" starttime="20201107 13:10:53.804"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:10:59.800" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:11:05.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:11:05.858" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:11:05.858" starttime="20201107 13:10:59.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:11:05.859" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:11:05.860" starttime="20201107 13:11:05.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:11:05.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:11:05.860" starttime="20201107 13:11:05.860"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:05.861" starttime="20201107 13:10:59.795"></status>
</kw>
<msg timestamp="20201107 13:11:05.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:11:05.861" starttime="20201107 13:10:59.795"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:05.861" starttime="20201107 13:10:59.794"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:11:05.861" critical="yes" starttime="20201107 13:10:26.381"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:11:05.867" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:11:05.867" starttime="20201107 13:11:05.867"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:11:05.868" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:11:05.868" starttime="20201107 13:11:05.868"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:05.868" starttime="20201107 13:11:05.866"></status>
</kw>
<msg timestamp="20201107 13:11:05.868" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:11:05.868" starttime="20201107 13:11:05.866"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:05.869" starttime="20201107 13:11:05.865"></status>
</kw>
<msg timestamp="20201107 13:11:05.869" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:11:05.869" starttime="20201107 13:11:05.864"></status>
</kw>
<msg timestamp="20201107 13:11:05.869" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:11:05.869" starttime="20201107 13:11:05.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:11:05.873" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:11:09.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:11:09.827" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:11:09.827" starttime="20201107 13:11:05.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:11:09.829" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:11:09.829" starttime="20201107 13:11:09.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:11:09.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:11:09.830" starttime="20201107 13:11:09.829"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:09.830" starttime="20201107 13:11:05.870"></status>
</kw>
<msg timestamp="20201107 13:11:09.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:11:09.830" starttime="20201107 13:11:05.870"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:09.830" starttime="20201107 13:11:05.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:11:09.834" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:11:13.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:11:13.254" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201107 13:11:13.254" starttime="20201107 13:11:09.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:11:13.256" level="INFO"></msg>
<status status="PASS" endtime="20201107 13:11:13.256" starttime="20201107 13:11:13.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:11:13.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:11:13.256" starttime="20201107 13:11:13.256"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:13.257" starttime="20201107 13:11:09.831"></status>
</kw>
<msg timestamp="20201107 13:11:13.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:11:13.257" starttime="20201107 13:11:09.831"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:13.257" starttime="20201107 13:11:09.830"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201107 13:11:13.257" critical="yes" starttime="20201107 13:11:05.862"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201107 13:11:13.259" starttime="20201107 13:10:26.320"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:13:01.679" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:13:01.679" starttime="20201107 13:13:01.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:13:01.680" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:13:01.680" starttime="20201107 13:13:01.679"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:01.680" starttime="20201107 13:13:01.678"></status>
</kw>
<msg timestamp="20201107 13:13:01.680" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:13:01.680" starttime="20201107 13:13:01.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:13:01.681" starttime="20201107 13:13:01.681"></status>
</kw>
<msg timestamp="20201107 13:13:01.681" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:13:01.681" starttime="20201107 13:13:01.680"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:01.682" starttime="20201107 13:13:01.677"></status>
</kw>
<msg timestamp="20201107 13:13:01.682" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:13:01.682" starttime="20201107 13:13:01.676"></status>
</kw>
<msg timestamp="20201107 13:13:01.682" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:13:01.682" starttime="20201107 13:13:01.675"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:13:01.682" level="INFO">${random} = 67805</msg>
<status status="PASS" endtime="20201107 13:13:01.683" starttime="20201107 13:13:01.682"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:13:01.690" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-67805 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:13:05.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:13:05.840" level="INFO">${output} = 2020-11-07 13:13:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:13:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201107 13:13:05.840" starttime="20201107 13:13:01.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:13:05.842" level="INFO">2020-11-07 13:13:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:13:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:13:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:13:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:13:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0B74B364C38D-&gt;1d0d7007-7898-4222-93f3-bb05154eea02
2020-11-07 13:13:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201107 13:13:05.842" starttime="20201107 13:13:05.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:13:05.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:13:05.843" starttime="20201107 13:13:05.842"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:05.843" starttime="20201107 13:13:01.684"></status>
</kw>
<msg timestamp="20201107 13:13:05.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:13:05.843" starttime="20201107 13:13:01.683"></status>
</kw>
<msg timestamp="20201107 13:13:05.843" level="INFO">${result} = 2020-11-07 13:13:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:13:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201107 13:13:05.843" starttime="20201107 13:13:01.683"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:13:05.849" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:13:08.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:13:08.212" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:13 ofs://om/volume1/bucket1/ozone-67805
-rw-...</msg>
<status status="PASS" endtime="20201107 13:13:08.212" starttime="20201107 13:13:05.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:13:08.213" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:13 ofs://om/volume1/bucket1/ozone-67805
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:11 ofs://om/volume1/bucket1/ozone-99814
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:11 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:12 ofs://om/volume1/bucket1/wordcount-50.txt</msg>
<status status="PASS" endtime="20201107 13:13:08.213" starttime="20201107 13:13:08.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:13:08.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:13:08.214" starttime="20201107 13:13:08.213"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:08.214" starttime="20201107 13:13:05.846"></status>
</kw>
<msg timestamp="20201107 13:13:08.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:13:08.214" starttime="20201107 13:13:05.845"></status>
</kw>
<msg timestamp="20201107 13:13:08.214" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:13 ofs://om/volume1/bucket1/ozone-67805
-rw-...</msg>
<status status="PASS" endtime="20201107 13:13:08.214" starttime="20201107 13:13:05.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:13:08.215" starttime="20201107 13:13:08.215"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:13:08.215" critical="yes" starttime="20201107 13:13:01.674"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201107 13:13:08.216" starttime="20201107 13:13:01.610"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:11:18.867" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:11:18.867" starttime="20201107 13:11:18.866"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:11:18.868" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:11:18.868" starttime="20201107 13:11:18.867"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:18.868" starttime="20201107 13:11:18.866"></status>
</kw>
<msg timestamp="20201107 13:11:18.868" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:11:18.868" starttime="20201107 13:11:18.865"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:18.868" starttime="20201107 13:11:18.865"></status>
</kw>
<msg timestamp="20201107 13:11:18.868" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:11:18.868" starttime="20201107 13:11:18.864"></status>
</kw>
<msg timestamp="20201107 13:11:18.869" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:11:18.869" starttime="20201107 13:11:18.863"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:11:18.869" level="INFO">${random} = 99814</msg>
<status status="PASS" endtime="20201107 13:11:18.869" starttime="20201107 13:11:18.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:11:18.877" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-99814 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:11:23.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:11:23.381" level="INFO">${output} = 2020-11-07 13:11:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:11:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201107 13:11:23.381" starttime="20201107 13:11:18.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:11:23.382" level="INFO">2020-11-07 13:11:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:11:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:11:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:11:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:11:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-32E06EF34B65-&gt;1d0d7007-7898-4222-93f3-bb05154eea02
2020-11-07 13:11:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201107 13:11:23.383" starttime="20201107 13:11:23.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:11:23.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:11:23.383" starttime="20201107 13:11:23.383"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:23.384" starttime="20201107 13:11:18.870"></status>
</kw>
<msg timestamp="20201107 13:11:23.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:11:23.384" starttime="20201107 13:11:18.870"></status>
</kw>
<msg timestamp="20201107 13:11:23.384" level="INFO">${result} = 2020-11-07 13:11:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:11:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201107 13:11:23.384" starttime="20201107 13:11:18.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:11:23.389" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:11:25.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:11:25.538" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:11 o3fs://bucket1.volume1.om/ozone-99814
dr...</msg>
<status status="PASS" endtime="20201107 13:11:25.538" starttime="20201107 13:11:23.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:11:25.539" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:11 o3fs://bucket1.volume1.om/ozone-99814
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:11 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201107 13:11:25.539" starttime="20201107 13:11:25.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:11:25.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:11:25.540" starttime="20201107 13:11:25.539"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:25.540" starttime="20201107 13:11:23.386"></status>
</kw>
<msg timestamp="20201107 13:11:25.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:11:25.540" starttime="20201107 13:11:23.385"></status>
</kw>
<msg timestamp="20201107 13:11:25.541" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-07 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-07 13:11 o3fs://bucket1.volume1.om/ozone-99814
dr...</msg>
<status status="PASS" endtime="20201107 13:11:25.541" starttime="20201107 13:11:23.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:11:25.541" starttime="20201107 13:11:25.541"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201107 13:11:25.542" critical="yes" starttime="20201107 13:11:18.862"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201107 13:11:25.543" starttime="20201107 13:11:18.805"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:13:13.804" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:13:13.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:13:13.812" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:13:13.812" starttime="20201107 13:13:13.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:13:13.813" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:13:13.813" starttime="20201107 13:13:13.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:13:13.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:13:13.814" starttime="20201107 13:13:13.813"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:13.814" starttime="20201107 13:13:13.800"></status>
</kw>
<msg timestamp="20201107 13:13:13.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:13:13.814" starttime="20201107 13:13:13.799"></status>
</kw>
<msg timestamp="20201107 13:13:13.815" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:13:13.815" starttime="20201107 13:13:13.799"></status>
</kw>
<msg timestamp="20201107 13:13:13.815" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:13:13.815" starttime="20201107 13:13:13.798"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:13:13.820" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:13:13.820" starttime="20201107 13:13:13.820"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:13:13.821" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:13:13.821" starttime="20201107 13:13:13.820"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:13.821" starttime="20201107 13:13:13.818"></status>
</kw>
<msg timestamp="20201107 13:13:13.821" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:13:13.821" starttime="20201107 13:13:13.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:13:13.822" starttime="20201107 13:13:13.822"></status>
</kw>
<msg timestamp="20201107 13:13:13.822" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:13:13.822" starttime="20201107 13:13:13.821"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:13.822" starttime="20201107 13:13:13.817"></status>
</kw>
<msg timestamp="20201107 13:13:13.823" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:13:13.823" starttime="20201107 13:13:13.816"></status>
</kw>
<msg timestamp="20201107 13:13:13.823" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:13:13.823" starttime="20201107 13:13:13.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:13:13.827" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:13:59.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:13:59.400" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:13:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:13:16 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201107 13:13:59.400" starttime="20201107 13:13:13.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:13:59.406" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:13:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:13:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:13:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:13:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:13:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C79CAEEBFD19-&gt;1d0d7007-7898-4222-93f3-bb05154eea02
2020-11-07 13:13:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-07 13:13:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-07 13:13:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:13:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:13:21 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:13:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604754601925_0003
2020-11-07 13:13:21 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-07 13:13:21 INFO  Configuration:2795 - resource-types.xml not found
2020-11-07 13:13:21 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-07 13:13:21 INFO  YarnClientImpl:329 - Submitted application application_1604754601925_0003
2020-11-07 13:13:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604754601925_0003/
2020-11-07 13:13:21 INFO  Job:1619 - Running job: job_1604754601925_0003
2020-11-07 13:13:31 INFO  Job:1640 - Job job_1604754601925_0003 running in uber mode : false
2020-11-07 13:13:31 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:13:37 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:13:43 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:13:49 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:13:55 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:13:58 INFO  Job:1658 - Job job_1604754601925_0003 completed successfully
2020-11-07 13:13:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45780
		Total time spent by all reduces in occupied slots (ms)=17848
		Total time spent by all map tasks (ms)=11445
		Total time spent by all reduce tasks (ms)=4462
		Total vcore-milliseconds taken by all map tasks=11445
		Total vcore-milliseconds taken by all reduce tasks=4462
		Total megabyte-milliseconds taken by all map tasks=46878720
		Total megabyte-milliseconds taken by all reduce tasks=18276352
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=668
		CPU time spent (ms)=7920
		Physical memory (bytes) snapshot=1233178624
		Virtual memory (bytes) snapshot=15784984576
		Total committed heap usage (bytes)=1173356544
		Peak Map Physical memory (bytes)=288104448
		Peak Map Virtual memory (bytes)=3948429312
		Peak Reduce Physical memory (bytes)=391733248
		Peak Reduce Virtual memory (bytes)=3970043904
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.549 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201107 13:13:59.406" starttime="20201107 13:13:59.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:13:59.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:13:59.407" starttime="20201107 13:13:59.407"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:59.408" starttime="20201107 13:13:13.824"></status>
</kw>
<msg timestamp="20201107 13:13:59.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:13:59.408" starttime="20201107 13:13:13.824"></status>
</kw>
<msg timestamp="20201107 13:13:59.408" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:13:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:13:16 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201107 13:13:59.408" starttime="20201107 13:13:13.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:13:59.409" starttime="20201107 13:13:59.409"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:13:59.409" critical="yes" starttime="20201107 13:13:13.797"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:13:59.415" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:13:59.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:13:59.421" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:13:59.421" starttime="20201107 13:13:59.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:13:59.423" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:13:59.423" starttime="20201107 13:13:59.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:13:59.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:13:59.424" starttime="20201107 13:13:59.423"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:59.424" starttime="20201107 13:13:59.412"></status>
</kw>
<msg timestamp="20201107 13:13:59.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:13:59.424" starttime="20201107 13:13:59.412"></status>
</kw>
<msg timestamp="20201107 13:13:59.424" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:13:59.425" starttime="20201107 13:13:59.412"></status>
</kw>
<msg timestamp="20201107 13:13:59.425" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:13:59.425" starttime="20201107 13:13:59.411"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:13:59.425" level="INFO">${random} = 45</msg>
<status status="PASS" endtime="20201107 13:13:59.425" starttime="20201107 13:13:59.425"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:13:59.429" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:13:59.430" starttime="20201107 13:13:59.429"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:13:59.430" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:13:59.431" starttime="20201107 13:13:59.430"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:59.431" starttime="20201107 13:13:59.429"></status>
</kw>
<msg timestamp="20201107 13:13:59.431" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:13:59.431" starttime="20201107 13:13:59.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201107 13:13:59.432" starttime="20201107 13:13:59.432"></status>
</kw>
<msg timestamp="20201107 13:13:59.432" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201107 13:13:59.432" starttime="20201107 13:13:59.431"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:59.432" starttime="20201107 13:13:59.427"></status>
</kw>
<msg timestamp="20201107 13:13:59.432" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:13:59.433" starttime="20201107 13:13:59.426"></status>
</kw>
<msg timestamp="20201107 13:13:59.433" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201107 13:13:59.433" starttime="20201107 13:13:59.426"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:13:59.436" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:13:59.436" starttime="20201107 13:13:59.436"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:13:59.438" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:13:59.438" starttime="20201107 13:13:59.437"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:59.441" starttime="20201107 13:13:59.435"></status>
</kw>
<msg timestamp="20201107 13:13:59.441" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:13:59.441" starttime="20201107 13:13:59.435"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:13:59.443" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201107 13:13:59.443" starttime="20201107 13:13:59.442"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:13:59.444" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201107 13:13:59.444" starttime="20201107 13:13:59.443"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:59.444" starttime="20201107 13:13:59.442"></status>
</kw>
<msg timestamp="20201107 13:13:59.444" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201107 13:13:59.444" starttime="20201107 13:13:59.441"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:59.444" starttime="20201107 13:13:59.434"></status>
</kw>
<msg timestamp="20201107 13:13:59.445" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201107 13:13:59.445" starttime="20201107 13:13:59.434"></status>
</kw>
<msg timestamp="20201107 13:13:59.445" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201107 13:13:59.445" starttime="20201107 13:13:59.433"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201107 13:13:59.448" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201107 13:13:59.448" starttime="20201107 13:13:59.448"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:13:59.449" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201107 13:13:59.449" starttime="20201107 13:13:59.448"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:59.449" starttime="20201107 13:13:59.447"></status>
</kw>
<msg timestamp="20201107 13:13:59.450" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201107 13:13:59.450" starttime="20201107 13:13:59.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:13:59.453" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201107 13:13:59.453" starttime="20201107 13:13:59.452"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:13:59.454" level="INFO">${result} = /wordcount-45.txt</msg>
<status status="PASS" endtime="20201107 13:13:59.454" starttime="20201107 13:13:59.453"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:59.455" starttime="20201107 13:13:59.451"></status>
</kw>
<msg timestamp="20201107 13:13:59.455" level="INFO">${path_with_leading} = /wordcount-45.txt</msg>
<status status="PASS" endtime="20201107 13:13:59.455" starttime="20201107 13:13:59.450"></status>
</kw>
<status status="PASS" endtime="20201107 13:13:59.456" starttime="20201107 13:13:59.446"></status>
</kw>
<msg timestamp="20201107 13:13:59.456" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201107 13:13:59.456" starttime="20201107 13:13:59.446"></status>
</kw>
<msg timestamp="20201107 13:13:59.457" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201107 13:13:59.457" starttime="20201107 13:13:59.445"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:13:59.461" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-45.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:14:44.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:14:44.280" level="INFO">${output} = 2020-11-07 13:14:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-07 13:14:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201107 13:14:44.281" starttime="20201107 13:13:59.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:14:44.282" level="INFO">2020-11-07 13:14:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-07 13:14:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:14:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:14:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:14:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:14:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:14:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2585EA24EA7A-&gt;1d0d7007-7898-4222-93f3-bb05154eea02
2020-11-07 13:14:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:14:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:14:06 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:14:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604754601925_0004
2020-11-07 13:14:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-07 13:14:07 INFO  Configuration:2795 - resource-types.xml not found
2020-11-07 13:14:07 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-07 13:14:07 INFO  YarnClientImpl:329 - Submitted application application_1604754601925_0004
2020-11-07 13:14:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604754601925_0004/
2020-11-07 13:14:07 INFO  Job:1619 - Running job: job_1604754601925_0004
2020-11-07 13:14:15 INFO  Job:1640 - Job job_1604754601925_0004 running in uber mode : false
2020-11-07 13:14:15 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:14:23 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:14:29 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:14:34 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:14:40 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:14:43 INFO  Job:1658 - Job job_1604754601925_0004 completed successfully
2020-11-07 13:14:43 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123795
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48324
		Total time spent by all reduces in occupied slots (ms)=18188
		Total time spent by all map tasks (ms)=12081
		Total time spent by all reduce tasks (ms)=4547
		Total vcore-milliseconds taken by all map tasks=12081
		Total vcore-milliseconds taken by all reduce tasks=4547
		Total megabyte-milliseconds taken by all map tasks=49483776
		Total megabyte-milliseconds taken by all reduce tasks=18624512
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=756
		CPU time spent (ms)=8520
		Physical memory (bytes) snapshot=1266249728
		Virtual memory (bytes) snapshot=15801585664
		Total committed heap usage (bytes)=1237319680
		Peak Map Physical memory (bytes)=297553920
		Peak Map Virtual memory (bytes)=3950526464
		Peak Reduce Physical memory (bytes)=390033408
		Peak Reduce Virtual memory (bytes)=3969863680
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201107 13:14:44.282" starttime="20201107 13:14:44.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:14:44.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:14:44.283" starttime="20201107 13:14:44.282"></status>
</kw>
<status status="PASS" endtime="20201107 13:14:44.283" starttime="20201107 13:13:59.458"></status>
</kw>
<msg timestamp="20201107 13:14:44.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:14:44.284" starttime="20201107 13:13:59.458"></status>
</kw>
<msg timestamp="20201107 13:14:44.284" level="INFO">${output} = 2020-11-07 13:14:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-07 13:14:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201107 13:14:44.284" starttime="20201107 13:13:59.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201107 13:14:44.285" starttime="20201107 13:14:44.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:14:44.285" starttime="20201107 13:14:44.285"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:14:44.285" critical="yes" starttime="20201107 13:13:59.410"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201107 13:14:44.287" starttime="20201107 13:13:13.739"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:11:31.051" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:11:31.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:11:31.058" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:11:31.058" starttime="20201107 13:11:31.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:11:31.059" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:11:31.059" starttime="20201107 13:11:31.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:11:31.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:11:31.060" starttime="20201107 13:11:31.060"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:31.060" starttime="20201107 13:11:31.044"></status>
</kw>
<msg timestamp="20201107 13:11:31.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:11:31.061" starttime="20201107 13:11:31.044"></status>
</kw>
<msg timestamp="20201107 13:11:31.061" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:11:31.061" starttime="20201107 13:11:31.043"></status>
</kw>
<msg timestamp="20201107 13:11:31.061" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:11:31.061" starttime="20201107 13:11:31.042"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:11:31.067" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:11:31.067" starttime="20201107 13:11:31.066"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:11:31.068" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:11:31.068" starttime="20201107 13:11:31.067"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:31.068" starttime="20201107 13:11:31.064"></status>
</kw>
<msg timestamp="20201107 13:11:31.068" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:11:31.068" starttime="20201107 13:11:31.064"></status>
</kw>
<status status="PASS" endtime="20201107 13:11:31.068" starttime="20201107 13:11:31.063"></status>
</kw>
<msg timestamp="20201107 13:11:31.068" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:11:31.068" starttime="20201107 13:11:31.062"></status>
</kw>
<msg timestamp="20201107 13:11:31.069" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:11:31.069" starttime="20201107 13:11:31.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:11:31.073" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:12:15.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:12:15.269" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:11:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:11:33 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201107 13:12:15.270" starttime="20201107 13:11:31.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:12:15.271" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:11:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:11:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:11:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:11:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:11:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1E0363C7B212-&gt;1d0d7007-7898-4222-93f3-bb05154eea02
2020-11-07 13:11:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-07 13:11:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-07 13:11:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:11:35 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:11:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604754601925_0001
2020-11-07 13:11:36 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-07 13:11:36 INFO  Configuration:2795 - resource-types.xml not found
2020-11-07 13:11:36 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-07 13:11:36 INFO  YarnClientImpl:329 - Submitted application application_1604754601925_0001
2020-11-07 13:11:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604754601925_0001/
2020-11-07 13:11:37 INFO  Job:1619 - Running job: job_1604754601925_0001
2020-11-07 13:11:48 INFO  Job:1640 - Job job_1604754601925_0001 running in uber mode : false
2020-11-07 13:11:48 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:11:55 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:12:01 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:12:07 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:12:13 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:12:14 INFO  Job:1658 - Job job_1604754601925_0001 completed successfully
2020-11-07 13:12:14 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061649
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46808
		Total time spent by all reduces in occupied slots (ms)=18412
		Total time spent by all map tasks (ms)=11702
		Total time spent by all reduce tasks (ms)=4603
		Total vcore-milliseconds taken by all map tasks=11702
		Total vcore-milliseconds taken by all reduce tasks=4603
		Total megabyte-milliseconds taken by all map tasks=47931392
		Total megabyte-milliseconds taken by all reduce tasks=18853888
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=681
		CPU time spent (ms)=8390
		Physical memory (bytes) snapshot=1274843136
		Virtual memory (bytes) snapshot=15809409024
		Total committed heap usage (bytes)=1180172288
		Peak Map Physical memory (bytes)=297091072
		Peak Map Virtual memory (bytes)=3947597824
		Peak Reduce Physical memory (bytes)=390909952
		Peak Reduce Virtual memory (bytes)=3969302528
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.712 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201107 13:12:15.271" starttime="20201107 13:12:15.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:12:15.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:12:15.272" starttime="20201107 13:12:15.271"></status>
</kw>
<status status="PASS" endtime="20201107 13:12:15.272" starttime="20201107 13:11:31.070"></status>
</kw>
<msg timestamp="20201107 13:12:15.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:12:15.272" starttime="20201107 13:11:31.069"></status>
</kw>
<msg timestamp="20201107 13:12:15.273" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-07 13:11:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:11:33 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201107 13:12:15.273" starttime="20201107 13:11:31.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:12:15.273" starttime="20201107 13:12:15.273"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:12:15.274" critical="yes" starttime="20201107 13:11:31.041"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:12:15.279" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:12:15.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:12:15.287" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:12:15.287" starttime="20201107 13:12:15.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:12:15.288" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:12:15.288" starttime="20201107 13:12:15.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:12:15.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:12:15.289" starttime="20201107 13:12:15.288"></status>
</kw>
<status status="PASS" endtime="20201107 13:12:15.289" starttime="20201107 13:12:15.277"></status>
</kw>
<msg timestamp="20201107 13:12:15.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:12:15.289" starttime="20201107 13:12:15.276"></status>
</kw>
<msg timestamp="20201107 13:12:15.289" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:12:15.289" starttime="20201107 13:12:15.276"></status>
</kw>
<msg timestamp="20201107 13:12:15.290" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201107 13:12:15.290" starttime="20201107 13:12:15.275"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201107 13:12:15.290" level="INFO">${random} = 50</msg>
<status status="PASS" endtime="20201107 13:12:15.290" starttime="20201107 13:12:15.290"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:12:15.295" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:12:15.295" starttime="20201107 13:12:15.294"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:12:15.296" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:12:15.296" starttime="20201107 13:12:15.295"></status>
</kw>
<status status="PASS" endtime="20201107 13:12:15.296" starttime="20201107 13:12:15.294"></status>
</kw>
<msg timestamp="20201107 13:12:15.296" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:12:15.296" starttime="20201107 13:12:15.293"></status>
</kw>
<status status="PASS" endtime="20201107 13:12:15.296" starttime="20201107 13:12:15.292"></status>
</kw>
<msg timestamp="20201107 13:12:15.296" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:12:15.296" starttime="20201107 13:12:15.291"></status>
</kw>
<msg timestamp="20201107 13:12:15.297" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201107 13:12:15.297" starttime="20201107 13:12:15.290"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:12:15.300" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:12:15.300" starttime="20201107 13:12:15.300"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:12:15.301" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:12:15.301" starttime="20201107 13:12:15.300"></status>
</kw>
<status status="PASS" endtime="20201107 13:12:15.301" starttime="20201107 13:12:15.299"></status>
</kw>
<msg timestamp="20201107 13:12:15.301" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:12:15.301" starttime="20201107 13:12:15.299"></status>
</kw>
<status status="PASS" endtime="20201107 13:12:15.302" starttime="20201107 13:12:15.298"></status>
</kw>
<msg timestamp="20201107 13:12:15.302" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201107 13:12:15.302" starttime="20201107 13:12:15.298"></status>
</kw>
<msg timestamp="20201107 13:12:15.302" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201107 13:12:15.302" starttime="20201107 13:12:15.297"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201107 13:12:15.305" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201107 13:12:15.305" starttime="20201107 13:12:15.305"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201107 13:12:15.306" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201107 13:12:15.306" starttime="20201107 13:12:15.306"></status>
</kw>
<status status="PASS" endtime="20201107 13:12:15.306" starttime="20201107 13:12:15.304"></status>
</kw>
<msg timestamp="20201107 13:12:15.306" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201107 13:12:15.306" starttime="20201107 13:12:15.304"></status>
</kw>
<status status="PASS" endtime="20201107 13:12:15.307" starttime="20201107 13:12:15.303"></status>
</kw>
<msg timestamp="20201107 13:12:15.307" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-50.txt</msg>
<status status="PASS" endtime="20201107 13:12:15.307" starttime="20201107 13:12:15.303"></status>
</kw>
<msg timestamp="20201107 13:12:15.307" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-50.txt</msg>
<status status="PASS" endtime="20201107 13:12:15.307" starttime="20201107 13:12:15.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201107 13:12:15.311" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-50.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201107 13:12:55.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20201107 13:12:55.956" level="INFO">${output} = 2020-11-07 13:12:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-07 13:12:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201107 13:12:55.956" starttime="20201107 13:12:15.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201107 13:12:55.957" level="INFO">2020-11-07 13:12:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-07 13:12:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-07 13:12:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-07 13:12:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-07 13:12:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-07 13:12:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-07 13:12:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2469FB4764D3-&gt;1d0d7007-7898-4222-93f3-bb05154eea02
2020-11-07 13:12:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-07 13:12:19 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-07 13:12:19 INFO  JobSubmitter:202 - number of splits:3
2020-11-07 13:12:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604754601925_0002
2020-11-07 13:12:20 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-07 13:12:20 INFO  Configuration:2795 - resource-types.xml not found
2020-11-07 13:12:20 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-07 13:12:20 INFO  YarnClientImpl:329 - Submitted application application_1604754601925_0002
2020-11-07 13:12:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604754601925_0002/
2020-11-07 13:12:20 INFO  Job:1619 - Running job: job_1604754601925_0002
2020-11-07 13:12:29 INFO  Job:1640 - Job job_1604754601925_0002 running in uber mode : false
2020-11-07 13:12:29 INFO  Job:1647 -  map 0% reduce 0%
2020-11-07 13:12:37 INFO  Job:1647 -  map 33% reduce 0%
2020-11-07 13:12:42 INFO  Job:1647 -  map 67% reduce 0%
2020-11-07 13:12:48 INFO  Job:1647 -  map 100% reduce 0%
2020-11-07 13:12:54 INFO  Job:1647 -  map 100% reduce 100%
2020-11-07 13:12:55 INFO  Job:1658 - Job job_1604754601925_0002 completed successfully
2020-11-07 13:12:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123879
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48048
		Total time spent by all reduces in occupied slots (ms)=17908
		Total time spent by all map tasks (ms)=12012
		Total time spent by all reduce tasks (ms)=4477
		Total vcore-milliseconds taken by all map tasks=12012
		Total vcore-milliseconds taken by all reduce tasks=4477
		Total megabyte-milliseconds taken by all map tasks=49201152
		Total megabyte-milliseconds taken by all reduce tasks=18337792
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=697
		CPU time spent (ms)=8900
		Physical memory (bytes) snapshot=1278431232
		Virtual memory (bytes) snapshot=15811117056
		Total committed heap usage (bytes)=1088421888
		Peak Map Physical memory (bytes)=298618880
		Peak Map Virtual memory (bytes)=3949862912
		Peak Reduce Physical memory (bytes)=388149248
		Peak Reduce Virtual memory (bytes)=3966574592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201107 13:12:55.958" starttime="20201107 13:12:55.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201107 13:12:55.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201107 13:12:55.958" starttime="20201107 13:12:55.958"></status>
</kw>
<status status="PASS" endtime="20201107 13:12:55.959" starttime="20201107 13:12:15.308"></status>
</kw>
<msg timestamp="20201107 13:12:55.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201107 13:12:55.959" starttime="20201107 13:12:15.308"></status>
</kw>
<msg timestamp="20201107 13:12:55.960" level="INFO">${output} = 2020-11-07 13:12:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-07 13:12:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201107 13:12:55.960" starttime="20201107 13:12:15.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201107 13:12:55.960" starttime="20201107 13:12:55.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201107 13:12:55.961" starttime="20201107 13:12:55.960"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201107 13:12:55.961" critical="yes" starttime="20201107 13:12:15.275"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201107 13:12:55.962" starttime="20201107 13:11:30.979"></status>
</suite>
<status status="PASS" elapsedtime="235814" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="655226" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
