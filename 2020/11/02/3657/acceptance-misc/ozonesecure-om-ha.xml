<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201102 01:55:00.806" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:50:51.176" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:01.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:01.157" level="INFO">${output} = 2020-11-02 01:50:52,851 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:50:53,060 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 01:51:01.157" starttime="20201102 01:50:51.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:01.158" level="INFO">2020-11-02 01:50:52,851 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:50:53,060 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:50:53,060 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-02 01:50:55,626 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-02 01:50:55,627 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-02 01:50:55,627 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-02 01:50:55,627 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-02 01:50:55,627 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-02 01:50:55,627 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-02 01:50:55,627 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-02 01:50:55,630 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-02 01:50:55,643 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:50:55,689 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-95153, with testuser/scm@EXAMPLE.COM as owner.
2020-11-02 01:50:56,297 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-95153/bucket-0-75507, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:50:56,644 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:50:57,647 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:50:58,652 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:50:58,729 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-02 01:50:59,653 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,578
Average Time spent in bucket creation: 00:00:00,231
Average Time spent in key creation: 00:00:01,120
Average Time spent in key write: 00:00:01,401
Total bytes written: 10240
Total Execution time: 00:00:07,555
***************************************************</msg>
<status status="PASS" endtime="20201102 01:51:01.158" starttime="20201102 01:51:01.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:01.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:01.159" starttime="20201102 01:51:01.158"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:01.159" starttime="20201102 01:50:51.172"></status>
</kw>
<msg timestamp="20201102 01:51:01.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:01.159" starttime="20201102 01:50:51.171"></status>
</kw>
<msg timestamp="20201102 01:51:01.160" level="INFO">${result} = 2020-11-02 01:50:52,851 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:50:53,060 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 01:51:01.160" starttime="20201102 01:50:51.171"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201102 01:51:01.161" starttime="20201102 01:51:01.160"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:01.161" starttime="20201102 01:51:01.160"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:51:01.161" critical="yes" starttime="20201102 01:50:51.170"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:01.167" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:09.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:09.914" level="INFO">${output} = 2020-11-02 01:51:02,880 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:51:03,055 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 01:51:09.914" starttime="20201102 01:51:01.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:09.916" level="INFO">2020-11-02 01:51:02,880 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:51:03,055 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:51:03,056 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-02 01:51:03,312 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ig6ax6ipru
2020-11-02 01:51:03,359 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-02 01:51:04,374 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:51:05,011 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-02 01:51:05,073 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:51:05,374 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:51:05,705 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-02 01:51:06,057 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:51:06,058 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-6ED8C65F6628-&gt;30029dec-c014-4522-b418-649b24b9d4c2
2020-11-02 01:51:06,059 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:51:06,374 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:51:07,375 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:51:08,375 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:51:09,376 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-02 01:51:09,573 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3657.837924, max=3657.837924, mean=3657.837924, stddev=0.0, median=3657.837924, p75=3657.837924, p95=3657.837924, p98=3657.837924, p99=3657.837924, p999=3657.837924, mean_rate=0.22516728425665727, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-02 01:51:09,573 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-11-02 01:51:09,574 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-02 01:51:09,574 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201102 01:51:09.917" starttime="20201102 01:51:09.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:09.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:09.917" starttime="20201102 01:51:09.917"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:09.918" starttime="20201102 01:51:01.165"></status>
</kw>
<msg timestamp="20201102 01:51:09.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:09.918" starttime="20201102 01:51:01.164"></status>
</kw>
<msg timestamp="20201102 01:51:09.918" level="INFO">${result} = 2020-11-02 01:51:02,880 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:51:03,055 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 01:51:09.918" starttime="20201102 01:51:01.164"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201102 01:51:09.919" starttime="20201102 01:51:09.919"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:09.919" starttime="20201102 01:51:09.918"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:51:09.919" critical="yes" starttime="20201102 01:51:01.162"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:09.928" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:14.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:14.979" level="INFO">${output} = 2020-11-02 01:51:11,910 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:51:12,064 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 01:51:14.980" starttime="20201102 01:51:09.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:14.981" level="INFO">2020-11-02 01:51:11,910 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:51:12,064 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:51:12,064 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-02 01:51:12,282 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dqxqwvvv1w
2020-11-02 01:51:12,310 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-02 01:51:13,313 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:51:14,314 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-02 01:51:14,944 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=220.324789, max=220.324789, mean=220.324789, stddev=0.0, median=220.324789, p75=220.324789, p95=220.324789, p98=220.324789, p99=220.324789, p999=220.324789, mean_rate=0.8743931495130075, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-02 01:51:14,945 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-02 01:51:14,947 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-02 01:51:14,947 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201102 01:51:14.981" starttime="20201102 01:51:14.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:14.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:14.982" starttime="20201102 01:51:14.981"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:14.982" starttime="20201102 01:51:09.925"></status>
</kw>
<msg timestamp="20201102 01:51:14.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:14.982" starttime="20201102 01:51:09.925"></status>
</kw>
<msg timestamp="20201102 01:51:14.982" level="INFO">${result} = 2020-11-02 01:51:11,910 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:51:12,064 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 01:51:14.982" starttime="20201102 01:51:09.925"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201102 01:51:14.983" starttime="20201102 01:51:14.983"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:14.984" starttime="20201102 01:51:14.983"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:51:14.984" critical="yes" starttime="20201102 01:51:09.921"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:14.989" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:19.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:19.500" level="INFO">${output} = 2020-11-02 01:51:16,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:51:16,881 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 01:51:19.500" starttime="20201102 01:51:14.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:19.501" level="INFO">2020-11-02 01:51:16,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:51:16,881 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:51:16,882 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-02 01:51:17,059 [main] INFO freon.BaseFreonGenerator: Executing test with prefix m7ciuxcxbe
2020-11-02 01:51:17,084 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-02 01:51:18,090 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 01:51:19,090 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-02 01:51:19,443 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=67.914485, max=67.914485, mean=67.914485, stddev=0.0, median=67.914485, p75=67.914485, p95=67.914485, p98=67.914485, p99=67.914485, p999=67.914485, mean_rate=0.9801379667293499, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-02 01:51:19,443 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-11-02 01:51:19,446 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-02 01:51:19,449 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201102 01:51:19.502" starttime="20201102 01:51:19.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:19.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:19.502" starttime="20201102 01:51:19.502"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:19.503" starttime="20201102 01:51:14.986"></status>
</kw>
<msg timestamp="20201102 01:51:19.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:19.503" starttime="20201102 01:51:14.986"></status>
</kw>
<msg timestamp="20201102 01:51:19.504" level="INFO">${result} = 2020-11-02 01:51:16,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:51:16,881 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 01:51:19.504" starttime="20201102 01:51:14.986"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201102 01:51:19.507" starttime="20201102 01:51:19.505"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:19.508" starttime="20201102 01:51:19.504"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:51:19.509" critical="yes" starttime="20201102 01:51:14.984"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201102 01:51:19.510" starttime="20201102 01:50:51.140"></status>
</suite>
<status status="PASS" endtime="20201102 01:51:19.513" starttime="20201102 01:50:51.114"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:50:45.430" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:50:45.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:50:45.432" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:50:45.432" starttime="20201102 01:50:45.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:50:45.433" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:50:45.433" starttime="20201102 01:50:45.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:50:45.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:50:45.434" starttime="20201102 01:50:45.433"></status>
</kw>
<status status="PASS" endtime="20201102 01:50:45.434" starttime="20201102 01:50:45.424"></status>
</kw>
<msg timestamp="20201102 01:50:45.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:50:45.434" starttime="20201102 01:50:45.424"></status>
</kw>
<msg timestamp="20201102 01:50:45.434" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:50:45.434" starttime="20201102 01:50:45.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:50:45.435" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:50:45.435" starttime="20201102 01:50:45.435"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:50:45.447" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:50:45.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:50:45.468" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:50:45.468" starttime="20201102 01:50:45.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:50:45.470" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:50:45.470" starttime="20201102 01:50:45.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:50:45.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:50:45.470" starttime="20201102 01:50:45.470"></status>
</kw>
<status status="PASS" endtime="20201102 01:50:45.471" starttime="20201102 01:50:45.437"></status>
</kw>
<msg timestamp="20201102 01:50:45.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:50:45.471" starttime="20201102 01:50:45.436"></status>
</kw>
<status status="PASS" endtime="20201102 01:50:45.471" starttime="20201102 01:50:45.436"></status>
</kw>
<status status="PASS" endtime="20201102 01:50:45.471" starttime="20201102 01:50:45.435"></status>
</kw>
<status status="PASS" endtime="20201102 01:50:45.471" starttime="20201102 01:50:45.423"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:50:45.472" critical="yes" starttime="20201102 01:50:45.422"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201102 01:50:45.473" starttime="20201102 01:50:45.372"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:51:25.323" level="INFO">${random} = 90187</msg>
<status status="PASS" endtime="20201102 01:51:25.323" starttime="20201102 01:51:25.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201102 01:51:25.324" level="INFO">${source} = 90187-source</msg>
<status status="PASS" endtime="20201102 01:51:25.324" starttime="20201102 01:51:25.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201102 01:51:25.325" level="INFO">${target} = 90187-target</msg>
<status status="PASS" endtime="20201102 01:51:25.325" starttime="20201102 01:51:25.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:25.335" level="INFO">Running command 'ozone sh volume create 90187-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:28.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:28.948" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:51:28.948" starttime="20201102 01:51:25.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:28.949" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:51:28.949" starttime="20201102 01:51:28.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:28.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:28.949" starttime="20201102 01:51:28.949"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:28.950" starttime="20201102 01:51:25.326"></status>
</kw>
<msg timestamp="20201102 01:51:28.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:28.950" starttime="20201102 01:51:25.326"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:28.950" starttime="20201102 01:51:25.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:28.954" level="INFO">Running command 'ozone sh volume create 90187-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:32.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:32.685" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:51:32.685" starttime="20201102 01:51:28.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:32.686" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:51:32.686" starttime="20201102 01:51:32.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:32.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:32.687" starttime="20201102 01:51:32.687"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:32.687" starttime="20201102 01:51:28.951"></status>
</kw>
<msg timestamp="20201102 01:51:32.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:32.688" starttime="20201102 01:51:28.951"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:32.688" starttime="20201102 01:51:28.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:32.694" level="INFO">Running command 'ozone sh bucket create 90187-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:36.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:36.349" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:51:36.349" starttime="20201102 01:51:32.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:36.350" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:51:36.350" starttime="20201102 01:51:36.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:36.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:36.350" starttime="20201102 01:51:36.350"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:36.351" starttime="20201102 01:51:32.690"></status>
</kw>
<msg timestamp="20201102 01:51:36.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:36.351" starttime="20201102 01:51:32.689"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:36.351" starttime="20201102 01:51:32.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:36.358" level="INFO">Running command 'ozone sh key put 90187-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:42.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:42.273" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:51:42.273" starttime="20201102 01:51:36.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:42.274" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:51:42.274" starttime="20201102 01:51:42.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:42.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:42.275" starttime="20201102 01:51:42.275"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:42.275" starttime="20201102 01:51:36.352"></status>
</kw>
<msg timestamp="20201102 01:51:42.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:42.276" starttime="20201102 01:51:36.352"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:42.276" starttime="20201102 01:51:36.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:42.281" level="INFO">Running command 'ozone sh bucket create 90187-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:45.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:45.993" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:51:45.993" starttime="20201102 01:51:42.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:45.994" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:51:45.994" starttime="20201102 01:51:45.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:45.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:45.995" starttime="20201102 01:51:45.994"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:45.995" starttime="20201102 01:51:42.277"></status>
</kw>
<msg timestamp="20201102 01:51:45.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:45.995" starttime="20201102 01:51:42.276"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:45.996" starttime="20201102 01:51:42.276"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:45.999" level="INFO">Running command 'ozone sh bucket link 90187-source/readable-bucket 90187-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:49.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:49.347" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:51:49.347" starttime="20201102 01:51:45.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:49.349" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:51:49.349" starttime="20201102 01:51:49.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:49.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:49.350" starttime="20201102 01:51:49.349"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:49.350" starttime="20201102 01:51:45.997"></status>
</kw>
<msg timestamp="20201102 01:51:49.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:49.350" starttime="20201102 01:51:45.996"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:49.350" starttime="20201102 01:51:45.996"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:49.355" level="INFO">Running command 'ozone sh bucket link 90187-source/readable-bucket 90187-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:52.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:52.887" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:51:52.887" starttime="20201102 01:51:49.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:52.888" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:51:52.888" starttime="20201102 01:51:52.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:52.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:52.889" starttime="20201102 01:51:52.888"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:52.889" starttime="20201102 01:51:49.351"></status>
</kw>
<msg timestamp="20201102 01:51:52.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:52.889" starttime="20201102 01:51:49.351"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:52.889" starttime="20201102 01:51:49.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:52.894" level="INFO">Running command 'ozone sh bucket link 90187-source/unreadable-bucket 90187-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:56.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:56.471" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:51:56.471" starttime="20201102 01:51:52.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:56.472" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:51:56.472" starttime="20201102 01:51:56.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:56.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:56.473" starttime="20201102 01:51:56.473"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:56.473" starttime="20201102 01:51:52.890"></status>
</kw>
<msg timestamp="20201102 01:51:56.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:56.474" starttime="20201102 01:51:52.890"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:56.474" starttime="20201102 01:51:52.889"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:56.478" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90187-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:51:59.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:51:59.986" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:51:59.986" starttime="20201102 01:51:56.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:51:59.987" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 01:51:59.987" starttime="20201102 01:51:59.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:51:59.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:51:59.988" starttime="20201102 01:51:59.987"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:59.988" starttime="20201102 01:51:56.475"></status>
</kw>
<msg timestamp="20201102 01:51:59.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:51:59.988" starttime="20201102 01:51:56.474"></status>
</kw>
<status status="PASS" endtime="20201102 01:51:59.988" starttime="20201102 01:51:56.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:51:59.998" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 90187-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:03.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:03.590" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:03.590" starttime="20201102 01:51:59.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:03.591" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 01:52:03.591" starttime="20201102 01:52:03.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:03.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:03.591" starttime="20201102 01:52:03.591"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:03.592" starttime="20201102 01:51:59.989"></status>
</kw>
<msg timestamp="20201102 01:52:03.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:03.592" starttime="20201102 01:51:59.989"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:03.592" starttime="20201102 01:51:59.988"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:03.597" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 90187-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:07.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:07.323" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:07.323" starttime="20201102 01:52:03.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:07.324" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 01:52:07.324" starttime="20201102 01:52:07.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:07.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:07.325" starttime="20201102 01:52:07.324"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:07.325" starttime="20201102 01:52:03.593"></status>
</kw>
<msg timestamp="20201102 01:52:07.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:07.325" starttime="20201102 01:52:03.593"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:07.326" starttime="20201102 01:52:03.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:07.329" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90187-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:11.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:11.167" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:11.167" starttime="20201102 01:52:07.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:11.168" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 01:52:11.168" starttime="20201102 01:52:11.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:11.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:11.169" starttime="20201102 01:52:11.168"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:11.169" starttime="20201102 01:52:07.326"></status>
</kw>
<msg timestamp="20201102 01:52:11.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:11.169" starttime="20201102 01:52:07.326"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:11.170" starttime="20201102 01:52:07.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:11.173" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90187-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:15.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:15.095" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:15.096" starttime="20201102 01:52:11.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:15.097" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 01:52:15.097" starttime="20201102 01:52:15.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:15.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:15.097" starttime="20201102 01:52:15.097"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.097" starttime="20201102 01:52:11.170"></status>
</kw>
<msg timestamp="20201102 01:52:15.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:15.098" starttime="20201102 01:52:11.170"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.098" starttime="20201102 01:52:11.170"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.098" starttime="20201102 01:51:32.688"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.098" starttime="20201102 01:51:32.688"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.098" starttime="20201102 01:51:25.322"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:15.106" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:15.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:15.107" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:52:15.107" starttime="20201102 01:52:15.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:15.108" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:52:15.108" starttime="20201102 01:52:15.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:15.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:15.109" starttime="20201102 01:52:15.108"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.109" starttime="20201102 01:52:15.102"></status>
</kw>
<msg timestamp="20201102 01:52:15.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:15.109" starttime="20201102 01:52:15.101"></status>
</kw>
<msg timestamp="20201102 01:52:15.110" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:52:15.110" starttime="20201102 01:52:15.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:52:15.111" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:52:15.111" starttime="20201102 01:52:15.110"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:15.116" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:15.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:15.125" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:52:15.125" starttime="20201102 01:52:15.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:15.126" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:52:15.126" starttime="20201102 01:52:15.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:15.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:15.127" starttime="20201102 01:52:15.126"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.127" starttime="20201102 01:52:15.113"></status>
</kw>
<msg timestamp="20201102 01:52:15.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:15.127" starttime="20201102 01:52:15.112"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.128" starttime="20201102 01:52:15.112"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.128" starttime="20201102 01:52:15.111"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.128" starttime="20201102 01:52:15.100"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:15.128" starttime="20201102 01:52:15.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:15.133" level="INFO">Running command 'ozone sh bucket link 90187-source/no-such-bucket 90187-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:18.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:18.964" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:18.964" starttime="20201102 01:52:15.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:18.965" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:52:18.965" starttime="20201102 01:52:18.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:18.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:18.966" starttime="20201102 01:52:18.965"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:18.966" starttime="20201102 01:52:15.129"></status>
</kw>
<msg timestamp="20201102 01:52:18.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:18.966" starttime="20201102 01:52:15.129"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:18.967" starttime="20201102 01:52:15.128"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:18.970" level="INFO">Running command 'ozone sh key list 90187-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:22.358" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 01:52:22.358" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:22.358" starttime="20201102 01:52:18.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:22.359" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201102 01:52:22.359" starttime="20201102 01:52:22.358"></status>
</kw>
<msg timestamp="20201102 01:52:22.360" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:22.360" starttime="20201102 01:52:18.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201102 01:52:22.360" starttime="20201102 01:52:22.360"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:52:22.361" critical="yes" starttime="20201102 01:52:15.099"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:22.367" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:22.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:22.371" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:52:22.371" starttime="20201102 01:52:22.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:22.372" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:52:22.372" starttime="20201102 01:52:22.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:22.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:22.372" starttime="20201102 01:52:22.372"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:22.373" starttime="20201102 01:52:22.365"></status>
</kw>
<msg timestamp="20201102 01:52:22.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:22.373" starttime="20201102 01:52:22.364"></status>
</kw>
<msg timestamp="20201102 01:52:22.373" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:52:22.373" starttime="20201102 01:52:22.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:52:22.374" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:52:22.374" starttime="20201102 01:52:22.373"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:22.379" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:22.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:22.397" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:52:22.397" starttime="20201102 01:52:22.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:22.398" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:52:22.398" starttime="20201102 01:52:22.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:22.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:22.399" starttime="20201102 01:52:22.399"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:22.399" starttime="20201102 01:52:22.375"></status>
</kw>
<msg timestamp="20201102 01:52:22.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:22.400" starttime="20201102 01:52:22.375"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:22.400" starttime="20201102 01:52:22.374"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:22.400" starttime="20201102 01:52:22.374"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:22.400" starttime="20201102 01:52:22.363"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:22.400" starttime="20201102 01:52:22.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:22.405" level="INFO">Running command 'ozone sh bucket link 90187-source/bucket1 90187-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:26.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:26.049" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:26.049" starttime="20201102 01:52:22.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:26.050" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:52:26.050" starttime="20201102 01:52:26.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:26.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:26.051" starttime="20201102 01:52:26.050"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:26.051" starttime="20201102 01:52:22.401"></status>
</kw>
<msg timestamp="20201102 01:52:26.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:26.051" starttime="20201102 01:52:22.401"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:26.051" starttime="20201102 01:52:22.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:26.055" level="INFO">Running command 'ozone sh bucket create 90187-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:29.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:29.630" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:29.630" starttime="20201102 01:52:26.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:29.632" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:52:29.632" starttime="20201102 01:52:29.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:29.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:29.634" starttime="20201102 01:52:29.633"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:29.634" starttime="20201102 01:52:26.053"></status>
</kw>
<msg timestamp="20201102 01:52:29.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:29.634" starttime="20201102 01:52:26.052"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:29.635" starttime="20201102 01:52:26.052"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:29.639" level="INFO">Running command 'ozone sh key put 90187-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:36.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:36.071" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:36.071" starttime="20201102 01:52:29.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:36.072" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:52:36.073" starttime="20201102 01:52:36.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:36.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:36.073" starttime="20201102 01:52:36.073"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:36.073" starttime="20201102 01:52:29.636"></status>
</kw>
<msg timestamp="20201102 01:52:36.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:36.074" starttime="20201102 01:52:29.636"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:36.074" starttime="20201102 01:52:29.635"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201102 01:52:36.076" level="INFO">${postfix} = 52226</msg>
<status status="PASS" endtime="20201102 01:52:36.076" starttime="20201102 01:52:36.075"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201102 01:52:36.076" level="INFO">${tmpfile} = /tmp/tempkey-52226</msg>
<status status="PASS" endtime="20201102 01:52:36.076" starttime="20201102 01:52:36.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:36.080" level="INFO">Running command 'ozone sh key get -f 90187-target/link1/key1 /tmp/tempkey-52226 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:42.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:42.088" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:42.088" starttime="20201102 01:52:36.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:42.089" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:52:42.089" starttime="20201102 01:52:42.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:42.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:42.090" starttime="20201102 01:52:42.090"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.090" starttime="20201102 01:52:36.077"></status>
</kw>
<msg timestamp="20201102 01:52:42.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:42.091" starttime="20201102 01:52:36.077"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.091" starttime="20201102 01:52:36.076"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201102 01:52:42.094" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-52226 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:42.096" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201102 01:52:42.096" starttime="20201102 01:52:42.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:42.101" level="INFO">Running command 'rm -f /tmp/tempkey-52226 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:42.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:42.102" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:52:42.102" starttime="20201102 01:52:42.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:42.103" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:52:42.103" starttime="20201102 01:52:42.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:42.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:42.104" starttime="20201102 01:52:42.103"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.104" starttime="20201102 01:52:42.097"></status>
</kw>
<msg timestamp="20201102 01:52:42.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:42.105" starttime="20201102 01:52:42.097"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.105" starttime="20201102 01:52:42.096"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:52:42.105" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201102 01:52:42.105" starttime="20201102 01:52:42.105"></status>
</kw>
<msg timestamp="20201102 01:52:42.106" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201102 01:52:42.106" starttime="20201102 01:52:36.075"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:52:42.106" starttime="20201102 01:52:42.106"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.106" starttime="20201102 01:52:36.074"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:52:42.106" critical="yes" starttime="20201102 01:52:22.362"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:42.113" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:42.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:42.114" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:52:42.114" starttime="20201102 01:52:42.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:42.115" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:52:42.115" starttime="20201102 01:52:42.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:42.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:42.116" starttime="20201102 01:52:42.116"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.116" starttime="20201102 01:52:42.109"></status>
</kw>
<msg timestamp="20201102 01:52:42.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:42.117" starttime="20201102 01:52:42.109"></status>
</kw>
<msg timestamp="20201102 01:52:42.117" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:52:42.117" starttime="20201102 01:52:42.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:52:42.117" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:52:42.117" starttime="20201102 01:52:42.117"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:42.122" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:42.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:42.145" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:52:42.145" starttime="20201102 01:52:42.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:42.146" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:52:42.147" starttime="20201102 01:52:42.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:42.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:42.147" starttime="20201102 01:52:42.147"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.147" starttime="20201102 01:52:42.119"></status>
</kw>
<msg timestamp="20201102 01:52:42.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:42.148" starttime="20201102 01:52:42.119"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.148" starttime="20201102 01:52:42.118"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.148" starttime="20201102 01:52:42.118"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.148" starttime="20201102 01:52:42.108"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:42.148" starttime="20201102 01:52:42.108"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:42.153" level="INFO">Running command 'ozone sh key put 90187-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:47.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:47.868" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:47.868" starttime="20201102 01:52:42.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:47.869" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:52:47.869" starttime="20201102 01:52:47.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:47.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:47.870" starttime="20201102 01:52:47.869"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:47.870" starttime="20201102 01:52:42.149"></status>
</kw>
<msg timestamp="20201102 01:52:47.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:47.870" starttime="20201102 01:52:42.149"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:47.870" starttime="20201102 01:52:42.148"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201102 01:52:47.872" level="INFO">${postfix} = 99094</msg>
<status status="PASS" endtime="20201102 01:52:47.872" starttime="20201102 01:52:47.872"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201102 01:52:47.873" level="INFO">${tmpfile} = /tmp/tempkey-99094</msg>
<status status="PASS" endtime="20201102 01:52:47.873" starttime="20201102 01:52:47.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:47.877" level="INFO">Running command 'ozone sh key get -f 90187-source/bucket1/key2 /tmp/tempkey-99094 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:53.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:53.099" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:52:53.099" starttime="20201102 01:52:47.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:53.100" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:52:53.100" starttime="20201102 01:52:53.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:53.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:53.101" starttime="20201102 01:52:53.100"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.101" starttime="20201102 01:52:47.874"></status>
</kw>
<msg timestamp="20201102 01:52:53.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:53.101" starttime="20201102 01:52:47.874"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.101" starttime="20201102 01:52:47.873"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201102 01:52:53.104" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-99094 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:53.109" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201102 01:52:53.109" starttime="20201102 01:52:53.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:53.115" level="INFO">Running command 'rm -f /tmp/tempkey-99094 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:53.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:53.116" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:52:53.116" starttime="20201102 01:52:53.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:53.117" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:52:53.117" starttime="20201102 01:52:53.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:53.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:53.118" starttime="20201102 01:52:53.117"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.118" starttime="20201102 01:52:53.111"></status>
</kw>
<msg timestamp="20201102 01:52:53.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:53.118" starttime="20201102 01:52:53.110"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.118" starttime="20201102 01:52:53.109"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:52:53.119" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201102 01:52:53.119" starttime="20201102 01:52:53.119"></status>
</kw>
<msg timestamp="20201102 01:52:53.119" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201102 01:52:53.119" starttime="20201102 01:52:47.871"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:52:53.120" starttime="20201102 01:52:53.120"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.120" starttime="20201102 01:52:47.871"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:52:53.121" critical="yes" starttime="20201102 01:52:42.107"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:53.128" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:53.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:53.129" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:52:53.129" starttime="20201102 01:52:53.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:53.130" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:52:53.130" starttime="20201102 01:52:53.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:53.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:53.131" starttime="20201102 01:52:53.131"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.131" starttime="20201102 01:52:53.124"></status>
</kw>
<msg timestamp="20201102 01:52:53.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:53.132" starttime="20201102 01:52:53.124"></status>
</kw>
<msg timestamp="20201102 01:52:53.132" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:52:53.132" starttime="20201102 01:52:53.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:52:53.132" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:52:53.132" starttime="20201102 01:52:53.132"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:53.137" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:53.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:53.148" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:52:53.148" starttime="20201102 01:52:53.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:53.149" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:52:53.150" starttime="20201102 01:52:53.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:53.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:53.150" starttime="20201102 01:52:53.150"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.151" starttime="20201102 01:52:53.134"></status>
</kw>
<msg timestamp="20201102 01:52:53.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:53.151" starttime="20201102 01:52:53.133"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.151" starttime="20201102 01:52:53.133"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.151" starttime="20201102 01:52:53.133"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.151" starttime="20201102 01:52:53.123"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:53.151" starttime="20201102 01:52:53.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:53.156" level="INFO">Running command 'ozone sh key list 90187-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:52:56.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:52:56.697" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201102 01:52:56.697" starttime="20201102 01:52:53.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:52:56.698" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201102 01:52:56.698" starttime="20201102 01:52:56.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:52:56.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:52:56.699" starttime="20201102 01:52:56.698"></status>
</kw>
<status status="PASS" endtime="20201102 01:52:56.699" starttime="20201102 01:52:53.152"></status>
</kw>
<msg timestamp="20201102 01:52:56.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:52:56.699" starttime="20201102 01:52:53.152"></status>
</kw>
<msg timestamp="20201102 01:52:56.699" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201102 01:52:56.699" starttime="20201102 01:52:53.152"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:52:56.703" level="INFO">Running command 'ozone sh key list 90187-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:00.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:00.565" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201102 01:53:00.565" starttime="20201102 01:52:56.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:00.573" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201102 01:53:00.573" starttime="20201102 01:53:00.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:00.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:00.574" starttime="20201102 01:53:00.573"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:00.574" starttime="20201102 01:52:56.700"></status>
</kw>
<msg timestamp="20201102 01:53:00.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:00.574" starttime="20201102 01:52:56.700"></status>
</kw>
<msg timestamp="20201102 01:53:00.575" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201102 01:53:00.575" starttime="20201102 01:52:56.700"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:00.575" starttime="20201102 01:53:00.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:00.576" starttime="20201102 01:53:00.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:00.576" starttime="20201102 01:53:00.576"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:53:00.577" critical="yes" starttime="20201102 01:52:53.121"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:00.583" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:00.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:00.586" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:53:00.586" starttime="20201102 01:53:00.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:00.587" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:53:00.587" starttime="20201102 01:53:00.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:00.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:00.588" starttime="20201102 01:53:00.587"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:00.588" starttime="20201102 01:53:00.580"></status>
</kw>
<msg timestamp="20201102 01:53:00.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:00.588" starttime="20201102 01:53:00.580"></status>
</kw>
<msg timestamp="20201102 01:53:00.588" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:53:00.588" starttime="20201102 01:53:00.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:53:00.589" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:53:00.589" starttime="20201102 01:53:00.589"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:00.593" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:00.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:00.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:53:00.605" starttime="20201102 01:53:00.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:00.606" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:53:00.606" starttime="20201102 01:53:00.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:00.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:00.607" starttime="20201102 01:53:00.606"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:00.607" starttime="20201102 01:53:00.590"></status>
</kw>
<msg timestamp="20201102 01:53:00.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:00.607" starttime="20201102 01:53:00.590"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:00.607" starttime="20201102 01:53:00.590"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:00.607" starttime="20201102 01:53:00.589"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:00.608" starttime="20201102 01:53:00.579"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:00.608" starttime="20201102 01:53:00.578"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:00.613" level="INFO">Running command 'ozone sh key delete 90187-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:04.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:04.167" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:04.167" starttime="20201102 01:53:00.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:04.168" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:53:04.168" starttime="20201102 01:53:04.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:04.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:04.169" starttime="20201102 01:53:04.168"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:04.169" starttime="20201102 01:53:00.609"></status>
</kw>
<msg timestamp="20201102 01:53:04.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:04.169" starttime="20201102 01:53:00.608"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:04.170" starttime="20201102 01:53:00.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:04.178" level="INFO">Running command 'ozone sh key list 90187-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:08.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:08.437" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201102 01:53:08.437" starttime="20201102 01:53:04.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:08.438" level="INFO">key1</msg>
<status status="PASS" endtime="20201102 01:53:08.438" starttime="20201102 01:53:08.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:08.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:08.439" starttime="20201102 01:53:08.439"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:08.440" starttime="20201102 01:53:04.171"></status>
</kw>
<msg timestamp="20201102 01:53:08.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:08.440" starttime="20201102 01:53:04.170"></status>
</kw>
<msg timestamp="20201102 01:53:08.440" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201102 01:53:08.440" starttime="20201102 01:53:04.170"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:08.441" starttime="20201102 01:53:08.440"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:53:08.441" critical="yes" starttime="20201102 01:53:00.577"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:08.446" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:08.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:08.449" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:53:08.449" starttime="20201102 01:53:08.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:08.450" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:53:08.450" starttime="20201102 01:53:08.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:08.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:08.451" starttime="20201102 01:53:08.450"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:08.451" starttime="20201102 01:53:08.444"></status>
</kw>
<msg timestamp="20201102 01:53:08.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:08.451" starttime="20201102 01:53:08.444"></status>
</kw>
<msg timestamp="20201102 01:53:08.451" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:53:08.451" starttime="20201102 01:53:08.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:53:08.452" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:53:08.452" starttime="20201102 01:53:08.451"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:08.456" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:08.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:08.470" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:53:08.470" starttime="20201102 01:53:08.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:08.472" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:53:08.472" starttime="20201102 01:53:08.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:08.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:08.472" starttime="20201102 01:53:08.472"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:08.473" starttime="20201102 01:53:08.453"></status>
</kw>
<msg timestamp="20201102 01:53:08.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:08.473" starttime="20201102 01:53:08.453"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:08.473" starttime="20201102 01:53:08.453"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:08.473" starttime="20201102 01:53:08.452"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:08.473" starttime="20201102 01:53:08.443"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:08.473" starttime="20201102 01:53:08.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:08.478" level="INFO">Running command 'ozone sh bucket list 90187-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:12.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:12.318" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:12.318" starttime="20201102 01:53:08.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:12.319" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:52:18.773Z",
  "modificationTime" : "2020-11-02T01:52:18.773Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:51:56.323Z",
  "modificationTime" : "2020-11-02T01:52:14.919Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:52:25.946Z",
  "modificationTime" : "2020-11-02T01:52:25.946Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:51:49.179Z",
  "modificationTime" : "2020-11-02T01:52:10.993Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:51:52.790Z",
  "modificationTime" : "2020-11-02T01:51:52.790Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 01:53:12.319" starttime="20201102 01:53:12.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:12.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:12.320" starttime="20201102 01:53:12.319"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:12.320" starttime="20201102 01:53:08.474"></status>
</kw>
<msg timestamp="20201102 01:53:12.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:12.320" starttime="20201102 01:53:08.474"></status>
</kw>
<msg timestamp="20201102 01:53:12.321" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:12.321" starttime="20201102 01:53:08.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:12.321" starttime="20201102 01:53:12.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:12.322" starttime="20201102 01:53:12.321"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:53:12.322" critical="yes" starttime="20201102 01:53:08.441"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:12.328" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:12.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:12.331" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:53:12.331" starttime="20201102 01:53:12.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:12.332" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:53:12.333" starttime="20201102 01:53:12.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:12.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:12.333" starttime="20201102 01:53:12.333"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:12.333" starttime="20201102 01:53:12.325"></status>
</kw>
<msg timestamp="20201102 01:53:12.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:12.334" starttime="20201102 01:53:12.325"></status>
</kw>
<msg timestamp="20201102 01:53:12.334" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:53:12.334" starttime="20201102 01:53:12.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:53:12.335" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:53:12.335" starttime="20201102 01:53:12.334"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:12.339" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:12.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:12.392" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:53:12.392" starttime="20201102 01:53:12.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:12.394" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:53:12.394" starttime="20201102 01:53:12.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:12.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:12.394" starttime="20201102 01:53:12.394"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:12.395" starttime="20201102 01:53:12.337"></status>
</kw>
<msg timestamp="20201102 01:53:12.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:12.395" starttime="20201102 01:53:12.336"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:12.395" starttime="20201102 01:53:12.336"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:12.395" starttime="20201102 01:53:12.335"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:12.395" starttime="20201102 01:53:12.324"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:12.395" starttime="20201102 01:53:12.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:12.400" level="INFO">Running command 'ozone sh bucket info 90187-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:16.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:16.748" level="INFO">${output} = 90187-source bucket1</msg>
<status status="PASS" endtime="20201102 01:53:16.748" starttime="20201102 01:53:12.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:16.749" level="INFO">90187-source bucket1</msg>
<status status="PASS" endtime="20201102 01:53:16.749" starttime="20201102 01:53:16.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:16.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:16.750" starttime="20201102 01:53:16.749"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:16.750" starttime="20201102 01:53:12.397"></status>
</kw>
<msg timestamp="20201102 01:53:16.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:16.750" starttime="20201102 01:53:12.396"></status>
</kw>
<msg timestamp="20201102 01:53:16.750" level="INFO">${result} = 90187-source bucket1</msg>
<status status="PASS" endtime="20201102 01:53:16.750" starttime="20201102 01:53:12.396"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:16.751" starttime="20201102 01:53:16.751"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:53:16.751" critical="yes" starttime="20201102 01:53:12.323"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:16.757" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:16.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:16.760" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:53:16.760" starttime="20201102 01:53:16.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:16.761" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:53:16.761" starttime="20201102 01:53:16.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:16.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:16.762" starttime="20201102 01:53:16.761"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:16.762" starttime="20201102 01:53:16.754"></status>
</kw>
<msg timestamp="20201102 01:53:16.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:16.762" starttime="20201102 01:53:16.754"></status>
</kw>
<msg timestamp="20201102 01:53:16.763" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:53:16.763" starttime="20201102 01:53:16.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:53:16.763" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:53:16.763" starttime="20201102 01:53:16.763"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:16.767" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:16.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:16.780" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:53:16.780" starttime="20201102 01:53:16.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:16.782" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:53:16.782" starttime="20201102 01:53:16.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:16.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:16.782" starttime="20201102 01:53:16.782"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:16.783" starttime="20201102 01:53:16.765"></status>
</kw>
<msg timestamp="20201102 01:53:16.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:16.783" starttime="20201102 01:53:16.765"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:16.783" starttime="20201102 01:53:16.764"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:16.783" starttime="20201102 01:53:16.764"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:16.783" starttime="20201102 01:53:16.753"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:16.783" starttime="20201102 01:53:16.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:16.788" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 90187-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:20.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:20.276" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:20.276" starttime="20201102 01:53:16.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:20.278" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 01:53:20.278" starttime="20201102 01:53:20.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:20.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:20.278" starttime="20201102 01:53:20.278"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:20.279" starttime="20201102 01:53:16.784"></status>
</kw>
<msg timestamp="20201102 01:53:20.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:20.279" starttime="20201102 01:53:16.784"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:20.279" starttime="20201102 01:53:16.783"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:20.285" level="INFO">Running command 'ozone sh bucket getacl 90187-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:24.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:24.000" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201102 01:53:24.000" starttime="20201102 01:53:20.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:24.001" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201102 01:53:24.001" starttime="20201102 01:53:24.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:24.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:24.002" starttime="20201102 01:53:24.001"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:24.002" starttime="20201102 01:53:20.281"></status>
</kw>
<msg timestamp="20201102 01:53:24.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:24.002" starttime="20201102 01:53:20.281"></status>
</kw>
<msg timestamp="20201102 01:53:24.003" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201102 01:53:24.003" starttime="20201102 01:53:20.280"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:24.003" starttime="20201102 01:53:24.003"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:24.003" starttime="20201102 01:53:20.279"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:24.008" level="INFO">Running command 'ozone sh bucket getacl 90187-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:27.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:27.654" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:53:27.654" starttime="20201102 01:53:24.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:27.655" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:53:27.655" starttime="20201102 01:53:27.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:27.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:27.656" starttime="20201102 01:53:27.656"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:27.656" starttime="20201102 01:53:24.005"></status>
</kw>
<msg timestamp="20201102 01:53:27.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:27.657" starttime="20201102 01:53:24.005"></status>
</kw>
<msg timestamp="20201102 01:53:27.657" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201102 01:53:27.657" starttime="20201102 01:53:24.004"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:27.657" starttime="20201102 01:53:27.657"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:27.658" starttime="20201102 01:53:24.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:27.662" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 90187-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:31.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:31.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:31.058" starttime="20201102 01:53:27.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:31.059" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 01:53:31.059" starttime="20201102 01:53:31.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:31.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:31.060" starttime="20201102 01:53:31.059"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:31.060" starttime="20201102 01:53:27.659"></status>
</kw>
<msg timestamp="20201102 01:53:31.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:31.060" starttime="20201102 01:53:27.658"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:31.061" starttime="20201102 01:53:27.658"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:31.067" level="INFO">Running command 'ozone sh bucket getacl 90187-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:35.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:35.329" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:53:35.329" starttime="20201102 01:53:31.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:35.334" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:53:35.334" starttime="20201102 01:53:35.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:35.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:35.334" starttime="20201102 01:53:35.334"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:35.335" starttime="20201102 01:53:31.063"></status>
</kw>
<msg timestamp="20201102 01:53:35.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:35.335" starttime="20201102 01:53:31.063"></status>
</kw>
<msg timestamp="20201102 01:53:35.335" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201102 01:53:35.335" starttime="20201102 01:53:31.062"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:35.336" starttime="20201102 01:53:35.335"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:35.336" starttime="20201102 01:53:31.061"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:35.341" level="INFO">Running command 'ozone sh bucket getacl 90187-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:39.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:39.066" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201102 01:53:39.066" starttime="20201102 01:53:35.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:39.068" level="INFO">READ</msg>
<status status="PASS" endtime="20201102 01:53:39.068" starttime="20201102 01:53:39.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:39.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:39.068" starttime="20201102 01:53:39.068"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:39.069" starttime="20201102 01:53:35.338"></status>
</kw>
<msg timestamp="20201102 01:53:39.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:39.069" starttime="20201102 01:53:35.338"></status>
</kw>
<msg timestamp="20201102 01:53:39.069" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201102 01:53:39.069" starttime="20201102 01:53:35.337"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:39.070" starttime="20201102 01:53:39.069"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:39.070" starttime="20201102 01:53:35.336"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:53:39.070" critical="yes" starttime="20201102 01:53:16.752"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:39.077" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:39.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:39.079" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:53:39.080" starttime="20201102 01:53:39.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:39.081" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:53:39.081" starttime="20201102 01:53:39.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:39.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:39.081" starttime="20201102 01:53:39.081"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:39.082" starttime="20201102 01:53:39.074"></status>
</kw>
<msg timestamp="20201102 01:53:39.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:39.082" starttime="20201102 01:53:39.073"></status>
</kw>
<msg timestamp="20201102 01:53:39.082" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:53:39.082" starttime="20201102 01:53:39.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:53:39.083" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:53:39.083" starttime="20201102 01:53:39.082"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:39.087" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:39.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:39.109" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:53:39.109" starttime="20201102 01:53:39.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:39.111" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:53:39.111" starttime="20201102 01:53:39.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:39.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:39.112" starttime="20201102 01:53:39.112"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:39.113" starttime="20201102 01:53:39.084"></status>
</kw>
<msg timestamp="20201102 01:53:39.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:39.113" starttime="20201102 01:53:39.084"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:39.113" starttime="20201102 01:53:39.083"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:39.114" starttime="20201102 01:53:39.083"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:39.114" starttime="20201102 01:53:39.072"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:39.114" starttime="20201102 01:53:39.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:39.120" level="INFO">Running command 'ozone sh bucket link 90187-source/bucket2 90187-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:42.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:42.668" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:42.668" starttime="20201102 01:53:39.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:42.670" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:53:42.670" starttime="20201102 01:53:42.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:42.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:42.670" starttime="20201102 01:53:42.670"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:42.671" starttime="20201102 01:53:39.116"></status>
</kw>
<msg timestamp="20201102 01:53:42.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:42.671" starttime="20201102 01:53:39.115"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:42.671" starttime="20201102 01:53:39.114"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:42.674" level="INFO">Running command 'ozone sh bucket create 90187-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:45.835" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 01:53:45.835" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:45.835" starttime="20201102 01:53:42.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:45.836" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201102 01:53:45.836" starttime="20201102 01:53:45.835"></status>
</kw>
<msg timestamp="20201102 01:53:45.837" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:45.837" starttime="20201102 01:53:42.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:45.837" starttime="20201102 01:53:45.837"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:45.842" level="INFO">Running command 'ozone sh bucket create 90187-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:49.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:49.410" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:49.410" starttime="20201102 01:53:45.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:49.411" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:53:49.411" starttime="20201102 01:53:49.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:49.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:49.412" starttime="20201102 01:53:49.411"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:49.412" starttime="20201102 01:53:45.838"></status>
</kw>
<msg timestamp="20201102 01:53:49.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:49.412" starttime="20201102 01:53:45.838"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:49.413" starttime="20201102 01:53:45.837"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:49.417" level="INFO">Running command 'ozone sh bucket link 90187-source/bucket1 90187-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:52.639" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 01:53:52.639" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:52.639" starttime="20201102 01:53:49.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:52.641" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201102 01:53:52.641" starttime="20201102 01:53:52.640"></status>
</kw>
<msg timestamp="20201102 01:53:52.641" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:53:52.641" starttime="20201102 01:53:49.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201102 01:53:52.642" starttime="20201102 01:53:52.641"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:53:52.642" critical="yes" starttime="20201102 01:53:39.071"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:52.648" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:52.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:52.651" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:53:52.651" starttime="20201102 01:53:52.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:52.652" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:53:52.652" starttime="20201102 01:53:52.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:52.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:52.653" starttime="20201102 01:53:52.652"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:52.653" starttime="20201102 01:53:52.645"></status>
</kw>
<msg timestamp="20201102 01:53:52.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:52.653" starttime="20201102 01:53:52.645"></status>
</kw>
<msg timestamp="20201102 01:53:52.653" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:53:52.653" starttime="20201102 01:53:52.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:53:52.654" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:53:52.654" starttime="20201102 01:53:52.653"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:52.657" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:52.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:52.675" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:53:52.676" starttime="20201102 01:53:52.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:52.677" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:53:52.677" starttime="20201102 01:53:52.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:52.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:52.677" starttime="20201102 01:53:52.677"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:52.678" starttime="20201102 01:53:52.655"></status>
</kw>
<msg timestamp="20201102 01:53:52.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:52.678" starttime="20201102 01:53:52.655"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:52.678" starttime="20201102 01:53:52.654"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:52.678" starttime="20201102 01:53:52.654"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:52.678" starttime="20201102 01:53:52.644"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:52.678" starttime="20201102 01:53:52.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:52.685" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:52.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:52.689" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:53:52.689" starttime="20201102 01:53:52.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:52.691" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:53:52.691" starttime="20201102 01:53:52.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:52.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:52.692" starttime="20201102 01:53:52.691"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:52.692" starttime="20201102 01:53:52.680"></status>
</kw>
<msg timestamp="20201102 01:53:52.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:52.692" starttime="20201102 01:53:52.680"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:52.692" starttime="20201102 01:53:52.680"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:52.698" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:52.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:52.700" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:53:52.700" starttime="20201102 01:53:52.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:52.701" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:53:52.701" starttime="20201102 01:53:52.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:52.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:52.701" starttime="20201102 01:53:52.701"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:52.702" starttime="20201102 01:53:52.694"></status>
</kw>
<msg timestamp="20201102 01:53:52.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:52.702" starttime="20201102 01:53:52.694"></status>
</kw>
<msg timestamp="20201102 01:53:52.702" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:53:52.702" starttime="20201102 01:53:52.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:53:52.703" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:53:52.703" starttime="20201102 01:53:52.702"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:52.707" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:53:57.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:53:57.725" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:53:57.725" starttime="20201102 01:53:52.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:53:57.726" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:53:57.726" starttime="20201102 01:53:57.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:53:57.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:53:57.727" starttime="20201102 01:53:57.726"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:57.727" starttime="20201102 01:53:52.705"></status>
</kw>
<msg timestamp="20201102 01:53:57.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:53:57.728" starttime="20201102 01:53:52.704"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:57.728" starttime="20201102 01:53:52.704"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:57.728" starttime="20201102 01:53:52.703"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:57.729" starttime="20201102 01:53:52.693"></status>
</kw>
<status status="PASS" endtime="20201102 01:53:57.730" starttime="20201102 01:53:52.693"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:53:57.734" level="INFO">Running command 'ozone sh key list 90187-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:01.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:01.573" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:01.573" starttime="20201102 01:53:57.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.574" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "90187-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-02T01:51:39.943Z",
  "modificationTime" : "2020-11-02T01:51:41.775Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201102 01:54:01.574" starttime="20201102 01:54:01.573"></status>
</kw>
<msg timestamp="20201102 01:54:01.575" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:01.575" starttime="20201102 01:53:57.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 01:54:01.575" starttime="20201102 01:54:01.575"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.575" starttime="20201102 01:53:52.679"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.575" starttime="20201102 01:53:52.678"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:54:01.576" critical="yes" starttime="20201102 01:53:52.643"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:01.585" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:01.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:01.587" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:54:01.587" starttime="20201102 01:54:01.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.589" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:54:01.589" starttime="20201102 01:54:01.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:01.589" starttime="20201102 01:54:01.589"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.590" starttime="20201102 01:54:01.579"></status>
</kw>
<msg timestamp="20201102 01:54:01.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:01.590" starttime="20201102 01:54:01.579"></status>
</kw>
<msg timestamp="20201102 01:54:01.590" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:54:01.590" starttime="20201102 01:54:01.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:54:01.591" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:54:01.591" starttime="20201102 01:54:01.590"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:01.597" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:01.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:01.618" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:54:01.619" starttime="20201102 01:54:01.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.620" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:54:01.620" starttime="20201102 01:54:01.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:01.620" starttime="20201102 01:54:01.620"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.621" starttime="20201102 01:54:01.592"></status>
</kw>
<msg timestamp="20201102 01:54:01.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:01.621" starttime="20201102 01:54:01.592"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.621" starttime="20201102 01:54:01.591"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.621" starttime="20201102 01:54:01.591"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.621" starttime="20201102 01:54:01.578"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.621" starttime="20201102 01:54:01.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:01.627" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:01.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:01.630" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:54:01.630" starttime="20201102 01:54:01.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.631" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:54:01.631" starttime="20201102 01:54:01.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:01.632" starttime="20201102 01:54:01.631"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.632" starttime="20201102 01:54:01.624"></status>
</kw>
<msg timestamp="20201102 01:54:01.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:01.633" starttime="20201102 01:54:01.624"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.633" starttime="20201102 01:54:01.623"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:01.638" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:01.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:01.639" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:54:01.640" starttime="20201102 01:54:01.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.641" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:54:01.641" starttime="20201102 01:54:01.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:01.641" starttime="20201102 01:54:01.641"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.642" starttime="20201102 01:54:01.634"></status>
</kw>
<msg timestamp="20201102 01:54:01.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:01.642" starttime="20201102 01:54:01.634"></status>
</kw>
<msg timestamp="20201102 01:54:01.642" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:54:01.642" starttime="20201102 01:54:01.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:54:01.643" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:54:01.643" starttime="20201102 01:54:01.642"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:01.649" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:01.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:01.669" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:54:01.669" starttime="20201102 01:54:01.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.672" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:54:01.672" starttime="20201102 01:54:01.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:01.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:01.672" starttime="20201102 01:54:01.672"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.673" starttime="20201102 01:54:01.644"></status>
</kw>
<msg timestamp="20201102 01:54:01.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:01.673" starttime="20201102 01:54:01.644"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.673" starttime="20201102 01:54:01.643"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.673" starttime="20201102 01:54:01.643"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.674" starttime="20201102 01:54:01.633"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:01.674" starttime="20201102 01:54:01.633"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:01.678" level="INFO">Running command 'ozone sh key list 90187-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:05.227" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 01:54:05.227" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:05.227" starttime="20201102 01:54:01.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.228" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201102 01:54:05.228" starttime="20201102 01:54:05.227"></status>
</kw>
<msg timestamp="20201102 01:54:05.229" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:05.229" starttime="20201102 01:54:01.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201102 01:54:05.229" starttime="20201102 01:54:05.229"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.230" starttime="20201102 01:54:01.622"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.230" starttime="20201102 01:54:01.622"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:54:05.230" critical="yes" starttime="20201102 01:54:01.577"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:05.236" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:05.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:05.239" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:54:05.239" starttime="20201102 01:54:05.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.239" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:54:05.240" starttime="20201102 01:54:05.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:05.240" starttime="20201102 01:54:05.240"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.241" starttime="20201102 01:54:05.233"></status>
</kw>
<msg timestamp="20201102 01:54:05.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:05.241" starttime="20201102 01:54:05.233"></status>
</kw>
<msg timestamp="20201102 01:54:05.241" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:54:05.241" starttime="20201102 01:54:05.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:54:05.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:54:05.242" starttime="20201102 01:54:05.241"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:05.246" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:05.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:05.277" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:54:05.277" starttime="20201102 01:54:05.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.278" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:54:05.279" starttime="20201102 01:54:05.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:05.280" starttime="20201102 01:54:05.279"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.280" starttime="20201102 01:54:05.243"></status>
</kw>
<msg timestamp="20201102 01:54:05.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:05.280" starttime="20201102 01:54:05.243"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.280" starttime="20201102 01:54:05.242"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.280" starttime="20201102 01:54:05.242"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.281" starttime="20201102 01:54:05.232"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.281" starttime="20201102 01:54:05.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:05.288" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:05.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:05.292" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:54:05.292" starttime="20201102 01:54:05.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.293" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:54:05.293" starttime="20201102 01:54:05.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:05.294" starttime="20201102 01:54:05.293"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.294" starttime="20201102 01:54:05.283"></status>
</kw>
<msg timestamp="20201102 01:54:05.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:05.294" starttime="20201102 01:54:05.283"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.295" starttime="20201102 01:54:05.282"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:05.300" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:05.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:05.304" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:54:05.304" starttime="20201102 01:54:05.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.305" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:54:05.305" starttime="20201102 01:54:05.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:05.306" starttime="20201102 01:54:05.305"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.306" starttime="20201102 01:54:05.297"></status>
</kw>
<msg timestamp="20201102 01:54:05.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:05.306" starttime="20201102 01:54:05.297"></status>
</kw>
<msg timestamp="20201102 01:54:05.306" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:54:05.306" starttime="20201102 01:54:05.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:54:05.307" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:54:05.307" starttime="20201102 01:54:05.307"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:05.313" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:05.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:05.336" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:54:05.336" starttime="20201102 01:54:05.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.337" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:54:05.337" starttime="20201102 01:54:05.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:05.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:05.338" starttime="20201102 01:54:05.337"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.338" starttime="20201102 01:54:05.310"></status>
</kw>
<msg timestamp="20201102 01:54:05.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:05.338" starttime="20201102 01:54:05.309"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.339" starttime="20201102 01:54:05.309"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.339" starttime="20201102 01:54:05.307"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.339" starttime="20201102 01:54:05.296"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:05.339" starttime="20201102 01:54:05.295"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:05.345" level="INFO">Running command 'ozone sh bucket info 90187-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:09.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:09.204" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:09.204" starttime="20201102 01:54:05.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:09.205" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:51:56.323Z",
  "modificationTime" : "2020-11-02T01:52:14.919Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 01:54:09.205" starttime="20201102 01:54:09.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:09.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:09.206" starttime="20201102 01:54:09.206"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:09.206" starttime="20201102 01:54:05.340"></status>
</kw>
<msg timestamp="20201102 01:54:09.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:09.207" starttime="20201102 01:54:05.340"></status>
</kw>
<msg timestamp="20201102 01:54:09.207" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:09.207" starttime="20201102 01:54:05.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 01:54:09.207" starttime="20201102 01:54:09.207"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201102 01:54:09.208" starttime="20201102 01:54:09.208"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:09.212" level="INFO">Running command 'ozone sh key list 90187-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:12.483" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 01:54:12.483" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:12.483" starttime="20201102 01:54:09.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:12.484" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201102 01:54:12.484" starttime="20201102 01:54:12.483"></status>
</kw>
<msg timestamp="20201102 01:54:12.484" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:12.484" starttime="20201102 01:54:09.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201102 01:54:12.485" starttime="20201102 01:54:12.485"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:12.485" starttime="20201102 01:54:05.282"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:12.485" starttime="20201102 01:54:05.281"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:54:12.486" critical="yes" starttime="20201102 01:54:05.231"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:12.491" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:12.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:12.495" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:54:12.495" starttime="20201102 01:54:12.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:12.496" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:54:12.496" starttime="20201102 01:54:12.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:12.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:12.497" starttime="20201102 01:54:12.496"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:12.497" starttime="20201102 01:54:12.489"></status>
</kw>
<msg timestamp="20201102 01:54:12.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:12.497" starttime="20201102 01:54:12.488"></status>
</kw>
<msg timestamp="20201102 01:54:12.498" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:54:12.498" starttime="20201102 01:54:12.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:54:12.498" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:54:12.498" starttime="20201102 01:54:12.498"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:12.503" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:12.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:12.519" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:54:12.519" starttime="20201102 01:54:12.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:12.520" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:54:12.520" starttime="20201102 01:54:12.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:12.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:12.521" starttime="20201102 01:54:12.520"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:12.521" starttime="20201102 01:54:12.500"></status>
</kw>
<msg timestamp="20201102 01:54:12.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:12.521" starttime="20201102 01:54:12.499"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:12.521" starttime="20201102 01:54:12.499"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:12.522" starttime="20201102 01:54:12.498"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:12.522" starttime="20201102 01:54:12.487"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:12.522" starttime="20201102 01:54:12.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:12.527" level="INFO">Running command 'ozone sh bucket link 90187-target/loop1 90187-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:16.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:16.288" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:16.288" starttime="20201102 01:54:12.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:16.289" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:54:16.289" starttime="20201102 01:54:16.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:16.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:16.290" starttime="20201102 01:54:16.289"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:16.290" starttime="20201102 01:54:12.523"></status>
</kw>
<msg timestamp="20201102 01:54:16.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:16.290" starttime="20201102 01:54:12.523"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:16.291" starttime="20201102 01:54:12.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:16.296" level="INFO">Running command 'ozone sh bucket link 90187-target/loop2 90187-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:19.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:19.854" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:19.854" starttime="20201102 01:54:16.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:19.855" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:54:19.855" starttime="20201102 01:54:19.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:19.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:19.856" starttime="20201102 01:54:19.855"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:19.856" starttime="20201102 01:54:16.292"></status>
</kw>
<msg timestamp="20201102 01:54:19.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:19.856" starttime="20201102 01:54:16.291"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:19.857" starttime="20201102 01:54:16.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:19.860" level="INFO">Running command 'ozone sh bucket link 90187-target/loop3 90187-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:23.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:23.356" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:23.356" starttime="20201102 01:54:19.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:23.357" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:54:23.357" starttime="20201102 01:54:23.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:23.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:23.358" starttime="20201102 01:54:23.357"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:23.358" starttime="20201102 01:54:19.858"></status>
</kw>
<msg timestamp="20201102 01:54:23.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:23.359" starttime="20201102 01:54:19.857"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:23.359" starttime="20201102 01:54:19.857"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:23.362" level="INFO">Running command 'ozone sh key list 90187-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:26.772" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 01:54:26.772" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:26.772" starttime="20201102 01:54:23.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:26.773" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201102 01:54:26.773" starttime="20201102 01:54:26.773"></status>
</kw>
<msg timestamp="20201102 01:54:26.774" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:26.774" starttime="20201102 01:54:23.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201102 01:54:26.774" starttime="20201102 01:54:26.774"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:54:26.774" critical="yes" starttime="20201102 01:54:12.486"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:26.782" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:26.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:26.784" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:54:26.784" starttime="20201102 01:54:26.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:26.785" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:54:26.785" starttime="20201102 01:54:26.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:26.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:26.786" starttime="20201102 01:54:26.785"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:26.786" starttime="20201102 01:54:26.778"></status>
</kw>
<msg timestamp="20201102 01:54:26.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:26.786" starttime="20201102 01:54:26.778"></status>
</kw>
<msg timestamp="20201102 01:54:26.787" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:54:26.787" starttime="20201102 01:54:26.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:54:26.789" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:54:26.789" starttime="20201102 01:54:26.788"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:26.793" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:26.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:26.811" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:54:26.811" starttime="20201102 01:54:26.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:26.812" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:54:26.812" starttime="20201102 01:54:26.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:26.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:26.813" starttime="20201102 01:54:26.812"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:26.813" starttime="20201102 01:54:26.790"></status>
</kw>
<msg timestamp="20201102 01:54:26.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:26.813" starttime="20201102 01:54:26.790"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:26.814" starttime="20201102 01:54:26.789"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:26.814" starttime="20201102 01:54:26.789"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:26.814" starttime="20201102 01:54:26.777"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:26.814" starttime="20201102 01:54:26.776"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:26.817" level="INFO">Running command 'ozone sh bucket link 90187-source/bucket1 90187-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:30.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:30.195" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:30.195" starttime="20201102 01:54:26.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:30.196" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:54:30.197" starttime="20201102 01:54:30.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:30.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:30.197" starttime="20201102 01:54:30.197"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:30.198" starttime="20201102 01:54:26.815"></status>
</kw>
<msg timestamp="20201102 01:54:30.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:30.198" starttime="20201102 01:54:26.815"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:30.198" starttime="20201102 01:54:26.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:30.202" level="INFO">Running command 'ozone sh key put 90187-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:35.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:35.574" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:35.574" starttime="20201102 01:54:30.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:35.575" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:54:35.575" starttime="20201102 01:54:35.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:35.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:35.576" starttime="20201102 01:54:35.575"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:35.576" starttime="20201102 01:54:30.199"></status>
</kw>
<msg timestamp="20201102 01:54:35.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:35.576" starttime="20201102 01:54:30.199"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:35.576" starttime="20201102 01:54:30.198"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201102 01:54:35.579" level="INFO">${postfix} = 74937</msg>
<status status="PASS" endtime="20201102 01:54:35.579" starttime="20201102 01:54:35.578"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201102 01:54:35.579" level="INFO">${tmpfile} = /tmp/tempkey-74937</msg>
<status status="PASS" endtime="20201102 01:54:35.579" starttime="20201102 01:54:35.579"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:35.584" level="INFO">Running command 'ozone sh key get -f 90187-target/link1/key3 /tmp/tempkey-74937 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:40.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:40.775" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:40.775" starttime="20201102 01:54:35.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:40.776" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:54:40.776" starttime="20201102 01:54:40.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:40.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:40.777" starttime="20201102 01:54:40.776"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.777" starttime="20201102 01:54:35.581"></status>
</kw>
<msg timestamp="20201102 01:54:40.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:40.778" starttime="20201102 01:54:35.580"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.778" starttime="20201102 01:54:35.579"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201102 01:54:40.780" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-74937 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:40.783" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201102 01:54:40.783" starttime="20201102 01:54:40.778"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:40.788" level="INFO">Running command 'rm -f /tmp/tempkey-74937 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:40.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:40.790" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:54:40.790" starttime="20201102 01:54:40.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:40.791" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:54:40.791" starttime="20201102 01:54:40.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:40.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:40.792" starttime="20201102 01:54:40.791"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.792" starttime="20201102 01:54:40.785"></status>
</kw>
<msg timestamp="20201102 01:54:40.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:40.793" starttime="20201102 01:54:40.785"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.793" starttime="20201102 01:54:40.784"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:54:40.793" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201102 01:54:40.793" starttime="20201102 01:54:40.793"></status>
</kw>
<msg timestamp="20201102 01:54:40.794" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201102 01:54:40.794" starttime="20201102 01:54:35.577"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:54:40.794" starttime="20201102 01:54:40.794"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.794" starttime="20201102 01:54:35.577"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:54:40.795" critical="yes" starttime="20201102 01:54:26.775"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:40.802" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:40.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:40.803" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 01:54:40.803" starttime="20201102 01:54:40.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:40.804" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 01:54:40.804" starttime="20201102 01:54:40.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:40.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:40.806" starttime="20201102 01:54:40.805"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.806" starttime="20201102 01:54:40.798"></status>
</kw>
<msg timestamp="20201102 01:54:40.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:40.806" starttime="20201102 01:54:40.798"></status>
</kw>
<msg timestamp="20201102 01:54:40.806" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 01:54:40.806" starttime="20201102 01:54:40.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:54:40.807" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:54:40.807" starttime="20201102 01:54:40.807"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:40.813" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:40.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:40.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:54:40.835" starttime="20201102 01:54:40.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:40.836" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:54:40.836" starttime="20201102 01:54:40.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:40.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:40.837" starttime="20201102 01:54:40.836"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.837" starttime="20201102 01:54:40.809"></status>
</kw>
<msg timestamp="20201102 01:54:40.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:40.837" starttime="20201102 01:54:40.808"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.838" starttime="20201102 01:54:40.808"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.838" starttime="20201102 01:54:40.807"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.838" starttime="20201102 01:54:40.797"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:40.838" starttime="20201102 01:54:40.796"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:40.842" level="INFO">Running command 'ozone sh bucket delete 90187-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:44.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:44.337" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:44.337" starttime="20201102 01:54:40.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:44.338" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:54:44.338" starttime="20201102 01:54:44.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:44.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:44.339" starttime="20201102 01:54:44.338"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:44.339" starttime="20201102 01:54:40.839"></status>
</kw>
<msg timestamp="20201102 01:54:44.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:44.340" starttime="20201102 01:54:40.839"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:44.340" starttime="20201102 01:54:40.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:44.344" level="INFO">Running command 'ozone sh bucket list 90187-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:47.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:47.994" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:47.994" starttime="20201102 01:54:44.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:47.996" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:53:49.239Z",
  "modificationTime" : "2020-11-02T01:53:49.239Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:52:18.773Z",
  "modificationTime" : "2020-11-02T01:52:18.773Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:51:56.323Z",
  "modificationTime" : "2020-11-02T01:52:14.919Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:53:42.592Z",
  "modificationTime" : "2020-11-02T01:53:42.592Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:54:30.012Z",
  "modificationTime" : "2020-11-02T01:54:30.012Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:54:23.249Z",
  "modificationTime" : "2020-11-02T01:54:23.249Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:54:16.125Z",
  "modificationTime" : "2020-11-02T01:54:16.125Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:54:19.744Z",
  "modificationTime" : "2020-11-02T01:54:19.744Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:51:49.179Z",
  "modificationTime" : "2020-11-02T01:52:10.993Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "90187-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:51:52.790Z",
  "modificationTime" : "2020-11-02T01:51:52.790Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90187-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 01:54:47.996" starttime="20201102 01:54:47.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:47.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:47.997" starttime="20201102 01:54:47.996"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:47.997" starttime="20201102 01:54:44.341"></status>
</kw>
<msg timestamp="20201102 01:54:47.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:47.997" starttime="20201102 01:54:44.341"></status>
</kw>
<msg timestamp="20201102 01:54:47.998" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:54:47.998" starttime="20201102 01:54:44.340"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201102 01:54:47.998" starttime="20201102 01:54:47.998"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:54:48.003" level="INFO">Running command 'ozone sh key list 90187-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:54:52.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:54:52.055" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201102 01:54:52.055" starttime="20201102 01:54:48.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:54:52.056" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201102 01:54:52.056" starttime="20201102 01:54:52.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:54:52.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:54:52.057" starttime="20201102 01:54:52.056"></status>
</kw>
<status status="PASS" endtime="20201102 01:54:52.057" starttime="20201102 01:54:47.999"></status>
</kw>
<msg timestamp="20201102 01:54:52.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:54:52.057" starttime="20201102 01:54:47.999"></status>
</kw>
<msg timestamp="20201102 01:54:52.057" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201102 01:54:52.057" starttime="20201102 01:54:47.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201102 01:54:52.058" starttime="20201102 01:54:52.057"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:54:52.058" critical="yes" starttime="20201102 01:54:40.795"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201102 01:54:52.061" starttime="20201102 01:51:25.266"></status>
</suite>
<status status="PASS" elapsedtime="235295" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
