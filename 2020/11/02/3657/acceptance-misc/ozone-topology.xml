<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201102 01:34:37.606" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201102 01:31:52.411" starttime="20201102 01:31:52.410"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:31:52.418" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:31:52.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:31:52.497" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 02 Nov 2020 01:31:52 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 02 Nov 2020 00:54:56 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201102 01:31:52.497" starttime="20201102 01:31:52.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:31:52.498" level="INFO">HTTP/1.1 200 OK
Date: Mon, 02 Nov 2020 01:31:52 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 02 Nov 2020 00:54:56 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201102 01:31:52.498" starttime="20201102 01:31:52.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:31:52.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:31:52.499" starttime="20201102 01:31:52.498"></status>
</kw>
<status status="PASS" endtime="20201102 01:31:52.499" starttime="20201102 01:31:52.412"></status>
</kw>
<msg timestamp="20201102 01:31:52.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:31:52.499" starttime="20201102 01:31:52.411"></status>
</kw>
<msg timestamp="20201102 01:31:52.499" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 02 Nov 2020 01:31:52 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 02 Nov 2020 00:54:56 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201102 01:31:52.499" starttime="20201102 01:31:52.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201102 01:31:52.500" starttime="20201102 01:31:52.499"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:31:52.500" critical="yes" starttime="20201102 01:31:52.410"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201102 01:31:52.502" starttime="20201102 01:31:52.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:31:52.506" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:32:48.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:32:48.111" level="INFO">${output} = 2020-11-02 01:31:54,238 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:31:54,484 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 01:32:48.111" starttime="20201102 01:31:52.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:32:48.112" level="INFO">2020-11-02 01:31:54,238 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:31:54,484 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:31:54,484 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-02 01:31:56,383 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-02 01:31:56,384 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-11-02 01:31:56,385 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-11-02 01:31:56,385 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-11-02 01:31:56,385 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-02 01:31:56,385 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-02 01:31:56,385 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-11-02 01:31:56,392 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-11-02 01:31:56,396 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-02 01:31:56,408 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-02 01:31:56,454 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-26592, with hadoop as owner.
2020-11-02 01:31:56,698 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-27861, with hadoop as owner.
2020-11-02 01:31:56,706 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-59415, with hadoop as owner.
2020-11-02 01:31:56,712 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-34124, with hadoop as owner.
2020-11-02 01:31:56,718 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-68235, with hadoop as owner.
2020-11-02 01:31:56,744 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26592/bucket-0-21345, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,834 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-27861/bucket-0-89543, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,845 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-59415/bucket-0-46617, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,852 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-34124/bucket-0-51137, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,859 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-68235/bucket-0-79204, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,875 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26592/bucket-1-02704, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,883 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-27861/bucket-1-56453, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,889 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-59415/bucket-1-76995, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,898 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-34124/bucket-1-82750, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,905 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-68235/bucket-1-94697, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,913 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26592/bucket-2-78522, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,925 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-27861/bucket-2-63107, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,934 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-59415/bucket-2-01485, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,940 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-34124/bucket-2-79416, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,948 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-68235/bucket-2-68654, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,957 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26592/bucket-3-62474, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,961 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-27861/bucket-3-12426, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,969 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-59415/bucket-3-82474, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,973 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-34124/bucket-3-38950, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,978 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-68235/bucket-3-76196, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,988 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26592/bucket-4-73208, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:56,993 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-27861/bucket-4-45840, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:57,000 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-59415/bucket-4-95754, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:57,004 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-34124/bucket-4-26971, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:57,009 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-68235/bucket-4-81426, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 01:31:57,410 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-02 01:31:58,278 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-02 01:31:58,410 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-02 01:31:58,658 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:31:58,659 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-463DF7688106-&gt;296d5724-3272-4b8f-bd6b-5c26ede29c20
2020-11-02 01:31:58,660 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:31:59,411 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-02 01:32:00,412 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-02 01:32:01,415 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-02 01:32:01,598 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-959A2F586ABE-&gt;a3785681-2a15-4cab-98a7-8d21b1e0aacf
2020-11-02 01:32:01,599 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:32:02,421 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-02 01:32:03,421 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-02 01:32:04,422 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-02 01:32:05,422 [Thread-7] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-11-02 01:32:06,423 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-11-02 01:32:07,423 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-11-02 01:32:08,424 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-11-02 01:32:09,424 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-11-02 01:32:10,425 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-11-02 01:32:11,425 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-11-02 01:32:12,426 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-02 01:32:13,427 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-11-02 01:32:14,428 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-11-02 01:32:15,428 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-11-02 01:32:16,429 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-11-02 01:32:17,429 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-11-02 01:32:18,429 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-11-02 01:32:19,430 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-11-02 01:32:20,430 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-11-02 01:32:21,436 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-11-02 01:32:22,436 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-11-02 01:32:23,437 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-11-02 01:32:24,437 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-11-02 01:32:25,438 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-11-02 01:32:26,438 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-11-02 01:32:27,439 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-11-02 01:32:28,439 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-11-02 01:32:29,440 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-11-02 01:32:30,440 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-11-02 01:32:31,440 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-11-02 01:32:32,442 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-11-02 01:32:33,443 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-11-02 01:32:34,443 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-11-02 01:32:35,444 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-11-02 01:32:36,445 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-11-02 01:32:37,445 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-11-02 01:32:38,446 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-11-02 01:32:39,447 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-11-02 01:32:40,447 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-11-02 01:32:41,447 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-11-02 01:32:42,455 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-11-02 01:32:43,455 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,299
Average Time spent in bucket creation: 00:00:00,195
Average Time spent in key creation: 00:00:02,304
Average Time spent in key write: 00:00:01,104
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:53,104
***************************************************</msg>
<status status="PASS" endtime="20201102 01:32:48.113" starttime="20201102 01:32:48.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:32:48.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:32:48.116" starttime="20201102 01:32:48.113"></status>
</kw>
<status status="PASS" endtime="20201102 01:32:48.116" starttime="20201102 01:31:52.503"></status>
</kw>
<msg timestamp="20201102 01:32:48.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:32:48.116" starttime="20201102 01:31:52.503"></status>
</kw>
<msg timestamp="20201102 01:32:48.117" level="INFO">${result} = 2020-11-02 01:31:54,238 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 01:31:54,484 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 01:32:48.117" starttime="20201102 01:31:52.503"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201102 01:32:48.118" starttime="20201102 01:32:48.117"></status>
</kw>
<status status="PASS" endtime="20201102 01:32:48.118" starttime="20201102 01:32:48.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201102 01:32:48.118" starttime="20201102 01:32:48.118"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:32:48.118" critical="yes" starttime="20201102 01:31:52.501"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201102 01:32:48.120" starttime="20201102 01:31:52.354"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:32:52.732" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:32:55.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:32:55.147" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201102 01:32:55.147" starttime="20201102 01:32:52.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:32:55.148" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1</msg>
<status status="PASS" endtime="20201102 01:32:55.148" starttime="20201102 01:32:55.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:32:55.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:32:55.149" starttime="20201102 01:32:55.149"></status>
</kw>
<status status="PASS" endtime="20201102 01:32:55.150" starttime="20201102 01:32:52.727"></status>
</kw>
<msg timestamp="20201102 01:32:55.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:32:55.150" starttime="20201102 01:32:52.726"></status>
</kw>
<msg timestamp="20201102 01:32:55.150" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201102 01:32:55.150" starttime="20201102 01:32:52.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201102 01:32:55.151" starttime="20201102 01:32:55.150"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:32:55.151" critical="yes" starttime="20201102 01:32:52.725"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:32:55.159" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:32:57.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:32:57.565" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201102 01:32:57.565" starttime="20201102 01:32:55.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:32:57.567" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201102 01:32:57.567" starttime="20201102 01:32:57.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:32:57.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:32:57.568" starttime="20201102 01:32:57.567"></status>
</kw>
<status status="PASS" endtime="20201102 01:32:57.568" starttime="20201102 01:32:55.154"></status>
</kw>
<msg timestamp="20201102 01:32:57.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:32:57.569" starttime="20201102 01:32:55.154"></status>
</kw>
<msg timestamp="20201102 01:32:57.569" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201102 01:32:57.569" starttime="20201102 01:32:55.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201102 01:32:57.570" starttime="20201102 01:32:57.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201102 01:32:57.570" starttime="20201102 01:32:57.570"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:32:57.571" critical="yes" starttime="20201102 01:32:55.152"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201102 01:32:57.575" starttime="20201102 01:32:52.676"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:33:02.238" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:33:05.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:33:05.078" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:33:05.078" starttime="20201102 01:33:02.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:33:05.079" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:33:05.079" starttime="20201102 01:33:05.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:33:05.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:33:05.080" starttime="20201102 01:33:05.079"></status>
</kw>
<status status="PASS" endtime="20201102 01:33:05.080" starttime="20201102 01:33:02.233"></status>
</kw>
<msg timestamp="20201102 01:33:05.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:33:05.080" starttime="20201102 01:33:02.233"></status>
</kw>
<msg timestamp="20201102 01:33:05.081" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:33:05.081" starttime="20201102 01:33:02.232"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 01:33:05.081" starttime="20201102 01:33:05.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:33:05.085" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:33:08.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:33:08.109" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:33:08.109" starttime="20201102 01:33:05.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:33:08.110" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:33:08.111" starttime="20201102 01:33:08.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:33:08.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:33:08.111" starttime="20201102 01:33:08.111"></status>
</kw>
<status status="PASS" endtime="20201102 01:33:08.115" starttime="20201102 01:33:05.082"></status>
</kw>
<msg timestamp="20201102 01:33:08.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:33:08.116" starttime="20201102 01:33:05.082"></status>
</kw>
<msg timestamp="20201102 01:33:08.116" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:33:08.116" starttime="20201102 01:33:05.081"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 01:33:08.116" starttime="20201102 01:33:08.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:33:08.120" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:33:13.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:33:13.139" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:33:13.139" starttime="20201102 01:33:08.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:33:13.141" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:33:13.141" starttime="20201102 01:33:13.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:33:13.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:33:13.141" starttime="20201102 01:33:13.141"></status>
</kw>
<status status="PASS" endtime="20201102 01:33:13.142" starttime="20201102 01:33:08.117"></status>
</kw>
<msg timestamp="20201102 01:33:13.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:33:13.142" starttime="20201102 01:33:08.117"></status>
</kw>
<msg timestamp="20201102 01:33:13.142" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:33:13.142" starttime="20201102 01:33:08.117"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 01:33:13.143" starttime="20201102 01:33:13.142"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:33:13.143" critical="yes" starttime="20201102 01:33:02.231"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201102 01:33:13.144" starttime="20201102 01:33:02.184"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:34:25.855" level="INFO">${random} = 41977</msg>
<status status="PASS" endtime="20201102 01:34:25.855" starttime="20201102 01:34:25.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:34:25.861" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-41977 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:34:31.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:34:31.052" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:34:31.052" starttime="20201102 01:34:25.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:34:31.053" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:34:31.053" starttime="20201102 01:34:31.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:34:31.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:34:31.054" starttime="20201102 01:34:31.053"></status>
</kw>
<status status="PASS" endtime="20201102 01:34:31.054" starttime="20201102 01:34:25.856"></status>
</kw>
<msg timestamp="20201102 01:34:31.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:34:31.054" starttime="20201102 01:34:25.855"></status>
</kw>
<msg timestamp="20201102 01:34:31.055" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:34:31.055" starttime="20201102 01:34:25.855"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 01:34:31.055" starttime="20201102 01:34:31.055"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:34:31.055" critical="yes" starttime="20201102 01:34:25.853"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201102 01:34:31.056" starttime="20201102 01:34:25.807"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:33:19.808" level="INFO">${random} = 32420</msg>
<status status="PASS" endtime="20201102 01:33:19.808" starttime="20201102 01:33:19.808"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:33:19.815" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-32420 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:33:54.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:33:54.383" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:33:54.383" starttime="20201102 01:33:19.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:33:54.384" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:33:54.384" starttime="20201102 01:33:54.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:33:54.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:33:54.385" starttime="20201102 01:33:54.384"></status>
</kw>
<status status="PASS" endtime="20201102 01:33:54.385" starttime="20201102 01:33:19.809"></status>
</kw>
<msg timestamp="20201102 01:33:54.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:33:54.385" starttime="20201102 01:33:19.809"></status>
</kw>
<msg timestamp="20201102 01:33:54.385" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:33:54.385" starttime="20201102 01:33:19.809"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 01:33:54.386" starttime="20201102 01:33:54.385"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:33:54.386" critical="yes" starttime="20201102 01:33:19.807"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201102 01:33:54.387" starttime="20201102 01:33:19.757"></status>
</suite>
<status status="PASS" elapsedtime="111504" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
