<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201102 01:48:20.950" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:38:37.758" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:38:42.938" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 01:38:42.938" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:38:42.938" starttime="20201102 01:38:37.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:38:42.939" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 01:38:42.939" starttime="20201102 01:38:42.938"></status>
</kw>
<msg timestamp="20201102 01:38:42.939" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:38:42.939" starttime="20201102 01:38:37.741"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:38:42.945" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:38:46.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:38:46.516" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:38:46.516" starttime="20201102 01:38:42.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:38:46.517" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:38:46.517" starttime="20201102 01:38:46.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:38:46.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:38:46.517" starttime="20201102 01:38:46.517"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:46.518" starttime="20201102 01:38:42.941"></status>
</kw>
<msg timestamp="20201102 01:38:46.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:38:46.518" starttime="20201102 01:38:42.941"></status>
</kw>
<msg timestamp="20201102 01:38:46.518" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:38:46.518" starttime="20201102 01:38:42.940"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 01:38:46.519" starttime="20201102 01:38:46.518"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:46.519" starttime="20201102 01:38:42.940"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:46.519" starttime="20201102 01:38:42.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:38:46.523" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:38:50.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:38:50.107" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:38:50.107" starttime="20201102 01:38:46.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:38:50.108" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:38:50.108" starttime="20201102 01:38:50.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:38:50.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:38:50.109" starttime="20201102 01:38:50.108"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:50.109" starttime="20201102 01:38:46.521"></status>
</kw>
<msg timestamp="20201102 01:38:50.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:38:50.109" starttime="20201102 01:38:46.520"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:50.110" starttime="20201102 01:38:46.520"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:50.110" starttime="20201102 01:38:46.520"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:50.110" starttime="20201102 01:38:46.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 01:38:50.111" starttime="20201102 01:38:50.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:38:50.116" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:38:53.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:38:53.737" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:38:53.737" starttime="20201102 01:38:50.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:38:53.739" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:38:49.817Z",
  "modificationTime" : "2020-11-02T01:38:49.817Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 01:38:53.739" starttime="20201102 01:38:53.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:38:53.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:38:53.739" starttime="20201102 01:38:53.739"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:53.740" starttime="20201102 01:38:50.113"></status>
</kw>
<msg timestamp="20201102 01:38:53.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:38:53.740" starttime="20201102 01:38:50.113"></status>
</kw>
<msg timestamp="20201102 01:38:53.740" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:38:53.740" starttime="20201102 01:38:50.111"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201102 01:38:53.741" starttime="20201102 01:38:53.740"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:38:53.744" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:38:53.744" starttime="20201102 01:38:53.744"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:38:53.745" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:38:53.745" starttime="20201102 01:38:53.744"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:53.745" starttime="20201102 01:38:53.743"></status>
</kw>
<msg timestamp="20201102 01:38:53.745" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:38:53.745" starttime="20201102 01:38:53.743"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:53.745" starttime="20201102 01:38:53.742"></status>
</kw>
<msg timestamp="20201102 01:38:53.746" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 01:38:53.746" starttime="20201102 01:38:53.741"></status>
</kw>
<msg timestamp="20201102 01:38:53.746" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 01:38:53.746" starttime="20201102 01:38:53.741"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:38:53.749" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:38:57.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:38:57.526" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:38:57.526" starttime="20201102 01:38:53.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:38:57.527" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:38:57.527" starttime="20201102 01:38:57.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:38:57.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:38:57.528" starttime="20201102 01:38:57.527"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:57.528" starttime="20201102 01:38:53.747"></status>
</kw>
<msg timestamp="20201102 01:38:57.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:38:57.528" starttime="20201102 01:38:53.746"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:57.529" starttime="20201102 01:38:53.746"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:38:57.532" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:39:05.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:39:05.275" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:39:05.275" starttime="20201102 01:38:57.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:39:05.276" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:39:05.277" starttime="20201102 01:39:05.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:39:05.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:39:05.277" starttime="20201102 01:39:05.277"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:05.278" starttime="20201102 01:38:57.530"></status>
</kw>
<msg timestamp="20201102 01:39:05.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:39:05.278" starttime="20201102 01:38:57.529"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:05.278" starttime="20201102 01:38:57.529"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:39:05.284" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:39:11.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:39:11.517" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:39:11.517" starttime="20201102 01:39:05.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:39:11.518" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:39:11.518" starttime="20201102 01:39:11.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:39:11.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:39:11.519" starttime="20201102 01:39:11.518"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:11.519" starttime="20201102 01:39:05.279"></status>
</kw>
<msg timestamp="20201102 01:39:11.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:39:11.519" starttime="20201102 01:39:05.279"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:11.519" starttime="20201102 01:39:05.278"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:39:11.524" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:39:16.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:39:16.947" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:39:16.947" starttime="20201102 01:39:11.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:39:16.948" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:39:16.948" starttime="20201102 01:39:16.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:39:16.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:39:16.949" starttime="20201102 01:39:16.948"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:16.949" starttime="20201102 01:39:11.521"></status>
</kw>
<msg timestamp="20201102 01:39:16.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:39:16.949" starttime="20201102 01:39:11.520"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:16.949" starttime="20201102 01:39:11.520"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:39:16.950" critical="yes" starttime="20201102 01:38:37.740"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:39:16.955" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:39:16.955" starttime="20201102 01:39:16.954"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:39:16.955" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:39:16.955" starttime="20201102 01:39:16.955"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:16.956" starttime="20201102 01:39:16.954"></status>
</kw>
<msg timestamp="20201102 01:39:16.956" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:39:16.956" starttime="20201102 01:39:16.953"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:16.956" starttime="20201102 01:39:16.953"></status>
</kw>
<msg timestamp="20201102 01:39:16.956" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:39:16.956" starttime="20201102 01:39:16.952"></status>
</kw>
<msg timestamp="20201102 01:39:16.957" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:39:16.957" starttime="20201102 01:39:16.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:39:16.961" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:39:20.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:39:20.309" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:39:20.309" starttime="20201102 01:39:16.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:39:20.310" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:39:20.310" starttime="20201102 01:39:20.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:39:20.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:39:20.311" starttime="20201102 01:39:20.310"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:20.311" starttime="20201102 01:39:16.958"></status>
</kw>
<msg timestamp="20201102 01:39:20.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:39:20.311" starttime="20201102 01:39:16.957"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:20.311" starttime="20201102 01:39:16.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:39:20.315" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:39:24.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:39:24.840" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 01:39:24.840" starttime="20201102 01:39:20.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:39:24.841" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 01:39:24.841" starttime="20201102 01:39:24.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:39:24.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:39:24.842" starttime="20201102 01:39:24.841"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:24.842" starttime="20201102 01:39:20.312"></status>
</kw>
<msg timestamp="20201102 01:39:24.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:39:24.842" starttime="20201102 01:39:20.312"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:24.842" starttime="20201102 01:39:20.312"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:39:24.843" critical="yes" starttime="20201102 01:39:16.950"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201102 01:39:24.844" starttime="20201102 01:38:37.688"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-o3fs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:40:00.041" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:40:00.041" starttime="20201102 01:40:00.040"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:40:00.041" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:40:00.041" starttime="20201102 01:40:00.041"></status>
</kw>
<status status="PASS" endtime="20201102 01:40:00.042" starttime="20201102 01:40:00.040"></status>
</kw>
<msg timestamp="20201102 01:40:00.042" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:40:00.042" starttime="20201102 01:40:00.040"></status>
</kw>
<status status="PASS" endtime="20201102 01:40:00.042" starttime="20201102 01:40:00.039"></status>
</kw>
<msg timestamp="20201102 01:40:00.042" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:40:00.042" starttime="20201102 01:40:00.039"></status>
</kw>
<msg timestamp="20201102 01:40:00.042" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:40:00.042" starttime="20201102 01:40:00.037"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:40:00.043" level="INFO">${random} = 76674</msg>
<status status="PASS" endtime="20201102 01:40:00.043" starttime="20201102 01:40:00.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:40:00.048" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-76674 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:40:04.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:40:04.027" level="INFO">${output} = 2020-11-02 01:40:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:40:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201102 01:40:04.027" starttime="20201102 01:40:00.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:40:04.029" level="INFO">2020-11-02 01:40:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:40:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:40:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:40:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:40:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0AC58B9394B0-&gt;9c03af50-50ae-4b7c-8d6a-6b094aa7003e
2020-11-02 01:40:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201102 01:40:04.029" starttime="20201102 01:40:04.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:40:04.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:40:04.029" starttime="20201102 01:40:04.029"></status>
</kw>
<status status="PASS" endtime="20201102 01:40:04.030" starttime="20201102 01:40:00.043"></status>
</kw>
<msg timestamp="20201102 01:40:04.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:40:04.030" starttime="20201102 01:40:00.043"></status>
</kw>
<msg timestamp="20201102 01:40:04.030" level="INFO">${result} = 2020-11-02 01:40:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:40:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201102 01:40:04.030" starttime="20201102 01:40:00.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:40:04.034" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:40:06.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:40:06.141" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 01:40 o3fs://bucket1.volume1.om/ozone-76674
dr...</msg>
<status status="PASS" endtime="20201102 01:40:06.141" starttime="20201102 01:40:04.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:40:06.142" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 01:40 o3fs://bucket1.volume1.om/ozone-76674
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:39 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:40:06.142" starttime="20201102 01:40:06.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:40:06.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:40:06.143" starttime="20201102 01:40:06.142"></status>
</kw>
<status status="PASS" endtime="20201102 01:40:06.143" starttime="20201102 01:40:04.031"></status>
</kw>
<msg timestamp="20201102 01:40:06.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:40:06.143" starttime="20201102 01:40:04.031"></status>
</kw>
<msg timestamp="20201102 01:40:06.143" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 01:40 o3fs://bucket1.volume1.om/ozone-76674
dr...</msg>
<status status="PASS" endtime="20201102 01:40:06.143" starttime="20201102 01:40:04.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:40:06.144" starttime="20201102 01:40:06.144"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:40:06.144" critical="yes" starttime="20201102 01:40:00.037"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 01:40:06.145" starttime="20201102 01:39:59.988"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s3" name="Kinit-Hadoop">
<test id="s1-s3-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:39:54.767" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:39:54.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:39:54.768" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201102 01:39:54.768" starttime="20201102 01:39:54.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:39:54.769" level="INFO">rm</msg>
<status status="PASS" endtime="20201102 01:39:54.769" starttime="20201102 01:39:54.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:39:54.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:39:54.770" starttime="20201102 01:39:54.769"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:54.770" starttime="20201102 01:39:54.761"></status>
</kw>
<msg timestamp="20201102 01:39:54.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:39:54.770" starttime="20201102 01:39:54.761"></status>
</kw>
<msg timestamp="20201102 01:39:54.772" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201102 01:39:54.772" starttime="20201102 01:39:54.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:39:54.773" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:39:54.773" starttime="20201102 01:39:54.772"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:39:54.777" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:39:54.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:39:54.790" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:39:54.790" starttime="20201102 01:39:54.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:39:54.791" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:39:54.791" starttime="20201102 01:39:54.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:39:54.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:39:54.791" starttime="20201102 01:39:54.791"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:54.791" starttime="20201102 01:39:54.774"></status>
</kw>
<msg timestamp="20201102 01:39:54.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:39:54.792" starttime="20201102 01:39:54.774"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:54.792" starttime="20201102 01:39:54.773"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:54.792" starttime="20201102 01:39:54.773"></status>
</kw>
<status status="PASS" endtime="20201102 01:39:54.792" starttime="20201102 01:39:54.760"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:39:54.792" critical="yes" starttime="20201102 01:39:54.760"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201102 01:39:54.793" starttime="20201102 01:39:54.715"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s4" name="Kinit">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:38:32.500" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:38:32.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:38:32.503" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201102 01:38:32.503" starttime="20201102 01:38:32.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:38:32.504" level="INFO">om</msg>
<status status="PASS" endtime="20201102 01:38:32.504" starttime="20201102 01:38:32.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:38:32.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:38:32.504" starttime="20201102 01:38:32.504"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:32.505" starttime="20201102 01:38:32.495"></status>
</kw>
<msg timestamp="20201102 01:38:32.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:38:32.505" starttime="20201102 01:38:32.495"></status>
</kw>
<msg timestamp="20201102 01:38:32.505" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201102 01:38:32.505" starttime="20201102 01:38:32.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 01:38:32.506" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 01:38:32.506" starttime="20201102 01:38:32.505"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:38:32.511" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:38:32.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:38:32.527" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:38:32.527" starttime="20201102 01:38:32.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:38:32.528" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:38:32.528" starttime="20201102 01:38:32.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:38:32.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:38:32.528" starttime="20201102 01:38:32.528"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:32.529" starttime="20201102 01:38:32.507"></status>
</kw>
<msg timestamp="20201102 01:38:32.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:38:32.529" starttime="20201102 01:38:32.507"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:32.529" starttime="20201102 01:38:32.506"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:32.529" starttime="20201102 01:38:32.506"></status>
</kw>
<status status="PASS" endtime="20201102 01:38:32.529" starttime="20201102 01:38:32.494"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:38:32.529" critical="yes" starttime="20201102 01:38:32.493"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201102 01:38:32.530" starttime="20201102 01:38:32.443"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s5" name="mapreduce-o3fs">
<test id="s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:40:11.467" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:40:11.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:40:11.470" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:40:11.470" starttime="20201102 01:40:11.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:40:11.471" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:40:11.471" starttime="20201102 01:40:11.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:40:11.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:40:11.472" starttime="20201102 01:40:11.472"></status>
</kw>
<status status="PASS" endtime="20201102 01:40:11.472" starttime="20201102 01:40:11.461"></status>
</kw>
<msg timestamp="20201102 01:40:11.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:40:11.472" starttime="20201102 01:40:11.460"></status>
</kw>
<msg timestamp="20201102 01:40:11.473" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:40:11.473" starttime="20201102 01:40:11.460"></status>
</kw>
<msg timestamp="20201102 01:40:11.473" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:40:11.473" starttime="20201102 01:40:11.460"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:40:11.476" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:40:11.476" starttime="20201102 01:40:11.475"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:40:11.477" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:40:11.477" starttime="20201102 01:40:11.476"></status>
</kw>
<status status="PASS" endtime="20201102 01:40:11.477" starttime="20201102 01:40:11.475"></status>
</kw>
<msg timestamp="20201102 01:40:11.477" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:40:11.477" starttime="20201102 01:40:11.474"></status>
</kw>
<status status="PASS" endtime="20201102 01:40:11.477" starttime="20201102 01:40:11.474"></status>
</kw>
<msg timestamp="20201102 01:40:11.477" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:40:11.477" starttime="20201102 01:40:11.474"></status>
</kw>
<msg timestamp="20201102 01:40:11.477" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:40:11.477" starttime="20201102 01:40:11.473"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:40:11.481" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:44:11.460" level="FAIL">Test timeout 4 minutes exceeded.</msg>
<status status="FAIL" endtime="20201102 01:44:11.461" starttime="20201102 01:40:11.478"></status>
</kw>
<status status="FAIL" endtime="20201102 01:44:11.462" starttime="20201102 01:40:11.478"></status>
</kw>
<msg timestamp="20201102 01:44:11.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201102 01:44:11.463" starttime="20201102 01:40:11.478"></status>
</kw>
<status status="FAIL" endtime="20201102 01:44:11.463" starttime="20201102 01:40:11.477"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201102 01:44:11.463" critical="yes" starttime="20201102 01:40:11.459">Test timeout 4 minutes exceeded.</status>
</test>
<test id="s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:44:11.469" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:44:11.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:44:11.474" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:44:11.475" starttime="20201102 01:44:11.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:44:11.475" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:44:11.476" starttime="20201102 01:44:11.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:44:11.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:44:11.476" starttime="20201102 01:44:11.476"></status>
</kw>
<status status="PASS" endtime="20201102 01:44:11.476" starttime="20201102 01:44:11.466"></status>
</kw>
<msg timestamp="20201102 01:44:11.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:44:11.477" starttime="20201102 01:44:11.466"></status>
</kw>
<msg timestamp="20201102 01:44:11.477" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:44:11.477" starttime="20201102 01:44:11.465"></status>
</kw>
<msg timestamp="20201102 01:44:11.477" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:44:11.477" starttime="20201102 01:44:11.465"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:44:11.478" level="INFO">${random} = 51</msg>
<status status="PASS" endtime="20201102 01:44:11.478" starttime="20201102 01:44:11.477"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:44:11.481" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:44:11.481" starttime="20201102 01:44:11.481"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:44:11.481" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:44:11.482" starttime="20201102 01:44:11.481"></status>
</kw>
<status status="PASS" endtime="20201102 01:44:11.482" starttime="20201102 01:44:11.480"></status>
</kw>
<msg timestamp="20201102 01:44:11.482" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:44:11.482" starttime="20201102 01:44:11.480"></status>
</kw>
<status status="PASS" endtime="20201102 01:44:11.482" starttime="20201102 01:44:11.479"></status>
</kw>
<msg timestamp="20201102 01:44:11.482" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:44:11.482" starttime="20201102 01:44:11.478"></status>
</kw>
<msg timestamp="20201102 01:44:11.482" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:44:11.482" starttime="20201102 01:44:11.478"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:44:11.485" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:44:11.485" starttime="20201102 01:44:11.485"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:44:11.486" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:44:11.486" starttime="20201102 01:44:11.485"></status>
</kw>
<status status="PASS" endtime="20201102 01:44:11.486" starttime="20201102 01:44:11.484"></status>
</kw>
<msg timestamp="20201102 01:44:11.486" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:44:11.486" starttime="20201102 01:44:11.484"></status>
</kw>
<status status="PASS" endtime="20201102 01:44:11.486" starttime="20201102 01:44:11.483"></status>
</kw>
<msg timestamp="20201102 01:44:11.486" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 01:44:11.486" starttime="20201102 01:44:11.483"></status>
</kw>
<msg timestamp="20201102 01:44:11.487" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 01:44:11.487" starttime="20201102 01:44:11.482"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:44:11.489" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:44:11.489" starttime="20201102 01:44:11.489"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:44:11.490" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:44:11.490" starttime="20201102 01:44:11.489"></status>
</kw>
<status status="PASS" endtime="20201102 01:44:11.490" starttime="20201102 01:44:11.489"></status>
</kw>
<msg timestamp="20201102 01:44:11.490" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:44:11.490" starttime="20201102 01:44:11.488"></status>
</kw>
<status status="PASS" endtime="20201102 01:44:11.490" starttime="20201102 01:44:11.488"></status>
</kw>
<msg timestamp="20201102 01:44:11.490" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-51.txt</msg>
<status status="PASS" endtime="20201102 01:44:11.491" starttime="20201102 01:44:11.487"></status>
</kw>
<msg timestamp="20201102 01:44:11.491" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-51.txt</msg>
<status status="PASS" endtime="20201102 01:44:11.491" starttime="20201102 01:44:11.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:44:11.496" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-51.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:48:11.465" level="FAIL">Test timeout 4 minutes exceeded.</msg>
<status status="FAIL" endtime="20201102 01:48:11.465" starttime="20201102 01:44:11.492"></status>
</kw>
<status status="FAIL" endtime="20201102 01:48:11.466" starttime="20201102 01:44:11.492"></status>
</kw>
<msg timestamp="20201102 01:48:11.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201102 01:48:11.466" starttime="20201102 01:44:11.491"></status>
</kw>
<status status="FAIL" endtime="20201102 01:48:11.466" starttime="20201102 01:44:11.491"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201102 01:48:11.466" critical="yes" starttime="20201102 01:44:11.464">Test timeout 4 minutes exceeded.</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201102 01:48:11.468" starttime="20201102 01:40:11.411"></status>
</suite>
<status status="FAIL" elapsedtime="533535" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="5">Critical Tests</stat>
<stat fail="2" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="ozonesecure-mr" pass="5">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s4" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="2" id="s1-s5" name="mapreduce-o3fs" pass="0">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
