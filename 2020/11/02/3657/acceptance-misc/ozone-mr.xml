<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201102 01:24:15.209" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:24.383" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:10:26.554" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 01:10:26.554" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 01:10:26.554" starttime="20201102 01:10:24.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:10:26.555" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 01:10:26.555" starttime="20201102 01:10:26.554"></status>
</kw>
<msg timestamp="20201102 01:10:26.555" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 01:10:26.555" starttime="20201102 01:10:24.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:26.562" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:10:28.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:10:28.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:10:28.605" starttime="20201102 01:10:26.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:10:28.606" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:10:28.606" starttime="20201102 01:10:28.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:10:28.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:10:28.607" starttime="20201102 01:10:28.607"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:28.607" starttime="20201102 01:10:26.558"></status>
</kw>
<msg timestamp="20201102 01:10:28.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:10:28.608" starttime="20201102 01:10:26.557"></status>
</kw>
<msg timestamp="20201102 01:10:28.608" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201102 01:10:28.608" starttime="20201102 01:10:26.557"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 01:10:28.608" starttime="20201102 01:10:28.608"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:28.609" starttime="20201102 01:10:26.556"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:28.609" starttime="20201102 01:10:26.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:28.613" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:10:30.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:10:30.538" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:10:30.538" starttime="20201102 01:10:28.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:10:30.539" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:10:30.539" starttime="20201102 01:10:30.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:10:30.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:10:30.540" starttime="20201102 01:10:30.539"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:30.540" starttime="20201102 01:10:28.611"></status>
</kw>
<msg timestamp="20201102 01:10:30.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:10:30.540" starttime="20201102 01:10:28.611"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:30.540" starttime="20201102 01:10:28.610"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:30.540" starttime="20201102 01:10:28.610"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:30.540" starttime="20201102 01:10:28.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 01:10:30.541" starttime="20201102 01:10:30.541"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:30.545" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:10:32.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:10:32.741" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:10:30.498Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 01:10:32.741" starttime="20201102 01:10:30.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:10:32.742" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:10:30.498Z",
  "modificationTime" : "2020-11-02T01:10:30.498Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 01:10:32.742" starttime="20201102 01:10:32.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:10:32.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:10:32.743" starttime="20201102 01:10:32.742"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:32.743" starttime="20201102 01:10:30.542"></status>
</kw>
<msg timestamp="20201102 01:10:32.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:10:32.743" starttime="20201102 01:10:30.542"></status>
</kw>
<msg timestamp="20201102 01:10:32.744" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:10:30.498Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 01:10:32.744" starttime="20201102 01:10:30.541"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201102 01:10:32.744" starttime="20201102 01:10:32.744"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:10:32.749" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:10:32.749" starttime="20201102 01:10:32.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:10:32.750" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:10:32.750" starttime="20201102 01:10:32.749"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:32.750" starttime="20201102 01:10:32.748"></status>
</kw>
<msg timestamp="20201102 01:10:32.750" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:10:32.750" starttime="20201102 01:10:32.748"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:32.750" starttime="20201102 01:10:32.746"></status>
</kw>
<msg timestamp="20201102 01:10:32.751" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 01:10:32.751" starttime="20201102 01:10:32.745"></status>
</kw>
<msg timestamp="20201102 01:10:32.751" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 01:10:32.751" starttime="20201102 01:10:32.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:32.755" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:10:34.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:10:34.797" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:10:34.797" starttime="20201102 01:10:32.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:10:34.799" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:10:34.799" starttime="20201102 01:10:34.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:10:34.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:10:34.799" starttime="20201102 01:10:34.799"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:34.800" starttime="20201102 01:10:32.752"></status>
</kw>
<msg timestamp="20201102 01:10:34.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:10:34.800" starttime="20201102 01:10:32.751"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:34.800" starttime="20201102 01:10:32.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:34.804" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:10:40.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:10:40.030" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:10:40.030" starttime="20201102 01:10:34.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:10:40.032" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:10:40.032" starttime="20201102 01:10:40.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:10:40.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:10:40.033" starttime="20201102 01:10:40.032"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:40.033" starttime="20201102 01:10:34.801"></status>
</kw>
<msg timestamp="20201102 01:10:40.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:10:40.033" starttime="20201102 01:10:34.801"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:40.033" starttime="20201102 01:10:34.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:40.037" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:10:43.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:10:43.950" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:10:43.951" starttime="20201102 01:10:40.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:10:43.952" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:10:43.952" starttime="20201102 01:10:43.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:10:43.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:10:43.953" starttime="20201102 01:10:43.952"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:43.953" starttime="20201102 01:10:40.034"></status>
</kw>
<msg timestamp="20201102 01:10:43.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:10:43.953" starttime="20201102 01:10:40.034"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:43.953" starttime="20201102 01:10:40.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:43.958" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:10:47.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:10:47.824" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:10:47.824" starttime="20201102 01:10:43.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:10:47.825" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:10:47.825" starttime="20201102 01:10:47.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:10:47.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:10:47.826" starttime="20201102 01:10:47.825"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:47.826" starttime="20201102 01:10:43.955"></status>
</kw>
<msg timestamp="20201102 01:10:47.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:10:47.826" starttime="20201102 01:10:43.955"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:47.826" starttime="20201102 01:10:43.953"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:10:47.826" critical="yes" starttime="20201102 01:10:24.377"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:10:47.832" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:10:47.832" starttime="20201102 01:10:47.831"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:10:47.833" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:10:47.833" starttime="20201102 01:10:47.832"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:47.833" starttime="20201102 01:10:47.831"></status>
</kw>
<msg timestamp="20201102 01:10:47.833" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:10:47.833" starttime="20201102 01:10:47.830"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:47.833" starttime="20201102 01:10:47.830"></status>
</kw>
<msg timestamp="20201102 01:10:47.834" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:10:47.834" starttime="20201102 01:10:47.829"></status>
</kw>
<msg timestamp="20201102 01:10:47.834" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:10:47.834" starttime="20201102 01:10:47.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:47.837" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:10:49.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:10:49.941" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:10:49.941" starttime="20201102 01:10:47.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:10:49.942" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:10:49.942" starttime="20201102 01:10:49.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:10:49.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:10:49.942" starttime="20201102 01:10:49.942"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:49.943" starttime="20201102 01:10:47.835"></status>
</kw>
<msg timestamp="20201102 01:10:49.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:10:49.943" starttime="20201102 01:10:47.834"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:49.943" starttime="20201102 01:10:47.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:49.947" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:10:52.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:10:52.202" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:10:52.202" starttime="20201102 01:10:49.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:10:52.204" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:10:52.204" starttime="20201102 01:10:52.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:10:52.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:10:52.204" starttime="20201102 01:10:52.204"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:52.205" starttime="20201102 01:10:49.944"></status>
</kw>
<msg timestamp="20201102 01:10:52.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:10:52.205" starttime="20201102 01:10:49.944"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:52.205" starttime="20201102 01:10:49.943"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:10:52.206" critical="yes" starttime="20201102 01:10:47.827"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201102 01:10:52.207" starttime="20201102 01:10:24.322"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:12:33.652" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:12:33.652" starttime="20201102 01:12:33.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:12:33.653" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:12:33.653" starttime="20201102 01:12:33.652"></status>
</kw>
<status status="PASS" endtime="20201102 01:12:33.653" starttime="20201102 01:12:33.651"></status>
</kw>
<msg timestamp="20201102 01:12:33.653" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:12:33.653" starttime="20201102 01:12:33.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:12:33.654" starttime="20201102 01:12:33.653"></status>
</kw>
<msg timestamp="20201102 01:12:33.654" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 01:12:33.654" starttime="20201102 01:12:33.653"></status>
</kw>
<status status="PASS" endtime="20201102 01:12:33.654" starttime="20201102 01:12:33.650"></status>
</kw>
<msg timestamp="20201102 01:12:33.654" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:12:33.654" starttime="20201102 01:12:33.650"></status>
</kw>
<msg timestamp="20201102 01:12:33.654" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:12:33.654" starttime="20201102 01:12:33.649"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:12:33.655" level="INFO">${random} = 23439</msg>
<status status="PASS" endtime="20201102 01:12:33.655" starttime="20201102 01:12:33.655"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:12:33.661" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-23439 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:12:36.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:12:36.961" level="INFO">${output} = 2020-11-02 01:12:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:12:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 ...</msg>
<status status="PASS" endtime="20201102 01:12:36.961" starttime="20201102 01:12:33.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:12:36.962" level="INFO">2020-11-02 01:12:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:12:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 01:12:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 01:12:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:12:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ED39779AC7D9-&gt;a45090f3-9500-47e1-a5d7-1dd2382e5ec6
2020-11-02 01:12:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201102 01:12:36.962" starttime="20201102 01:12:36.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:12:36.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:12:36.963" starttime="20201102 01:12:36.962"></status>
</kw>
<status status="PASS" endtime="20201102 01:12:36.963" starttime="20201102 01:12:33.656"></status>
</kw>
<msg timestamp="20201102 01:12:36.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:12:36.963" starttime="20201102 01:12:33.655"></status>
</kw>
<msg timestamp="20201102 01:12:36.963" level="INFO">${result} = 2020-11-02 01:12:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:12:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 ...</msg>
<status status="PASS" endtime="20201102 01:12:36.963" starttime="20201102 01:12:33.655"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:12:36.967" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:12:38.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:12:38.739" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 01:11 ofs://om/volume1/bucket1/ozone-00689
-rw-...</msg>
<status status="PASS" endtime="20201102 01:12:38.739" starttime="20201102 01:12:36.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:12:38.740" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 01:11 ofs://om/volume1/bucket1/ozone-00689
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 01:12 ofs://om/volume1/bucket1/ozone-23439
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:10 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:11 ofs://om/volume1/bucket1/wordcount-76.txt</msg>
<status status="PASS" endtime="20201102 01:12:38.740" starttime="20201102 01:12:38.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:12:38.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:12:38.741" starttime="20201102 01:12:38.741"></status>
</kw>
<status status="PASS" endtime="20201102 01:12:38.741" starttime="20201102 01:12:36.964"></status>
</kw>
<msg timestamp="20201102 01:12:38.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:12:38.742" starttime="20201102 01:12:36.964"></status>
</kw>
<msg timestamp="20201102 01:12:38.742" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 01:11 ofs://om/volume1/bucket1/ozone-00689
-rw-...</msg>
<status status="PASS" endtime="20201102 01:12:38.742" starttime="20201102 01:12:36.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:12:38.742" starttime="20201102 01:12:38.742"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:12:38.742" critical="yes" starttime="20201102 01:12:33.648"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 01:12:38.743" starttime="20201102 01:12:33.603"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:10:57.209" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:10:57.209" starttime="20201102 01:10:57.209"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:10:57.210" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:10:57.210" starttime="20201102 01:10:57.209"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:57.210" starttime="20201102 01:10:57.209"></status>
</kw>
<msg timestamp="20201102 01:10:57.210" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:10:57.210" starttime="20201102 01:10:57.208"></status>
</kw>
<status status="PASS" endtime="20201102 01:10:57.210" starttime="20201102 01:10:57.208"></status>
</kw>
<msg timestamp="20201102 01:10:57.210" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:10:57.210" starttime="20201102 01:10:57.207"></status>
</kw>
<msg timestamp="20201102 01:10:57.211" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:10:57.211" starttime="20201102 01:10:57.206"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:10:57.211" level="INFO">${random} = 00689</msg>
<status status="PASS" endtime="20201102 01:10:57.211" starttime="20201102 01:10:57.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:10:57.216" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-00689 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:11:00.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:11:00.833" level="INFO">${output} = 2020-11-02 01:10:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:10:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 ...</msg>
<status status="PASS" endtime="20201102 01:11:00.833" starttime="20201102 01:10:57.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:11:00.835" level="INFO">2020-11-02 01:10:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:10:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 01:10:59 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 01:10:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:10:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5AD9109E5634-&gt;a45090f3-9500-47e1-a5d7-1dd2382e5ec6
2020-11-02 01:10:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201102 01:11:00.835" starttime="20201102 01:11:00.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:11:00.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:11:00.836" starttime="20201102 01:11:00.835"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:00.836" starttime="20201102 01:10:57.212"></status>
</kw>
<msg timestamp="20201102 01:11:00.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:11:00.837" starttime="20201102 01:10:57.212"></status>
</kw>
<msg timestamp="20201102 01:11:00.837" level="INFO">${result} = 2020-11-02 01:10:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:10:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 ...</msg>
<status status="PASS" endtime="20201102 01:11:00.837" starttime="20201102 01:10:57.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:11:00.840" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:11:02.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:11:02.648" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 01:11 o3fs://bucket1.volume1.om/ozone-00689
dr...</msg>
<status status="PASS" endtime="20201102 01:11:02.648" starttime="20201102 01:11:00.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:11:02.649" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 01:11 o3fs://bucket1.volume1.om/ozone-00689
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:10 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:11:02.649" starttime="20201102 01:11:02.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:11:02.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:11:02.650" starttime="20201102 01:11:02.649"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:02.650" starttime="20201102 01:11:00.837"></status>
</kw>
<msg timestamp="20201102 01:11:02.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:11:02.650" starttime="20201102 01:11:00.837"></status>
</kw>
<msg timestamp="20201102 01:11:02.650" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 01:11 o3fs://bucket1.volume1.om/ozone-00689
dr...</msg>
<status status="PASS" endtime="20201102 01:11:02.650" starttime="20201102 01:11:00.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:11:02.651" starttime="20201102 01:11:02.651"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:11:02.651" critical="yes" starttime="20201102 01:10:57.205"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 01:11:02.652" starttime="20201102 01:10:57.156"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:12:43.539" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:12:43.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:12:43.544" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:12:43.545" starttime="20201102 01:12:43.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:12:43.545" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:12:43.546" starttime="20201102 01:12:43.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:12:43.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:12:43.546" starttime="20201102 01:12:43.546"></status>
</kw>
<status status="PASS" endtime="20201102 01:12:43.546" starttime="20201102 01:12:43.535"></status>
</kw>
<msg timestamp="20201102 01:12:43.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:12:43.547" starttime="20201102 01:12:43.535"></status>
</kw>
<msg timestamp="20201102 01:12:43.547" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:12:43.547" starttime="20201102 01:12:43.534"></status>
</kw>
<msg timestamp="20201102 01:12:43.547" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:12:43.547" starttime="20201102 01:12:43.534"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:12:43.550" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:12:43.550" starttime="20201102 01:12:43.550"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:12:43.551" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:12:43.551" starttime="20201102 01:12:43.550"></status>
</kw>
<status status="PASS" endtime="20201102 01:12:43.551" starttime="20201102 01:12:43.549"></status>
</kw>
<msg timestamp="20201102 01:12:43.551" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:12:43.551" starttime="20201102 01:12:43.549"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:12:43.552" starttime="20201102 01:12:43.552"></status>
</kw>
<msg timestamp="20201102 01:12:43.552" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 01:12:43.552" starttime="20201102 01:12:43.551"></status>
</kw>
<status status="PASS" endtime="20201102 01:12:43.553" starttime="20201102 01:12:43.548"></status>
</kw>
<msg timestamp="20201102 01:12:43.553" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:12:43.553" starttime="20201102 01:12:43.548"></status>
</kw>
<msg timestamp="20201102 01:12:43.553" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:12:43.553" starttime="20201102 01:12:43.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:12:43.556" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:13:19.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:13:19.719" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:12:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:12:45 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201102 01:13:19.719" starttime="20201102 01:12:43.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:13:19.720" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:12:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:12:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 01:12:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 01:12:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:12:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6D9403CC5BA8-&gt;a45090f3-9500-47e1-a5d7-1dd2382e5ec6
2020-11-02 01:12:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 01:12:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-02 01:12:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 01:12:47 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-02 01:12:47 INFO  JobSubmitter:198 - number of splits:3
2020-11-02 01:12:47 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604279391264_0003
2020-11-02 01:12:47 INFO  YarnClientImpl:273 - Submitted application application_1604279391264_0003
2020-11-02 01:12:47 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604279391264_0003/
2020-11-02 01:12:47 INFO  Job:1339 - Running job: job_1604279391264_0003
2020-11-02 01:12:54 INFO  Job:1360 - Job job_1604279391264_0003 running in uber mode : false
2020-11-02 01:12:54 INFO  Job:1367 -  map 0% reduce 0%
2020-11-02 01:13:00 INFO  Job:1367 -  map 33% reduce 0%
2020-11-02 01:13:05 INFO  Job:1367 -  map 67% reduce 0%
2020-11-02 01:13:11 INFO  Job:1367 -  map 100% reduce 0%
2020-11-02 01:13:18 INFO  Job:1367 -  map 100% reduce 100%
2020-11-02 01:13:19 INFO  Job:1378 - Job job_1604279391264_0003 completed successfully
2020-11-02 01:13:19 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39328
		Total time spent by all reduces in occupied slots (ms)=24620
		Total time spent by all map tasks (ms)=9832
		Total time spent by all reduce tasks (ms)=6155
		Total vcore-milliseconds taken by all map tasks=9832
		Total vcore-milliseconds taken by all reduce tasks=6155
		Total megabyte-milliseconds taken by all map tasks=40271872
		Total megabyte-milliseconds taken by all reduce tasks=25210880
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=601
		CPU time spent (ms)=7100
		Physical memory (bytes) snapshot=1127518208
		Virtual memory (bytes) snapshot=16055189504
		Total committed heap usage (bytes)=1054343168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.405 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201102 01:13:19.721" starttime="20201102 01:13:19.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:13:19.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:13:19.721" starttime="20201102 01:13:19.721"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:19.721" starttime="20201102 01:12:43.554"></status>
</kw>
<msg timestamp="20201102 01:13:19.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:13:19.722" starttime="20201102 01:12:43.553"></status>
</kw>
<msg timestamp="20201102 01:13:19.722" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:12:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:12:45 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201102 01:13:19.722" starttime="20201102 01:12:43.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:13:19.723" starttime="20201102 01:13:19.722"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:13:19.723" critical="yes" starttime="20201102 01:12:43.533"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:13:19.728" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:13:19.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:13:19.734" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:13:19.734" starttime="20201102 01:13:19.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:13:19.735" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:13:19.735" starttime="20201102 01:13:19.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:13:19.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:13:19.736" starttime="20201102 01:13:19.735"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:19.736" starttime="20201102 01:13:19.725"></status>
</kw>
<msg timestamp="20201102 01:13:19.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:13:19.737" starttime="20201102 01:13:19.725"></status>
</kw>
<msg timestamp="20201102 01:13:19.737" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:13:19.737" starttime="20201102 01:13:19.725"></status>
</kw>
<msg timestamp="20201102 01:13:19.737" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:13:19.737" starttime="20201102 01:13:19.724"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:13:19.737" level="INFO">${random} = 85</msg>
<status status="PASS" endtime="20201102 01:13:19.738" starttime="20201102 01:13:19.737"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:13:19.741" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:13:19.741" starttime="20201102 01:13:19.741"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:13:19.742" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:13:19.742" starttime="20201102 01:13:19.741"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:19.742" starttime="20201102 01:13:19.740"></status>
</kw>
<msg timestamp="20201102 01:13:19.742" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:13:19.742" starttime="20201102 01:13:19.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:13:19.743" starttime="20201102 01:13:19.742"></status>
</kw>
<msg timestamp="20201102 01:13:19.743" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 01:13:19.743" starttime="20201102 01:13:19.742"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:19.743" starttime="20201102 01:13:19.739"></status>
</kw>
<msg timestamp="20201102 01:13:19.743" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:13:19.743" starttime="20201102 01:13:19.738"></status>
</kw>
<msg timestamp="20201102 01:13:19.743" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:13:19.743" starttime="20201102 01:13:19.738"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:13:19.746" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:13:19.746" starttime="20201102 01:13:19.746"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:13:19.747" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:13:19.747" starttime="20201102 01:13:19.746"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:19.747" starttime="20201102 01:13:19.746"></status>
</kw>
<msg timestamp="20201102 01:13:19.747" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:13:19.747" starttime="20201102 01:13:19.745"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:13:19.749" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201102 01:13:19.749" starttime="20201102 01:13:19.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:13:19.749" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201102 01:13:19.749" starttime="20201102 01:13:19.749"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:19.750" starttime="20201102 01:13:19.748"></status>
</kw>
<msg timestamp="20201102 01:13:19.750" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201102 01:13:19.750" starttime="20201102 01:13:19.747"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:19.750" starttime="20201102 01:13:19.745"></status>
</kw>
<msg timestamp="20201102 01:13:19.750" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 01:13:19.750" starttime="20201102 01:13:19.744"></status>
</kw>
<msg timestamp="20201102 01:13:19.750" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 01:13:19.750" starttime="20201102 01:13:19.743"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:13:19.753" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:13:19.753" starttime="20201102 01:13:19.753"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:13:19.754" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:13:19.754" starttime="20201102 01:13:19.753"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:19.754" starttime="20201102 01:13:19.752"></status>
</kw>
<msg timestamp="20201102 01:13:19.754" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:13:19.754" starttime="20201102 01:13:19.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:13:19.755" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201102 01:13:19.755" starttime="20201102 01:13:19.755"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:13:19.756" level="INFO">${result} = /wordcount-85.txt</msg>
<status status="PASS" endtime="20201102 01:13:19.756" starttime="20201102 01:13:19.756"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:19.756" starttime="20201102 01:13:19.755"></status>
</kw>
<msg timestamp="20201102 01:13:19.756" level="INFO">${path_with_leading} = /wordcount-85.txt</msg>
<status status="PASS" endtime="20201102 01:13:19.756" starttime="20201102 01:13:19.754"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:19.756" starttime="20201102 01:13:19.751"></status>
</kw>
<msg timestamp="20201102 01:13:19.757" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-85.txt</msg>
<status status="PASS" endtime="20201102 01:13:19.757" starttime="20201102 01:13:19.751"></status>
</kw>
<msg timestamp="20201102 01:13:19.757" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-85.txt</msg>
<status status="PASS" endtime="20201102 01:13:19.757" starttime="20201102 01:13:19.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:13:19.762" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-85.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:13:55.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:13:55.908" level="INFO">${output} = 2020-11-02 01:13:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-02 01:13:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201102 01:13:55.908" starttime="20201102 01:13:19.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:13:55.909" level="INFO">2020-11-02 01:13:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-02 01:13:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 01:13:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:13:22 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 01:13:22 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 01:13:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:13:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-14C037DE9B79-&gt;a45090f3-9500-47e1-a5d7-1dd2382e5ec6
2020-11-02 01:13:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:13:23 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-02 01:13:23 INFO  JobSubmitter:198 - number of splits:3
2020-11-02 01:13:23 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604279391264_0004
2020-11-02 01:13:23 INFO  YarnClientImpl:273 - Submitted application application_1604279391264_0004
2020-11-02 01:13:24 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604279391264_0004/
2020-11-02 01:13:24 INFO  Job:1339 - Running job: job_1604279391264_0004
2020-11-02 01:13:31 INFO  Job:1360 - Job job_1604279391264_0004 running in uber mode : false
2020-11-02 01:13:31 INFO  Job:1367 -  map 0% reduce 0%
2020-11-02 01:13:38 INFO  Job:1367 -  map 33% reduce 0%
2020-11-02 01:13:43 INFO  Job:1367 -  map 67% reduce 0%
2020-11-02 01:13:47 INFO  Job:1367 -  map 100% reduce 0%
2020-11-02 01:13:52 INFO  Job:1367 -  map 100% reduce 100%
2020-11-02 01:13:55 INFO  Job:1378 - Job job_1604279391264_0004 completed successfully
2020-11-02 01:13:55 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39484
		Total time spent by all reduces in occupied slots (ms)=14420
		Total time spent by all map tasks (ms)=9871
		Total time spent by all reduce tasks (ms)=3605
		Total vcore-milliseconds taken by all map tasks=9871
		Total vcore-milliseconds taken by all reduce tasks=3605
		Total megabyte-milliseconds taken by all map tasks=40431616
		Total megabyte-milliseconds taken by all reduce tasks=14766080
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=629
		CPU time spent (ms)=7180
		Physical memory (bytes) snapshot=1137537024
		Virtual memory (bytes) snapshot=16070639616
		Total committed heap usage (bytes)=1054343168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201102 01:13:55.910" starttime="20201102 01:13:55.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:13:55.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:13:55.910" starttime="20201102 01:13:55.910"></status>
</kw>
<status status="PASS" endtime="20201102 01:13:55.911" starttime="20201102 01:13:19.758"></status>
</kw>
<msg timestamp="20201102 01:13:55.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:13:55.911" starttime="20201102 01:13:19.757"></status>
</kw>
<msg timestamp="20201102 01:13:55.911" level="INFO">${output} = 2020-11-02 01:13:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-02 01:13:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201102 01:13:55.911" starttime="20201102 01:13:19.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 01:13:55.912" starttime="20201102 01:13:55.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:13:55.912" starttime="20201102 01:13:55.912"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:13:55.913" critical="yes" starttime="20201102 01:13:19.724"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 01:13:55.914" starttime="20201102 01:12:43.484"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:11:07.398" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:11:07.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:11:07.405" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:11:07.405" starttime="20201102 01:11:07.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:11:07.406" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:11:07.406" starttime="20201102 01:11:07.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:11:07.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:11:07.407" starttime="20201102 01:11:07.406"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:07.407" starttime="20201102 01:11:07.393"></status>
</kw>
<msg timestamp="20201102 01:11:07.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:11:07.407" starttime="20201102 01:11:07.393"></status>
</kw>
<msg timestamp="20201102 01:11:07.407" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:11:07.408" starttime="20201102 01:11:07.392"></status>
</kw>
<msg timestamp="20201102 01:11:07.408" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:11:07.408" starttime="20201102 01:11:07.392"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:11:07.415" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:11:07.415" starttime="20201102 01:11:07.414"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:11:07.416" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:11:07.416" starttime="20201102 01:11:07.415"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:07.416" starttime="20201102 01:11:07.414"></status>
</kw>
<msg timestamp="20201102 01:11:07.416" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:11:07.416" starttime="20201102 01:11:07.414"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:07.416" starttime="20201102 01:11:07.413"></status>
</kw>
<msg timestamp="20201102 01:11:07.416" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:11:07.416" starttime="20201102 01:11:07.411"></status>
</kw>
<msg timestamp="20201102 01:11:07.416" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:11:07.416" starttime="20201102 01:11:07.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:11:07.421" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:11:44.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:11:44.967" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:11:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:11:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201102 01:11:44.967" starttime="20201102 01:11:07.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:11:44.968" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:11:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:11:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 01:11:09 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 01:11:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:11:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E63A82A64765-&gt;a45090f3-9500-47e1-a5d7-1dd2382e5ec6
2020-11-02 01:11:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 01:11:10 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-02 01:11:11 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-02 01:11:11 INFO  JobSubmitter:198 - number of splits:3
2020-11-02 01:11:11 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604279391264_0001
2020-11-02 01:11:11 INFO  YarnClientImpl:273 - Submitted application application_1604279391264_0001
2020-11-02 01:11:11 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604279391264_0001/
2020-11-02 01:11:11 INFO  Job:1339 - Running job: job_1604279391264_0001
2020-11-02 01:11:23 INFO  Job:1360 - Job job_1604279391264_0001 running in uber mode : false
2020-11-02 01:11:23 INFO  Job:1367 -  map 0% reduce 0%
2020-11-02 01:11:29 INFO  Job:1367 -  map 33% reduce 0%
2020-11-02 01:11:34 INFO  Job:1367 -  map 67% reduce 0%
2020-11-02 01:11:39 INFO  Job:1367 -  map 100% reduce 0%
2020-11-02 01:11:43 INFO  Job:1367 -  map 100% reduce 100%
2020-11-02 01:11:44 INFO  Job:1378 - Job job_1604279391264_0001 completed successfully
2020-11-02 01:11:44 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38928
		Total time spent by all reduces in occupied slots (ms)=14932
		Total time spent by all map tasks (ms)=9732
		Total time spent by all reduce tasks (ms)=3733
		Total vcore-milliseconds taken by all map tasks=9732
		Total vcore-milliseconds taken by all reduce tasks=3733
		Total megabyte-milliseconds taken by all map tasks=39862272
		Total megabyte-milliseconds taken by all reduce tasks=15290368
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=648
		CPU time spent (ms)=6950
		Physical memory (bytes) snapshot=1137209344
		Virtual memory (bytes) snapshot=16061071360
		Total committed heap usage (bytes)=1049624576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.616 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201102 01:11:44.968" starttime="20201102 01:11:44.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:11:44.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:11:44.969" starttime="20201102 01:11:44.969"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:44.970" starttime="20201102 01:11:07.417"></status>
</kw>
<msg timestamp="20201102 01:11:44.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:11:44.970" starttime="20201102 01:11:07.417"></status>
</kw>
<msg timestamp="20201102 01:11:44.970" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:11:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:11:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201102 01:11:44.970" starttime="20201102 01:11:07.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:11:44.971" starttime="20201102 01:11:44.970"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:11:44.971" critical="yes" starttime="20201102 01:11:07.391"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:11:44.976" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:11:44.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:11:44.983" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:11:44.983" starttime="20201102 01:11:44.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:11:44.984" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:11:44.984" starttime="20201102 01:11:44.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:11:44.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:11:44.984" starttime="20201102 01:11:44.984"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:44.984" starttime="20201102 01:11:44.973"></status>
</kw>
<msg timestamp="20201102 01:11:44.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:11:44.985" starttime="20201102 01:11:44.973"></status>
</kw>
<msg timestamp="20201102 01:11:44.985" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:11:44.985" starttime="20201102 01:11:44.973"></status>
</kw>
<msg timestamp="20201102 01:11:44.985" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 01:11:44.985" starttime="20201102 01:11:44.972"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:11:44.986" level="INFO">${random} = 76</msg>
<status status="PASS" endtime="20201102 01:11:44.986" starttime="20201102 01:11:44.985"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:11:44.989" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:11:44.989" starttime="20201102 01:11:44.989"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:11:44.989" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:11:44.989" starttime="20201102 01:11:44.989"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:44.990" starttime="20201102 01:11:44.988"></status>
</kw>
<msg timestamp="20201102 01:11:44.990" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:11:44.990" starttime="20201102 01:11:44.988"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:44.990" starttime="20201102 01:11:44.987"></status>
</kw>
<msg timestamp="20201102 01:11:44.990" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:11:44.990" starttime="20201102 01:11:44.986"></status>
</kw>
<msg timestamp="20201102 01:11:44.990" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:11:44.990" starttime="20201102 01:11:44.986"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:11:44.993" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:11:44.993" starttime="20201102 01:11:44.993"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:11:44.993" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:11:44.994" starttime="20201102 01:11:44.993"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:44.994" starttime="20201102 01:11:44.992"></status>
</kw>
<msg timestamp="20201102 01:11:44.994" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:11:44.994" starttime="20201102 01:11:44.992"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:44.994" starttime="20201102 01:11:44.991"></status>
</kw>
<msg timestamp="20201102 01:11:44.994" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 01:11:44.994" starttime="20201102 01:11:44.991"></status>
</kw>
<msg timestamp="20201102 01:11:44.994" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 01:11:44.994" starttime="20201102 01:11:44.990"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:11:44.997" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:11:44.997" starttime="20201102 01:11:44.997"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:11:44.998" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:11:44.998" starttime="20201102 01:11:44.997"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:44.998" starttime="20201102 01:11:44.996"></status>
</kw>
<msg timestamp="20201102 01:11:44.998" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:11:44.998" starttime="20201102 01:11:44.996"></status>
</kw>
<status status="PASS" endtime="20201102 01:11:44.998" starttime="20201102 01:11:44.995"></status>
</kw>
<msg timestamp="20201102 01:11:44.998" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-76.txt</msg>
<status status="PASS" endtime="20201102 01:11:44.998" starttime="20201102 01:11:44.995"></status>
</kw>
<msg timestamp="20201102 01:11:44.998" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-76.txt</msg>
<status status="PASS" endtime="20201102 01:11:44.998" starttime="20201102 01:11:44.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:11:45.003" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-76.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:12:28.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:12:28.737" level="INFO">${output} = 2020-11-02 01:11:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-02 01:11:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201102 01:12:28.738" starttime="20201102 01:11:45.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:12:28.739" level="INFO">2020-11-02 01:11:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-02 01:11:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 01:11:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:11:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 01:11:47 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 01:11:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:11:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F3D4C6773816-&gt;a45090f3-9500-47e1-a5d7-1dd2382e5ec6
2020-11-02 01:11:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:11:48 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-02 01:11:50 INFO  JobSubmitter:198 - number of splits:3
2020-11-02 01:11:53 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604279391264_0002
2020-11-02 01:11:53 INFO  YarnClientImpl:273 - Submitted application application_1604279391264_0002
2020-11-02 01:11:53 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604279391264_0002/
2020-11-02 01:11:53 INFO  Job:1339 - Running job: job_1604279391264_0002
2020-11-02 01:12:01 INFO  Job:1360 - Job job_1604279391264_0002 running in uber mode : false
2020-11-02 01:12:01 INFO  Job:1367 -  map 0% reduce 0%
2020-11-02 01:12:08 INFO  Job:1367 -  map 33% reduce 0%
2020-11-02 01:12:13 INFO  Job:1367 -  map 67% reduce 0%
2020-11-02 01:12:18 INFO  Job:1367 -  map 100% reduce 0%
2020-11-02 01:12:22 INFO  Job:1367 -  map 100% reduce 100%
2020-11-02 01:12:28 INFO  Job:1378 - Job job_1604279391264_0002 completed successfully
2020-11-02 01:12:28 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41824
		Total time spent by all reduces in occupied slots (ms)=15140
		Total time spent by all map tasks (ms)=10456
		Total time spent by all reduce tasks (ms)=3785
		Total vcore-milliseconds taken by all map tasks=10456
		Total vcore-milliseconds taken by all reduce tasks=3785
		Total megabyte-milliseconds taken by all map tasks=42827776
		Total megabyte-milliseconds taken by all reduce tasks=15503360
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=669
		CPU time spent (ms)=7500
		Physical memory (bytes) snapshot=1153667072
		Virtual memory (bytes) snapshot=16077234176
		Total committed heap usage (bytes)=1053294592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201102 01:12:28.739" starttime="20201102 01:12:28.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:12:28.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:12:28.740" starttime="20201102 01:12:28.739"></status>
</kw>
<status status="PASS" endtime="20201102 01:12:28.740" starttime="20201102 01:11:44.999"></status>
</kw>
<msg timestamp="20201102 01:12:28.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:12:28.740" starttime="20201102 01:11:44.999"></status>
</kw>
<msg timestamp="20201102 01:12:28.741" level="INFO">${output} = 2020-11-02 01:11:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-02 01:11:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201102 01:12:28.741" starttime="20201102 01:11:44.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 01:12:28.741" starttime="20201102 01:12:28.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:12:28.742" starttime="20201102 01:12:28.741"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:12:28.742" critical="yes" starttime="20201102 01:11:44.972"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 01:12:28.743" starttime="20201102 01:11:07.343"></status>
</suite>
<status status="PASS" elapsedtime="192351" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:15:32.986" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:15:35.296" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 01:15:35.296" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 01:15:35.296" starttime="20201102 01:15:32.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:15:35.297" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 01:15:35.297" starttime="20201102 01:15:35.297"></status>
</kw>
<msg timestamp="20201102 01:15:35.298" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 01:15:35.298" starttime="20201102 01:15:32.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:15:35.303" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:15:37.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:15:37.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:15:37.377" starttime="20201102 01:15:35.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:15:37.378" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:15:37.378" starttime="20201102 01:15:37.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:15:37.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:15:37.378" starttime="20201102 01:15:37.378"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:37.379" starttime="20201102 01:15:35.300"></status>
</kw>
<msg timestamp="20201102 01:15:37.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:15:37.379" starttime="20201102 01:15:35.299"></status>
</kw>
<msg timestamp="20201102 01:15:37.379" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201102 01:15:37.379" starttime="20201102 01:15:35.299"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 01:15:37.380" starttime="20201102 01:15:37.379"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:37.380" starttime="20201102 01:15:35.298"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:37.380" starttime="20201102 01:15:35.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:15:37.384" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:15:39.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:15:39.429" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:15:39.429" starttime="20201102 01:15:37.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:15:39.430" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:15:39.430" starttime="20201102 01:15:39.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:15:39.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:15:39.430" starttime="20201102 01:15:39.430"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:39.431" starttime="20201102 01:15:37.382"></status>
</kw>
<msg timestamp="20201102 01:15:39.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:15:39.431" starttime="20201102 01:15:37.381"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:39.431" starttime="20201102 01:15:37.381"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:39.431" starttime="20201102 01:15:37.380"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:39.431" starttime="20201102 01:15:37.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 01:15:39.432" starttime="20201102 01:15:39.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:15:39.437" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:15:41.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:15:41.714" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:15:39.388Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 01:15:41.715" starttime="20201102 01:15:39.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:15:41.716" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:15:39.388Z",
  "modificationTime" : "2020-11-02T01:15:39.388Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 01:15:41.716" starttime="20201102 01:15:41.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:15:41.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:15:41.717" starttime="20201102 01:15:41.716"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:41.717" starttime="20201102 01:15:39.433"></status>
</kw>
<msg timestamp="20201102 01:15:41.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:15:41.717" starttime="20201102 01:15:39.433"></status>
</kw>
<msg timestamp="20201102 01:15:41.718" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:15:39.388Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 01:15:41.718" starttime="20201102 01:15:39.432"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201102 01:15:41.718" starttime="20201102 01:15:41.718"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:15:41.722" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:15:41.722" starttime="20201102 01:15:41.722"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:15:41.723" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:15:41.723" starttime="20201102 01:15:41.722"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:41.723" starttime="20201102 01:15:41.721"></status>
</kw>
<msg timestamp="20201102 01:15:41.723" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:15:41.723" starttime="20201102 01:15:41.721"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:41.724" starttime="20201102 01:15:41.720"></status>
</kw>
<msg timestamp="20201102 01:15:41.724" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 01:15:41.724" starttime="20201102 01:15:41.719"></status>
</kw>
<msg timestamp="20201102 01:15:41.724" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 01:15:41.724" starttime="20201102 01:15:41.718"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:15:41.729" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:15:44.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:15:44.045" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:15:44.045" starttime="20201102 01:15:41.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:15:44.046" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:15:44.046" starttime="20201102 01:15:44.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:15:44.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:15:44.047" starttime="20201102 01:15:44.046"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:44.047" starttime="20201102 01:15:41.725"></status>
</kw>
<msg timestamp="20201102 01:15:44.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:15:44.047" starttime="20201102 01:15:41.725"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:44.047" starttime="20201102 01:15:41.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:15:44.052" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:15:49.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:15:49.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:15:49.265" starttime="20201102 01:15:44.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:15:49.266" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:15:49.266" starttime="20201102 01:15:49.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:15:49.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:15:49.267" starttime="20201102 01:15:49.266"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:49.267" starttime="20201102 01:15:44.048"></status>
</kw>
<msg timestamp="20201102 01:15:49.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:15:49.267" starttime="20201102 01:15:44.048"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:49.268" starttime="20201102 01:15:44.047"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:15:49.273" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:15:53.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:15:53.973" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:15:53.973" starttime="20201102 01:15:49.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:15:53.974" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:15:53.974" starttime="20201102 01:15:53.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:15:53.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:15:53.976" starttime="20201102 01:15:53.975"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:53.976" starttime="20201102 01:15:49.269"></status>
</kw>
<msg timestamp="20201102 01:15:53.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:15:53.976" starttime="20201102 01:15:49.269"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:53.976" starttime="20201102 01:15:49.268"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:15:53.982" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:15:57.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:15:57.900" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:15:57.900" starttime="20201102 01:15:53.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:15:57.901" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:15:57.901" starttime="20201102 01:15:57.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:15:57.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:15:57.902" starttime="20201102 01:15:57.901"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:57.902" starttime="20201102 01:15:53.977"></status>
</kw>
<msg timestamp="20201102 01:15:57.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:15:57.902" starttime="20201102 01:15:53.977"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:57.902" starttime="20201102 01:15:53.976"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:15:57.903" critical="yes" starttime="20201102 01:15:32.980"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:15:57.908" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:15:57.908" starttime="20201102 01:15:57.907"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:15:57.909" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:15:57.909" starttime="20201102 01:15:57.908"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:57.909" starttime="20201102 01:15:57.907"></status>
</kw>
<msg timestamp="20201102 01:15:57.909" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:15:57.909" starttime="20201102 01:15:57.906"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:57.910" starttime="20201102 01:15:57.906"></status>
</kw>
<msg timestamp="20201102 01:15:57.910" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:15:57.910" starttime="20201102 01:15:57.905"></status>
</kw>
<msg timestamp="20201102 01:15:57.910" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:15:57.910" starttime="20201102 01:15:57.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:15:57.914" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:15:59.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:15:59.974" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:15:59.974" starttime="20201102 01:15:57.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:15:59.975" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:15:59.976" starttime="20201102 01:15:59.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:15:59.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:15:59.976" starttime="20201102 01:15:59.976"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:59.977" starttime="20201102 01:15:57.911"></status>
</kw>
<msg timestamp="20201102 01:15:59.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:15:59.977" starttime="20201102 01:15:57.911"></status>
</kw>
<status status="PASS" endtime="20201102 01:15:59.977" starttime="20201102 01:15:57.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:15:59.980" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:16:02.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:16:02.168" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:16:02.168" starttime="20201102 01:15:59.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:16:02.170" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:16:02.170" starttime="20201102 01:16:02.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:16:02.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:16:02.170" starttime="20201102 01:16:02.170"></status>
</kw>
<status status="PASS" endtime="20201102 01:16:02.171" starttime="20201102 01:15:59.978"></status>
</kw>
<msg timestamp="20201102 01:16:02.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:16:02.171" starttime="20201102 01:15:59.978"></status>
</kw>
<status status="PASS" endtime="20201102 01:16:02.171" starttime="20201102 01:15:59.977"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:16:02.171" critical="yes" starttime="20201102 01:15:57.904"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201102 01:16:02.172" starttime="20201102 01:15:32.929"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:17:44.509" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:17:44.509" starttime="20201102 01:17:44.509"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:17:44.510" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:17:44.510" starttime="20201102 01:17:44.509"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:44.510" starttime="20201102 01:17:44.509"></status>
</kw>
<msg timestamp="20201102 01:17:44.510" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:17:44.510" starttime="20201102 01:17:44.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:17:44.511" starttime="20201102 01:17:44.511"></status>
</kw>
<msg timestamp="20201102 01:17:44.511" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 01:17:44.511" starttime="20201102 01:17:44.510"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:44.511" starttime="20201102 01:17:44.508"></status>
</kw>
<msg timestamp="20201102 01:17:44.511" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:17:44.511" starttime="20201102 01:17:44.507"></status>
</kw>
<msg timestamp="20201102 01:17:44.512" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:17:44.512" starttime="20201102 01:17:44.506"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:17:44.512" level="INFO">${random} = 87032</msg>
<status status="PASS" endtime="20201102 01:17:44.512" starttime="20201102 01:17:44.512"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:17:44.517" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-87032 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:17:48.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:17:48.266" level="INFO">${output} = 2020-11-02 01:17:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:17:48.266" starttime="20201102 01:17:44.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:17:48.267" level="INFO">2020-11-02 01:17:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:46 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 01:17:46 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:17:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:17:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:17:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:17:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7F0FFCF1E8C4-&gt;f63f2c66-5d8a-4649-bdb3-0907bd5a435e
2020-11-02 01:17:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:17:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 01:17:48.267" starttime="20201102 01:17:48.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:17:48.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:17:48.268" starttime="20201102 01:17:48.268"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:48.268" starttime="20201102 01:17:44.513"></status>
</kw>
<msg timestamp="20201102 01:17:48.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:17:48.268" starttime="20201102 01:17:44.513"></status>
</kw>
<msg timestamp="20201102 01:17:48.269" level="INFO">${result} = 2020-11-02 01:17:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:17:48.269" starttime="20201102 01:17:44.512"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:17:48.273" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:17:50.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:17:50.214" level="INFO">${output} = 2020-11-02 01:17:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:17:50.214" starttime="20201102 01:17:48.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:17:50.215" level="INFO">2020-11-02 01:17:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:49 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-02 01:16 ofs://om/volume1/bucket1/ozone-34526
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-02 01:17 ofs://om/volume1/bucket1/ozone-87032
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:15 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:17 ofs://om/volume1/bucket1/wordcount-78.txt
2020-11-02 01:17:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 01:17:50.215" starttime="20201102 01:17:50.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:17:50.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:17:50.216" starttime="20201102 01:17:50.215"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:50.216" starttime="20201102 01:17:48.270"></status>
</kw>
<msg timestamp="20201102 01:17:50.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:17:50.216" starttime="20201102 01:17:48.269"></status>
</kw>
<msg timestamp="20201102 01:17:50.216" level="INFO">${result} = 2020-11-02 01:17:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:17:50.216" starttime="20201102 01:17:48.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:17:50.217" starttime="20201102 01:17:50.217"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:17:50.217" critical="yes" starttime="20201102 01:17:44.505"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 01:17:50.218" starttime="20201102 01:17:44.459"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:16:07.019" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:16:07.019" starttime="20201102 01:16:07.018"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:16:07.019" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:16:07.019" starttime="20201102 01:16:07.019"></status>
</kw>
<status status="PASS" endtime="20201102 01:16:07.020" starttime="20201102 01:16:07.018"></status>
</kw>
<msg timestamp="20201102 01:16:07.020" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:16:07.020" starttime="20201102 01:16:07.018"></status>
</kw>
<status status="PASS" endtime="20201102 01:16:07.020" starttime="20201102 01:16:07.017"></status>
</kw>
<msg timestamp="20201102 01:16:07.020" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:16:07.020" starttime="20201102 01:16:07.017"></status>
</kw>
<msg timestamp="20201102 01:16:07.020" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:16:07.020" starttime="20201102 01:16:07.015"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:16:07.021" level="INFO">${random} = 34526</msg>
<status status="PASS" endtime="20201102 01:16:07.021" starttime="20201102 01:16:07.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:16:07.025" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-34526 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:16:10.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:16:10.549" level="INFO">${output} = 2020-11-02 01:16:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:16:10.549" starttime="20201102 01:16:07.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:16:10.550" level="INFO">2020-11-02 01:16:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:08 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 01:16:09 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:16:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:16:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:16:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:16:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-04316AC9A814-&gt;f63f2c66-5d8a-4649-bdb3-0907bd5a435e
2020-11-02 01:16:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:16:10 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 01:16:10.550" starttime="20201102 01:16:10.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:16:10.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:16:10.551" starttime="20201102 01:16:10.550"></status>
</kw>
<status status="PASS" endtime="20201102 01:16:10.551" starttime="20201102 01:16:07.021"></status>
</kw>
<msg timestamp="20201102 01:16:10.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:16:10.551" starttime="20201102 01:16:07.021"></status>
</kw>
<msg timestamp="20201102 01:16:10.552" level="INFO">${result} = 2020-11-02 01:16:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:16:10.552" starttime="20201102 01:16:07.021"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:16:10.555" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:16:12.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:16:12.318" level="INFO">${output} = 2020-11-02 01:16:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:16:12.318" starttime="20201102 01:16:10.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:16:12.319" level="INFO">2020-11-02 01:16:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:12 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-02 01:16 o3fs://bucket1.volume1.om/ozone-34526
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:15 o3fs://bucket1.volume1.om/user
2020-11-02 01:16:12 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 01:16:12.319" starttime="20201102 01:16:12.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:16:12.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:16:12.320" starttime="20201102 01:16:12.320"></status>
</kw>
<status status="PASS" endtime="20201102 01:16:12.320" starttime="20201102 01:16:10.552"></status>
</kw>
<msg timestamp="20201102 01:16:12.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:16:12.320" starttime="20201102 01:16:10.552"></status>
</kw>
<msg timestamp="20201102 01:16:12.321" level="INFO">${result} = 2020-11-02 01:16:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:16:12.321" starttime="20201102 01:16:10.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:16:12.321" starttime="20201102 01:16:12.321"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:16:12.321" critical="yes" starttime="20201102 01:16:07.015"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 01:16:12.322" starttime="20201102 01:16:06.968"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:17:54.998" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:17:55.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:17:55.005" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:17:55.005" starttime="20201102 01:17:54.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:17:55.006" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:17:55.006" starttime="20201102 01:17:55.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:17:55.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:17:55.007" starttime="20201102 01:17:55.006"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:55.007" starttime="20201102 01:17:54.992"></status>
</kw>
<msg timestamp="20201102 01:17:55.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:17:55.007" starttime="20201102 01:17:54.992"></status>
</kw>
<msg timestamp="20201102 01:17:55.007" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:17:55.007" starttime="20201102 01:17:54.992"></status>
</kw>
<msg timestamp="20201102 01:17:55.007" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:17:55.007" starttime="20201102 01:17:54.991"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:17:55.010" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:17:55.010" starttime="20201102 01:17:55.010"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:17:55.011" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:17:55.011" starttime="20201102 01:17:55.011"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:55.011" starttime="20201102 01:17:55.010"></status>
</kw>
<msg timestamp="20201102 01:17:55.011" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:17:55.011" starttime="20201102 01:17:55.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:17:55.012" starttime="20201102 01:17:55.012"></status>
</kw>
<msg timestamp="20201102 01:17:55.012" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 01:17:55.012" starttime="20201102 01:17:55.012"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:55.013" starttime="20201102 01:17:55.009"></status>
</kw>
<msg timestamp="20201102 01:17:55.013" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:17:55.013" starttime="20201102 01:17:55.008"></status>
</kw>
<msg timestamp="20201102 01:17:55.013" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:17:55.013" starttime="20201102 01:17:55.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:17:55.017" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:18:32.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:18:32.787" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:17:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17...</msg>
<status status="PASS" endtime="20201102 01:18:32.787" starttime="20201102 01:17:55.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:18:32.788" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:17:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 01:17:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:17:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:17:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:17:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:17:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CCF2D191FFE7-&gt;f63f2c66-5d8a-4649-bdb3-0907bd5a435e
2020-11-02 01:17:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 01:17:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-02 01:17:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 01:17:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:58 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 01:17:58 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 01:17:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604279679143_0003
2020-11-02 01:17:59 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 01:17:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:59 INFO  Configuration:2752 - resource-types.xml not found
2020-11-02 01:17:59 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-02 01:17:59 INFO  YarnClientImpl:324 - Submitted application application_1604279679143_0003
2020-11-02 01:17:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604279679143_0003/
2020-11-02 01:17:59 INFO  Job:1619 - Running job: job_1604279679143_0003
2020-11-02 01:18:07 INFO  Job:1640 - Job job_1604279679143_0003 running in uber mode : false
2020-11-02 01:18:07 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 01:18:13 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 01:18:20 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 01:18:25 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 01:18:29 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 01:18:32 INFO  Job:1658 - Job job_1604279679143_0003 completed successfully
2020-11-02 01:18:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39928
		Total time spent by all reduces in occupied slots (ms)=15080
		Total time spent by all map tasks (ms)=9982
		Total time spent by all reduce tasks (ms)=3770
		Total vcore-milliseconds taken by all map tasks=9982
		Total vcore-milliseconds taken by all reduce tasks=3770
		Total megabyte-milliseconds taken by all map tasks=40886272
		Total megabyte-milliseconds taken by all reduce tasks=15441920
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=643
		CPU time spent (ms)=7010
		Physical memory (bytes) snapshot=1165803520
		Virtual memory (bytes) snapshot=16064249856
		Total committed heap usage (bytes)=1060634624
		Peak Map Physical memory (bytes)=294268928
		Peak Map Virtual memory (bytes)=4014923776
		Peak Reduce Physical memory (bytes)=295260160
		Peak Reduce Virtual memory (bytes)=4029771776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.969 seconds
2020-11-02 01:18:32 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-02 01:18:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 01:18:32.788" starttime="20201102 01:18:32.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:18:32.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:18:32.789" starttime="20201102 01:18:32.789"></status>
</kw>
<status status="PASS" endtime="20201102 01:18:32.789" starttime="20201102 01:17:55.014"></status>
</kw>
<msg timestamp="20201102 01:18:32.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:18:32.790" starttime="20201102 01:17:55.013"></status>
</kw>
<msg timestamp="20201102 01:18:32.790" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:17:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17...</msg>
<status status="PASS" endtime="20201102 01:18:32.790" starttime="20201102 01:17:55.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:18:32.791" starttime="20201102 01:18:32.790"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:18:32.791" critical="yes" starttime="20201102 01:17:54.991"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:18:32.796" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:18:32.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:18:32.803" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:18:32.803" starttime="20201102 01:18:32.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:18:32.804" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:18:32.804" starttime="20201102 01:18:32.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:18:32.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:18:32.804" starttime="20201102 01:18:32.804"></status>
</kw>
<status status="PASS" endtime="20201102 01:18:32.805" starttime="20201102 01:18:32.793"></status>
</kw>
<msg timestamp="20201102 01:18:32.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:18:32.805" starttime="20201102 01:18:32.793"></status>
</kw>
<msg timestamp="20201102 01:18:32.805" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:18:32.805" starttime="20201102 01:18:32.793"></status>
</kw>
<msg timestamp="20201102 01:18:32.805" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:18:32.805" starttime="20201102 01:18:32.792"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:18:32.806" level="INFO">${random} = 37</msg>
<status status="PASS" endtime="20201102 01:18:32.806" starttime="20201102 01:18:32.805"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:18:32.809" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:18:32.809" starttime="20201102 01:18:32.809"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:18:32.810" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:18:32.810" starttime="20201102 01:18:32.809"></status>
</kw>
<status status="PASS" endtime="20201102 01:18:32.810" starttime="20201102 01:18:32.809"></status>
</kw>
<msg timestamp="20201102 01:18:32.810" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:18:32.810" starttime="20201102 01:18:32.808"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:18:32.811" starttime="20201102 01:18:32.811"></status>
</kw>
<msg timestamp="20201102 01:18:32.811" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 01:18:32.811" starttime="20201102 01:18:32.810"></status>
</kw>
<status status="PASS" endtime="20201102 01:18:32.811" starttime="20201102 01:18:32.807"></status>
</kw>
<msg timestamp="20201102 01:18:32.812" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:18:32.812" starttime="20201102 01:18:32.806"></status>
</kw>
<msg timestamp="20201102 01:18:32.812" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:18:32.812" starttime="20201102 01:18:32.806"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:18:32.815" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:18:32.815" starttime="20201102 01:18:32.814"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:18:32.815" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:18:32.815" starttime="20201102 01:18:32.815"></status>
</kw>
<status status="PASS" endtime="20201102 01:18:32.815" starttime="20201102 01:18:32.814"></status>
</kw>
<msg timestamp="20201102 01:18:32.815" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:18:32.815" starttime="20201102 01:18:32.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:18:32.817" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201102 01:18:32.817" starttime="20201102 01:18:32.817"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:18:32.818" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201102 01:18:32.818" starttime="20201102 01:18:32.817"></status>
</kw>
<status status="PASS" endtime="20201102 01:18:32.818" starttime="20201102 01:18:32.816"></status>
</kw>
<msg timestamp="20201102 01:18:32.818" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201102 01:18:32.818" starttime="20201102 01:18:32.816"></status>
</kw>
<status status="PASS" endtime="20201102 01:18:32.818" starttime="20201102 01:18:32.813"></status>
</kw>
<msg timestamp="20201102 01:18:32.818" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 01:18:32.818" starttime="20201102 01:18:32.812"></status>
</kw>
<msg timestamp="20201102 01:18:32.818" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 01:18:32.818" starttime="20201102 01:18:32.812"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:18:32.822" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:18:32.822" starttime="20201102 01:18:32.821"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:18:32.822" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:18:32.822" starttime="20201102 01:18:32.822"></status>
</kw>
<status status="PASS" endtime="20201102 01:18:32.822" starttime="20201102 01:18:32.821"></status>
</kw>
<msg timestamp="20201102 01:18:32.822" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:18:32.822" starttime="20201102 01:18:32.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:18:32.824" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201102 01:18:32.824" starttime="20201102 01:18:32.824"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:18:32.825" level="INFO">${result} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20201102 01:18:32.825" starttime="20201102 01:18:32.824"></status>
</kw>
<status status="PASS" endtime="20201102 01:18:32.825" starttime="20201102 01:18:32.823"></status>
</kw>
<msg timestamp="20201102 01:18:32.825" level="INFO">${path_with_leading} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20201102 01:18:32.825" starttime="20201102 01:18:32.823"></status>
</kw>
<status status="PASS" endtime="20201102 01:18:32.825" starttime="20201102 01:18:32.820"></status>
</kw>
<msg timestamp="20201102 01:18:32.825" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20201102 01:18:32.825" starttime="20201102 01:18:32.819"></status>
</kw>
<msg timestamp="20201102 01:18:32.825" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20201102 01:18:32.825" starttime="20201102 01:18:32.819"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:18:32.829" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-37.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:19:12.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:19:12.017" level="INFO">${output} = 2020-11-02 01:18:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:19:12.017" starttime="20201102 01:18:32.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:19:12.021" level="INFO">2020-11-02 01:18:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-02 01:18:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 01:18:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:35 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 01:18:35 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:18:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:18:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:18:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:18:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F5B28A544D37-&gt;f63f2c66-5d8a-4649-bdb3-0907bd5a435e
2020-11-02 01:18:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:18:36 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 01:18:36 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 01:18:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604279679143_0004
2020-11-02 01:18:36 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 01:18:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:37 INFO  Configuration:2752 - resource-types.xml not found
2020-11-02 01:18:37 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-02 01:18:37 INFO  YarnClientImpl:324 - Submitted application application_1604279679143_0004
2020-11-02 01:18:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604279679143_0004/
2020-11-02 01:18:37 INFO  Job:1619 - Running job: job_1604279679143_0004
2020-11-02 01:18:45 INFO  Job:1640 - Job job_1604279679143_0004 running in uber mode : false
2020-11-02 01:18:45 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 01:18:52 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 01:18:58 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 01:19:04 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 01:19:08 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 01:19:11 INFO  Job:1658 - Job job_1604279679143_0004 completed successfully
2020-11-02 01:19:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:19:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40208
		Total time spent by all reduces in occupied slots (ms)=15012
		Total time spent by all map tasks (ms)=10052
		Total time spent by all reduce tasks (ms)=3753
		Total vcore-milliseconds taken by all map tasks=10052
		Total vcore-milliseconds taken by all reduce tasks=3753
		Total megabyte-milliseconds taken by all map tasks=41172992
		Total megabyte-milliseconds taken by all reduce tasks=15372288
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=617
		CPU time spent (ms)=7380
		Physical memory (bytes) snapshot=1173991424
		Virtual memory (bytes) snapshot=16061898752
		Total committed heap usage (bytes)=1063780352
		Peak Map Physical memory (bytes)=295895040
		Peak Map Virtual memory (bytes)=4018913280
		Peak Reduce Physical memory (bytes)=297947136
		Peak Reduce Virtual memory (bytes)=4039999488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-02 01:19:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 01:19:12.021" starttime="20201102 01:19:12.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:19:12.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:19:12.022" starttime="20201102 01:19:12.021"></status>
</kw>
<status status="PASS" endtime="20201102 01:19:12.022" starttime="20201102 01:18:32.826"></status>
</kw>
<msg timestamp="20201102 01:19:12.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:19:12.022" starttime="20201102 01:18:32.826"></status>
</kw>
<msg timestamp="20201102 01:19:12.023" level="INFO">${output} = 2020-11-02 01:18:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:18:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:19:12.023" starttime="20201102 01:18:32.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 01:19:12.023" starttime="20201102 01:19:12.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:19:12.024" starttime="20201102 01:19:12.023"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:19:12.024" critical="yes" starttime="20201102 01:18:32.791"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 01:19:12.025" starttime="20201102 01:17:54.944"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:16:17.233" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:16:17.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:16:17.239" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:16:17.239" starttime="20201102 01:16:17.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:16:17.240" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:16:17.240" starttime="20201102 01:16:17.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:16:17.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:16:17.241" starttime="20201102 01:16:17.240"></status>
</kw>
<status status="PASS" endtime="20201102 01:16:17.241" starttime="20201102 01:16:17.227"></status>
</kw>
<msg timestamp="20201102 01:16:17.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:16:17.241" starttime="20201102 01:16:17.227"></status>
</kw>
<msg timestamp="20201102 01:16:17.241" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:16:17.241" starttime="20201102 01:16:17.227"></status>
</kw>
<msg timestamp="20201102 01:16:17.241" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:16:17.241" starttime="20201102 01:16:17.226"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:16:17.245" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:16:17.245" starttime="20201102 01:16:17.244"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:16:17.246" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:16:17.246" starttime="20201102 01:16:17.245"></status>
</kw>
<status status="PASS" endtime="20201102 01:16:17.246" starttime="20201102 01:16:17.244"></status>
</kw>
<msg timestamp="20201102 01:16:17.246" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:16:17.246" starttime="20201102 01:16:17.244"></status>
</kw>
<status status="PASS" endtime="20201102 01:16:17.246" starttime="20201102 01:16:17.243"></status>
</kw>
<msg timestamp="20201102 01:16:17.246" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:16:17.246" starttime="20201102 01:16:17.242"></status>
</kw>
<msg timestamp="20201102 01:16:17.247" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:16:17.247" starttime="20201102 01:16:17.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:16:17.251" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:17:03.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:17:03.384" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:16:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16...</msg>
<status status="PASS" endtime="20201102 01:17:03.384" starttime="20201102 01:16:17.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:17:03.385" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:16:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:19 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 01:16:19 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:16:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:16:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:16:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:16:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F4ABE90E0955-&gt;f63f2c66-5d8a-4649-bdb3-0907bd5a435e
2020-11-02 01:16:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 01:16:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-02 01:16:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:23 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 01:16:26 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 01:16:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604279679143_0001
2020-11-02 01:16:26 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 01:16:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:26 INFO  Configuration:2752 - resource-types.xml not found
2020-11-02 01:16:26 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-02 01:16:27 INFO  YarnClientImpl:324 - Submitted application application_1604279679143_0001
2020-11-02 01:16:27 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604279679143_0001/
2020-11-02 01:16:27 INFO  Job:1619 - Running job: job_1604279679143_0001
2020-11-02 01:16:37 INFO  Job:1640 - Job job_1604279679143_0001 running in uber mode : false
2020-11-02 01:16:37 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 01:16:44 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 01:16:50 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 01:16:56 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 01:17:01 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 01:17:02 INFO  Job:1658 - Job job_1604279679143_0001 completed successfully
2020-11-02 01:17:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42192
		Total time spent by all reduces in occupied slots (ms)=15068
		Total time spent by all map tasks (ms)=10548
		Total time spent by all reduce tasks (ms)=3767
		Total vcore-milliseconds taken by all map tasks=10548
		Total vcore-milliseconds taken by all reduce tasks=3767
		Total megabyte-milliseconds taken by all map tasks=43204608
		Total megabyte-milliseconds taken by all reduce tasks=15429632
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=695
		CPU time spent (ms)=7100
		Physical memory (bytes) snapshot=1179140096
		Virtual memory (bytes) snapshot=16076435456
		Total committed heap usage (bytes)=1143472128
		Peak Map Physical memory (bytes)=297394176
		Peak Map Virtual memory (bytes)=4021014528
		Peak Reduce Physical memory (bytes)=294981632
		Peak Reduce Virtual memory (bytes)=4028919808
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 42.282 seconds
2020-11-02 01:17:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:02 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-02 01:17:03 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 01:17:03.385" starttime="20201102 01:17:03.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:17:03.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:17:03.386" starttime="20201102 01:17:03.385"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:03.386" starttime="20201102 01:16:17.247"></status>
</kw>
<msg timestamp="20201102 01:17:03.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:17:03.386" starttime="20201102 01:16:17.247"></status>
</kw>
<msg timestamp="20201102 01:17:03.387" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:16:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:16...</msg>
<status status="PASS" endtime="20201102 01:17:03.387" starttime="20201102 01:16:17.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:17:03.387" starttime="20201102 01:17:03.387"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:17:03.388" critical="yes" starttime="20201102 01:16:17.226"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:17:03.394" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:17:03.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:17:03.403" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:17:03.403" starttime="20201102 01:17:03.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:17:03.404" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:17:03.404" starttime="20201102 01:17:03.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:17:03.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:17:03.404" starttime="20201102 01:17:03.404"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:03.405" starttime="20201102 01:17:03.391"></status>
</kw>
<msg timestamp="20201102 01:17:03.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:17:03.405" starttime="20201102 01:17:03.391"></status>
</kw>
<msg timestamp="20201102 01:17:03.405" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:17:03.405" starttime="20201102 01:17:03.391"></status>
</kw>
<msg timestamp="20201102 01:17:03.405" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 01:17:03.405" starttime="20201102 01:17:03.390"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:17:03.406" level="INFO">${random} = 78</msg>
<status status="PASS" endtime="20201102 01:17:03.406" starttime="20201102 01:17:03.405"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:17:03.409" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:17:03.409" starttime="20201102 01:17:03.409"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:17:03.409" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:17:03.410" starttime="20201102 01:17:03.409"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:03.410" starttime="20201102 01:17:03.408"></status>
</kw>
<msg timestamp="20201102 01:17:03.410" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:17:03.410" starttime="20201102 01:17:03.408"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:03.410" starttime="20201102 01:17:03.407"></status>
</kw>
<msg timestamp="20201102 01:17:03.410" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:17:03.410" starttime="20201102 01:17:03.406"></status>
</kw>
<msg timestamp="20201102 01:17:03.410" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:17:03.410" starttime="20201102 01:17:03.406"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:17:03.413" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:17:03.413" starttime="20201102 01:17:03.413"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:17:03.414" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:17:03.414" starttime="20201102 01:17:03.414"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:03.414" starttime="20201102 01:17:03.413"></status>
</kw>
<msg timestamp="20201102 01:17:03.414" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:17:03.414" starttime="20201102 01:17:03.412"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:03.414" starttime="20201102 01:17:03.411"></status>
</kw>
<msg timestamp="20201102 01:17:03.415" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 01:17:03.415" starttime="20201102 01:17:03.411"></status>
</kw>
<msg timestamp="20201102 01:17:03.415" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 01:17:03.415" starttime="20201102 01:17:03.410"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:17:03.417" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:17:03.417" starttime="20201102 01:17:03.417"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:17:03.418" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:17:03.418" starttime="20201102 01:17:03.418"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:03.418" starttime="20201102 01:17:03.417"></status>
</kw>
<msg timestamp="20201102 01:17:03.418" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:17:03.418" starttime="20201102 01:17:03.416"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:03.418" starttime="20201102 01:17:03.416"></status>
</kw>
<msg timestamp="20201102 01:17:03.419" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-78.txt</msg>
<status status="PASS" endtime="20201102 01:17:03.419" starttime="20201102 01:17:03.415"></status>
</kw>
<msg timestamp="20201102 01:17:03.419" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-78.txt</msg>
<status status="PASS" endtime="20201102 01:17:03.419" starttime="20201102 01:17:03.415"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:17:03.423" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-78.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:17:39.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:17:39.717" level="INFO">${output} = 2020-11-02 01:17:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:05 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:17:39.717" starttime="20201102 01:17:03.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:17:39.718" level="INFO">2020-11-02 01:17:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:05 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-02 01:17:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:05 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 01:17:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:05 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 01:17:05 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 01:17:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:17:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:17:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:17:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1C9DFFFBC969-&gt;f63f2c66-5d8a-4649-bdb3-0907bd5a435e
2020-11-02 01:17:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:17:07 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 01:17:07 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 01:17:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604279679143_0002
2020-11-02 01:17:07 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 01:17:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:07 INFO  Configuration:2752 - resource-types.xml not found
2020-11-02 01:17:07 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-02 01:17:07 INFO  YarnClientImpl:324 - Submitted application application_1604279679143_0002
2020-11-02 01:17:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604279679143_0002/
2020-11-02 01:17:07 INFO  Job:1619 - Running job: job_1604279679143_0002
2020-11-02 01:17:16 INFO  Job:1640 - Job job_1604279679143_0002 running in uber mode : false
2020-11-02 01:17:16 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 01:17:23 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 01:17:29 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 01:17:34 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 01:17:38 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 01:17:39 INFO  Job:1658 - Job job_1604279679143_0002 completed successfully
2020-11-02 01:17:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40652
		Total time spent by all reduces in occupied slots (ms)=15352
		Total time spent by all map tasks (ms)=10163
		Total time spent by all reduce tasks (ms)=3838
		Total vcore-milliseconds taken by all map tasks=10163
		Total vcore-milliseconds taken by all reduce tasks=3838
		Total megabyte-milliseconds taken by all map tasks=41627648
		Total megabyte-milliseconds taken by all reduce tasks=15720448
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=610
		CPU time spent (ms)=7030
		Physical memory (bytes) snapshot=1170739200
		Virtual memory (bytes) snapshot=16069566464
		Total committed heap usage (bytes)=1059061760
		Peak Map Physical memory (bytes)=295546880
		Peak Map Virtual memory (bytes)=4013076480
		Peak Reduce Physical memory (bytes)=294293504
		Peak Reduce Virtual memory (bytes)=4035309568
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-02 01:17:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 01:17:39.718" starttime="20201102 01:17:39.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:17:39.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:17:39.719" starttime="20201102 01:17:39.718"></status>
</kw>
<status status="PASS" endtime="20201102 01:17:39.719" starttime="20201102 01:17:03.420"></status>
</kw>
<msg timestamp="20201102 01:17:39.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:17:39.719" starttime="20201102 01:17:03.419"></status>
</kw>
<msg timestamp="20201102 01:17:39.720" level="INFO">${output} = 2020-11-02 01:17:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 01:17:05 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 01:17:39.720" starttime="20201102 01:17:03.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 01:17:39.720" starttime="20201102 01:17:39.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:17:39.721" starttime="20201102 01:17:39.721"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:17:39.721" critical="yes" starttime="20201102 01:17:03.389"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 01:17:39.722" starttime="20201102 01:16:17.178"></status>
</suite>
<status status="PASS" elapsedtime="199981" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:20:18.153" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:20:22.100" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 01:20:22.100" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 01:20:22.100" starttime="20201102 01:20:18.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:20:22.101" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 01:20:22.101" starttime="20201102 01:20:22.101"></status>
</kw>
<msg timestamp="20201102 01:20:22.102" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 01:20:22.102" starttime="20201102 01:20:18.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:20:22.107" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:20:25.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:20:25.396" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:20:25.396" starttime="20201102 01:20:22.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:20:25.397" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:20:25.397" starttime="20201102 01:20:25.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:20:25.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:20:25.398" starttime="20201102 01:20:25.397"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:25.398" starttime="20201102 01:20:22.104"></status>
</kw>
<msg timestamp="20201102 01:20:25.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:20:25.399" starttime="20201102 01:20:22.103"></status>
</kw>
<msg timestamp="20201102 01:20:25.399" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201102 01:20:25.399" starttime="20201102 01:20:22.103"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 01:20:25.399" starttime="20201102 01:20:25.399"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:25.399" starttime="20201102 01:20:22.102"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:25.400" starttime="20201102 01:20:22.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:20:25.404" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:20:28.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:20:28.713" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:20:28.713" starttime="20201102 01:20:25.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:20:28.714" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:20:28.714" starttime="20201102 01:20:28.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:20:28.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:20:28.715" starttime="20201102 01:20:28.714"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:28.715" starttime="20201102 01:20:25.401"></status>
</kw>
<msg timestamp="20201102 01:20:28.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:20:28.715" starttime="20201102 01:20:25.401"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:28.715" starttime="20201102 01:20:25.401"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:28.716" starttime="20201102 01:20:25.400"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:28.716" starttime="20201102 01:20:25.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 01:20:28.716" starttime="20201102 01:20:28.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:20:28.720" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:20:32.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:20:32.046" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:20:28.493Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 01:20:32.046" starttime="20201102 01:20:28.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:20:32.047" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:20:28.493Z",
  "modificationTime" : "2020-11-02T01:20:28.493Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 01:20:32.047" starttime="20201102 01:20:32.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:20:32.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:20:32.048" starttime="20201102 01:20:32.047"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:32.048" starttime="20201102 01:20:28.717"></status>
</kw>
<msg timestamp="20201102 01:20:32.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:20:32.048" starttime="20201102 01:20:28.717"></status>
</kw>
<msg timestamp="20201102 01:20:32.048" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T01:20:28.493Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 01:20:32.048" starttime="20201102 01:20:28.716"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201102 01:20:32.049" starttime="20201102 01:20:32.049"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:20:32.053" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:20:32.053" starttime="20201102 01:20:32.052"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:20:32.053" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:20:32.053" starttime="20201102 01:20:32.053"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:32.053" starttime="20201102 01:20:32.052"></status>
</kw>
<msg timestamp="20201102 01:20:32.054" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:20:32.054" starttime="20201102 01:20:32.051"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:32.054" starttime="20201102 01:20:32.051"></status>
</kw>
<msg timestamp="20201102 01:20:32.054" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 01:20:32.054" starttime="20201102 01:20:32.050"></status>
</kw>
<msg timestamp="20201102 01:20:32.054" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 01:20:32.054" starttime="20201102 01:20:32.049"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:20:32.058" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:20:35.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:20:35.156" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:20:35.156" starttime="20201102 01:20:32.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:20:35.158" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:20:35.158" starttime="20201102 01:20:35.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:20:35.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:20:35.158" starttime="20201102 01:20:35.158"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:35.159" starttime="20201102 01:20:32.055"></status>
</kw>
<msg timestamp="20201102 01:20:35.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:20:35.159" starttime="20201102 01:20:32.055"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:35.159" starttime="20201102 01:20:32.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:20:35.164" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:20:42.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:20:42.135" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:20:42.135" starttime="20201102 01:20:35.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:20:42.136" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:20:42.136" starttime="20201102 01:20:42.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:20:42.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:20:42.137" starttime="20201102 01:20:42.137"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:42.137" starttime="20201102 01:20:35.160"></status>
</kw>
<msg timestamp="20201102 01:20:42.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:20:42.138" starttime="20201102 01:20:35.160"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:42.138" starttime="20201102 01:20:35.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:20:42.141" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:20:47.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:20:47.720" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:20:47.720" starttime="20201102 01:20:42.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:20:47.722" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:20:47.722" starttime="20201102 01:20:47.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:20:47.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:20:47.722" starttime="20201102 01:20:47.722"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:47.723" starttime="20201102 01:20:42.139"></status>
</kw>
<msg timestamp="20201102 01:20:47.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:20:47.723" starttime="20201102 01:20:42.139"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:47.723" starttime="20201102 01:20:42.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:20:47.730" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:20:53.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:20:53.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:20:53.019" starttime="20201102 01:20:47.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:20:53.021" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:20:53.021" starttime="20201102 01:20:53.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:20:53.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:20:53.021" starttime="20201102 01:20:53.021"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:53.022" starttime="20201102 01:20:47.724"></status>
</kw>
<msg timestamp="20201102 01:20:53.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:20:53.022" starttime="20201102 01:20:47.724"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:53.022" starttime="20201102 01:20:47.723"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:20:53.022" critical="yes" starttime="20201102 01:20:18.147"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:20:53.027" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:20:53.027" starttime="20201102 01:20:53.027"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:20:53.028" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:20:53.028" starttime="20201102 01:20:53.028"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:53.028" starttime="20201102 01:20:53.026"></status>
</kw>
<msg timestamp="20201102 01:20:53.028" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:20:53.028" starttime="20201102 01:20:53.026"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:53.029" starttime="20201102 01:20:53.025"></status>
</kw>
<msg timestamp="20201102 01:20:53.029" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:20:53.029" starttime="20201102 01:20:53.025"></status>
</kw>
<msg timestamp="20201102 01:20:53.029" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:20:53.029" starttime="20201102 01:20:53.024"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:20:53.033" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:20:56.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:20:56.001" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:20:56.002" starttime="20201102 01:20:53.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:20:56.003" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:20:56.003" starttime="20201102 01:20:56.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:20:56.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:20:56.004" starttime="20201102 01:20:56.003"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:56.004" starttime="20201102 01:20:53.030"></status>
</kw>
<msg timestamp="20201102 01:20:56.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:20:56.004" starttime="20201102 01:20:53.030"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:56.004" starttime="20201102 01:20:53.029"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:20:56.009" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:20:59.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:20:59.256" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:20:59.256" starttime="20201102 01:20:56.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:20:59.257" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:20:59.258" starttime="20201102 01:20:59.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:20:59.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:20:59.258" starttime="20201102 01:20:59.258"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:59.258" starttime="20201102 01:20:56.005"></status>
</kw>
<msg timestamp="20201102 01:20:59.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:20:59.259" starttime="20201102 01:20:56.005"></status>
</kw>
<status status="PASS" endtime="20201102 01:20:59.259" starttime="20201102 01:20:56.005"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 01:20:59.259" critical="yes" starttime="20201102 01:20:53.023"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201102 01:20:59.260" starttime="20201102 01:20:18.081"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:22:43.065" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:22:43.065" starttime="20201102 01:22:43.065"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:22:43.066" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:22:43.066" starttime="20201102 01:22:43.066"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:43.066" starttime="20201102 01:22:43.064"></status>
</kw>
<msg timestamp="20201102 01:22:43.066" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:22:43.066" starttime="20201102 01:22:43.064"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:22:43.067" starttime="20201102 01:22:43.067"></status>
</kw>
<msg timestamp="20201102 01:22:43.067" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 01:22:43.067" starttime="20201102 01:22:43.066"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:43.067" starttime="20201102 01:22:43.063"></status>
</kw>
<msg timestamp="20201102 01:22:43.067" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:22:43.068" starttime="20201102 01:22:43.063"></status>
</kw>
<msg timestamp="20201102 01:22:43.068" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:22:43.068" starttime="20201102 01:22:43.061"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:22:43.068" level="INFO">${random} = 87922</msg>
<status status="PASS" endtime="20201102 01:22:43.068" starttime="20201102 01:22:43.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:22:43.075" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-87922 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:22:46.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:22:46.585" level="INFO">${output} = 2020-11-02 01:22:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:22:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201102 01:22:46.586" starttime="20201102 01:22:43.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:22:46.587" level="INFO">2020-11-02 01:22:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:22:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:22:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:22:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:22:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-17382B29F45B-&gt;10888c11-ff38-4026-96e2-dacff5a4c73d
2020-11-02 01:22:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201102 01:22:46.587" starttime="20201102 01:22:46.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:22:46.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:22:46.587" starttime="20201102 01:22:46.587"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:46.588" starttime="20201102 01:22:43.069"></status>
</kw>
<msg timestamp="20201102 01:22:46.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:22:46.588" starttime="20201102 01:22:43.069"></status>
</kw>
<msg timestamp="20201102 01:22:46.588" level="INFO">${result} = 2020-11-02 01:22:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:22:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201102 01:22:46.588" starttime="20201102 01:22:43.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:22:46.592" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:22:48.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:22:48.514" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 01:21 ofs://om/volume1/bucket1/ozone-42173
-rw-...</msg>
<status status="PASS" endtime="20201102 01:22:48.515" starttime="20201102 01:22:46.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:22:48.516" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 01:21 ofs://om/volume1/bucket1/ozone-42173
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 01:22 ofs://om/volume1/bucket1/ozone-87922
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:20 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:22 ofs://om/volume1/bucket1/wordcount-79.txt</msg>
<status status="PASS" endtime="20201102 01:22:48.516" starttime="20201102 01:22:48.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:22:48.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:22:48.517" starttime="20201102 01:22:48.516"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:48.517" starttime="20201102 01:22:46.589"></status>
</kw>
<msg timestamp="20201102 01:22:48.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:22:48.517" starttime="20201102 01:22:46.589"></status>
</kw>
<msg timestamp="20201102 01:22:48.518" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 01:21 ofs://om/volume1/bucket1/ozone-42173
-rw-...</msg>
<status status="PASS" endtime="20201102 01:22:48.518" starttime="20201102 01:22:46.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:22:48.518" starttime="20201102 01:22:48.518"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:22:48.519" critical="yes" starttime="20201102 01:22:43.061"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 01:22:48.520" starttime="20201102 01:22:43.009"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:21:04.140" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:21:04.140" starttime="20201102 01:21:04.139"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:21:04.140" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:21:04.140" starttime="20201102 01:21:04.140"></status>
</kw>
<status status="PASS" endtime="20201102 01:21:04.140" starttime="20201102 01:21:04.139"></status>
</kw>
<msg timestamp="20201102 01:21:04.141" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:21:04.141" starttime="20201102 01:21:04.139"></status>
</kw>
<status status="PASS" endtime="20201102 01:21:04.141" starttime="20201102 01:21:04.138"></status>
</kw>
<msg timestamp="20201102 01:21:04.141" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:21:04.141" starttime="20201102 01:21:04.138"></status>
</kw>
<msg timestamp="20201102 01:21:04.141" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:21:04.141" starttime="20201102 01:21:04.136"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:21:04.141" level="INFO">${random} = 42173</msg>
<status status="PASS" endtime="20201102 01:21:04.142" starttime="20201102 01:21:04.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:21:04.148" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-42173 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:21:07.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:21:07.982" level="INFO">${output} = 2020-11-02 01:21:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:21:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201102 01:21:07.982" starttime="20201102 01:21:04.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:21:07.983" level="INFO">2020-11-02 01:21:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:21:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:21:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:21:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:21:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BF85CBA42C23-&gt;10888c11-ff38-4026-96e2-dacff5a4c73d
2020-11-02 01:21:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201102 01:21:07.983" starttime="20201102 01:21:07.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:21:07.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:21:07.984" starttime="20201102 01:21:07.983"></status>
</kw>
<status status="PASS" endtime="20201102 01:21:07.984" starttime="20201102 01:21:04.142"></status>
</kw>
<msg timestamp="20201102 01:21:07.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:21:07.984" starttime="20201102 01:21:04.142"></status>
</kw>
<msg timestamp="20201102 01:21:07.984" level="INFO">${result} = 2020-11-02 01:21:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:21:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201102 01:21:07.984" starttime="20201102 01:21:04.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:21:07.989" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:21:09.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:21:09.754" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 01:21 o3fs://bucket1.volume1.om/ozone-42173
dr...</msg>
<status status="PASS" endtime="20201102 01:21:09.755" starttime="20201102 01:21:07.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:21:09.756" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 01:21 o3fs://bucket1.volume1.om/ozone-42173
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:20 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 01:21:09.756" starttime="20201102 01:21:09.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:21:09.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:21:09.757" starttime="20201102 01:21:09.756"></status>
</kw>
<status status="PASS" endtime="20201102 01:21:09.757" starttime="20201102 01:21:07.985"></status>
</kw>
<msg timestamp="20201102 01:21:09.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:21:09.758" starttime="20201102 01:21:07.985"></status>
</kw>
<msg timestamp="20201102 01:21:09.758" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 01:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 01:21 o3fs://bucket1.volume1.om/ozone-42173
dr...</msg>
<status status="PASS" endtime="20201102 01:21:09.758" starttime="20201102 01:21:07.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:21:09.758" starttime="20201102 01:21:09.758"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 01:21:09.759" critical="yes" starttime="20201102 01:21:04.135"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 01:21:09.759" starttime="20201102 01:21:04.087"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:22:53.328" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:22:53.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:22:53.332" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:22:53.332" starttime="20201102 01:22:53.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:22:53.333" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:22:53.333" starttime="20201102 01:22:53.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:22:53.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:22:53.334" starttime="20201102 01:22:53.333"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:53.334" starttime="20201102 01:22:53.322"></status>
</kw>
<msg timestamp="20201102 01:22:53.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:22:53.334" starttime="20201102 01:22:53.322"></status>
</kw>
<msg timestamp="20201102 01:22:53.335" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:22:53.335" starttime="20201102 01:22:53.322"></status>
</kw>
<msg timestamp="20201102 01:22:53.335" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:22:53.335" starttime="20201102 01:22:53.321"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:22:53.338" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:22:53.338" starttime="20201102 01:22:53.338"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:22:53.339" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:22:53.339" starttime="20201102 01:22:53.339"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:53.339" starttime="20201102 01:22:53.338"></status>
</kw>
<msg timestamp="20201102 01:22:53.339" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:22:53.339" starttime="20201102 01:22:53.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:22:53.340" starttime="20201102 01:22:53.340"></status>
</kw>
<msg timestamp="20201102 01:22:53.340" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 01:22:53.340" starttime="20201102 01:22:53.340"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:53.341" starttime="20201102 01:22:53.336"></status>
</kw>
<msg timestamp="20201102 01:22:53.341" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:22:53.341" starttime="20201102 01:22:53.336"></status>
</kw>
<msg timestamp="20201102 01:22:53.341" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:22:53.341" starttime="20201102 01:22:53.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:22:53.345" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:23:31.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:23:31.535" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:22:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:22:55 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201102 01:23:31.536" starttime="20201102 01:22:53.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:23:31.537" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:22:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:22:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:22:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:22:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:22:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C9D6CCA857FB-&gt;10888c11-ff38-4026-96e2-dacff5a4c73d
2020-11-02 01:22:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 01:22:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-02 01:22:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 01:22:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 01:22:59 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 01:23:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604279993847_0003
2020-11-02 01:23:00 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 01:23:00 INFO  Configuration:2795 - resource-types.xml not found
2020-11-02 01:23:00 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-02 01:23:00 INFO  YarnClientImpl:329 - Submitted application application_1604279993847_0003
2020-11-02 01:23:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604279993847_0003/
2020-11-02 01:23:00 INFO  Job:1619 - Running job: job_1604279993847_0003
2020-11-02 01:23:08 INFO  Job:1640 - Job job_1604279993847_0003 running in uber mode : false
2020-11-02 01:23:08 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 01:23:14 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 01:23:20 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 01:23:25 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 01:23:30 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 01:23:30 INFO  Job:1658 - Job job_1604279993847_0003 completed successfully
2020-11-02 01:23:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40660
		Total time spent by all reduces in occupied slots (ms)=15192
		Total time spent by all map tasks (ms)=10165
		Total time spent by all reduce tasks (ms)=3798
		Total vcore-milliseconds taken by all map tasks=10165
		Total vcore-milliseconds taken by all reduce tasks=3798
		Total megabyte-milliseconds taken by all map tasks=41635840
		Total megabyte-milliseconds taken by all reduce tasks=15556608
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=645
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1494646784
		Virtual memory (bytes) snapshot=16088207360
		Total committed heap usage (bytes)=1701314560
		Peak Map Physical memory (bytes)=375115776
		Peak Map Virtual memory (bytes)=4017741824
		Peak Reduce Physical memory (bytes)=382087168
		Peak Reduce Virtual memory (bytes)=4037279744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.882 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201102 01:23:31.537" starttime="20201102 01:23:31.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:23:31.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:23:31.538" starttime="20201102 01:23:31.537"></status>
</kw>
<status status="PASS" endtime="20201102 01:23:31.538" starttime="20201102 01:22:53.342"></status>
</kw>
<msg timestamp="20201102 01:23:31.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:23:31.538" starttime="20201102 01:22:53.341"></status>
</kw>
<msg timestamp="20201102 01:23:31.538" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:22:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:22:55 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201102 01:23:31.538" starttime="20201102 01:22:53.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:23:31.539" starttime="20201102 01:23:31.539"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:23:31.539" critical="yes" starttime="20201102 01:22:53.321"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:23:31.546" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:23:31.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:23:31.550" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:23:31.550" starttime="20201102 01:23:31.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:23:31.551" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:23:31.551" starttime="20201102 01:23:31.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:23:31.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:23:31.552" starttime="20201102 01:23:31.551"></status>
</kw>
<status status="PASS" endtime="20201102 01:23:31.552" starttime="20201102 01:23:31.542"></status>
</kw>
<msg timestamp="20201102 01:23:31.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:23:31.552" starttime="20201102 01:23:31.542"></status>
</kw>
<msg timestamp="20201102 01:23:31.552" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:23:31.552" starttime="20201102 01:23:31.541"></status>
</kw>
<msg timestamp="20201102 01:23:31.552" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:23:31.553" starttime="20201102 01:23:31.541"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:23:31.553" level="INFO">${random} = 08</msg>
<status status="PASS" endtime="20201102 01:23:31.553" starttime="20201102 01:23:31.553"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:23:31.557" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:23:31.557" starttime="20201102 01:23:31.556"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:23:31.557" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:23:31.557" starttime="20201102 01:23:31.557"></status>
</kw>
<status status="PASS" endtime="20201102 01:23:31.557" starttime="20201102 01:23:31.556"></status>
</kw>
<msg timestamp="20201102 01:23:31.557" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:23:31.557" starttime="20201102 01:23:31.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 01:23:31.558" starttime="20201102 01:23:31.558"></status>
</kw>
<msg timestamp="20201102 01:23:31.558" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 01:23:31.558" starttime="20201102 01:23:31.558"></status>
</kw>
<status status="PASS" endtime="20201102 01:23:31.559" starttime="20201102 01:23:31.555"></status>
</kw>
<msg timestamp="20201102 01:23:31.559" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:23:31.559" starttime="20201102 01:23:31.554"></status>
</kw>
<msg timestamp="20201102 01:23:31.559" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 01:23:31.559" starttime="20201102 01:23:31.553"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:23:31.562" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:23:31.562" starttime="20201102 01:23:31.561"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:23:31.562" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:23:31.562" starttime="20201102 01:23:31.562"></status>
</kw>
<status status="PASS" endtime="20201102 01:23:31.562" starttime="20201102 01:23:31.561"></status>
</kw>
<msg timestamp="20201102 01:23:31.562" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:23:31.562" starttime="20201102 01:23:31.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:23:31.564" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201102 01:23:31.564" starttime="20201102 01:23:31.563"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:23:31.564" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201102 01:23:31.564" starttime="20201102 01:23:31.564"></status>
</kw>
<status status="PASS" endtime="20201102 01:23:31.564" starttime="20201102 01:23:31.563"></status>
</kw>
<msg timestamp="20201102 01:23:31.565" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201102 01:23:31.565" starttime="20201102 01:23:31.562"></status>
</kw>
<status status="PASS" endtime="20201102 01:23:31.565" starttime="20201102 01:23:31.560"></status>
</kw>
<msg timestamp="20201102 01:23:31.565" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 01:23:31.565" starttime="20201102 01:23:31.559"></status>
</kw>
<msg timestamp="20201102 01:23:31.565" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 01:23:31.565" starttime="20201102 01:23:31.559"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 01:23:31.568" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 01:23:31.568" starttime="20201102 01:23:31.567"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:23:31.568" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 01:23:31.569" starttime="20201102 01:23:31.568"></status>
</kw>
<status status="PASS" endtime="20201102 01:23:31.569" starttime="20201102 01:23:31.567"></status>
</kw>
<msg timestamp="20201102 01:23:31.569" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 01:23:31.569" starttime="20201102 01:23:31.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:23:31.570" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201102 01:23:31.570" starttime="20201102 01:23:31.570"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:23:31.571" level="INFO">${result} = /wordcount-08.txt</msg>
<status status="PASS" endtime="20201102 01:23:31.571" starttime="20201102 01:23:31.570"></status>
</kw>
<status status="PASS" endtime="20201102 01:23:31.571" starttime="20201102 01:23:31.569"></status>
</kw>
<msg timestamp="20201102 01:23:31.571" level="INFO">${path_with_leading} = /wordcount-08.txt</msg>
<status status="PASS" endtime="20201102 01:23:31.571" starttime="20201102 01:23:31.569"></status>
</kw>
<status status="PASS" endtime="20201102 01:23:31.571" starttime="20201102 01:23:31.566"></status>
</kw>
<msg timestamp="20201102 01:23:31.571" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201102 01:23:31.571" starttime="20201102 01:23:31.566"></status>
</kw>
<msg timestamp="20201102 01:23:31.571" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201102 01:23:31.571" starttime="20201102 01:23:31.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:23:31.576" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-08.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:24:07.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:24:07.868" level="INFO">${output} = 2020-11-02 01:23:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-02 01:23:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201102 01:24:07.868" starttime="20201102 01:23:31.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:24:07.869" level="INFO">2020-11-02 01:23:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-02 01:23:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 01:23:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:23:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:23:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:23:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:23:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DAB2DAE7A56D-&gt;10888c11-ff38-4026-96e2-dacff5a4c73d
2020-11-02 01:23:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:23:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 01:23:35 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 01:23:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604279993847_0004
2020-11-02 01:23:35 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 01:23:35 INFO  Configuration:2795 - resource-types.xml not found
2020-11-02 01:23:35 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-02 01:23:35 INFO  YarnClientImpl:329 - Submitted application application_1604279993847_0004
2020-11-02 01:23:35 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604279993847_0004/
2020-11-02 01:23:35 INFO  Job:1619 - Running job: job_1604279993847_0004
2020-11-02 01:23:44 INFO  Job:1640 - Job job_1604279993847_0004 running in uber mode : false
2020-11-02 01:23:44 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 01:23:51 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 01:23:57 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 01:24:02 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 01:24:06 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 01:24:07 INFO  Job:1658 - Job job_1604279993847_0004 completed successfully
2020-11-02 01:24:07 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41192
		Total time spent by all reduces in occupied slots (ms)=15340
		Total time spent by all map tasks (ms)=10298
		Total time spent by all reduce tasks (ms)=3835
		Total vcore-milliseconds taken by all map tasks=10298
		Total vcore-milliseconds taken by all reduce tasks=3835
		Total megabyte-milliseconds taken by all map tasks=42180608
		Total megabyte-milliseconds taken by all reduce tasks=15708160
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=716
		CPU time spent (ms)=7910
		Physical memory (bytes) snapshot=1476042752
		Virtual memory (bytes) snapshot=16092962816
		Total committed heap usage (bytes)=1677197312
		Peak Map Physical memory (bytes)=370307072
		Peak Map Virtual memory (bytes)=4019884032
		Peak Reduce Physical memory (bytes)=371744768
		Peak Reduce Virtual memory (bytes)=4038840320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201102 01:24:07.869" starttime="20201102 01:24:07.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:24:07.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:24:07.870" starttime="20201102 01:24:07.869"></status>
</kw>
<status status="PASS" endtime="20201102 01:24:07.870" starttime="20201102 01:23:31.572"></status>
</kw>
<msg timestamp="20201102 01:24:07.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:24:07.871" starttime="20201102 01:23:31.572"></status>
</kw>
<msg timestamp="20201102 01:24:07.871" level="INFO">${output} = 2020-11-02 01:23:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-02 01:23:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201102 01:24:07.871" starttime="20201102 01:23:31.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 01:24:07.872" starttime="20201102 01:24:07.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:24:07.872" starttime="20201102 01:24:07.872"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:24:07.872" critical="yes" starttime="20201102 01:23:31.540"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 01:24:07.873" starttime="20201102 01:22:53.265"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:21:14.856" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:21:14.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:21:14.860" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:21:14.860" starttime="20201102 01:21:14.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:21:14.861" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:21:14.861" starttime="20201102 01:21:14.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:21:14.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:21:14.861" starttime="20201102 01:21:14.861"></status>
</kw>
<status status="PASS" endtime="20201102 01:21:14.862" starttime="20201102 01:21:14.850"></status>
</kw>
<msg timestamp="20201102 01:21:14.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:21:14.862" starttime="20201102 01:21:14.850"></status>
</kw>
<msg timestamp="20201102 01:21:14.862" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:21:14.862" starttime="20201102 01:21:14.850"></status>
</kw>
<msg timestamp="20201102 01:21:14.862" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:21:14.862" starttime="20201102 01:21:14.849"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:21:14.865" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:21:14.865" starttime="20201102 01:21:14.865"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:21:14.866" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:21:14.866" starttime="20201102 01:21:14.865"></status>
</kw>
<status status="PASS" endtime="20201102 01:21:14.866" starttime="20201102 01:21:14.864"></status>
</kw>
<msg timestamp="20201102 01:21:14.866" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:21:14.866" starttime="20201102 01:21:14.864"></status>
</kw>
<status status="PASS" endtime="20201102 01:21:14.866" starttime="20201102 01:21:14.863"></status>
</kw>
<msg timestamp="20201102 01:21:14.867" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:21:14.867" starttime="20201102 01:21:14.863"></status>
</kw>
<msg timestamp="20201102 01:21:14.867" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:21:14.867" starttime="20201102 01:21:14.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:21:14.872" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:22:01.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:22:01.737" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:21:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:21:17 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201102 01:22:01.737" starttime="20201102 01:21:14.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:22:01.738" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:21:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:21:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:21:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:21:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:21:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-418BD51641FC-&gt;10888c11-ff38-4026-96e2-dacff5a4c73d
2020-11-02 01:21:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 01:21:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-02 01:21:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 01:21:21 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 01:21:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604279993847_0001
2020-11-02 01:21:21 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 01:21:22 INFO  Configuration:2795 - resource-types.xml not found
2020-11-02 01:21:22 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-02 01:21:22 INFO  YarnClientImpl:329 - Submitted application application_1604279993847_0001
2020-11-02 01:21:22 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604279993847_0001/
2020-11-02 01:21:22 INFO  Job:1619 - Running job: job_1604279993847_0001
2020-11-02 01:21:33 INFO  Job:1640 - Job job_1604279993847_0001 running in uber mode : false
2020-11-02 01:21:33 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 01:21:40 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 01:21:45 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 01:21:50 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 01:21:57 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 01:22:01 INFO  Job:1658 - Job job_1604279993847_0001 completed successfully
2020-11-02 01:22:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40824
		Total time spent by all reduces in occupied slots (ms)=25736
		Total time spent by all map tasks (ms)=10206
		Total time spent by all reduce tasks (ms)=6434
		Total vcore-milliseconds taken by all map tasks=10206
		Total vcore-milliseconds taken by all reduce tasks=6434
		Total megabyte-milliseconds taken by all map tasks=41803776
		Total megabyte-milliseconds taken by all reduce tasks=26353664
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=666
		CPU time spent (ms)=7330
		Physical memory (bytes) snapshot=1486884864
		Virtual memory (bytes) snapshot=16080773120
		Total committed heap usage (bytes)=1702887424
		Peak Map Physical memory (bytes)=380579840
		Peak Map Virtual memory (bytes)=4019503104
		Peak Reduce Physical memory (bytes)=377167872
		Peak Reduce Virtual memory (bytes)=4038807552
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.256 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201102 01:22:01.738" starttime="20201102 01:22:01.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:22:01.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:22:01.739" starttime="20201102 01:22:01.738"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:01.739" starttime="20201102 01:21:14.868"></status>
</kw>
<msg timestamp="20201102 01:22:01.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:22:01.739" starttime="20201102 01:21:14.867"></status>
</kw>
<msg timestamp="20201102 01:22:01.740" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 01:21:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:21:17 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201102 01:22:01.740" starttime="20201102 01:21:14.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:22:01.741" starttime="20201102 01:22:01.740"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:22:01.741" critical="yes" starttime="20201102 01:21:14.848"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:22:01.745" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:22:01.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:22:01.754" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:22:01.754" starttime="20201102 01:22:01.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:22:01.755" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:22:01.755" starttime="20201102 01:22:01.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:22:01.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:22:01.756" starttime="20201102 01:22:01.755"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:01.756" starttime="20201102 01:22:01.743"></status>
</kw>
<msg timestamp="20201102 01:22:01.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:22:01.756" starttime="20201102 01:22:01.742"></status>
</kw>
<msg timestamp="20201102 01:22:01.757" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:22:01.757" starttime="20201102 01:22:01.742"></status>
</kw>
<msg timestamp="20201102 01:22:01.757" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 01:22:01.757" starttime="20201102 01:22:01.742"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 01:22:01.757" level="INFO">${random} = 79</msg>
<status status="PASS" endtime="20201102 01:22:01.757" starttime="20201102 01:22:01.757"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:22:01.761" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:22:01.761" starttime="20201102 01:22:01.761"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:22:01.762" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:22:01.762" starttime="20201102 01:22:01.761"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:01.762" starttime="20201102 01:22:01.760"></status>
</kw>
<msg timestamp="20201102 01:22:01.762" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:22:01.762" starttime="20201102 01:22:01.760"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:01.762" starttime="20201102 01:22:01.759"></status>
</kw>
<msg timestamp="20201102 01:22:01.762" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:22:01.762" starttime="20201102 01:22:01.758"></status>
</kw>
<msg timestamp="20201102 01:22:01.763" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 01:22:01.763" starttime="20201102 01:22:01.758"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:22:01.765" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:22:01.765" starttime="20201102 01:22:01.765"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:22:01.766" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:22:01.766" starttime="20201102 01:22:01.766"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:01.766" starttime="20201102 01:22:01.765"></status>
</kw>
<msg timestamp="20201102 01:22:01.766" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:22:01.766" starttime="20201102 01:22:01.764"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:01.766" starttime="20201102 01:22:01.764"></status>
</kw>
<msg timestamp="20201102 01:22:01.766" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 01:22:01.766" starttime="20201102 01:22:01.763"></status>
</kw>
<msg timestamp="20201102 01:22:01.767" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 01:22:01.767" starttime="20201102 01:22:01.763"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 01:22:01.769" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 01:22:01.769" starttime="20201102 01:22:01.769"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 01:22:01.770" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 01:22:01.770" starttime="20201102 01:22:01.769"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:01.770" starttime="20201102 01:22:01.769"></status>
</kw>
<msg timestamp="20201102 01:22:01.770" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 01:22:01.770" starttime="20201102 01:22:01.768"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:01.770" starttime="20201102 01:22:01.768"></status>
</kw>
<msg timestamp="20201102 01:22:01.770" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-79.txt</msg>
<status status="PASS" endtime="20201102 01:22:01.770" starttime="20201102 01:22:01.767"></status>
</kw>
<msg timestamp="20201102 01:22:01.770" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-79.txt</msg>
<status status="PASS" endtime="20201102 01:22:01.771" starttime="20201102 01:22:01.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:22:01.774" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-79.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:22:38.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:22:38.282" level="INFO">${output} = 2020-11-02 01:22:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-02 01:22:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201102 01:22:38.282" starttime="20201102 01:22:01.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:22:38.283" level="INFO">2020-11-02 01:22:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-02 01:22:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 01:22:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 01:22:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 01:22:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 01:22:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 01:22:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5FE12E41A2F0-&gt;10888c11-ff38-4026-96e2-dacff5a4c73d
2020-11-02 01:22:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 01:22:05 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 01:22:05 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 01:22:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604279993847_0002
2020-11-02 01:22:05 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 01:22:06 INFO  Configuration:2795 - resource-types.xml not found
2020-11-02 01:22:06 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-02 01:22:06 INFO  YarnClientImpl:329 - Submitted application application_1604279993847_0002
2020-11-02 01:22:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604279993847_0002/
2020-11-02 01:22:06 INFO  Job:1619 - Running job: job_1604279993847_0002
2020-11-02 01:22:14 INFO  Job:1640 - Job job_1604279993847_0002 running in uber mode : false
2020-11-02 01:22:14 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 01:22:20 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 01:22:26 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 01:22:32 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 01:22:36 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 01:22:37 INFO  Job:1658 - Job job_1604279993847_0002 completed successfully
2020-11-02 01:22:37 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41072
		Total time spent by all reduces in occupied slots (ms)=15172
		Total time spent by all map tasks (ms)=10268
		Total time spent by all reduce tasks (ms)=3793
		Total vcore-milliseconds taken by all map tasks=10268
		Total vcore-milliseconds taken by all reduce tasks=3793
		Total megabyte-milliseconds taken by all map tasks=42057728
		Total megabyte-milliseconds taken by all reduce tasks=15536128
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=679
		CPU time spent (ms)=7450
		Physical memory (bytes) snapshot=1455202304
		Virtual memory (bytes) snapshot=16076439552
		Total committed heap usage (bytes)=1672478720
		Peak Map Physical memory (bytes)=369946624
		Peak Map Virtual memory (bytes)=4017831936
		Peak Reduce Physical memory (bytes)=369299456
		Peak Reduce Virtual memory (bytes)=4038660096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201102 01:22:38.284" starttime="20201102 01:22:38.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:22:38.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:22:38.284" starttime="20201102 01:22:38.284"></status>
</kw>
<status status="PASS" endtime="20201102 01:22:38.285" starttime="20201102 01:22:01.772"></status>
</kw>
<msg timestamp="20201102 01:22:38.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:22:38.285" starttime="20201102 01:22:01.771"></status>
</kw>
<msg timestamp="20201102 01:22:38.285" level="INFO">${output} = 2020-11-02 01:22:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-02 01:22:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201102 01:22:38.285" starttime="20201102 01:22:01.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 01:22:38.286" starttime="20201102 01:22:38.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 01:22:38.286" starttime="20201102 01:22:38.286"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 01:22:38.286" critical="yes" starttime="20201102 01:22:01.741"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 01:22:38.288" starttime="20201102 01:21:14.783"></status>
</suite>
<status status="PASS" elapsedtime="210475" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="602807" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
