<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201102 01:05:50.835" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:05:39.680" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:05:39.681" level="INFO">${rc} = 1</msg>
<msg timestamp="20201102 01:05:39.681" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:05:39.681" starttime="20201102 01:05:39.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:05:39.682" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:05:39.682" starttime="20201102 01:05:39.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:05:39.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201102 01:05:39.684" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201102 01:05:39.684" starttime="20201102 01:05:39.683"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:39.684" starttime="20201102 01:05:39.674"></status>
</kw>
<msg timestamp="20201102 01:05:39.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201102 01:05:39.684" starttime="20201102 01:05:39.674"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:39.684" starttime="20201102 01:05:39.674"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:39.685" starttime="20201102 01:05:39.674"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:05:40.691" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:05:40.693" level="INFO">${rc} = 1</msg>
<msg timestamp="20201102 01:05:40.693" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:05:40.693" starttime="20201102 01:05:40.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:05:40.694" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:05:40.694" starttime="20201102 01:05:40.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:05:40.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201102 01:05:40.695" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201102 01:05:40.695" starttime="20201102 01:05:40.694"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:40.695" starttime="20201102 01:05:40.687"></status>
</kw>
<msg timestamp="20201102 01:05:40.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201102 01:05:40.695" starttime="20201102 01:05:40.687"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:40.695" starttime="20201102 01:05:40.686"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:40.695" starttime="20201102 01:05:40.685"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:05:41.700" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:05:41.702" level="INFO">${rc} = 1</msg>
<msg timestamp="20201102 01:05:41.702" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:05:41.703" starttime="20201102 01:05:41.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:05:41.703" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:05:41.704" starttime="20201102 01:05:41.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:05:41.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201102 01:05:41.711" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201102 01:05:41.711" starttime="20201102 01:05:41.704"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:41.711" starttime="20201102 01:05:41.697"></status>
</kw>
<msg timestamp="20201102 01:05:41.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201102 01:05:41.712" starttime="20201102 01:05:41.697"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:41.712" starttime="20201102 01:05:41.696"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:41.712" starttime="20201102 01:05:41.696"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:05:42.717" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:05:42.719" level="INFO">${rc} = 1</msg>
<msg timestamp="20201102 01:05:42.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:05:42.719" starttime="20201102 01:05:42.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:05:42.720" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:05:42.720" starttime="20201102 01:05:42.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:05:42.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201102 01:05:42.721" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201102 01:05:42.721" starttime="20201102 01:05:42.720"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:42.721" starttime="20201102 01:05:42.714"></status>
</kw>
<msg timestamp="20201102 01:05:42.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201102 01:05:42.721" starttime="20201102 01:05:42.714"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:42.722" starttime="20201102 01:05:42.713"></status>
</kw>
<status status="FAIL" endtime="20201102 01:05:42.722" starttime="20201102 01:05:42.712"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:05:43.727" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:05:43.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:05:43.732" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 01:05:43.732" starttime="20201102 01:05:43.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:05:43.733" level="INFO"></msg>
<status status="PASS" endtime="20201102 01:05:43.733" starttime="20201102 01:05:43.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:05:43.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:05:43.734" starttime="20201102 01:05:43.734"></status>
</kw>
<status status="PASS" endtime="20201102 01:05:43.734" starttime="20201102 01:05:43.724"></status>
</kw>
<msg timestamp="20201102 01:05:43.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:05:43.735" starttime="20201102 01:05:43.724"></status>
</kw>
<status status="PASS" endtime="20201102 01:05:43.735" starttime="20201102 01:05:43.724"></status>
</kw>
<status status="PASS" endtime="20201102 01:05:43.735" starttime="20201102 01:05:43.723"></status>
</kw>
<status status="PASS" endtime="20201102 01:05:43.735" starttime="20201102 01:05:39.673"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201102 01:05:43.735" critical="yes" starttime="20201102 01:05:39.672"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 01:05:43.743" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 01:05:44.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 01:05:44.097" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201102 01:05:44.097" starttime="20201102 01:05:43.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 01:05:44.098" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201102 01:05:44.098" starttime="20201102 01:05:44.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 01:05:44.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 01:05:44.099" starttime="20201102 01:05:44.098"></status>
</kw>
<status status="PASS" endtime="20201102 01:05:44.099" starttime="20201102 01:05:43.741"></status>
</kw>
<msg timestamp="20201102 01:05:44.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 01:05:44.099" starttime="20201102 01:05:43.740"></status>
</kw>
<msg timestamp="20201102 01:05:44.100" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201102 01:05:44.100" starttime="20201102 01:05:43.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201102 01:05:44.100" starttime="20201102 01:05:44.100"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201102 01:05:44.100" critical="yes" starttime="20201102 01:05:43.739"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201102 01:05:44.102" starttime="20201102 01:05:39.623"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
