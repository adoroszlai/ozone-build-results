<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201102 09:57:12.431" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:53:05.260" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:53:16.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:53:16.025" level="INFO">${output} = 2020-11-02 09:53:07,042 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:07,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 09:53:16.025" starttime="20201102 09:53:05.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:53:16.026" level="INFO">2020-11-02 09:53:07,042 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:07,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:53:07,212 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-02 09:53:09,840 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-02 09:53:09,841 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-02 09:53:09,841 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-02 09:53:09,841 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-02 09:53:09,841 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-02 09:53:09,841 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-02 09:53:09,841 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-02 09:53:09,849 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-02 09:53:09,860 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:09,917 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-85361, with testuser/scm@EXAMPLE.COM as owner.
2020-11-02 09:53:10,591 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85361/bucket-0-76695, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 09:53:10,880 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:11,880 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:12,892 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:13,282 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-02 09:53:13,892 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,638
Average Time spent in bucket creation: 00:00:00,220
Average Time spent in key creation: 00:00:01,220
Average Time spent in key write: 00:00:01,751
Total bytes written: 10240
Total Execution time: 00:00:08,130
***************************************************</msg>
<status status="PASS" endtime="20201102 09:53:16.026" starttime="20201102 09:53:16.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:53:16.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:53:16.027" starttime="20201102 09:53:16.026"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:16.027" starttime="20201102 09:53:05.255"></status>
</kw>
<msg timestamp="20201102 09:53:16.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:53:16.028" starttime="20201102 09:53:05.254"></status>
</kw>
<msg timestamp="20201102 09:53:16.028" level="INFO">${result} = 2020-11-02 09:53:07,042 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:07,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 09:53:16.028" starttime="20201102 09:53:05.253"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201102 09:53:16.029" starttime="20201102 09:53:16.029"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:16.029" starttime="20201102 09:53:16.028"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 09:53:16.029" critical="yes" starttime="20201102 09:53:05.253"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:53:16.034" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:53:24.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:53:24.642" level="INFO">${output} = 2020-11-02 09:53:17,724 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:17,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 09:53:24.642" starttime="20201102 09:53:16.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:53:24.644" level="INFO">2020-11-02 09:53:17,724 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:17,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:53:17,947 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-02 09:53:18,090 [main] INFO freon.BaseFreonGenerator: Executing test with prefix uodgwxziss
2020-11-02 09:53:18,101 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-02 09:53:19,104 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:19,673 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-02 09:53:19,743 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-02 09:53:20,104 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:20,283 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-02 09:53:20,668 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:53:20,668 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E4DA0B0098B6-&gt;7bd44c93-f05e-4003-9460-cfa6e3ebb1cf
2020-11-02 09:53:20,669 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 09:53:21,105 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:22,105 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:23,106 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:24,106 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-02 09:53:24,254 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3694.110932, max=3694.110932, mean=3694.110932, stddev=0.0, median=3694.110932, p75=3694.110932, p95=3694.110932, p98=3694.110932, p99=3694.110932, p999=3694.110932, mean_rate=0.22533284150054197, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-02 09:53:24,255 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-11-02 09:53:24,260 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-02 09:53:24,260 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201102 09:53:24.644" starttime="20201102 09:53:24.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:53:24.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:53:24.645" starttime="20201102 09:53:24.644"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:24.645" starttime="20201102 09:53:16.032"></status>
</kw>
<msg timestamp="20201102 09:53:24.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:53:24.645" starttime="20201102 09:53:16.031"></status>
</kw>
<msg timestamp="20201102 09:53:24.646" level="INFO">${result} = 2020-11-02 09:53:17,724 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:17,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 09:53:24.646" starttime="20201102 09:53:16.031"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201102 09:53:24.647" starttime="20201102 09:53:24.646"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:24.647" starttime="20201102 09:53:24.646"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 09:53:24.647" critical="yes" starttime="20201102 09:53:16.030"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:53:24.652" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:53:29.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:53:29.244" level="INFO">${output} = 2020-11-02 09:53:26,360 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:26,524 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 09:53:29.244" starttime="20201102 09:53:24.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:53:29.246" level="INFO">2020-11-02 09:53:26,360 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:26,524 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:53:26,524 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-02 09:53:26,691 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s5tn19gml1
2020-11-02 09:53:26,706 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-02 09:53:27,720 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:28,721 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-02 09:53:29,190 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=183.551775, max=183.551775, mean=183.551775, stddev=0.0, median=183.551775, p75=183.551775, p95=183.551775, p98=183.551775, p99=183.551775, p999=183.551775, mean_rate=0.8858452388238985, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-02 09:53:29,192 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-11-02 09:53:29,199 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-02 09:53:29,199 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201102 09:53:29.246" starttime="20201102 09:53:29.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:53:29.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:53:29.246" starttime="20201102 09:53:29.246"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:29.247" starttime="20201102 09:53:24.649"></status>
</kw>
<msg timestamp="20201102 09:53:29.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:53:29.247" starttime="20201102 09:53:24.649"></status>
</kw>
<msg timestamp="20201102 09:53:29.247" level="INFO">${result} = 2020-11-02 09:53:26,360 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:26,524 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 09:53:29.247" starttime="20201102 09:53:24.648"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201102 09:53:29.248" starttime="20201102 09:53:29.248"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:29.248" starttime="20201102 09:53:29.248"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 09:53:29.249" critical="yes" starttime="20201102 09:53:24.647"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:53:29.254" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:53:33.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:53:33.952" level="INFO">${output} = 2020-11-02 09:53:30,990 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:31,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 09:53:33.952" starttime="20201102 09:53:29.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:53:33.954" level="INFO">2020-11-02 09:53:30,990 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:31,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:53:31,204 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-02 09:53:31,389 [main] INFO freon.BaseFreonGenerator: Executing test with prefix myaw3lnuw7
2020-11-02 09:53:31,409 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-02 09:53:32,412 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-02 09:53:33,413 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-02 09:53:33,853 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=56.990048, max=56.990048, mean=56.990048, stddev=0.0, median=56.990048, p75=56.990048, p95=56.990048, p98=56.990048, p99=56.990048, p999=56.990048, mean_rate=0.8894360952742172, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-02 09:53:33,857 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-11-02 09:53:33,858 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-02 09:53:33,858 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201102 09:53:33.954" starttime="20201102 09:53:33.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:53:33.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:53:33.954" starttime="20201102 09:53:33.954"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:33.955" starttime="20201102 09:53:29.251"></status>
</kw>
<msg timestamp="20201102 09:53:33.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:53:33.955" starttime="20201102 09:53:29.251"></status>
</kw>
<msg timestamp="20201102 09:53:33.955" level="INFO">${result} = 2020-11-02 09:53:30,990 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-02 09:53:31,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201102 09:53:33.955" starttime="20201102 09:53:29.250"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201102 09:53:33.956" starttime="20201102 09:53:33.956"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:33.956" starttime="20201102 09:53:33.955"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 09:53:33.956" critical="yes" starttime="20201102 09:53:29.249"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201102 09:53:33.958" starttime="20201102 09:53:05.226"></status>
</suite>
<status status="PASS" endtime="20201102 09:53:33.961" starttime="20201102 09:53:05.199"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:52:59.555" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:52:59.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:52:59.565" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:52:59.566" starttime="20201102 09:52:59.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:52:59.568" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:52:59.568" starttime="20201102 09:52:59.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:52:59.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:52:59.569" starttime="20201102 09:52:59.569"></status>
</kw>
<status status="PASS" endtime="20201102 09:52:59.569" starttime="20201102 09:52:59.550"></status>
</kw>
<msg timestamp="20201102 09:52:59.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:52:59.570" starttime="20201102 09:52:59.549"></status>
</kw>
<msg timestamp="20201102 09:52:59.570" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:52:59.570" starttime="20201102 09:52:59.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:52:59.570" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:52:59.570" starttime="20201102 09:52:59.570"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:52:59.577" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:52:59.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:52:59.599" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:52:59.599" starttime="20201102 09:52:59.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:52:59.600" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:52:59.600" starttime="20201102 09:52:59.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:52:59.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:52:59.601" starttime="20201102 09:52:59.601"></status>
</kw>
<status status="PASS" endtime="20201102 09:52:59.601" starttime="20201102 09:52:59.572"></status>
</kw>
<msg timestamp="20201102 09:52:59.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:52:59.602" starttime="20201102 09:52:59.572"></status>
</kw>
<status status="PASS" endtime="20201102 09:52:59.602" starttime="20201102 09:52:59.571"></status>
</kw>
<status status="PASS" endtime="20201102 09:52:59.602" starttime="20201102 09:52:59.571"></status>
</kw>
<status status="PASS" endtime="20201102 09:52:59.602" starttime="20201102 09:52:59.547"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:52:59.602" critical="yes" starttime="20201102 09:52:59.545"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201102 09:52:59.603" starttime="20201102 09:52:59.495"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:53:39.760" level="INFO">${random} = 23194</msg>
<status status="PASS" endtime="20201102 09:53:39.760" starttime="20201102 09:53:39.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201102 09:53:39.762" level="INFO">${source} = 23194-source</msg>
<status status="PASS" endtime="20201102 09:53:39.762" starttime="20201102 09:53:39.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201102 09:53:39.763" level="INFO">${target} = 23194-target</msg>
<status status="PASS" endtime="20201102 09:53:39.763" starttime="20201102 09:53:39.762"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:53:39.768" level="INFO">Running command 'ozone sh volume create 23194-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:53:43.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:53:43.939" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:53:43.939" starttime="20201102 09:53:39.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:53:43.940" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:53:43.940" starttime="20201102 09:53:43.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:53:43.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:53:43.941" starttime="20201102 09:53:43.940"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:43.941" starttime="20201102 09:53:39.764"></status>
</kw>
<msg timestamp="20201102 09:53:43.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:53:43.941" starttime="20201102 09:53:39.763"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:43.942" starttime="20201102 09:53:39.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:53:43.945" level="INFO">Running command 'ozone sh volume create 23194-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:53:47.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:53:47.424" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:53:47.424" starttime="20201102 09:53:43.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:53:47.425" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:53:47.425" starttime="20201102 09:53:47.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:53:47.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:53:47.425" starttime="20201102 09:53:47.425"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:47.426" starttime="20201102 09:53:43.942"></status>
</kw>
<msg timestamp="20201102 09:53:47.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:53:47.426" starttime="20201102 09:53:43.942"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:47.426" starttime="20201102 09:53:43.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:53:47.431" level="INFO">Running command 'ozone sh bucket create 23194-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:53:51.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:53:51.179" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:53:51.179" starttime="20201102 09:53:47.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:53:51.181" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:53:51.181" starttime="20201102 09:53:51.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:53:51.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:53:51.181" starttime="20201102 09:53:51.181"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:51.181" starttime="20201102 09:53:47.428"></status>
</kw>
<msg timestamp="20201102 09:53:51.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:53:51.182" starttime="20201102 09:53:47.428"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:51.182" starttime="20201102 09:53:47.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:53:51.186" level="INFO">Running command 'ozone sh key put 23194-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:53:57.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:53:57.068" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:53:57.068" starttime="20201102 09:53:51.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:53:57.070" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:53:57.070" starttime="20201102 09:53:57.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:53:57.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:53:57.070" starttime="20201102 09:53:57.070"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:57.071" starttime="20201102 09:53:51.183"></status>
</kw>
<msg timestamp="20201102 09:53:57.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:53:57.071" starttime="20201102 09:53:51.183"></status>
</kw>
<status status="PASS" endtime="20201102 09:53:57.071" starttime="20201102 09:53:51.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:53:57.076" level="INFO">Running command 'ozone sh bucket create 23194-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:00.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:00.591" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:00.591" starttime="20201102 09:53:57.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:00.592" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:54:00.592" starttime="20201102 09:54:00.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:00.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:00.593" starttime="20201102 09:54:00.592"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:00.593" starttime="20201102 09:53:57.072"></status>
</kw>
<msg timestamp="20201102 09:54:00.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:00.593" starttime="20201102 09:53:57.072"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:00.594" starttime="20201102 09:53:57.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:00.598" level="INFO">Running command 'ozone sh bucket link 23194-source/readable-bucket 23194-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:03.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:03.995" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:03.995" starttime="20201102 09:54:00.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:03.997" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:54:03.997" starttime="20201102 09:54:03.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:03.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:03.997" starttime="20201102 09:54:03.997"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:03.998" starttime="20201102 09:54:00.595"></status>
</kw>
<msg timestamp="20201102 09:54:03.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:03.998" starttime="20201102 09:54:00.594"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:03.998" starttime="20201102 09:54:00.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:04.002" level="INFO">Running command 'ozone sh bucket link 23194-source/readable-bucket 23194-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:07.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:07.649" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:07.649" starttime="20201102 09:54:03.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:07.650" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:54:07.650" starttime="20201102 09:54:07.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:07.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:07.651" starttime="20201102 09:54:07.650"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:07.651" starttime="20201102 09:54:03.999"></status>
</kw>
<msg timestamp="20201102 09:54:07.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:07.651" starttime="20201102 09:54:03.999"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:07.651" starttime="20201102 09:54:03.998"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:07.655" level="INFO">Running command 'ozone sh bucket link 23194-source/unreadable-bucket 23194-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:11.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:11.406" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:11.406" starttime="20201102 09:54:07.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:11.407" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:54:11.407" starttime="20201102 09:54:11.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:11.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:11.408" starttime="20201102 09:54:11.407"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:11.408" starttime="20201102 09:54:07.652"></status>
</kw>
<msg timestamp="20201102 09:54:11.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:11.408" starttime="20201102 09:54:07.652"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:11.409" starttime="20201102 09:54:07.652"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:11.414" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 23194-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:14.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:14.837" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:14.837" starttime="20201102 09:54:11.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:14.838" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 09:54:14.838" starttime="20201102 09:54:14.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:14.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:14.839" starttime="20201102 09:54:14.838"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:14.839" starttime="20201102 09:54:11.410"></status>
</kw>
<msg timestamp="20201102 09:54:14.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:14.839" starttime="20201102 09:54:11.409"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:14.839" starttime="20201102 09:54:11.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:14.844" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 23194-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:18.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:18.212" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:18.213" starttime="20201102 09:54:14.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:18.213" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 09:54:18.214" starttime="20201102 09:54:18.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:18.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:18.214" starttime="20201102 09:54:18.214"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:18.214" starttime="20201102 09:54:14.840"></status>
</kw>
<msg timestamp="20201102 09:54:18.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:18.215" starttime="20201102 09:54:14.840"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:18.215" starttime="20201102 09:54:14.839"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:18.220" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 23194-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:21.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:21.952" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:21.953" starttime="20201102 09:54:18.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:21.954" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 09:54:21.954" starttime="20201102 09:54:21.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:21.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:21.958" starttime="20201102 09:54:21.954"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:21.958" starttime="20201102 09:54:18.216"></status>
</kw>
<msg timestamp="20201102 09:54:21.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:21.958" starttime="20201102 09:54:18.215"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:21.958" starttime="20201102 09:54:18.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:21.974" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 23194-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:25.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:25.366" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:25.366" starttime="20201102 09:54:21.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:25.367" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 09:54:25.367" starttime="20201102 09:54:25.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:25.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:25.368" starttime="20201102 09:54:25.368"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:25.368" starttime="20201102 09:54:21.959"></status>
</kw>
<msg timestamp="20201102 09:54:25.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:25.369" starttime="20201102 09:54:21.959"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:25.369" starttime="20201102 09:54:21.959"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:25.374" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 23194-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:28.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:28.754" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:28.755" starttime="20201102 09:54:25.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:28.755" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 09:54:28.756" starttime="20201102 09:54:28.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:28.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:28.756" starttime="20201102 09:54:28.756"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.756" starttime="20201102 09:54:25.370"></status>
</kw>
<msg timestamp="20201102 09:54:28.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:28.757" starttime="20201102 09:54:25.369"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.757" starttime="20201102 09:54:25.369"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.757" starttime="20201102 09:53:47.427"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.757" starttime="20201102 09:53:47.426"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.757" starttime="20201102 09:53:39.759"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:28.764" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:28.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:28.766" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:54:28.766" starttime="20201102 09:54:28.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:28.767" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:54:28.767" starttime="20201102 09:54:28.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:28.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:28.768" starttime="20201102 09:54:28.767"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.768" starttime="20201102 09:54:28.761"></status>
</kw>
<msg timestamp="20201102 09:54:28.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:28.768" starttime="20201102 09:54:28.760"></status>
</kw>
<msg timestamp="20201102 09:54:28.768" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:54:28.768" starttime="20201102 09:54:28.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:54:28.770" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:54:28.770" starttime="20201102 09:54:28.769"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:28.774" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:28.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:28.788" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:54:28.788" starttime="20201102 09:54:28.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:28.789" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:54:28.789" starttime="20201102 09:54:28.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:28.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:28.790" starttime="20201102 09:54:28.790"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.790" starttime="20201102 09:54:28.771"></status>
</kw>
<msg timestamp="20201102 09:54:28.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:28.791" starttime="20201102 09:54:28.771"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.791" starttime="20201102 09:54:28.770"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.791" starttime="20201102 09:54:28.770"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.791" starttime="20201102 09:54:28.759"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:28.791" starttime="20201102 09:54:28.759"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:28.795" level="INFO">Running command 'ozone sh bucket link 23194-source/no-such-bucket 23194-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:32.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:32.229" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:32.229" starttime="20201102 09:54:28.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:32.230" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:54:32.231" starttime="20201102 09:54:32.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:32.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:32.231" starttime="20201102 09:54:32.231"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:32.232" starttime="20201102 09:54:28.792"></status>
</kw>
<msg timestamp="20201102 09:54:32.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:32.232" starttime="20201102 09:54:28.792"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:32.232" starttime="20201102 09:54:28.791"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:32.236" level="INFO">Running command 'ozone sh key list 23194-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:35.580" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 09:54:35.581" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:35.581" starttime="20201102 09:54:32.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:35.582" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201102 09:54:35.582" starttime="20201102 09:54:35.581"></status>
</kw>
<msg timestamp="20201102 09:54:35.582" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:35.582" starttime="20201102 09:54:32.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201102 09:54:35.583" starttime="20201102 09:54:35.582"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:54:35.583" critical="yes" starttime="20201102 09:54:28.758"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:35.589" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:35.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:35.592" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:54:35.592" starttime="20201102 09:54:35.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:35.593" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:54:35.593" starttime="20201102 09:54:35.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:35.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:35.594" starttime="20201102 09:54:35.593"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:35.594" starttime="20201102 09:54:35.586"></status>
</kw>
<msg timestamp="20201102 09:54:35.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:35.594" starttime="20201102 09:54:35.586"></status>
</kw>
<msg timestamp="20201102 09:54:35.595" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:54:35.595" starttime="20201102 09:54:35.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:54:35.595" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:54:35.595" starttime="20201102 09:54:35.595"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:35.599" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:35.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:35.614" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:54:35.614" starttime="20201102 09:54:35.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:35.615" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:54:35.615" starttime="20201102 09:54:35.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:35.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:35.616" starttime="20201102 09:54:35.615"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:35.616" starttime="20201102 09:54:35.597"></status>
</kw>
<msg timestamp="20201102 09:54:35.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:35.616" starttime="20201102 09:54:35.597"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:35.617" starttime="20201102 09:54:35.596"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:35.617" starttime="20201102 09:54:35.595"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:35.617" starttime="20201102 09:54:35.585"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:35.617" starttime="20201102 09:54:35.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:35.621" level="INFO">Running command 'ozone sh bucket link 23194-source/bucket1 23194-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:39.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:39.405" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:39.405" starttime="20201102 09:54:35.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:39.406" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:54:39.407" starttime="20201102 09:54:39.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:39.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:39.407" starttime="20201102 09:54:39.407"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:39.408" starttime="20201102 09:54:35.618"></status>
</kw>
<msg timestamp="20201102 09:54:39.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:39.408" starttime="20201102 09:54:35.618"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:39.408" starttime="20201102 09:54:35.617"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:39.415" level="INFO">Running command 'ozone sh bucket create 23194-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:43.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:43.538" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:43.538" starttime="20201102 09:54:39.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:43.539" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:54:43.539" starttime="20201102 09:54:43.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:43.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:43.540" starttime="20201102 09:54:43.539"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:43.540" starttime="20201102 09:54:39.410"></status>
</kw>
<msg timestamp="20201102 09:54:43.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:43.540" starttime="20201102 09:54:39.409"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:43.540" starttime="20201102 09:54:39.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:43.544" level="INFO">Running command 'ozone sh key put 23194-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:49.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:49.787" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:49.787" starttime="20201102 09:54:43.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:49.788" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:54:49.788" starttime="20201102 09:54:49.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:49.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:49.789" starttime="20201102 09:54:49.788"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:49.789" starttime="20201102 09:54:43.541"></status>
</kw>
<msg timestamp="20201102 09:54:49.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:49.789" starttime="20201102 09:54:43.541"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:49.790" starttime="20201102 09:54:43.541"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201102 09:54:49.791" level="INFO">${postfix} = 78177</msg>
<status status="PASS" endtime="20201102 09:54:49.791" starttime="20201102 09:54:49.791"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201102 09:54:49.792" level="INFO">${tmpfile} = /tmp/tempkey-78177</msg>
<status status="PASS" endtime="20201102 09:54:49.792" starttime="20201102 09:54:49.791"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:49.796" level="INFO">Running command 'ozone sh key get -f 23194-target/link1/key1 /tmp/tempkey-78177 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:55.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:55.990" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:54:55.991" starttime="20201102 09:54:49.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:55.992" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:54:55.992" starttime="20201102 09:54:55.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:55.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:55.992" starttime="20201102 09:54:55.992"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:55.993" starttime="20201102 09:54:49.793"></status>
</kw>
<msg timestamp="20201102 09:54:55.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:55.993" starttime="20201102 09:54:49.793"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:55.993" starttime="20201102 09:54:49.792"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201102 09:54:55.995" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-78177 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:56.006" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201102 09:54:56.006" starttime="20201102 09:54:55.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:56.020" level="INFO">Running command 'rm -f /tmp/tempkey-78177 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:56.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:56.023" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:54:56.023" starttime="20201102 09:54:56.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:56.024" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:54:56.024" starttime="20201102 09:54:56.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:56.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:56.025" starttime="20201102 09:54:56.024"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:56.025" starttime="20201102 09:54:56.016"></status>
</kw>
<msg timestamp="20201102 09:54:56.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:56.025" starttime="20201102 09:54:56.008"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:56.025" starttime="20201102 09:54:56.007"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:54:56.026" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201102 09:54:56.026" starttime="20201102 09:54:56.026"></status>
</kw>
<msg timestamp="20201102 09:54:56.026" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201102 09:54:56.026" starttime="20201102 09:54:49.790"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:54:56.027" starttime="20201102 09:54:56.026"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:56.027" starttime="20201102 09:54:49.790"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:54:56.027" critical="yes" starttime="20201102 09:54:35.584"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:56.036" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:56.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:56.044" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:54:56.044" starttime="20201102 09:54:56.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:56.045" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:54:56.045" starttime="20201102 09:54:56.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:56.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:56.046" starttime="20201102 09:54:56.045"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:56.046" starttime="20201102 09:54:56.031"></status>
</kw>
<msg timestamp="20201102 09:54:56.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:56.047" starttime="20201102 09:54:56.031"></status>
</kw>
<msg timestamp="20201102 09:54:56.047" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:54:56.047" starttime="20201102 09:54:56.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:54:56.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:54:56.048" starttime="20201102 09:54:56.047"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:56.059" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:54:56.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:54:56.075" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:54:56.075" starttime="20201102 09:54:56.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:54:56.076" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:54:56.076" starttime="20201102 09:54:56.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:54:56.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:54:56.077" starttime="20201102 09:54:56.077"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:56.077" starttime="20201102 09:54:56.050"></status>
</kw>
<msg timestamp="20201102 09:54:56.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:54:56.078" starttime="20201102 09:54:56.050"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:56.078" starttime="20201102 09:54:56.049"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:56.078" starttime="20201102 09:54:56.049"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:56.078" starttime="20201102 09:54:56.030"></status>
</kw>
<status status="PASS" endtime="20201102 09:54:56.078" starttime="20201102 09:54:56.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:54:56.083" level="INFO">Running command 'ozone sh key put 23194-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:02.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:02.089" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:55:02.089" starttime="20201102 09:54:56.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:02.090" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:55:02.090" starttime="20201102 09:55:02.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:02.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:02.091" starttime="20201102 09:55:02.090"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:02.091" starttime="20201102 09:54:56.080"></status>
</kw>
<msg timestamp="20201102 09:55:02.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:02.091" starttime="20201102 09:54:56.079"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:02.091" starttime="20201102 09:54:56.079"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201102 09:55:02.093" level="INFO">${postfix} = 95012</msg>
<status status="PASS" endtime="20201102 09:55:02.093" starttime="20201102 09:55:02.093"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201102 09:55:02.094" level="INFO">${tmpfile} = /tmp/tempkey-95012</msg>
<status status="PASS" endtime="20201102 09:55:02.094" starttime="20201102 09:55:02.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:02.097" level="INFO">Running command 'ozone sh key get -f 23194-source/bucket1/key2 /tmp/tempkey-95012 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:07.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:07.851" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:55:07.851" starttime="20201102 09:55:02.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:07.852" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:55:07.852" starttime="20201102 09:55:07.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:07.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:07.853" starttime="20201102 09:55:07.853"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.853" starttime="20201102 09:55:02.095"></status>
</kw>
<msg timestamp="20201102 09:55:07.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:07.854" starttime="20201102 09:55:02.094"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.854" starttime="20201102 09:55:02.094"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201102 09:55:07.856" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-95012 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:07.859" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201102 09:55:07.859" starttime="20201102 09:55:07.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:07.864" level="INFO">Running command 'rm -f /tmp/tempkey-95012 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:07.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:07.866" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:55:07.866" starttime="20201102 09:55:07.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:07.867" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:55:07.867" starttime="20201102 09:55:07.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:07.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:07.867" starttime="20201102 09:55:07.867"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.868" starttime="20201102 09:55:07.860"></status>
</kw>
<msg timestamp="20201102 09:55:07.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:07.868" starttime="20201102 09:55:07.860"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.868" starttime="20201102 09:55:07.859"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:55:07.869" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201102 09:55:07.869" starttime="20201102 09:55:07.868"></status>
</kw>
<msg timestamp="20201102 09:55:07.869" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201102 09:55:07.869" starttime="20201102 09:55:02.092"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:07.870" starttime="20201102 09:55:07.869"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.870" starttime="20201102 09:55:02.092"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:55:07.870" critical="yes" starttime="20201102 09:54:56.029"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:07.876" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:07.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:07.885" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:55:07.885" starttime="20201102 09:55:07.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:07.886" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:55:07.886" starttime="20201102 09:55:07.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:07.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:07.886" starttime="20201102 09:55:07.886"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.887" starttime="20201102 09:55:07.873"></status>
</kw>
<msg timestamp="20201102 09:55:07.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:07.887" starttime="20201102 09:55:07.873"></status>
</kw>
<msg timestamp="20201102 09:55:07.887" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:55:07.887" starttime="20201102 09:55:07.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:55:07.888" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:55:07.888" starttime="20201102 09:55:07.887"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:07.892" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:07.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:07.908" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:55:07.908" starttime="20201102 09:55:07.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:07.909" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:55:07.909" starttime="20201102 09:55:07.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:07.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:07.910" starttime="20201102 09:55:07.909"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.910" starttime="20201102 09:55:07.889"></status>
</kw>
<msg timestamp="20201102 09:55:07.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:07.910" starttime="20201102 09:55:07.889"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.911" starttime="20201102 09:55:07.888"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.911" starttime="20201102 09:55:07.888"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.911" starttime="20201102 09:55:07.872"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:07.911" starttime="20201102 09:55:07.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:07.916" level="INFO">Running command 'ozone sh key list 23194-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:11.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:11.807" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201102 09:55:11.807" starttime="20201102 09:55:07.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:11.808" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201102 09:55:11.809" starttime="20201102 09:55:11.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:11.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:11.809" starttime="20201102 09:55:11.809"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:11.810" starttime="20201102 09:55:07.912"></status>
</kw>
<msg timestamp="20201102 09:55:11.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:11.810" starttime="20201102 09:55:07.912"></status>
</kw>
<msg timestamp="20201102 09:55:11.810" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201102 09:55:11.810" starttime="20201102 09:55:07.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:11.814" level="INFO">Running command 'ozone sh key list 23194-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:15.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:15.909" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201102 09:55:15.909" starttime="20201102 09:55:11.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:15.910" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201102 09:55:15.911" starttime="20201102 09:55:15.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:15.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:15.911" starttime="20201102 09:55:15.911"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:15.912" starttime="20201102 09:55:11.811"></status>
</kw>
<msg timestamp="20201102 09:55:15.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:15.912" starttime="20201102 09:55:11.811"></status>
</kw>
<msg timestamp="20201102 09:55:15.912" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201102 09:55:15.912" starttime="20201102 09:55:11.810"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:15.913" starttime="20201102 09:55:15.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:15.913" starttime="20201102 09:55:15.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:15.914" starttime="20201102 09:55:15.913"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:55:15.914" critical="yes" starttime="20201102 09:55:07.871"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:15.921" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:15.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:15.922" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:55:15.923" starttime="20201102 09:55:15.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:15.923" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:55:15.924" starttime="20201102 09:55:15.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:15.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:15.924" starttime="20201102 09:55:15.924"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:15.925" starttime="20201102 09:55:15.917"></status>
</kw>
<msg timestamp="20201102 09:55:15.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:15.925" starttime="20201102 09:55:15.917"></status>
</kw>
<msg timestamp="20201102 09:55:15.925" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:55:15.925" starttime="20201102 09:55:15.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:55:15.926" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:55:15.926" starttime="20201102 09:55:15.925"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:15.931" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:15.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:15.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:55:15.947" starttime="20201102 09:55:15.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:15.948" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:55:15.948" starttime="20201102 09:55:15.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:15.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:15.949" starttime="20201102 09:55:15.949"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:15.949" starttime="20201102 09:55:15.927"></status>
</kw>
<msg timestamp="20201102 09:55:15.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:15.950" starttime="20201102 09:55:15.927"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:15.950" starttime="20201102 09:55:15.926"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:15.950" starttime="20201102 09:55:15.926"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:15.950" starttime="20201102 09:55:15.916"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:15.950" starttime="20201102 09:55:15.915"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:15.956" level="INFO">Running command 'ozone sh key delete 23194-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:19.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:19.906" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:55:19.906" starttime="20201102 09:55:15.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:19.907" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:55:19.907" starttime="20201102 09:55:19.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:19.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:19.908" starttime="20201102 09:55:19.907"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:19.908" starttime="20201102 09:55:15.951"></status>
</kw>
<msg timestamp="20201102 09:55:19.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:19.908" starttime="20201102 09:55:15.951"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:19.909" starttime="20201102 09:55:15.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:19.914" level="INFO">Running command 'ozone sh key list 23194-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:24.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:24.247" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201102 09:55:24.247" starttime="20201102 09:55:19.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:24.248" level="INFO">key1</msg>
<status status="PASS" endtime="20201102 09:55:24.248" starttime="20201102 09:55:24.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:24.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:24.249" starttime="20201102 09:55:24.248"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:24.249" starttime="20201102 09:55:19.910"></status>
</kw>
<msg timestamp="20201102 09:55:24.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:24.249" starttime="20201102 09:55:19.909"></status>
</kw>
<msg timestamp="20201102 09:55:24.249" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201102 09:55:24.249" starttime="20201102 09:55:19.909"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:24.250" starttime="20201102 09:55:24.250"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:55:24.250" critical="yes" starttime="20201102 09:55:15.914"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:24.256" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:24.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:24.259" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:55:24.259" starttime="20201102 09:55:24.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:24.260" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:55:24.260" starttime="20201102 09:55:24.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:24.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:24.261" starttime="20201102 09:55:24.260"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:24.261" starttime="20201102 09:55:24.253"></status>
</kw>
<msg timestamp="20201102 09:55:24.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:24.261" starttime="20201102 09:55:24.253"></status>
</kw>
<msg timestamp="20201102 09:55:24.261" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:55:24.261" starttime="20201102 09:55:24.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:55:24.262" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:55:24.262" starttime="20201102 09:55:24.261"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:24.267" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:24.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:24.282" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:55:24.282" starttime="20201102 09:55:24.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:24.283" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:55:24.283" starttime="20201102 09:55:24.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:24.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:24.284" starttime="20201102 09:55:24.283"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:24.284" starttime="20201102 09:55:24.263"></status>
</kw>
<msg timestamp="20201102 09:55:24.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:24.284" starttime="20201102 09:55:24.263"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:24.284" starttime="20201102 09:55:24.262"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:24.284" starttime="20201102 09:55:24.262"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:24.284" starttime="20201102 09:55:24.252"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:24.284" starttime="20201102 09:55:24.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:24.288" level="INFO">Running command 'ozone sh bucket list 23194-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:27.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:27.963" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:55:27.963" starttime="20201102 09:55:24.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:27.964" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:54:32.100Z",
  "modificationTime" : "2020-11-02T09:54:32.100Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:54:11.217Z",
  "modificationTime" : "2020-11-02T09:54:28.669Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:54:39.060Z",
  "modificationTime" : "2020-11-02T09:54:39.060Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:54:03.876Z",
  "modificationTime" : "2020-11-02T09:54:25.172Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:54:07.471Z",
  "modificationTime" : "2020-11-02T09:54:07.471Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 09:55:27.964" starttime="20201102 09:55:27.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:27.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:27.965" starttime="20201102 09:55:27.964"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:27.965" starttime="20201102 09:55:24.285"></status>
</kw>
<msg timestamp="20201102 09:55:27.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:27.965" starttime="20201102 09:55:24.285"></status>
</kw>
<msg timestamp="20201102 09:55:27.966" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:55:27.966" starttime="20201102 09:55:24.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:27.966" starttime="20201102 09:55:27.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:27.967" starttime="20201102 09:55:27.967"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:55:27.967" critical="yes" starttime="20201102 09:55:24.251"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:27.975" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:27.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:27.976" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:55:27.976" starttime="20201102 09:55:27.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:27.977" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:55:27.977" starttime="20201102 09:55:27.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:27.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:27.978" starttime="20201102 09:55:27.977"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:27.978" starttime="20201102 09:55:27.970"></status>
</kw>
<msg timestamp="20201102 09:55:27.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:27.978" starttime="20201102 09:55:27.970"></status>
</kw>
<msg timestamp="20201102 09:55:27.979" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:55:27.979" starttime="20201102 09:55:27.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:55:27.979" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:55:27.979" starttime="20201102 09:55:27.979"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:27.984" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:27.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:27.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:55:27.999" starttime="20201102 09:55:27.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:28.000" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:55:28.000" starttime="20201102 09:55:27.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:28.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:28.001" starttime="20201102 09:55:28.000"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:28.001" starttime="20201102 09:55:27.981"></status>
</kw>
<msg timestamp="20201102 09:55:28.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:28.001" starttime="20201102 09:55:27.981"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:28.002" starttime="20201102 09:55:27.980"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:28.002" starttime="20201102 09:55:27.980"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:28.002" starttime="20201102 09:55:27.969"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:28.002" starttime="20201102 09:55:27.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:28.007" level="INFO">Running command 'ozone sh bucket info 23194-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:31.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:31.688" level="INFO">${output} = 23194-source bucket1</msg>
<status status="PASS" endtime="20201102 09:55:31.688" starttime="20201102 09:55:28.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:31.689" level="INFO">23194-source bucket1</msg>
<status status="PASS" endtime="20201102 09:55:31.689" starttime="20201102 09:55:31.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:31.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:31.690" starttime="20201102 09:55:31.690"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:31.690" starttime="20201102 09:55:28.003"></status>
</kw>
<msg timestamp="20201102 09:55:31.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:31.691" starttime="20201102 09:55:28.003"></status>
</kw>
<msg timestamp="20201102 09:55:31.691" level="INFO">${result} = 23194-source bucket1</msg>
<status status="PASS" endtime="20201102 09:55:31.691" starttime="20201102 09:55:28.002"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:31.691" starttime="20201102 09:55:31.691"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:55:31.692" critical="yes" starttime="20201102 09:55:27.968"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:31.698" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:31.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:31.701" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:55:31.701" starttime="20201102 09:55:31.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:31.702" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:55:31.702" starttime="20201102 09:55:31.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:31.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:31.703" starttime="20201102 09:55:31.702"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:31.703" starttime="20201102 09:55:31.695"></status>
</kw>
<msg timestamp="20201102 09:55:31.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:31.703" starttime="20201102 09:55:31.694"></status>
</kw>
<msg timestamp="20201102 09:55:31.703" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:55:31.703" starttime="20201102 09:55:31.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:55:31.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:55:31.704" starttime="20201102 09:55:31.703"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:31.710" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:31.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:31.725" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:55:31.725" starttime="20201102 09:55:31.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:31.726" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:55:31.726" starttime="20201102 09:55:31.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:31.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:31.727" starttime="20201102 09:55:31.727"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:31.727" starttime="20201102 09:55:31.706"></status>
</kw>
<msg timestamp="20201102 09:55:31.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:31.728" starttime="20201102 09:55:31.705"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:31.728" starttime="20201102 09:55:31.705"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:31.728" starttime="20201102 09:55:31.704"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:31.728" starttime="20201102 09:55:31.694"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:31.728" starttime="20201102 09:55:31.693"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:31.732" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 23194-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:35.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:35.023" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:55:35.024" starttime="20201102 09:55:31.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:35.025" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 09:55:35.025" starttime="20201102 09:55:35.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:35.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:35.026" starttime="20201102 09:55:35.025"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:35.026" starttime="20201102 09:55:31.729"></status>
</kw>
<msg timestamp="20201102 09:55:35.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:35.026" starttime="20201102 09:55:31.729"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:35.026" starttime="20201102 09:55:31.728"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:35.033" level="INFO">Running command 'ozone sh bucket getacl 23194-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:38.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:38.543" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201102 09:55:38.543" starttime="20201102 09:55:35.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:38.545" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201102 09:55:38.545" starttime="20201102 09:55:38.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:38.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:38.545" starttime="20201102 09:55:38.545"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:38.546" starttime="20201102 09:55:35.028"></status>
</kw>
<msg timestamp="20201102 09:55:38.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:38.546" starttime="20201102 09:55:35.028"></status>
</kw>
<msg timestamp="20201102 09:55:38.546" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201102 09:55:38.546" starttime="20201102 09:55:35.027"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:38.547" starttime="20201102 09:55:38.546"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:38.547" starttime="20201102 09:55:35.026"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:38.554" level="INFO">Running command 'ozone sh bucket getacl 23194-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:42.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:42.285" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:55:42.285" starttime="20201102 09:55:38.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:42.286" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:55:42.286" starttime="20201102 09:55:42.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:42.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:42.287" starttime="20201102 09:55:42.286"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:42.287" starttime="20201102 09:55:38.549"></status>
</kw>
<msg timestamp="20201102 09:55:42.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:42.287" starttime="20201102 09:55:38.549"></status>
</kw>
<msg timestamp="20201102 09:55:42.287" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201102 09:55:42.287" starttime="20201102 09:55:38.548"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:42.288" starttime="20201102 09:55:42.287"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:42.288" starttime="20201102 09:55:38.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:42.293" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 23194-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:45.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:45.487" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:55:45.487" starttime="20201102 09:55:42.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:45.489" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201102 09:55:45.489" starttime="20201102 09:55:45.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:45.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:45.489" starttime="20201102 09:55:45.489"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:45.490" starttime="20201102 09:55:42.289"></status>
</kw>
<msg timestamp="20201102 09:55:45.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:45.490" starttime="20201102 09:55:42.289"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:45.490" starttime="20201102 09:55:42.288"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:45.496" level="INFO">Running command 'ozone sh bucket getacl 23194-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:48.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:48.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:55:48.964" starttime="20201102 09:55:45.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:48.965" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:55:48.965" starttime="20201102 09:55:48.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:48.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:48.966" starttime="20201102 09:55:48.966"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:48.966" starttime="20201102 09:55:45.492"></status>
</kw>
<msg timestamp="20201102 09:55:48.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:48.967" starttime="20201102 09:55:45.492"></status>
</kw>
<msg timestamp="20201102 09:55:48.967" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201102 09:55:48.967" starttime="20201102 09:55:45.491"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:48.968" starttime="20201102 09:55:48.967"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:48.968" starttime="20201102 09:55:45.490"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:48.973" level="INFO">Running command 'ozone sh bucket getacl 23194-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:53.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:53.365" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201102 09:55:53.365" starttime="20201102 09:55:48.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:53.366" level="INFO">READ</msg>
<status status="PASS" endtime="20201102 09:55:53.366" starttime="20201102 09:55:53.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:53.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:53.367" starttime="20201102 09:55:53.366"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:53.367" starttime="20201102 09:55:48.970"></status>
</kw>
<msg timestamp="20201102 09:55:53.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:53.367" starttime="20201102 09:55:48.970"></status>
</kw>
<msg timestamp="20201102 09:55:53.368" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201102 09:55:53.368" starttime="20201102 09:55:48.969"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:55:53.368" starttime="20201102 09:55:53.368"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:53.368" starttime="20201102 09:55:48.968"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:55:53.369" critical="yes" starttime="20201102 09:55:31.692"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:53.376" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:53.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:53.378" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:55:53.378" starttime="20201102 09:55:53.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:53.378" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:55:53.379" starttime="20201102 09:55:53.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:53.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:53.379" starttime="20201102 09:55:53.379"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:53.380" starttime="20201102 09:55:53.372"></status>
</kw>
<msg timestamp="20201102 09:55:53.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:53.380" starttime="20201102 09:55:53.371"></status>
</kw>
<msg timestamp="20201102 09:55:53.380" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:55:53.380" starttime="20201102 09:55:53.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:55:53.381" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:55:53.381" starttime="20201102 09:55:53.380"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:53.386" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:53.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:53.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:55:53.401" starttime="20201102 09:55:53.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:53.402" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:55:53.402" starttime="20201102 09:55:53.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:53.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:53.403" starttime="20201102 09:55:53.402"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:53.403" starttime="20201102 09:55:53.382"></status>
</kw>
<msg timestamp="20201102 09:55:53.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:53.403" starttime="20201102 09:55:53.382"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:53.403" starttime="20201102 09:55:53.381"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:53.404" starttime="20201102 09:55:53.381"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:53.404" starttime="20201102 09:55:53.371"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:53.404" starttime="20201102 09:55:53.370"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:53.408" level="INFO">Running command 'ozone sh bucket link 23194-source/bucket2 23194-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:55:56.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:55:56.963" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:55:56.963" starttime="20201102 09:55:53.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:55:56.965" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:55:56.965" starttime="20201102 09:55:56.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:55:56.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:55:56.965" starttime="20201102 09:55:56.965"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:56.966" starttime="20201102 09:55:53.405"></status>
</kw>
<msg timestamp="20201102 09:55:56.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:55:56.966" starttime="20201102 09:55:53.405"></status>
</kw>
<status status="PASS" endtime="20201102 09:55:56.966" starttime="20201102 09:55:53.404"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:55:56.970" level="INFO">Running command 'ozone sh bucket create 23194-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:00.824" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 09:56:00.824" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:00.825" starttime="20201102 09:55:56.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:00.826" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201102 09:56:00.826" starttime="20201102 09:56:00.825"></status>
</kw>
<msg timestamp="20201102 09:56:00.826" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:00.826" starttime="20201102 09:55:56.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201102 09:56:00.827" starttime="20201102 09:56:00.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:00.833" level="INFO">Running command 'ozone sh bucket create 23194-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:04.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:04.306" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:04.306" starttime="20201102 09:56:00.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:04.307" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:56:04.307" starttime="20201102 09:56:04.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:04.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:04.308" starttime="20201102 09:56:04.307"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:04.308" starttime="20201102 09:56:00.828"></status>
</kw>
<msg timestamp="20201102 09:56:04.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:04.308" starttime="20201102 09:56:00.828"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:04.309" starttime="20201102 09:56:00.827"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:04.313" level="INFO">Running command 'ozone sh bucket link 23194-source/bucket1 23194-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:07.972" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 09:56:07.972" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:07.972" starttime="20201102 09:56:04.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:07.973" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201102 09:56:07.973" starttime="20201102 09:56:07.973"></status>
</kw>
<msg timestamp="20201102 09:56:07.974" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:07.974" starttime="20201102 09:56:04.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201102 09:56:07.974" starttime="20201102 09:56:07.974"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:56:07.975" critical="yes" starttime="20201102 09:55:53.369"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:07.982" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:07.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:07.983" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:56:07.983" starttime="20201102 09:56:07.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:07.984" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:56:07.984" starttime="20201102 09:56:07.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:07.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:07.985" starttime="20201102 09:56:07.984"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:07.985" starttime="20201102 09:56:07.978"></status>
</kw>
<msg timestamp="20201102 09:56:07.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:07.985" starttime="20201102 09:56:07.978"></status>
</kw>
<msg timestamp="20201102 09:56:07.986" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:56:07.986" starttime="20201102 09:56:07.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:56:07.986" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:56:07.986" starttime="20201102 09:56:07.986"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:07.992" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:08.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:08.004" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:08.004" starttime="20201102 09:56:07.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:08.005" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:08.005" starttime="20201102 09:56:08.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:08.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:08.006" starttime="20201102 09:56:08.005"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.006" starttime="20201102 09:56:07.988"></status>
</kw>
<msg timestamp="20201102 09:56:08.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:08.006" starttime="20201102 09:56:07.988"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.006" starttime="20201102 09:56:07.987"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.006" starttime="20201102 09:56:07.987"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.007" starttime="20201102 09:56:07.977"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.007" starttime="20201102 09:56:07.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:08.012" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:08.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:08.015" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:08.015" starttime="20201102 09:56:08.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:08.016" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:08.017" starttime="20201102 09:56:08.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:08.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:08.017" starttime="20201102 09:56:08.017"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.017" starttime="20201102 09:56:08.009"></status>
</kw>
<msg timestamp="20201102 09:56:08.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:08.018" starttime="20201102 09:56:08.009"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.018" starttime="20201102 09:56:08.008"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:08.023" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:08.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:08.025" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:56:08.025" starttime="20201102 09:56:08.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:08.026" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:56:08.026" starttime="20201102 09:56:08.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:08.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:08.027" starttime="20201102 09:56:08.026"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.027" starttime="20201102 09:56:08.019"></status>
</kw>
<msg timestamp="20201102 09:56:08.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:08.027" starttime="20201102 09:56:08.019"></status>
</kw>
<msg timestamp="20201102 09:56:08.027" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:56:08.027" starttime="20201102 09:56:08.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:56:08.028" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:56:08.028" starttime="20201102 09:56:08.027"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:08.032" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:08.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:08.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:08.050" starttime="20201102 09:56:08.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:08.051" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:08.051" starttime="20201102 09:56:08.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:08.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:08.053" starttime="20201102 09:56:08.052"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.053" starttime="20201102 09:56:08.029"></status>
</kw>
<msg timestamp="20201102 09:56:08.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:08.053" starttime="20201102 09:56:08.029"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.053" starttime="20201102 09:56:08.029"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.053" starttime="20201102 09:56:08.028"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.053" starttime="20201102 09:56:08.018"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:08.053" starttime="20201102 09:56:08.018"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:08.056" level="INFO">Running command 'ozone sh key list 23194-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:12.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:12.066" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:12.066" starttime="20201102 09:56:08.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.067" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "23194-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-02T09:53:54.905Z",
  "modificationTime" : "2020-11-02T09:53:56.544Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201102 09:56:12.067" starttime="20201102 09:56:12.066"></status>
</kw>
<msg timestamp="20201102 09:56:12.067" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:12.067" starttime="20201102 09:56:08.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 09:56:12.068" starttime="20201102 09:56:12.067"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.068" starttime="20201102 09:56:08.007"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.068" starttime="20201102 09:56:08.007"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:56:12.068" critical="yes" starttime="20201102 09:56:07.975"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:12.075" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:12.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:12.078" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:56:12.078" starttime="20201102 09:56:12.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.079" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:56:12.079" starttime="20201102 09:56:12.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:12.080" starttime="20201102 09:56:12.079"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.080" starttime="20201102 09:56:12.072"></status>
</kw>
<msg timestamp="20201102 09:56:12.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:12.080" starttime="20201102 09:56:12.072"></status>
</kw>
<msg timestamp="20201102 09:56:12.080" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:56:12.080" starttime="20201102 09:56:12.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:56:12.081" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:56:12.081" starttime="20201102 09:56:12.081"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:12.085" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:12.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:12.099" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:12.099" starttime="20201102 09:56:12.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.100" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:12.100" starttime="20201102 09:56:12.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:12.101" starttime="20201102 09:56:12.101"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.101" starttime="20201102 09:56:12.082"></status>
</kw>
<msg timestamp="20201102 09:56:12.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:12.102" starttime="20201102 09:56:12.082"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.102" starttime="20201102 09:56:12.082"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.102" starttime="20201102 09:56:12.081"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.102" starttime="20201102 09:56:12.071"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.102" starttime="20201102 09:56:12.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:12.107" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:12.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:12.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:12.111" starttime="20201102 09:56:12.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.112" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:12.112" starttime="20201102 09:56:12.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:12.113" starttime="20201102 09:56:12.112"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.113" starttime="20201102 09:56:12.104"></status>
</kw>
<msg timestamp="20201102 09:56:12.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:12.113" starttime="20201102 09:56:12.104"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.113" starttime="20201102 09:56:12.103"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:12.119" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:12.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:12.120" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:56:12.120" starttime="20201102 09:56:12.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.121" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:56:12.121" starttime="20201102 09:56:12.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:12.122" starttime="20201102 09:56:12.121"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.122" starttime="20201102 09:56:12.115"></status>
</kw>
<msg timestamp="20201102 09:56:12.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:12.122" starttime="20201102 09:56:12.115"></status>
</kw>
<msg timestamp="20201102 09:56:12.123" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:56:12.123" starttime="20201102 09:56:12.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:56:12.123" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:56:12.123" starttime="20201102 09:56:12.123"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:12.128" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:12.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:12.139" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:12.139" starttime="20201102 09:56:12.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.140" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:12.141" starttime="20201102 09:56:12.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:12.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:12.141" starttime="20201102 09:56:12.141"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.141" starttime="20201102 09:56:12.125"></status>
</kw>
<msg timestamp="20201102 09:56:12.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:12.142" starttime="20201102 09:56:12.125"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.142" starttime="20201102 09:56:12.124"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.142" starttime="20201102 09:56:12.124"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.142" starttime="20201102 09:56:12.114"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:12.142" starttime="20201102 09:56:12.114"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:12.146" level="INFO">Running command 'ozone sh key list 23194-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:15.541" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 09:56:15.541" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:15.541" starttime="20201102 09:56:12.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.542" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201102 09:56:15.543" starttime="20201102 09:56:15.542"></status>
</kw>
<msg timestamp="20201102 09:56:15.543" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:15.543" starttime="20201102 09:56:12.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201102 09:56:15.544" starttime="20201102 09:56:15.543"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.544" starttime="20201102 09:56:12.103"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.544" starttime="20201102 09:56:12.102"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:56:15.544" critical="yes" starttime="20201102 09:56:12.069"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:15.552" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:15.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:15.554" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:56:15.554" starttime="20201102 09:56:15.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.555" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:56:15.555" starttime="20201102 09:56:15.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:15.556" starttime="20201102 09:56:15.555"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.556" starttime="20201102 09:56:15.548"></status>
</kw>
<msg timestamp="20201102 09:56:15.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:15.556" starttime="20201102 09:56:15.547"></status>
</kw>
<msg timestamp="20201102 09:56:15.556" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:56:15.556" starttime="20201102 09:56:15.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:56:15.557" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:56:15.557" starttime="20201102 09:56:15.557"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:15.562" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:15.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:15.578" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:15.578" starttime="20201102 09:56:15.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.579" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:15.579" starttime="20201102 09:56:15.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:15.580" starttime="20201102 09:56:15.579"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.580" starttime="20201102 09:56:15.559"></status>
</kw>
<msg timestamp="20201102 09:56:15.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:15.580" starttime="20201102 09:56:15.558"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.581" starttime="20201102 09:56:15.558"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.581" starttime="20201102 09:56:15.557"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.581" starttime="20201102 09:56:15.546"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.581" starttime="20201102 09:56:15.546"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:15.587" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:15.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:15.589" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:15.589" starttime="20201102 09:56:15.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.590" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:15.591" starttime="20201102 09:56:15.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:15.591" starttime="20201102 09:56:15.591"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.591" starttime="20201102 09:56:15.583"></status>
</kw>
<msg timestamp="20201102 09:56:15.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:15.592" starttime="20201102 09:56:15.582"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.592" starttime="20201102 09:56:15.582"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:15.596" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:15.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:15.599" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:56:15.599" starttime="20201102 09:56:15.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.600" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:56:15.600" starttime="20201102 09:56:15.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:15.601" starttime="20201102 09:56:15.600"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.601" starttime="20201102 09:56:15.593"></status>
</kw>
<msg timestamp="20201102 09:56:15.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:15.601" starttime="20201102 09:56:15.593"></status>
</kw>
<msg timestamp="20201102 09:56:15.601" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:56:15.601" starttime="20201102 09:56:15.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:56:15.602" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:56:15.602" starttime="20201102 09:56:15.601"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:15.607" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:15.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:15.620" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:15.620" starttime="20201102 09:56:15.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.621" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:15.621" starttime="20201102 09:56:15.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:15.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:15.622" starttime="20201102 09:56:15.621"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.622" starttime="20201102 09:56:15.603"></status>
</kw>
<msg timestamp="20201102 09:56:15.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:15.622" starttime="20201102 09:56:15.603"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.623" starttime="20201102 09:56:15.603"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.623" starttime="20201102 09:56:15.602"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.623" starttime="20201102 09:56:15.592"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:15.623" starttime="20201102 09:56:15.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:15.628" level="INFO">Running command 'ozone sh bucket info 23194-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:19.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:19.076" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:19.076" starttime="20201102 09:56:15.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:19.077" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:54:11.217Z",
  "modificationTime" : "2020-11-02T09:54:28.669Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 09:56:19.077" starttime="20201102 09:56:19.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:19.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:19.078" starttime="20201102 09:56:19.077"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:19.078" starttime="20201102 09:56:15.624"></status>
</kw>
<msg timestamp="20201102 09:56:19.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:19.078" starttime="20201102 09:56:15.624"></status>
</kw>
<msg timestamp="20201102 09:56:19.078" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:19.079" starttime="20201102 09:56:15.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 09:56:19.079" starttime="20201102 09:56:19.079"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201102 09:56:19.079" starttime="20201102 09:56:19.079"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:19.082" level="INFO">Running command 'ozone sh key list 23194-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:22.586" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 09:56:22.586" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:22.586" starttime="20201102 09:56:19.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:22.587" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201102 09:56:22.587" starttime="20201102 09:56:22.586"></status>
</kw>
<msg timestamp="20201102 09:56:22.587" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:22.587" starttime="20201102 09:56:19.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201102 09:56:22.588" starttime="20201102 09:56:22.588"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:22.588" starttime="20201102 09:56:15.582"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:22.588" starttime="20201102 09:56:15.581"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:56:22.589" critical="yes" starttime="20201102 09:56:15.545"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:22.596" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:22.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:22.597" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:56:22.597" starttime="20201102 09:56:22.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:22.598" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:56:22.599" starttime="20201102 09:56:22.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:22.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:22.599" starttime="20201102 09:56:22.599"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:22.600" starttime="20201102 09:56:22.592"></status>
</kw>
<msg timestamp="20201102 09:56:22.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:22.600" starttime="20201102 09:56:22.591"></status>
</kw>
<msg timestamp="20201102 09:56:22.600" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:56:22.600" starttime="20201102 09:56:22.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:56:22.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:56:22.601" starttime="20201102 09:56:22.600"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:22.605" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:22.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:22.619" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:22.619" starttime="20201102 09:56:22.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:22.620" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:22.620" starttime="20201102 09:56:22.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:22.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:22.621" starttime="20201102 09:56:22.620"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:22.621" starttime="20201102 09:56:22.602"></status>
</kw>
<msg timestamp="20201102 09:56:22.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:22.621" starttime="20201102 09:56:22.602"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:22.622" starttime="20201102 09:56:22.601"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:22.622" starttime="20201102 09:56:22.601"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:22.622" starttime="20201102 09:56:22.591"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:22.622" starttime="20201102 09:56:22.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:22.627" level="INFO">Running command 'ozone sh bucket link 23194-target/loop1 23194-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:25.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:25.926" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:25.926" starttime="20201102 09:56:22.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:25.927" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:56:25.927" starttime="20201102 09:56:25.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:25.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:25.928" starttime="20201102 09:56:25.928"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:25.928" starttime="20201102 09:56:22.623"></status>
</kw>
<msg timestamp="20201102 09:56:25.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:25.929" starttime="20201102 09:56:22.623"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:25.929" starttime="20201102 09:56:22.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:25.934" level="INFO">Running command 'ozone sh bucket link 23194-target/loop2 23194-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:29.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:29.479" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:29.479" starttime="20201102 09:56:25.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:29.480" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:56:29.480" starttime="20201102 09:56:29.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:29.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:29.481" starttime="20201102 09:56:29.480"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:29.481" starttime="20201102 09:56:25.930"></status>
</kw>
<msg timestamp="20201102 09:56:29.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:29.481" starttime="20201102 09:56:25.930"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:29.481" starttime="20201102 09:56:25.929"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:29.486" level="INFO">Running command 'ozone sh bucket link 23194-target/loop3 23194-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:32.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:32.870" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:32.870" starttime="20201102 09:56:29.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:32.871" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:56:32.871" starttime="20201102 09:56:32.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:32.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:32.872" starttime="20201102 09:56:32.871"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:32.872" starttime="20201102 09:56:29.482"></status>
</kw>
<msg timestamp="20201102 09:56:32.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:32.872" starttime="20201102 09:56:29.482"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:32.873" starttime="20201102 09:56:29.481"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:32.877" level="INFO">Running command 'ozone sh key list 23194-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:36.378" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 09:56:36.378" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:36.378" starttime="20201102 09:56:32.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:36.379" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201102 09:56:36.379" starttime="20201102 09:56:36.378"></status>
</kw>
<msg timestamp="20201102 09:56:36.379" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:36.379" starttime="20201102 09:56:32.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201102 09:56:36.380" starttime="20201102 09:56:36.379"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:56:36.380" critical="yes" starttime="20201102 09:56:22.589"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:36.387" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:36.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:36.390" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:56:36.390" starttime="20201102 09:56:36.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:36.391" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:56:36.391" starttime="20201102 09:56:36.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:36.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:36.392" starttime="20201102 09:56:36.392"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:36.392" starttime="20201102 09:56:36.384"></status>
</kw>
<msg timestamp="20201102 09:56:36.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:36.393" starttime="20201102 09:56:36.383"></status>
</kw>
<msg timestamp="20201102 09:56:36.393" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:56:36.393" starttime="20201102 09:56:36.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:56:36.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:56:36.393" starttime="20201102 09:56:36.393"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:36.398" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:36.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:36.415" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:36.415" starttime="20201102 09:56:36.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:36.416" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:36.416" starttime="20201102 09:56:36.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:36.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:36.417" starttime="20201102 09:56:36.416"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:36.417" starttime="20201102 09:56:36.395"></status>
</kw>
<msg timestamp="20201102 09:56:36.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:36.417" starttime="20201102 09:56:36.395"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:36.417" starttime="20201102 09:56:36.394"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:36.418" starttime="20201102 09:56:36.394"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:36.418" starttime="20201102 09:56:36.382"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:36.418" starttime="20201102 09:56:36.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:36.423" level="INFO">Running command 'ozone sh bucket link 23194-source/bucket1 23194-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:39.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:39.958" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:39.958" starttime="20201102 09:56:36.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:39.959" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:56:39.959" starttime="20201102 09:56:39.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:39.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:39.960" starttime="20201102 09:56:39.959"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:39.960" starttime="20201102 09:56:36.419"></status>
</kw>
<msg timestamp="20201102 09:56:39.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:39.960" starttime="20201102 09:56:36.419"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:39.961" starttime="20201102 09:56:36.418"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:39.964" level="INFO">Running command 'ozone sh key put 23194-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:45.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:45.704" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:45.704" starttime="20201102 09:56:39.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:45.706" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:56:45.706" starttime="20201102 09:56:45.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:45.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:45.707" starttime="20201102 09:56:45.706"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:45.707" starttime="20201102 09:56:39.962"></status>
</kw>
<msg timestamp="20201102 09:56:45.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:45.707" starttime="20201102 09:56:39.961"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:45.707" starttime="20201102 09:56:39.961"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201102 09:56:45.709" level="INFO">${postfix} = 03273</msg>
<status status="PASS" endtime="20201102 09:56:45.710" starttime="20201102 09:56:45.709"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201102 09:56:45.710" level="INFO">${tmpfile} = /tmp/tempkey-03273</msg>
<status status="PASS" endtime="20201102 09:56:45.710" starttime="20201102 09:56:45.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:45.725" level="INFO">Running command 'ozone sh key get -f 23194-target/link1/key3 /tmp/tempkey-03273 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:51.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:51.282" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:51.282" starttime="20201102 09:56:45.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:51.283" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:56:51.283" starttime="20201102 09:56:51.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:51.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:51.284" starttime="20201102 09:56:51.283"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.284" starttime="20201102 09:56:45.711"></status>
</kw>
<msg timestamp="20201102 09:56:51.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:51.284" starttime="20201102 09:56:45.711"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.284" starttime="20201102 09:56:45.710"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201102 09:56:51.288" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-03273 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:51.290" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201102 09:56:51.290" starttime="20201102 09:56:51.285"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:51.295" level="INFO">Running command 'rm -f /tmp/tempkey-03273 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:51.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:51.297" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:51.297" starttime="20201102 09:56:51.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:51.298" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:51.298" starttime="20201102 09:56:51.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:51.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:51.299" starttime="20201102 09:56:51.298"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.299" starttime="20201102 09:56:51.291"></status>
</kw>
<msg timestamp="20201102 09:56:51.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:51.299" starttime="20201102 09:56:51.291"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.299" starttime="20201102 09:56:51.290"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:56:51.300" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201102 09:56:51.300" starttime="20201102 09:56:51.300"></status>
</kw>
<msg timestamp="20201102 09:56:51.300" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201102 09:56:51.301" starttime="20201102 09:56:45.708"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:56:51.301" starttime="20201102 09:56:51.301"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.301" starttime="20201102 09:56:45.708"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:56:51.301" critical="yes" starttime="20201102 09:56:36.381"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:51.308" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:51.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:51.310" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201102 09:56:51.310" starttime="20201102 09:56:51.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:51.311" level="INFO">scm</msg>
<status status="PASS" endtime="20201102 09:56:51.311" starttime="20201102 09:56:51.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:51.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:51.313" starttime="20201102 09:56:51.312"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.313" starttime="20201102 09:56:51.305"></status>
</kw>
<msg timestamp="20201102 09:56:51.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:51.313" starttime="20201102 09:56:51.305"></status>
</kw>
<msg timestamp="20201102 09:56:51.313" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201102 09:56:51.313" starttime="20201102 09:56:51.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201102 09:56:51.314" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201102 09:56:51.314" starttime="20201102 09:56:51.313"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:51.318" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:51.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:51.336" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:56:51.336" starttime="20201102 09:56:51.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:51.337" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:56:51.337" starttime="20201102 09:56:51.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:51.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:51.338" starttime="20201102 09:56:51.337"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.338" starttime="20201102 09:56:51.316"></status>
</kw>
<msg timestamp="20201102 09:56:51.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:51.338" starttime="20201102 09:56:51.315"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.339" starttime="20201102 09:56:51.315"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.339" starttime="20201102 09:56:51.314"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.339" starttime="20201102 09:56:51.304"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:51.339" starttime="20201102 09:56:51.303"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:51.343" level="INFO">Running command 'ozone sh bucket delete 23194-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:54.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:54.952" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:54.952" starttime="20201102 09:56:51.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:54.954" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201102 09:56:54.954" starttime="20201102 09:56:54.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:54.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:54.954" starttime="20201102 09:56:54.954"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:54.955" starttime="20201102 09:56:51.340"></status>
</kw>
<msg timestamp="20201102 09:56:54.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:54.955" starttime="20201102 09:56:51.340"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:54.955" starttime="20201102 09:56:51.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:54.959" level="INFO">Running command 'ozone sh bucket list 23194-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:56:58.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:56:58.352" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:58.352" starttime="20201102 09:56:54.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:56:58.354" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:56:04.182Z",
  "modificationTime" : "2020-11-02T09:56:04.182Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:54:32.100Z",
  "modificationTime" : "2020-11-02T09:54:32.100Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:54:11.217Z",
  "modificationTime" : "2020-11-02T09:54:28.669Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:55:56.883Z",
  "modificationTime" : "2020-11-02T09:55:56.883Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:56:39.789Z",
  "modificationTime" : "2020-11-02T09:56:39.789Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:56:32.708Z",
  "modificationTime" : "2020-11-02T09:56:32.708Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:56:25.844Z",
  "modificationTime" : "2020-11-02T09:56:25.844Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:56:29.314Z",
  "modificationTime" : "2020-11-02T09:56:29.314Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:54:03.876Z",
  "modificationTime" : "2020-11-02T09:54:25.172Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "23194-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:54:07.471Z",
  "modificationTime" : "2020-11-02T09:54:07.471Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "23194-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 09:56:58.354" starttime="20201102 09:56:58.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:56:58.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:56:58.355" starttime="20201102 09:56:58.354"></status>
</kw>
<status status="PASS" endtime="20201102 09:56:58.355" starttime="20201102 09:56:54.956"></status>
</kw>
<msg timestamp="20201102 09:56:58.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:56:58.355" starttime="20201102 09:56:54.956"></status>
</kw>
<msg timestamp="20201102 09:56:58.356" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201102 09:56:58.356" starttime="20201102 09:56:54.955"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201102 09:56:58.356" starttime="20201102 09:56:58.356"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:56:58.362" level="INFO">Running command 'ozone sh key list 23194-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:57:02.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:57:02.170" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201102 09:57:02.170" starttime="20201102 09:56:58.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:57:02.171" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201102 09:57:02.171" starttime="20201102 09:57:02.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:57:02.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:57:02.172" starttime="20201102 09:57:02.171"></status>
</kw>
<status status="PASS" endtime="20201102 09:57:02.172" starttime="20201102 09:56:58.357"></status>
</kw>
<msg timestamp="20201102 09:57:02.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:57:02.172" starttime="20201102 09:56:58.357"></status>
</kw>
<msg timestamp="20201102 09:57:02.173" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201102 09:57:02.173" starttime="20201102 09:56:58.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201102 09:57:02.173" starttime="20201102 09:57:02.173"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:57:02.173" critical="yes" starttime="20201102 09:56:51.302"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201102 09:57:02.176" starttime="20201102 09:53:39.695"></status>
</suite>
<status status="PASS" elapsedtime="231351" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
