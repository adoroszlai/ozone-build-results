<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201102 09:33:10.066" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:19:47.827" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:19:49.918" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 09:19:49.918" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 09:19:49.918" starttime="20201102 09:19:47.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:19:49.919" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 09:19:49.919" starttime="20201102 09:19:49.918"></status>
</kw>
<msg timestamp="20201102 09:19:49.919" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 09:19:49.919" starttime="20201102 09:19:47.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:19:49.926" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:19:52.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:19:52.060" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:19:52.060" starttime="20201102 09:19:49.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:19:52.061" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:19:52.061" starttime="20201102 09:19:52.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:19:52.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:19:52.062" starttime="20201102 09:19:52.061"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:52.062" starttime="20201102 09:19:49.921"></status>
</kw>
<msg timestamp="20201102 09:19:52.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:19:52.062" starttime="20201102 09:19:49.921"></status>
</kw>
<msg timestamp="20201102 09:19:52.063" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201102 09:19:52.063" starttime="20201102 09:19:49.920"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 09:19:52.065" starttime="20201102 09:19:52.064"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:52.065" starttime="20201102 09:19:49.920"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:52.065" starttime="20201102 09:19:49.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:19:52.069" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:19:53.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:19:53.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:19:53.947" starttime="20201102 09:19:52.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:19:53.948" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:19:53.948" starttime="20201102 09:19:53.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:19:53.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:19:53.949" starttime="20201102 09:19:53.948"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:53.949" starttime="20201102 09:19:52.067"></status>
</kw>
<msg timestamp="20201102 09:19:53.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:19:53.949" starttime="20201102 09:19:52.066"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:53.950" starttime="20201102 09:19:52.066"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:53.950" starttime="20201102 09:19:52.065"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:53.950" starttime="20201102 09:19:52.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 09:19:53.950" starttime="20201102 09:19:53.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:19:53.955" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:19:56.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:19:56.220" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:19:53.915Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 09:19:56.220" starttime="20201102 09:19:53.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:19:56.221" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:19:53.915Z",
  "modificationTime" : "2020-11-02T09:19:53.915Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 09:19:56.221" starttime="20201102 09:19:56.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:19:56.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:19:56.222" starttime="20201102 09:19:56.221"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:56.222" starttime="20201102 09:19:53.951"></status>
</kw>
<msg timestamp="20201102 09:19:56.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:19:56.222" starttime="20201102 09:19:53.951"></status>
</kw>
<msg timestamp="20201102 09:19:56.222" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:19:53.915Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 09:19:56.223" starttime="20201102 09:19:53.950"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201102 09:19:56.223" starttime="20201102 09:19:56.223"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:19:56.227" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:19:56.227" starttime="20201102 09:19:56.226"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:19:56.227" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:19:56.227" starttime="20201102 09:19:56.227"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:56.228" starttime="20201102 09:19:56.226"></status>
</kw>
<msg timestamp="20201102 09:19:56.228" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:19:56.228" starttime="20201102 09:19:56.225"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:56.228" starttime="20201102 09:19:56.225"></status>
</kw>
<msg timestamp="20201102 09:19:56.228" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 09:19:56.228" starttime="20201102 09:19:56.224"></status>
</kw>
<msg timestamp="20201102 09:19:56.228" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 09:19:56.228" starttime="20201102 09:19:56.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:19:56.232" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:19:58.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:19:58.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:19:58.342" starttime="20201102 09:19:56.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:19:58.343" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:19:58.343" starttime="20201102 09:19:58.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:19:58.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:19:58.344" starttime="20201102 09:19:58.343"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:58.344" starttime="20201102 09:19:56.229"></status>
</kw>
<msg timestamp="20201102 09:19:58.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:19:58.344" starttime="20201102 09:19:56.229"></status>
</kw>
<status status="PASS" endtime="20201102 09:19:58.344" starttime="20201102 09:19:56.229"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:19:58.350" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:20:04.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:20:04.216" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:20:04.216" starttime="20201102 09:19:58.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:20:04.217" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:20:04.217" starttime="20201102 09:20:04.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:20:04.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:20:04.218" starttime="20201102 09:20:04.218"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:04.219" starttime="20201102 09:19:58.346"></status>
</kw>
<msg timestamp="20201102 09:20:04.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:20:04.219" starttime="20201102 09:19:58.345"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:04.219" starttime="20201102 09:19:58.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:20:04.223" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:20:08.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:20:08.245" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:20:08.245" starttime="20201102 09:20:04.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:20:08.246" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:20:08.247" starttime="20201102 09:20:08.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:20:08.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:20:08.247" starttime="20201102 09:20:08.247"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:08.247" starttime="20201102 09:20:04.220"></status>
</kw>
<msg timestamp="20201102 09:20:08.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:20:08.248" starttime="20201102 09:20:04.220"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:08.248" starttime="20201102 09:20:04.219"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:20:08.252" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:20:12.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:20:12.225" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:20:12.225" starttime="20201102 09:20:08.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:20:12.227" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:20:12.227" starttime="20201102 09:20:12.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:20:12.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:20:12.228" starttime="20201102 09:20:12.227"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:12.228" starttime="20201102 09:20:08.249"></status>
</kw>
<msg timestamp="20201102 09:20:12.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:20:12.228" starttime="20201102 09:20:08.249"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:12.229" starttime="20201102 09:20:08.248"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:20:12.229" critical="yes" starttime="20201102 09:19:47.820"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:20:12.234" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:20:12.234" starttime="20201102 09:20:12.233"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:20:12.235" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:20:12.235" starttime="20201102 09:20:12.234"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:12.235" starttime="20201102 09:20:12.233"></status>
</kw>
<msg timestamp="20201102 09:20:12.235" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:20:12.235" starttime="20201102 09:20:12.232"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:12.235" starttime="20201102 09:20:12.232"></status>
</kw>
<msg timestamp="20201102 09:20:12.235" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 09:20:12.235" starttime="20201102 09:20:12.231"></status>
</kw>
<msg timestamp="20201102 09:20:12.236" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 09:20:12.236" starttime="20201102 09:20:12.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:20:12.239" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:20:14.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:20:14.433" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:20:14.433" starttime="20201102 09:20:12.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:20:14.434" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:20:14.434" starttime="20201102 09:20:14.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:20:14.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:20:14.435" starttime="20201102 09:20:14.434"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:14.435" starttime="20201102 09:20:12.237"></status>
</kw>
<msg timestamp="20201102 09:20:14.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:20:14.435" starttime="20201102 09:20:12.236"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:14.435" starttime="20201102 09:20:12.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:20:14.439" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:20:16.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:20:16.655" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:20:16.655" starttime="20201102 09:20:14.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:20:16.656" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:20:16.656" starttime="20201102 09:20:16.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:20:16.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:20:16.657" starttime="20201102 09:20:16.656"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:16.657" starttime="20201102 09:20:14.436"></status>
</kw>
<msg timestamp="20201102 09:20:16.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:20:16.657" starttime="20201102 09:20:14.436"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:16.657" starttime="20201102 09:20:14.435"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:20:16.658" critical="yes" starttime="20201102 09:20:12.230"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201102 09:20:16.659" starttime="20201102 09:19:47.766"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:21:56.349" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:21:56.349" starttime="20201102 09:21:56.348"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:21:56.349" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:21:56.349" starttime="20201102 09:21:56.349"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:56.349" starttime="20201102 09:21:56.348"></status>
</kw>
<msg timestamp="20201102 09:21:56.349" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:21:56.350" starttime="20201102 09:21:56.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:21:56.350" starttime="20201102 09:21:56.350"></status>
</kw>
<msg timestamp="20201102 09:21:56.350" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 09:21:56.351" starttime="20201102 09:21:56.350"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:56.351" starttime="20201102 09:21:56.347"></status>
</kw>
<msg timestamp="20201102 09:21:56.351" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:21:56.351" starttime="20201102 09:21:56.346"></status>
</kw>
<msg timestamp="20201102 09:21:56.351" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:21:56.351" starttime="20201102 09:21:56.345"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:21:56.352" level="INFO">${random} = 70305</msg>
<status status="PASS" endtime="20201102 09:21:56.352" starttime="20201102 09:21:56.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:21:56.357" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-70305 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:21:59.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:21:59.694" level="INFO">${output} = 2020-11-02 09:21:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:21:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 ...</msg>
<status status="PASS" endtime="20201102 09:21:59.694" starttime="20201102 09:21:56.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:21:59.695" level="INFO">2020-11-02 09:21:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:21:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 09:21:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 09:21:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:21:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-75A3AC51A0B7-&gt;bb2faaee-6ba6-4358-8090-967c43a93e34
2020-11-02 09:21:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201102 09:21:59.695" starttime="20201102 09:21:59.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:21:59.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:21:59.696" starttime="20201102 09:21:59.695"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:59.696" starttime="20201102 09:21:56.352"></status>
</kw>
<msg timestamp="20201102 09:21:59.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:21:59.696" starttime="20201102 09:21:56.352"></status>
</kw>
<msg timestamp="20201102 09:21:59.696" level="INFO">${result} = 2020-11-02 09:21:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:21:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 ...</msg>
<status status="PASS" endtime="20201102 09:21:59.697" starttime="20201102 09:21:56.352"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:21:59.700" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:22:01.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:22:01.513" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 09:20 ofs://om/volume1/bucket1/ozone-46627
-rw-...</msg>
<status status="PASS" endtime="20201102 09:22:01.513" starttime="20201102 09:21:59.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:22:01.515" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 09:20 ofs://om/volume1/bucket1/ozone-46627
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 09:21 ofs://om/volume1/bucket1/ozone-70305
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:20 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:21 ofs://om/volume1/bucket1/wordcount-35.txt</msg>
<status status="PASS" endtime="20201102 09:22:01.515" starttime="20201102 09:22:01.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:22:01.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:22:01.515" starttime="20201102 09:22:01.515"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:01.516" starttime="20201102 09:21:59.697"></status>
</kw>
<msg timestamp="20201102 09:22:01.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:22:01.516" starttime="20201102 09:21:59.697"></status>
</kw>
<msg timestamp="20201102 09:22:01.516" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 09:20 ofs://om/volume1/bucket1/ozone-46627
-rw-...</msg>
<status status="PASS" endtime="20201102 09:22:01.516" starttime="20201102 09:21:59.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:22:01.516" starttime="20201102 09:22:01.516"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 09:22:01.517" critical="yes" starttime="20201102 09:21:56.345"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 09:22:01.518" starttime="20201102 09:21:56.296"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:20:21.525" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:20:21.525" starttime="20201102 09:20:21.525"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:20:21.526" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:20:21.526" starttime="20201102 09:20:21.525"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:21.526" starttime="20201102 09:20:21.524"></status>
</kw>
<msg timestamp="20201102 09:20:21.526" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:20:21.526" starttime="20201102 09:20:21.518"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:21.527" starttime="20201102 09:20:21.518"></status>
</kw>
<msg timestamp="20201102 09:20:21.527" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:20:21.527" starttime="20201102 09:20:21.517"></status>
</kw>
<msg timestamp="20201102 09:20:21.527" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:20:21.527" starttime="20201102 09:20:21.516"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:20:21.527" level="INFO">${random} = 46627</msg>
<status status="PASS" endtime="20201102 09:20:21.528" starttime="20201102 09:20:21.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:20:21.535" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-46627 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:20:25.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:20:25.109" level="INFO">${output} = 2020-11-02 09:20:23 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:20:23 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 ...</msg>
<status status="PASS" endtime="20201102 09:20:25.109" starttime="20201102 09:20:21.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:20:25.110" level="INFO">2020-11-02 09:20:23 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:20:23 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 09:20:23 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 09:20:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:20:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4D6506FF86EA-&gt;bb2faaee-6ba6-4358-8090-967c43a93e34
2020-11-02 09:20:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201102 09:20:25.110" starttime="20201102 09:20:25.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:20:25.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:20:25.111" starttime="20201102 09:20:25.110"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:25.111" starttime="20201102 09:20:21.529"></status>
</kw>
<msg timestamp="20201102 09:20:25.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:20:25.111" starttime="20201102 09:20:21.528"></status>
</kw>
<msg timestamp="20201102 09:20:25.112" level="INFO">${result} = 2020-11-02 09:20:23 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:20:23 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 ...</msg>
<status status="PASS" endtime="20201102 09:20:25.112" starttime="20201102 09:20:21.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:20:25.115" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:20:26.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:20:26.932" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 09:20 o3fs://bucket1.volume1.om/ozone-46627
dr...</msg>
<status status="PASS" endtime="20201102 09:20:26.932" starttime="20201102 09:20:25.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:20:26.933" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 09:20 o3fs://bucket1.volume1.om/ozone-46627
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:20 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 09:20:26.934" starttime="20201102 09:20:26.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:20:26.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:20:26.934" starttime="20201102 09:20:26.934"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:26.934" starttime="20201102 09:20:25.113"></status>
</kw>
<msg timestamp="20201102 09:20:26.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:20:26.935" starttime="20201102 09:20:25.112"></status>
</kw>
<msg timestamp="20201102 09:20:26.935" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-02 09:20 o3fs://bucket1.volume1.om/ozone-46627
dr...</msg>
<status status="PASS" endtime="20201102 09:20:26.935" starttime="20201102 09:20:25.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:20:26.935" starttime="20201102 09:20:26.935"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 09:20:26.935" critical="yes" starttime="20201102 09:20:21.515"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 09:20:26.936" starttime="20201102 09:20:21.464"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:22:06.340" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:22:06.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:22:06.346" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:22:06.346" starttime="20201102 09:22:06.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:22:06.347" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:22:06.347" starttime="20201102 09:22:06.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:22:06.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:22:06.348" starttime="20201102 09:22:06.348"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:06.348" starttime="20201102 09:22:06.335"></status>
</kw>
<msg timestamp="20201102 09:22:06.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:22:06.349" starttime="20201102 09:22:06.335"></status>
</kw>
<msg timestamp="20201102 09:22:06.349" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:22:06.349" starttime="20201102 09:22:06.335"></status>
</kw>
<msg timestamp="20201102 09:22:06.349" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:22:06.349" starttime="20201102 09:22:06.334"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:22:06.352" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:22:06.352" starttime="20201102 09:22:06.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:22:06.353" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:22:06.353" starttime="20201102 09:22:06.352"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:06.353" starttime="20201102 09:22:06.351"></status>
</kw>
<msg timestamp="20201102 09:22:06.353" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:22:06.353" starttime="20201102 09:22:06.351"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:22:06.354" starttime="20201102 09:22:06.354"></status>
</kw>
<msg timestamp="20201102 09:22:06.354" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 09:22:06.354" starttime="20201102 09:22:06.353"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:06.354" starttime="20201102 09:22:06.350"></status>
</kw>
<msg timestamp="20201102 09:22:06.354" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:22:06.354" starttime="20201102 09:22:06.350"></status>
</kw>
<msg timestamp="20201102 09:22:06.354" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:22:06.355" starttime="20201102 09:22:06.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:22:06.359" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:22:42.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:22:42.942" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:22:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:22:08 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201102 09:22:42.942" starttime="20201102 09:22:06.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:22:42.943" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:22:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:22:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 09:22:08 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 09:22:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:22:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0F4A8FE09161-&gt;bb2faaee-6ba6-4358-8090-967c43a93e34
2020-11-02 09:22:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 09:22:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-02 09:22:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 09:22:12 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-02 09:22:12 INFO  JobSubmitter:198 - number of splits:3
2020-11-02 09:22:12 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604308752369_0003
2020-11-02 09:22:12 INFO  YarnClientImpl:273 - Submitted application application_1604308752369_0003
2020-11-02 09:22:12 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604308752369_0003/
2020-11-02 09:22:12 INFO  Job:1339 - Running job: job_1604308752369_0003
2020-11-02 09:22:20 INFO  Job:1360 - Job job_1604308752369_0003 running in uber mode : false
2020-11-02 09:22:20 INFO  Job:1367 -  map 0% reduce 0%
2020-11-02 09:22:27 INFO  Job:1367 -  map 33% reduce 0%
2020-11-02 09:22:32 INFO  Job:1367 -  map 67% reduce 0%
2020-11-02 09:22:37 INFO  Job:1367 -  map 100% reduce 0%
2020-11-02 09:22:41 INFO  Job:1367 -  map 100% reduce 100%
2020-11-02 09:22:42 INFO  Job:1378 - Job job_1604308752369_0003 completed successfully
2020-11-02 09:22:42 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39720
		Total time spent by all reduces in occupied slots (ms)=14432
		Total time spent by all map tasks (ms)=9930
		Total time spent by all reduce tasks (ms)=3608
		Total vcore-milliseconds taken by all map tasks=9930
		Total vcore-milliseconds taken by all reduce tasks=3608
		Total megabyte-milliseconds taken by all map tasks=40673280
		Total megabyte-milliseconds taken by all reduce tasks=14778368
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=612
		CPU time spent (ms)=6760
		Physical memory (bytes) snapshot=1114042368
		Virtual memory (bytes) snapshot=16036122624
		Total committed heap usage (bytes)=1049624576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.432 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201102 09:22:42.943" starttime="20201102 09:22:42.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:22:42.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:22:42.944" starttime="20201102 09:22:42.944"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:42.944" starttime="20201102 09:22:06.355"></status>
</kw>
<msg timestamp="20201102 09:22:42.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:22:42.945" starttime="20201102 09:22:06.355"></status>
</kw>
<msg timestamp="20201102 09:22:42.945" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:22:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:22:08 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201102 09:22:42.945" starttime="20201102 09:22:06.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:22:42.945" starttime="20201102 09:22:42.945"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:22:42.946" critical="yes" starttime="20201102 09:22:06.334"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:22:42.950" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:22:42.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:22:42.955" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:22:42.955" starttime="20201102 09:22:42.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:22:42.956" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:22:42.956" starttime="20201102 09:22:42.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:22:42.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:22:42.957" starttime="20201102 09:22:42.957"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:42.957" starttime="20201102 09:22:42.948"></status>
</kw>
<msg timestamp="20201102 09:22:42.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:22:42.958" starttime="20201102 09:22:42.947"></status>
</kw>
<msg timestamp="20201102 09:22:42.958" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:22:42.958" starttime="20201102 09:22:42.947"></status>
</kw>
<msg timestamp="20201102 09:22:42.958" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:22:42.958" starttime="20201102 09:22:42.947"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:22:42.958" level="INFO">${random} = 05</msg>
<status status="PASS" endtime="20201102 09:22:42.958" starttime="20201102 09:22:42.958"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:22:42.962" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:22:42.962" starttime="20201102 09:22:42.962"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:22:42.962" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:22:42.963" starttime="20201102 09:22:42.962"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:42.963" starttime="20201102 09:22:42.961"></status>
</kw>
<msg timestamp="20201102 09:22:42.963" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:22:42.963" starttime="20201102 09:22:42.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:22:42.964" starttime="20201102 09:22:42.963"></status>
</kw>
<msg timestamp="20201102 09:22:42.964" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 09:22:42.964" starttime="20201102 09:22:42.963"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:42.964" starttime="20201102 09:22:42.960"></status>
</kw>
<msg timestamp="20201102 09:22:42.964" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:22:42.964" starttime="20201102 09:22:42.959"></status>
</kw>
<msg timestamp="20201102 09:22:42.964" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:22:42.964" starttime="20201102 09:22:42.959"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:22:42.967" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:22:42.967" starttime="20201102 09:22:42.967"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:22:42.967" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:22:42.967" starttime="20201102 09:22:42.967"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:42.968" starttime="20201102 09:22:42.966"></status>
</kw>
<msg timestamp="20201102 09:22:42.968" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:22:42.968" starttime="20201102 09:22:42.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:22:42.969" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201102 09:22:42.969" starttime="20201102 09:22:42.969"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:22:42.970" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201102 09:22:42.970" starttime="20201102 09:22:42.969"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:42.970" starttime="20201102 09:22:42.968"></status>
</kw>
<msg timestamp="20201102 09:22:42.970" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201102 09:22:42.970" starttime="20201102 09:22:42.968"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:42.970" starttime="20201102 09:22:42.965"></status>
</kw>
<msg timestamp="20201102 09:22:42.970" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 09:22:42.970" starttime="20201102 09:22:42.965"></status>
</kw>
<msg timestamp="20201102 09:22:42.971" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 09:22:42.971" starttime="20201102 09:22:42.964"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:22:42.974" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:22:42.974" starttime="20201102 09:22:42.973"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:22:42.974" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:22:42.974" starttime="20201102 09:22:42.974"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:42.974" starttime="20201102 09:22:42.973"></status>
</kw>
<msg timestamp="20201102 09:22:42.974" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:22:42.974" starttime="20201102 09:22:42.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:22:42.976" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201102 09:22:42.976" starttime="20201102 09:22:42.975"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:22:42.976" level="INFO">${result} = /wordcount-05.txt</msg>
<status status="PASS" endtime="20201102 09:22:42.976" starttime="20201102 09:22:42.976"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:42.976" starttime="20201102 09:22:42.975"></status>
</kw>
<msg timestamp="20201102 09:22:42.976" level="INFO">${path_with_leading} = /wordcount-05.txt</msg>
<status status="PASS" endtime="20201102 09:22:42.976" starttime="20201102 09:22:42.975"></status>
</kw>
<status status="PASS" endtime="20201102 09:22:42.977" starttime="20201102 09:22:42.972"></status>
</kw>
<msg timestamp="20201102 09:22:42.977" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-05.txt</msg>
<status status="PASS" endtime="20201102 09:22:42.977" starttime="20201102 09:22:42.971"></status>
</kw>
<msg timestamp="20201102 09:22:42.977" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-05.txt</msg>
<status status="PASS" endtime="20201102 09:22:42.977" starttime="20201102 09:22:42.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:22:42.980" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-05.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:23:16.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:23:16.881" level="INFO">${output} = 2020-11-02 09:22:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-02 09:22:45 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201102 09:23:16.881" starttime="20201102 09:22:42.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:23:16.882" level="INFO">2020-11-02 09:22:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-02 09:22:45 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 09:22:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:22:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 09:22:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 09:22:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:22:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B0520D91C1DE-&gt;bb2faaee-6ba6-4358-8090-967c43a93e34
2020-11-02 09:22:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 09:22:46 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-02 09:22:46 INFO  JobSubmitter:198 - number of splits:3
2020-11-02 09:22:46 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604308752369_0004
2020-11-02 09:22:47 INFO  YarnClientImpl:273 - Submitted application application_1604308752369_0004
2020-11-02 09:22:47 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604308752369_0004/
2020-11-02 09:22:47 INFO  Job:1339 - Running job: job_1604308752369_0004
2020-11-02 09:22:55 INFO  Job:1360 - Job job_1604308752369_0004 running in uber mode : false
2020-11-02 09:22:55 INFO  Job:1367 -  map 0% reduce 0%
2020-11-02 09:23:01 INFO  Job:1367 -  map 33% reduce 0%
2020-11-02 09:23:06 INFO  Job:1367 -  map 67% reduce 0%
2020-11-02 09:23:11 INFO  Job:1367 -  map 100% reduce 0%
2020-11-02 09:23:15 INFO  Job:1367 -  map 100% reduce 100%
2020-11-02 09:23:16 INFO  Job:1378 - Job job_1604308752369_0004 completed successfully
2020-11-02 09:23:16 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40564
		Total time spent by all reduces in occupied slots (ms)=14232
		Total time spent by all map tasks (ms)=10141
		Total time spent by all reduce tasks (ms)=3558
		Total vcore-milliseconds taken by all map tasks=10141
		Total vcore-milliseconds taken by all reduce tasks=3558
		Total megabyte-milliseconds taken by all map tasks=41537536
		Total megabyte-milliseconds taken by all reduce tasks=14573568
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=611
		CPU time spent (ms)=7370
		Physical memory (bytes) snapshot=1139056640
		Virtual memory (bytes) snapshot=16061558784
		Total committed heap usage (bytes)=1136656384
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201102 09:23:16.883" starttime="20201102 09:23:16.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:23:16.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:23:16.883" starttime="20201102 09:23:16.883"></status>
</kw>
<status status="PASS" endtime="20201102 09:23:16.884" starttime="20201102 09:22:42.978"></status>
</kw>
<msg timestamp="20201102 09:23:16.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:23:16.884" starttime="20201102 09:22:42.978"></status>
</kw>
<msg timestamp="20201102 09:23:16.884" level="INFO">${output} = 2020-11-02 09:22:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-02 09:22:45 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201102 09:23:16.884" starttime="20201102 09:22:42.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 09:23:16.885" starttime="20201102 09:23:16.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:23:16.885" starttime="20201102 09:23:16.885"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:23:16.885" critical="yes" starttime="20201102 09:22:42.946"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 09:23:16.887" starttime="20201102 09:22:06.286"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:20:31.752" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:20:31.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:20:31.759" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:20:31.759" starttime="20201102 09:20:31.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:20:31.760" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:20:31.760" starttime="20201102 09:20:31.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:20:31.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:20:31.761" starttime="20201102 09:20:31.760"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:31.761" starttime="20201102 09:20:31.748"></status>
</kw>
<msg timestamp="20201102 09:20:31.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:20:31.761" starttime="20201102 09:20:31.747"></status>
</kw>
<msg timestamp="20201102 09:20:31.762" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:20:31.762" starttime="20201102 09:20:31.747"></status>
</kw>
<msg timestamp="20201102 09:20:31.762" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:20:31.762" starttime="20201102 09:20:31.746"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:20:31.765" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:20:31.765" starttime="20201102 09:20:31.764"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:20:31.766" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:20:31.766" starttime="20201102 09:20:31.765"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:31.766" starttime="20201102 09:20:31.764"></status>
</kw>
<msg timestamp="20201102 09:20:31.766" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:20:31.766" starttime="20201102 09:20:31.764"></status>
</kw>
<status status="PASS" endtime="20201102 09:20:31.766" starttime="20201102 09:20:31.763"></status>
</kw>
<msg timestamp="20201102 09:20:31.766" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:20:31.766" starttime="20201102 09:20:31.762"></status>
</kw>
<msg timestamp="20201102 09:20:31.766" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:20:31.766" starttime="20201102 09:20:31.762"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:20:31.771" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:21:11.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:21:11.641" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:20:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:20:33 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201102 09:21:11.641" starttime="20201102 09:20:31.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:21:11.642" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:20:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:20:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 09:20:33 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 09:20:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:20:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B8561451AD02-&gt;bb2faaee-6ba6-4358-8090-967c43a93e34
2020-11-02 09:20:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 09:20:37 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-02 09:20:37 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-02 09:20:38 INFO  JobSubmitter:198 - number of splits:3
2020-11-02 09:20:38 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604308752369_0001
2020-11-02 09:20:38 INFO  YarnClientImpl:273 - Submitted application application_1604308752369_0001
2020-11-02 09:20:38 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604308752369_0001/
2020-11-02 09:20:38 INFO  Job:1339 - Running job: job_1604308752369_0001
2020-11-02 09:20:49 INFO  Job:1360 - Job job_1604308752369_0001 running in uber mode : false
2020-11-02 09:20:49 INFO  Job:1367 -  map 0% reduce 0%
2020-11-02 09:20:55 INFO  Job:1367 -  map 33% reduce 0%
2020-11-02 09:21:00 INFO  Job:1367 -  map 67% reduce 0%
2020-11-02 09:21:05 INFO  Job:1367 -  map 100% reduce 0%
2020-11-02 09:21:10 INFO  Job:1367 -  map 100% reduce 100%
2020-11-02 09:21:11 INFO  Job:1378 - Job job_1604308752369_0001 completed successfully
2020-11-02 09:21:11 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40144
		Total time spent by all reduces in occupied slots (ms)=15208
		Total time spent by all map tasks (ms)=10036
		Total time spent by all reduce tasks (ms)=3802
		Total vcore-milliseconds taken by all map tasks=10036
		Total vcore-milliseconds taken by all reduce tasks=3802
		Total megabyte-milliseconds taken by all map tasks=41107456
		Total megabyte-milliseconds taken by all reduce tasks=15572992
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=694
		CPU time spent (ms)=7050
		Physical memory (bytes) snapshot=1142968320
		Virtual memory (bytes) snapshot=16069844992
		Total committed heap usage (bytes)=1043857408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.671 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201102 09:21:11.643" starttime="20201102 09:21:11.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:21:11.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:21:11.643" starttime="20201102 09:21:11.643"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:11.643" starttime="20201102 09:20:31.767"></status>
</kw>
<msg timestamp="20201102 09:21:11.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:21:11.644" starttime="20201102 09:20:31.767"></status>
</kw>
<msg timestamp="20201102 09:21:11.644" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:20:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:20:33 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201102 09:21:11.644" starttime="20201102 09:20:31.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:21:11.645" starttime="20201102 09:21:11.644"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:21:11.645" critical="yes" starttime="20201102 09:20:31.746"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:21:11.651" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:21:11.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:21:11.656" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:21:11.656" starttime="20201102 09:21:11.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:21:11.657" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:21:11.657" starttime="20201102 09:21:11.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:21:11.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:21:11.658" starttime="20201102 09:21:11.657"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:11.658" starttime="20201102 09:21:11.647"></status>
</kw>
<msg timestamp="20201102 09:21:11.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:21:11.658" starttime="20201102 09:21:11.647"></status>
</kw>
<msg timestamp="20201102 09:21:11.658" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:21:11.658" starttime="20201102 09:21:11.647"></status>
</kw>
<msg timestamp="20201102 09:21:11.658" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201102 09:21:11.658" starttime="20201102 09:21:11.646"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:21:11.659" level="INFO">${random} = 35</msg>
<status status="PASS" endtime="20201102 09:21:11.659" starttime="20201102 09:21:11.658"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:21:11.662" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:21:11.662" starttime="20201102 09:21:11.662"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:21:11.663" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:21:11.663" starttime="20201102 09:21:11.662"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:11.663" starttime="20201102 09:21:11.662"></status>
</kw>
<msg timestamp="20201102 09:21:11.663" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:21:11.663" starttime="20201102 09:21:11.661"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:11.663" starttime="20201102 09:21:11.660"></status>
</kw>
<msg timestamp="20201102 09:21:11.663" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:21:11.663" starttime="20201102 09:21:11.660"></status>
</kw>
<msg timestamp="20201102 09:21:11.664" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:21:11.664" starttime="20201102 09:21:11.659"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:21:11.666" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:21:11.666" starttime="20201102 09:21:11.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:21:11.667" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:21:11.667" starttime="20201102 09:21:11.667"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:11.667" starttime="20201102 09:21:11.666"></status>
</kw>
<msg timestamp="20201102 09:21:11.667" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:21:11.667" starttime="20201102 09:21:11.665"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:11.667" starttime="20201102 09:21:11.665"></status>
</kw>
<msg timestamp="20201102 09:21:11.668" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 09:21:11.668" starttime="20201102 09:21:11.664"></status>
</kw>
<msg timestamp="20201102 09:21:11.668" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 09:21:11.668" starttime="20201102 09:21:11.664"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:21:11.671" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:21:11.671" starttime="20201102 09:21:11.670"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:21:11.671" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:21:11.671" starttime="20201102 09:21:11.671"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:11.671" starttime="20201102 09:21:11.670"></status>
</kw>
<msg timestamp="20201102 09:21:11.671" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:21:11.671" starttime="20201102 09:21:11.669"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:11.672" starttime="20201102 09:21:11.669"></status>
</kw>
<msg timestamp="20201102 09:21:11.672" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-35.txt</msg>
<status status="PASS" endtime="20201102 09:21:11.672" starttime="20201102 09:21:11.668"></status>
</kw>
<msg timestamp="20201102 09:21:11.672" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-35.txt</msg>
<status status="PASS" endtime="20201102 09:21:11.672" starttime="20201102 09:21:11.668"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:21:11.676" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-35.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:21:51.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:21:51.524" level="INFO">${output} = 2020-11-02 09:21:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-02 09:21:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201102 09:21:51.524" starttime="20201102 09:21:11.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:21:51.525" level="INFO">2020-11-02 09:21:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-02 09:21:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 09:21:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:21:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-02 09:21:14 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-02 09:21:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:21:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0BBE3CA1806B-&gt;bb2faaee-6ba6-4358-8090-967c43a93e34
2020-11-02 09:21:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 09:21:15 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-02 09:21:15 INFO  JobSubmitter:198 - number of splits:3
2020-11-02 09:21:15 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604308752369_0002
2020-11-02 09:21:15 INFO  YarnClientImpl:273 - Submitted application application_1604308752369_0002
2020-11-02 09:21:15 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604308752369_0002/
2020-11-02 09:21:15 INFO  Job:1339 - Running job: job_1604308752369_0002
2020-11-02 09:21:23 INFO  Job:1360 - Job job_1604308752369_0002 running in uber mode : false
2020-11-02 09:21:23 INFO  Job:1367 -  map 0% reduce 0%
2020-11-02 09:21:30 INFO  Job:1367 -  map 33% reduce 0%
2020-11-02 09:21:34 INFO  Job:1367 -  map 67% reduce 0%
2020-11-02 09:21:39 INFO  Job:1367 -  map 100% reduce 0%
2020-11-02 09:21:47 INFO  Job:1367 -  map 100% reduce 100%
2020-11-02 09:21:51 INFO  Job:1378 - Job job_1604308752369_0002 completed successfully
2020-11-02 09:21:51 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39532
		Total time spent by all reduces in occupied slots (ms)=24816
		Total time spent by all map tasks (ms)=9883
		Total time spent by all reduce tasks (ms)=6204
		Total vcore-milliseconds taken by all map tasks=9883
		Total vcore-milliseconds taken by all reduce tasks=6204
		Total megabyte-milliseconds taken by all map tasks=40480768
		Total megabyte-milliseconds taken by all reduce tasks=25411584
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=618
		CPU time spent (ms)=7590
		Physical memory (bytes) snapshot=1148633088
		Virtual memory (bytes) snapshot=16069242880
		Total committed heap usage (bytes)=1048051712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201102 09:21:51.526" starttime="20201102 09:21:51.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:21:51.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:21:51.526" starttime="20201102 09:21:51.526"></status>
</kw>
<status status="PASS" endtime="20201102 09:21:51.526" starttime="20201102 09:21:11.673"></status>
</kw>
<msg timestamp="20201102 09:21:51.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:21:51.527" starttime="20201102 09:21:11.673"></status>
</kw>
<msg timestamp="20201102 09:21:51.527" level="INFO">${output} = 2020-11-02 09:21:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-11-02 09:21:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201102 09:21:51.527" starttime="20201102 09:21:11.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 09:21:51.528" starttime="20201102 09:21:51.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:21:51.528" starttime="20201102 09:21:51.528"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:21:51.528" critical="yes" starttime="20201102 09:21:11.646"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 09:21:51.529" starttime="20201102 09:20:31.697"></status>
</suite>
<status status="PASS" elapsedtime="190020" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:22.762" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:24:25.008" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 09:24:25.008" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 09:24:25.008" starttime="20201102 09:24:22.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:24:25.009" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 09:24:25.010" starttime="20201102 09:24:25.009"></status>
</kw>
<msg timestamp="20201102 09:24:25.010" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 09:24:25.010" starttime="20201102 09:24:22.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:25.015" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:24:27.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:24:27.200" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:24:27.200" starttime="20201102 09:24:25.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:24:27.201" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:24:27.201" starttime="20201102 09:24:27.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:24:27.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:24:27.202" starttime="20201102 09:24:27.201"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:27.202" starttime="20201102 09:24:25.012"></status>
</kw>
<msg timestamp="20201102 09:24:27.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:24:27.202" starttime="20201102 09:24:25.011"></status>
</kw>
<msg timestamp="20201102 09:24:27.203" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201102 09:24:27.203" starttime="20201102 09:24:25.011"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 09:24:27.203" starttime="20201102 09:24:27.203"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:27.203" starttime="20201102 09:24:25.011"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:27.203" starttime="20201102 09:24:25.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:27.208" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:24:29.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:24:29.201" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:24:29.201" starttime="20201102 09:24:27.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:24:29.202" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:24:29.202" starttime="20201102 09:24:29.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:24:29.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:24:29.203" starttime="20201102 09:24:29.202"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:29.203" starttime="20201102 09:24:27.205"></status>
</kw>
<msg timestamp="20201102 09:24:29.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:24:29.203" starttime="20201102 09:24:27.205"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:29.204" starttime="20201102 09:24:27.204"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:29.204" starttime="20201102 09:24:27.204"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:29.204" starttime="20201102 09:24:27.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 09:24:29.204" starttime="20201102 09:24:29.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:29.208" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:24:31.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:24:31.492" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:24:29.165Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 09:24:31.492" starttime="20201102 09:24:29.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:24:31.493" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:24:29.165Z",
  "modificationTime" : "2020-11-02T09:24:29.165Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 09:24:31.493" starttime="20201102 09:24:31.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:24:31.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:24:31.494" starttime="20201102 09:24:31.493"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:31.494" starttime="20201102 09:24:29.205"></status>
</kw>
<msg timestamp="20201102 09:24:31.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:24:31.494" starttime="20201102 09:24:29.205"></status>
</kw>
<msg timestamp="20201102 09:24:31.494" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:24:29.165Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 09:24:31.494" starttime="20201102 09:24:29.204"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201102 09:24:31.495" starttime="20201102 09:24:31.495"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:24:31.499" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:24:31.499" starttime="20201102 09:24:31.498"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:24:31.499" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:24:31.499" starttime="20201102 09:24:31.499"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:31.500" starttime="20201102 09:24:31.498"></status>
</kw>
<msg timestamp="20201102 09:24:31.500" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:24:31.500" starttime="20201102 09:24:31.497"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:31.500" starttime="20201102 09:24:31.497"></status>
</kw>
<msg timestamp="20201102 09:24:31.500" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 09:24:31.500" starttime="20201102 09:24:31.496"></status>
</kw>
<msg timestamp="20201102 09:24:31.500" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 09:24:31.501" starttime="20201102 09:24:31.495"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:31.504" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:24:33.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:24:33.733" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:24:33.733" starttime="20201102 09:24:31.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:24:33.734" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:24:33.735" starttime="20201102 09:24:33.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:24:33.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:24:33.735" starttime="20201102 09:24:33.735"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:33.736" starttime="20201102 09:24:31.501"></status>
</kw>
<msg timestamp="20201102 09:24:33.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:24:33.736" starttime="20201102 09:24:31.501"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:33.736" starttime="20201102 09:24:31.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:33.740" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:24:39.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:24:39.280" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:24:39.280" starttime="20201102 09:24:33.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:24:39.281" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:24:39.282" starttime="20201102 09:24:39.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:24:39.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:24:39.282" starttime="20201102 09:24:39.282"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:39.282" starttime="20201102 09:24:33.737"></status>
</kw>
<msg timestamp="20201102 09:24:39.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:24:39.283" starttime="20201102 09:24:33.737"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:39.283" starttime="20201102 09:24:33.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:39.288" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:24:43.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:24:43.190" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:24:43.190" starttime="20201102 09:24:39.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:24:43.192" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:24:43.192" starttime="20201102 09:24:43.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:24:43.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:24:43.192" starttime="20201102 09:24:43.192"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:43.193" starttime="20201102 09:24:39.284"></status>
</kw>
<msg timestamp="20201102 09:24:43.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:24:43.193" starttime="20201102 09:24:39.284"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:43.193" starttime="20201102 09:24:39.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:43.197" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:24:47.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:24:47.472" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:24:47.472" starttime="20201102 09:24:43.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:24:47.473" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:24:47.473" starttime="20201102 09:24:47.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:24:47.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:24:47.474" starttime="20201102 09:24:47.474"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:47.474" starttime="20201102 09:24:43.194"></status>
</kw>
<msg timestamp="20201102 09:24:47.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:24:47.475" starttime="20201102 09:24:43.194"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:47.475" starttime="20201102 09:24:43.193"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:24:47.475" critical="yes" starttime="20201102 09:24:22.755"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:24:47.480" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:24:47.480" starttime="20201102 09:24:47.480"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:24:47.481" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:24:47.481" starttime="20201102 09:24:47.480"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:47.481" starttime="20201102 09:24:47.479"></status>
</kw>
<msg timestamp="20201102 09:24:47.481" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:24:47.481" starttime="20201102 09:24:47.478"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:47.481" starttime="20201102 09:24:47.478"></status>
</kw>
<msg timestamp="20201102 09:24:47.482" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 09:24:47.482" starttime="20201102 09:24:47.477"></status>
</kw>
<msg timestamp="20201102 09:24:47.482" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 09:24:47.482" starttime="20201102 09:24:47.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:47.486" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:24:49.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:24:49.470" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:24:49.470" starttime="20201102 09:24:47.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:24:49.471" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:24:49.472" starttime="20201102 09:24:49.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:24:49.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:24:49.472" starttime="20201102 09:24:49.472"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:49.473" starttime="20201102 09:24:47.483"></status>
</kw>
<msg timestamp="20201102 09:24:49.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:24:49.473" starttime="20201102 09:24:47.482"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:49.473" starttime="20201102 09:24:47.482"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:49.478" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:24:51.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:24:51.705" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:24:51.705" starttime="20201102 09:24:49.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:24:51.707" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:24:51.707" starttime="20201102 09:24:51.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:24:51.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:24:51.707" starttime="20201102 09:24:51.707"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:51.708" starttime="20201102 09:24:49.474"></status>
</kw>
<msg timestamp="20201102 09:24:51.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:24:51.708" starttime="20201102 09:24:49.474"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:51.708" starttime="20201102 09:24:49.473"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:24:51.708" critical="yes" starttime="20201102 09:24:47.476"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201102 09:24:51.710" starttime="20201102 09:24:22.701"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:26:37.947" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:26:37.948" starttime="20201102 09:26:37.947"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:26:37.948" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:26:37.948" starttime="20201102 09:26:37.948"></status>
</kw>
<status status="PASS" endtime="20201102 09:26:37.948" starttime="20201102 09:26:37.947"></status>
</kw>
<msg timestamp="20201102 09:26:37.948" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:26:37.948" starttime="20201102 09:26:37.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:26:37.949" starttime="20201102 09:26:37.949"></status>
</kw>
<msg timestamp="20201102 09:26:37.949" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 09:26:37.950" starttime="20201102 09:26:37.949"></status>
</kw>
<status status="PASS" endtime="20201102 09:26:37.950" starttime="20201102 09:26:37.946"></status>
</kw>
<msg timestamp="20201102 09:26:37.950" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:26:37.950" starttime="20201102 09:26:37.945"></status>
</kw>
<msg timestamp="20201102 09:26:37.950" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:26:37.950" starttime="20201102 09:26:37.944"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:26:37.951" level="INFO">${random} = 13698</msg>
<status status="PASS" endtime="20201102 09:26:37.951" starttime="20201102 09:26:37.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:26:37.956" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-13698 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:26:41.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:26:41.538" level="INFO">${output} = 2020-11-02 09:26:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:26:41.539" starttime="20201102 09:26:37.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:26:41.540" level="INFO">2020-11-02 09:26:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 09:26:40 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:26:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:26:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:26:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:26:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-373ABD51AEA0-&gt;a0a08751-2b37-43f8-85bc-b25ed505aadf
2020-11-02 09:26:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 09:26:41 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 09:26:41.540" starttime="20201102 09:26:41.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:26:41.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:26:41.540" starttime="20201102 09:26:41.540"></status>
</kw>
<status status="PASS" endtime="20201102 09:26:41.541" starttime="20201102 09:26:37.951"></status>
</kw>
<msg timestamp="20201102 09:26:41.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:26:41.541" starttime="20201102 09:26:37.951"></status>
</kw>
<msg timestamp="20201102 09:26:41.541" level="INFO">${result} = 2020-11-02 09:26:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:26:41.541" starttime="20201102 09:26:37.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:26:41.544" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:26:43.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:26:43.315" level="INFO">${output} = 2020-11-02 09:26:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:26:43.315" starttime="20201102 09:26:41.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:26:43.316" level="INFO">2020-11-02 09:26:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:43 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-02 09:26 ofs://om/volume1/bucket1/ozone-13698
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-02 09:25 ofs://om/volume1/bucket1/ozone-46808
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:24 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:26 ofs://om/volume1/bucket1/wordcount-49.txt
2020-11-02 09:26:43 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 09:26:43.316" starttime="20201102 09:26:43.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:26:43.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:26:43.317" starttime="20201102 09:26:43.317"></status>
</kw>
<status status="PASS" endtime="20201102 09:26:43.317" starttime="20201102 09:26:41.542"></status>
</kw>
<msg timestamp="20201102 09:26:43.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:26:43.317" starttime="20201102 09:26:41.542"></status>
</kw>
<msg timestamp="20201102 09:26:43.318" level="INFO">${result} = 2020-11-02 09:26:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:26:43.318" starttime="20201102 09:26:41.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:26:43.318" starttime="20201102 09:26:43.318"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 09:26:43.318" critical="yes" starttime="20201102 09:26:37.943"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 09:26:43.319" starttime="20201102 09:26:37.893"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:24:56.619" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:24:56.619" starttime="20201102 09:24:56.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:24:56.620" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:24:56.620" starttime="20201102 09:24:56.620"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:56.620" starttime="20201102 09:24:56.619"></status>
</kw>
<msg timestamp="20201102 09:24:56.620" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:24:56.620" starttime="20201102 09:24:56.618"></status>
</kw>
<status status="PASS" endtime="20201102 09:24:56.620" starttime="20201102 09:24:56.618"></status>
</kw>
<msg timestamp="20201102 09:24:56.621" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:24:56.621" starttime="20201102 09:24:56.617"></status>
</kw>
<msg timestamp="20201102 09:24:56.621" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:24:56.621" starttime="20201102 09:24:56.616"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:24:56.621" level="INFO">${random} = 46808</msg>
<status status="PASS" endtime="20201102 09:24:56.621" starttime="20201102 09:24:56.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:24:56.626" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-46808 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:25:02.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:25:02.799" level="INFO">${output} = 2020-11-02 09:24:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:24:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:24:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:25:02.799" starttime="20201102 09:24:56.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:25:02.800" level="INFO">2020-11-02 09:24:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:24:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:24:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:24:58 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 09:24:58 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:24:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:24:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:24:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:24:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E2013CDA5E98-&gt;a0a08751-2b37-43f8-85bc-b25ed505aadf
2020-11-02 09:24:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 09:25:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 09:25:02.800" starttime="20201102 09:25:02.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:25:02.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:25:02.801" starttime="20201102 09:25:02.800"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:02.801" starttime="20201102 09:24:56.622"></status>
</kw>
<msg timestamp="20201102 09:25:02.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:25:02.801" starttime="20201102 09:24:56.622"></status>
</kw>
<msg timestamp="20201102 09:25:02.801" level="INFO">${result} = 2020-11-02 09:24:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:24:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:24:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:25:02.801" starttime="20201102 09:24:56.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:25:02.805" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:25:04.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:25:04.540" level="INFO">${output} = 2020-11-02 09:25:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:25:04.540" starttime="20201102 09:25:02.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:25:04.541" level="INFO">2020-11-02 09:25:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:04 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-02 09:25 o3fs://bucket1.volume1.om/ozone-46808
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:24 o3fs://bucket1.volume1.om/user
2020-11-02 09:25:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 09:25:04.541" starttime="20201102 09:25:04.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:25:04.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:25:04.542" starttime="20201102 09:25:04.542"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:04.542" starttime="20201102 09:25:02.802"></status>
</kw>
<msg timestamp="20201102 09:25:04.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:25:04.542" starttime="20201102 09:25:02.802"></status>
</kw>
<msg timestamp="20201102 09:25:04.543" level="INFO">${result} = 2020-11-02 09:25:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:25:04.543" starttime="20201102 09:25:02.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:25:04.543" starttime="20201102 09:25:04.543"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 09:25:04.544" critical="yes" starttime="20201102 09:24:56.615"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 09:25:04.545" starttime="20201102 09:24:56.568"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:26:48.194" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:26:48.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:26:48.201" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:26:48.201" starttime="20201102 09:26:48.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:26:48.202" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:26:48.202" starttime="20201102 09:26:48.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:26:48.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:26:48.203" starttime="20201102 09:26:48.202"></status>
</kw>
<status status="PASS" endtime="20201102 09:26:48.203" starttime="20201102 09:26:48.190"></status>
</kw>
<msg timestamp="20201102 09:26:48.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:26:48.203" starttime="20201102 09:26:48.189"></status>
</kw>
<msg timestamp="20201102 09:26:48.204" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:26:48.204" starttime="20201102 09:26:48.189"></status>
</kw>
<msg timestamp="20201102 09:26:48.205" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:26:48.205" starttime="20201102 09:26:48.189"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:26:48.210" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:26:48.210" starttime="20201102 09:26:48.208"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:26:48.210" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:26:48.211" starttime="20201102 09:26:48.210"></status>
</kw>
<status status="PASS" endtime="20201102 09:26:48.211" starttime="20201102 09:26:48.207"></status>
</kw>
<msg timestamp="20201102 09:26:48.211" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:26:48.211" starttime="20201102 09:26:48.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:26:48.212" starttime="20201102 09:26:48.211"></status>
</kw>
<msg timestamp="20201102 09:26:48.212" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 09:26:48.212" starttime="20201102 09:26:48.211"></status>
</kw>
<status status="PASS" endtime="20201102 09:26:48.212" starttime="20201102 09:26:48.206"></status>
</kw>
<msg timestamp="20201102 09:26:48.212" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:26:48.212" starttime="20201102 09:26:48.205"></status>
</kw>
<msg timestamp="20201102 09:26:48.212" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:26:48.212" starttime="20201102 09:26:48.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:26:48.215" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:27:24.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:27:24.054" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:26:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26...</msg>
<status status="PASS" endtime="20201102 09:27:24.055" starttime="20201102 09:26:48.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:27:24.056" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:26:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:50 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 09:26:50 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:26:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:26:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:26:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:26:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AEBDAFD65469-&gt;a0a08751-2b37-43f8-85bc-b25ed505aadf
2020-11-02 09:26:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 09:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:51 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-02 09:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 09:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 09:26:52 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 09:26:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604309042374_0003
2020-11-02 09:26:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 09:26:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:52 INFO  Configuration:2752 - resource-types.xml not found
2020-11-02 09:26:52 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-02 09:26:52 INFO  YarnClientImpl:324 - Submitted application application_1604309042374_0003
2020-11-02 09:26:52 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604309042374_0003/
2020-11-02 09:26:52 INFO  Job:1619 - Running job: job_1604309042374_0003
2020-11-02 09:26:59 INFO  Job:1640 - Job job_1604309042374_0003 running in uber mode : false
2020-11-02 09:26:59 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 09:27:07 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 09:27:13 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 09:27:18 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 09:27:22 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 09:27:23 INFO  Job:1658 - Job job_1604309042374_0003 completed successfully
2020-11-02 09:27:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:23 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40960
		Total time spent by all reduces in occupied slots (ms)=15556
		Total time spent by all map tasks (ms)=10240
		Total time spent by all reduce tasks (ms)=3889
		Total vcore-milliseconds taken by all map tasks=10240
		Total vcore-milliseconds taken by all reduce tasks=3889
		Total megabyte-milliseconds taken by all map tasks=41943040
		Total megabyte-milliseconds taken by all reduce tasks=15929344
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=701
		CPU time spent (ms)=7200
		Physical memory (bytes) snapshot=1168191488
		Virtual memory (bytes) snapshot=16068534272
		Total committed heap usage (bytes)=1064828928
		Peak Map Physical memory (bytes)=289554432
		Peak Map Virtual memory (bytes)=4010946560
		Peak Reduce Physical memory (bytes)=301838336
		Peak Reduce Virtual memory (bytes)=4037722112
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.006 seconds
2020-11-02 09:27:23 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-02 09:27:23 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 09:27:24.056" starttime="20201102 09:27:24.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:27:24.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:27:24.057" starttime="20201102 09:27:24.057"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:24.058" starttime="20201102 09:26:48.213"></status>
</kw>
<msg timestamp="20201102 09:27:24.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:27:24.058" starttime="20201102 09:26:48.213"></status>
</kw>
<msg timestamp="20201102 09:27:24.059" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:26:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26...</msg>
<status status="PASS" endtime="20201102 09:27:24.059" starttime="20201102 09:26:48.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:27:24.059" starttime="20201102 09:27:24.059"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:27:24.060" critical="yes" starttime="20201102 09:26:48.188"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:27:24.069" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:27:24.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:27:24.073" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:27:24.073" starttime="20201102 09:27:24.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:27:24.074" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:27:24.074" starttime="20201102 09:27:24.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:27:24.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:27:24.075" starttime="20201102 09:27:24.074"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:24.075" starttime="20201102 09:27:24.064"></status>
</kw>
<msg timestamp="20201102 09:27:24.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:27:24.075" starttime="20201102 09:27:24.064"></status>
</kw>
<msg timestamp="20201102 09:27:24.075" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:27:24.075" starttime="20201102 09:27:24.063"></status>
</kw>
<msg timestamp="20201102 09:27:24.075" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:27:24.075" starttime="20201102 09:27:24.062"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:27:24.076" level="INFO">${random} = 60</msg>
<status status="PASS" endtime="20201102 09:27:24.076" starttime="20201102 09:27:24.076"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:27:24.079" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:27:24.079" starttime="20201102 09:27:24.079"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:27:24.080" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:27:24.080" starttime="20201102 09:27:24.079"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:24.080" starttime="20201102 09:27:24.079"></status>
</kw>
<msg timestamp="20201102 09:27:24.080" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:27:24.080" starttime="20201102 09:27:24.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:27:24.081" starttime="20201102 09:27:24.081"></status>
</kw>
<msg timestamp="20201102 09:27:24.081" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 09:27:24.081" starttime="20201102 09:27:24.080"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:24.081" starttime="20201102 09:27:24.077"></status>
</kw>
<msg timestamp="20201102 09:27:24.082" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:27:24.082" starttime="20201102 09:27:24.077"></status>
</kw>
<msg timestamp="20201102 09:27:24.082" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:27:24.082" starttime="20201102 09:27:24.076"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:27:24.085" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:27:24.085" starttime="20201102 09:27:24.084"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:27:24.085" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:27:24.085" starttime="20201102 09:27:24.085"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:24.085" starttime="20201102 09:27:24.084"></status>
</kw>
<msg timestamp="20201102 09:27:24.086" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:27:24.086" starttime="20201102 09:27:24.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:27:24.087" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201102 09:27:24.087" starttime="20201102 09:27:24.086"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:27:24.087" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201102 09:27:24.087" starttime="20201102 09:27:24.087"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:24.088" starttime="20201102 09:27:24.086"></status>
</kw>
<msg timestamp="20201102 09:27:24.088" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201102 09:27:24.088" starttime="20201102 09:27:24.086"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:24.088" starttime="20201102 09:27:24.083"></status>
</kw>
<msg timestamp="20201102 09:27:24.088" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 09:27:24.088" starttime="20201102 09:27:24.082"></status>
</kw>
<msg timestamp="20201102 09:27:24.088" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 09:27:24.088" starttime="20201102 09:27:24.082"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:27:24.091" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:27:24.091" starttime="20201102 09:27:24.091"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:27:24.092" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:27:24.092" starttime="20201102 09:27:24.091"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:24.092" starttime="20201102 09:27:24.090"></status>
</kw>
<msg timestamp="20201102 09:27:24.092" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:27:24.092" starttime="20201102 09:27:24.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:27:24.093" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201102 09:27:24.093" starttime="20201102 09:27:24.093"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:27:24.094" level="INFO">${result} = /wordcount-60.txt</msg>
<status status="PASS" endtime="20201102 09:27:24.094" starttime="20201102 09:27:24.094"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:24.094" starttime="20201102 09:27:24.093"></status>
</kw>
<msg timestamp="20201102 09:27:24.094" level="INFO">${path_with_leading} = /wordcount-60.txt</msg>
<status status="PASS" endtime="20201102 09:27:24.094" starttime="20201102 09:27:24.092"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:24.094" starttime="20201102 09:27:24.089"></status>
</kw>
<msg timestamp="20201102 09:27:24.094" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-60.txt</msg>
<status status="PASS" endtime="20201102 09:27:24.095" starttime="20201102 09:27:24.089"></status>
</kw>
<msg timestamp="20201102 09:27:24.095" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-60.txt</msg>
<status status="PASS" endtime="20201102 09:27:24.095" starttime="20201102 09:27:24.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:27:24.098" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-60.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:27:58.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:27:58.332" level="INFO">${output} = 2020-11-02 09:27:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:27:58.332" starttime="20201102 09:27:24.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:27:58.333" level="INFO">2020-11-02 09:27:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-02 09:27:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 09:27:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:26 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 09:27:26 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:27:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:27:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:27:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:27:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7D0D42549907-&gt;a0a08751-2b37-43f8-85bc-b25ed505aadf
2020-11-02 09:27:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 09:27:27 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 09:27:27 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 09:27:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604309042374_0004
2020-11-02 09:27:27 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 09:27:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:28 INFO  Configuration:2752 - resource-types.xml not found
2020-11-02 09:27:28 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-02 09:27:28 INFO  YarnClientImpl:324 - Submitted application application_1604309042374_0004
2020-11-02 09:27:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604309042374_0004/
2020-11-02 09:27:28 INFO  Job:1619 - Running job: job_1604309042374_0004
2020-11-02 09:27:36 INFO  Job:1640 - Job job_1604309042374_0004 running in uber mode : false
2020-11-02 09:27:36 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 09:27:42 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 09:27:47 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 09:27:52 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 09:27:57 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 09:27:57 INFO  Job:1658 - Job job_1604309042374_0004 completed successfully
2020-11-02 09:27:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41284
		Total time spent by all reduces in occupied slots (ms)=14732
		Total time spent by all map tasks (ms)=10321
		Total time spent by all reduce tasks (ms)=3683
		Total vcore-milliseconds taken by all map tasks=10321
		Total vcore-milliseconds taken by all reduce tasks=3683
		Total megabyte-milliseconds taken by all map tasks=42274816
		Total megabyte-milliseconds taken by all reduce tasks=15085568
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=662
		CPU time spent (ms)=7570
		Physical memory (bytes) snapshot=1182707712
		Virtual memory (bytes) snapshot=16076693504
		Total committed heap usage (bytes)=1143996416
		Peak Map Physical memory (bytes)=296996864
		Peak Map Virtual memory (bytes)=4014247936
		Peak Reduce Physical memory (bytes)=299536384
		Peak Reduce Virtual memory (bytes)=4039970816
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-02 09:27:57 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 09:27:58.333" starttime="20201102 09:27:58.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:27:58.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:27:58.334" starttime="20201102 09:27:58.333"></status>
</kw>
<status status="PASS" endtime="20201102 09:27:58.334" starttime="20201102 09:27:24.096"></status>
</kw>
<msg timestamp="20201102 09:27:58.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:27:58.334" starttime="20201102 09:27:24.095"></status>
</kw>
<msg timestamp="20201102 09:27:58.335" level="INFO">${output} = 2020-11-02 09:27:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:27:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:27:58.335" starttime="20201102 09:27:24.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 09:27:58.335" starttime="20201102 09:27:58.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:27:58.336" starttime="20201102 09:27:58.336"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:27:58.336" critical="yes" starttime="20201102 09:27:24.061"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 09:27:58.338" starttime="20201102 09:26:48.139"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:25:09.488" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:25:09.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:25:09.495" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:25:09.495" starttime="20201102 09:25:09.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:25:09.496" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:25:09.496" starttime="20201102 09:25:09.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:25:09.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:25:09.497" starttime="20201102 09:25:09.496"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:09.497" starttime="20201102 09:25:09.484"></status>
</kw>
<msg timestamp="20201102 09:25:09.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:25:09.497" starttime="20201102 09:25:09.484"></status>
</kw>
<msg timestamp="20201102 09:25:09.497" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:25:09.497" starttime="20201102 09:25:09.484"></status>
</kw>
<msg timestamp="20201102 09:25:09.497" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:25:09.497" starttime="20201102 09:25:09.483"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:25:09.500" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:25:09.501" starttime="20201102 09:25:09.500"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:25:09.501" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:25:09.501" starttime="20201102 09:25:09.501"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:09.501" starttime="20201102 09:25:09.500"></status>
</kw>
<msg timestamp="20201102 09:25:09.502" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:25:09.502" starttime="20201102 09:25:09.499"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:09.502" starttime="20201102 09:25:09.499"></status>
</kw>
<msg timestamp="20201102 09:25:09.502" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:25:09.502" starttime="20201102 09:25:09.498"></status>
</kw>
<msg timestamp="20201102 09:25:09.502" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:25:09.502" starttime="20201102 09:25:09.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:25:09.506" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:25:51.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:25:51.193" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:25:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25...</msg>
<status status="PASS" endtime="20201102 09:25:51.193" starttime="20201102 09:25:09.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:25:51.194" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:25:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:11 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 09:25:11 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:25:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:25:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:25:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:25:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-05B719D2617B-&gt;a0a08751-2b37-43f8-85bc-b25ed505aadf
2020-11-02 09:25:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 09:25:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-02 09:25:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 09:25:16 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 09:25:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604309042374_0001
2020-11-02 09:25:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 09:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:16 INFO  Configuration:2752 - resource-types.xml not found
2020-11-02 09:25:16 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-02 09:25:17 INFO  YarnClientImpl:324 - Submitted application application_1604309042374_0001
2020-11-02 09:25:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604309042374_0001/
2020-11-02 09:25:17 INFO  Job:1619 - Running job: job_1604309042374_0001
2020-11-02 09:25:27 INFO  Job:1640 - Job job_1604309042374_0001 running in uber mode : false
2020-11-02 09:25:27 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 09:25:34 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 09:25:40 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 09:25:45 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 09:25:49 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 09:25:50 INFO  Job:1658 - Job job_1604309042374_0001 completed successfully
2020-11-02 09:25:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021529
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41792
		Total time spent by all reduces in occupied slots (ms)=16100
		Total time spent by all map tasks (ms)=10448
		Total time spent by all reduce tasks (ms)=4025
		Total vcore-milliseconds taken by all map tasks=10448
		Total vcore-milliseconds taken by all reduce tasks=4025
		Total megabyte-milliseconds taken by all map tasks=42795008
		Total megabyte-milliseconds taken by all reduce tasks=16486400
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=627
		CPU time spent (ms)=6760
		Physical memory (bytes) snapshot=1157341184
		Virtual memory (bytes) snapshot=16067538944
		Total committed heap usage (bytes)=1058537472
		Peak Map Physical memory (bytes)=295424000
		Peak Map Virtual memory (bytes)=4015845376
		Peak Reduce Physical memory (bytes)=300429312
		Peak Reduce Virtual memory (bytes)=4040237056
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.244 seconds
2020-11-02 09:25:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:50 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-02 09:25:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 09:25:51.194" starttime="20201102 09:25:51.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:25:51.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:25:51.195" starttime="20201102 09:25:51.194"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:51.195" starttime="20201102 09:25:09.503"></status>
</kw>
<msg timestamp="20201102 09:25:51.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:25:51.195" starttime="20201102 09:25:09.503"></status>
</kw>
<msg timestamp="20201102 09:25:51.196" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:25:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25...</msg>
<status status="PASS" endtime="20201102 09:25:51.196" starttime="20201102 09:25:09.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:25:51.196" starttime="20201102 09:25:51.196"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:25:51.197" critical="yes" starttime="20201102 09:25:09.483"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:25:51.203" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:25:51.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:25:51.208" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:25:51.208" starttime="20201102 09:25:51.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:25:51.208" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:25:51.209" starttime="20201102 09:25:51.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:25:51.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:25:51.209" starttime="20201102 09:25:51.209"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:51.209" starttime="20201102 09:25:51.199"></status>
</kw>
<msg timestamp="20201102 09:25:51.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:25:51.210" starttime="20201102 09:25:51.198"></status>
</kw>
<msg timestamp="20201102 09:25:51.210" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:25:51.210" starttime="20201102 09:25:51.198"></status>
</kw>
<msg timestamp="20201102 09:25:51.210" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201102 09:25:51.210" starttime="20201102 09:25:51.198"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:25:51.210" level="INFO">${random} = 49</msg>
<status status="PASS" endtime="20201102 09:25:51.210" starttime="20201102 09:25:51.210"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:25:51.214" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:25:51.214" starttime="20201102 09:25:51.213"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:25:51.214" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:25:51.214" starttime="20201102 09:25:51.214"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:51.214" starttime="20201102 09:25:51.213"></status>
</kw>
<msg timestamp="20201102 09:25:51.214" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:25:51.215" starttime="20201102 09:25:51.213"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:51.215" starttime="20201102 09:25:51.212"></status>
</kw>
<msg timestamp="20201102 09:25:51.215" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:25:51.215" starttime="20201102 09:25:51.211"></status>
</kw>
<msg timestamp="20201102 09:25:51.215" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:25:51.215" starttime="20201102 09:25:51.211"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:25:51.218" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:25:51.218" starttime="20201102 09:25:51.218"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:25:51.219" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:25:51.219" starttime="20201102 09:25:51.218"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:51.219" starttime="20201102 09:25:51.218"></status>
</kw>
<msg timestamp="20201102 09:25:51.219" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:25:51.219" starttime="20201102 09:25:51.217"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:51.219" starttime="20201102 09:25:51.217"></status>
</kw>
<msg timestamp="20201102 09:25:51.219" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 09:25:51.219" starttime="20201102 09:25:51.216"></status>
</kw>
<msg timestamp="20201102 09:25:51.219" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 09:25:51.220" starttime="20201102 09:25:51.215"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:25:51.222" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:25:51.222" starttime="20201102 09:25:51.222"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:25:51.223" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:25:51.223" starttime="20201102 09:25:51.222"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:51.223" starttime="20201102 09:25:51.222"></status>
</kw>
<msg timestamp="20201102 09:25:51.223" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:25:51.223" starttime="20201102 09:25:51.221"></status>
</kw>
<status status="PASS" endtime="20201102 09:25:51.223" starttime="20201102 09:25:51.221"></status>
</kw>
<msg timestamp="20201102 09:25:51.223" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-49.txt</msg>
<status status="PASS" endtime="20201102 09:25:51.223" starttime="20201102 09:25:51.220"></status>
</kw>
<msg timestamp="20201102 09:25:51.224" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-49.txt</msg>
<status status="PASS" endtime="20201102 09:25:51.224" starttime="20201102 09:25:51.220"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:25:51.228" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-49.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:26:33.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:26:33.015" level="INFO">${output} = 2020-11-02 09:25:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:26:33.015" starttime="20201102 09:25:51.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:26:33.016" level="INFO">2020-11-02 09:25:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-02 09:25:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 09:25:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:53 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-02 09:25:53 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-02 09:25:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:25:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:25:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:25:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8D91B9C7F4BA-&gt;a0a08751-2b37-43f8-85bc-b25ed505aadf
2020-11-02 09:25:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 09:25:54 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 09:25:55 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 09:25:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604309042374_0002
2020-11-02 09:25:57 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 09:25:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:58 INFO  Configuration:2752 - resource-types.xml not found
2020-11-02 09:25:58 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-02 09:25:58 INFO  YarnClientImpl:324 - Submitted application application_1604309042374_0002
2020-11-02 09:25:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604309042374_0002/
2020-11-02 09:25:58 INFO  Job:1619 - Running job: job_1604309042374_0002
2020-11-02 09:26:06 INFO  Job:1640 - Job job_1604309042374_0002 running in uber mode : false
2020-11-02 09:26:06 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 09:26:13 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 09:26:18 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 09:26:24 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 09:26:29 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 09:26:32 INFO  Job:1658 - Job job_1604309042374_0002 completed successfully
2020-11-02 09:26:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:26:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41928
		Total time spent by all reduces in occupied slots (ms)=15104
		Total time spent by all map tasks (ms)=10482
		Total time spent by all reduce tasks (ms)=3776
		Total vcore-milliseconds taken by all map tasks=10482
		Total vcore-milliseconds taken by all reduce tasks=3776
		Total megabyte-milliseconds taken by all map tasks=42934272
		Total megabyte-milliseconds taken by all reduce tasks=15466496
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=626
		CPU time spent (ms)=6950
		Physical memory (bytes) snapshot=1126203392
		Virtual memory (bytes) snapshot=16038199296
		Total committed heap usage (bytes)=1134559232
		Peak Map Physical memory (bytes)=292929536
		Peak Map Virtual memory (bytes)=4012785664
		Peak Reduce Physical memory (bytes)=270106624
		Peak Reduce Virtual memory (bytes)=4018397184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-02 09:26:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201102 09:26:33.017" starttime="20201102 09:26:33.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:26:33.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:26:33.017" starttime="20201102 09:26:33.017"></status>
</kw>
<status status="PASS" endtime="20201102 09:26:33.018" starttime="20201102 09:25:51.224"></status>
</kw>
<msg timestamp="20201102 09:26:33.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:26:33.018" starttime="20201102 09:25:51.224"></status>
</kw>
<msg timestamp="20201102 09:26:33.018" level="INFO">${output} = 2020-11-02 09:25:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-02 09:25:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201102 09:26:33.018" starttime="20201102 09:25:51.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 09:26:33.019" starttime="20201102 09:26:33.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:26:33.019" starttime="20201102 09:26:33.019"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:26:33.020" critical="yes" starttime="20201102 09:25:51.197"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 09:26:33.021" starttime="20201102 09:25:09.435"></status>
</suite>
<status status="PASS" elapsedtime="196197" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:05.496" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:09.404" level="INFO">${rc} = 255</msg>
<msg timestamp="20201102 09:29:09.404" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 09:29:09.404" starttime="20201102 09:29:05.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:09.405" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 09:29:09.405" starttime="20201102 09:29:09.404"></status>
</kw>
<msg timestamp="20201102 09:29:09.405" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201102 09:29:09.405" starttime="20201102 09:29:05.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:09.412" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:12.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:12.924" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:29:12.924" starttime="20201102 09:29:09.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:12.925" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:29:12.925" starttime="20201102 09:29:12.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:12.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:12.926" starttime="20201102 09:29:12.925"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:12.926" starttime="20201102 09:29:09.407"></status>
</kw>
<msg timestamp="20201102 09:29:12.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:12.927" starttime="20201102 09:29:09.407"></status>
</kw>
<msg timestamp="20201102 09:29:12.927" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201102 09:29:12.927" starttime="20201102 09:29:09.407"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201102 09:29:12.927" starttime="20201102 09:29:12.927"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:12.928" starttime="20201102 09:29:09.406"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:12.928" starttime="20201102 09:29:09.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:12.933" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:15.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:15.945" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:29:15.945" starttime="20201102 09:29:12.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:15.946" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:29:15.947" starttime="20201102 09:29:15.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:15.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:15.947" starttime="20201102 09:29:15.947"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:15.947" starttime="20201102 09:29:12.929"></status>
</kw>
<msg timestamp="20201102 09:29:15.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:15.948" starttime="20201102 09:29:12.929"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:15.948" starttime="20201102 09:29:12.929"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:15.948" starttime="20201102 09:29:12.928"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:15.948" starttime="20201102 09:29:12.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201102 09:29:15.949" starttime="20201102 09:29:15.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:15.952" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:19.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:19.382" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:29:15.848Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 09:29:19.382" starttime="20201102 09:29:15.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:19.384" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:29:15.848Z",
  "modificationTime" : "2020-11-02T09:29:15.848Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201102 09:29:19.384" starttime="20201102 09:29:19.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:19.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:19.385" starttime="20201102 09:29:19.384"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:19.385" starttime="20201102 09:29:15.950"></status>
</kw>
<msg timestamp="20201102 09:29:19.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:19.385" starttime="20201102 09:29:15.949"></status>
</kw>
<msg timestamp="20201102 09:29:19.385" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-02T09:29:15.848Z",
  "modificat...</msg>
<status status="PASS" endtime="20201102 09:29:19.385" starttime="20201102 09:29:15.949"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201102 09:29:19.386" starttime="20201102 09:29:19.386"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:29:19.390" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:29:19.390" starttime="20201102 09:29:19.389"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:29:19.390" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:29:19.391" starttime="20201102 09:29:19.390"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:19.391" starttime="20201102 09:29:19.389"></status>
</kw>
<msg timestamp="20201102 09:29:19.391" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:29:19.391" starttime="20201102 09:29:19.388"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:19.391" starttime="20201102 09:29:19.388"></status>
</kw>
<msg timestamp="20201102 09:29:19.391" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 09:29:19.391" starttime="20201102 09:29:19.387"></status>
</kw>
<msg timestamp="20201102 09:29:19.391" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201102 09:29:19.392" starttime="20201102 09:29:19.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:19.395" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:22.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:22.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:29:22.847" starttime="20201102 09:29:19.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:22.848" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:29:22.848" starttime="20201102 09:29:22.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:22.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:22.849" starttime="20201102 09:29:22.848"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:22.849" starttime="20201102 09:29:19.392"></status>
</kw>
<msg timestamp="20201102 09:29:22.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:22.849" starttime="20201102 09:29:19.392"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:22.850" starttime="20201102 09:29:19.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:22.854" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:31.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:31.663" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:29:31.663" starttime="20201102 09:29:22.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:31.664" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:29:31.664" starttime="20201102 09:29:31.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:31.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:31.665" starttime="20201102 09:29:31.665"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:31.665" starttime="20201102 09:29:22.851"></status>
</kw>
<msg timestamp="20201102 09:29:31.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:31.666" starttime="20201102 09:29:22.850"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:31.666" starttime="20201102 09:29:22.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:31.670" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:37.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:37.036" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:29:37.036" starttime="20201102 09:29:31.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:37.038" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:29:37.038" starttime="20201102 09:29:37.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:37.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:37.038" starttime="20201102 09:29:37.038"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:37.039" starttime="20201102 09:29:31.667"></status>
</kw>
<msg timestamp="20201102 09:29:37.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:37.039" starttime="20201102 09:29:31.667"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:37.039" starttime="20201102 09:29:31.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:37.044" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:42.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:42.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:29:42.447" starttime="20201102 09:29:37.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:42.448" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:29:42.448" starttime="20201102 09:29:42.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:42.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:42.449" starttime="20201102 09:29:42.448"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:42.449" starttime="20201102 09:29:37.040"></status>
</kw>
<msg timestamp="20201102 09:29:42.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:42.449" starttime="20201102 09:29:37.040"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:42.450" starttime="20201102 09:29:37.039"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:29:42.450" critical="yes" starttime="20201102 09:29:05.490"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:29:42.455" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:29:42.455" starttime="20201102 09:29:42.454"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:29:42.456" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:29:42.456" starttime="20201102 09:29:42.455"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:42.456" starttime="20201102 09:29:42.454"></status>
</kw>
<msg timestamp="20201102 09:29:42.456" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:29:42.456" starttime="20201102 09:29:42.453"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:42.457" starttime="20201102 09:29:42.453"></status>
</kw>
<msg timestamp="20201102 09:29:42.457" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 09:29:42.457" starttime="20201102 09:29:42.452"></status>
</kw>
<msg timestamp="20201102 09:29:42.457" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 09:29:42.457" starttime="20201102 09:29:42.451"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:42.461" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:45.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:45.550" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:29:45.550" starttime="20201102 09:29:42.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:45.552" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:29:45.552" starttime="20201102 09:29:45.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:45.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:45.553" starttime="20201102 09:29:45.552"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:45.553" starttime="20201102 09:29:42.458"></status>
</kw>
<msg timestamp="20201102 09:29:45.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:45.553" starttime="20201102 09:29:42.458"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:45.553" starttime="20201102 09:29:42.457"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:45.557" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:48.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:48.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201102 09:29:48.605" starttime="20201102 09:29:45.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:48.606" level="INFO"></msg>
<status status="PASS" endtime="20201102 09:29:48.606" starttime="20201102 09:29:48.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:48.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:48.607" starttime="20201102 09:29:48.606"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:48.607" starttime="20201102 09:29:45.554"></status>
</kw>
<msg timestamp="20201102 09:29:48.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:48.607" starttime="20201102 09:29:45.554"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:48.608" starttime="20201102 09:29:45.553"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201102 09:29:48.608" critical="yes" starttime="20201102 09:29:42.450"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201102 09:29:48.610" starttime="20201102 09:29:05.435"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:31:33.475" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:31:33.475" starttime="20201102 09:31:33.474"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:31:33.475" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:31:33.475" starttime="20201102 09:31:33.475"></status>
</kw>
<status status="PASS" endtime="20201102 09:31:33.475" starttime="20201102 09:31:33.474"></status>
</kw>
<msg timestamp="20201102 09:31:33.475" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:31:33.475" starttime="20201102 09:31:33.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:31:33.476" starttime="20201102 09:31:33.476"></status>
</kw>
<msg timestamp="20201102 09:31:33.476" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 09:31:33.476" starttime="20201102 09:31:33.476"></status>
</kw>
<status status="PASS" endtime="20201102 09:31:33.477" starttime="20201102 09:31:33.473"></status>
</kw>
<msg timestamp="20201102 09:31:33.477" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:31:33.477" starttime="20201102 09:31:33.472"></status>
</kw>
<msg timestamp="20201102 09:31:33.477" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:31:33.477" starttime="20201102 09:31:33.471"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:31:33.477" level="INFO">${random} = 03984</msg>
<status status="PASS" endtime="20201102 09:31:33.478" starttime="20201102 09:31:33.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:31:33.484" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-03984 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:31:37.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:31:37.018" level="INFO">${output} = 2020-11-02 09:31:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:31:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201102 09:31:37.018" starttime="20201102 09:31:33.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:31:37.020" level="INFO">2020-11-02 09:31:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:31:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:31:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:31:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:31:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1CAE7D103B9B-&gt;c4782616-299d-4ae3-89ee-807134061db3
2020-11-02 09:31:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201102 09:31:37.020" starttime="20201102 09:31:37.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:31:37.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:31:37.020" starttime="20201102 09:31:37.020"></status>
</kw>
<status status="PASS" endtime="20201102 09:31:37.021" starttime="20201102 09:31:33.478"></status>
</kw>
<msg timestamp="20201102 09:31:37.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:31:37.021" starttime="20201102 09:31:33.478"></status>
</kw>
<msg timestamp="20201102 09:31:37.021" level="INFO">${result} = 2020-11-02 09:31:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:31:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201102 09:31:37.021" starttime="20201102 09:31:33.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:31:37.029" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:31:38.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:31:38.964" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 09:31 ofs://om/volume1/bucket1/ozone-03984
-rw-...</msg>
<status status="PASS" endtime="20201102 09:31:38.964" starttime="20201102 09:31:37.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:31:38.965" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 09:31 ofs://om/volume1/bucket1/ozone-03984
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 09:29 ofs://om/volume1/bucket1/ozone-46747
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:29 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:30 ofs://om/volume1/bucket1/wordcount-31.txt</msg>
<status status="PASS" endtime="20201102 09:31:38.965" starttime="20201102 09:31:38.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:31:38.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:31:38.966" starttime="20201102 09:31:38.965"></status>
</kw>
<status status="PASS" endtime="20201102 09:31:38.966" starttime="20201102 09:31:37.022"></status>
</kw>
<msg timestamp="20201102 09:31:38.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:31:38.966" starttime="20201102 09:31:37.022"></status>
</kw>
<msg timestamp="20201102 09:31:38.967" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 09:31 ofs://om/volume1/bucket1/ozone-03984
-rw-...</msg>
<status status="PASS" endtime="20201102 09:31:38.967" starttime="20201102 09:31:37.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:31:38.967" starttime="20201102 09:31:38.967"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 09:31:38.967" critical="yes" starttime="20201102 09:31:33.470"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 09:31:38.968" starttime="20201102 09:31:33.422"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:29:53.547" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:29:53.547" starttime="20201102 09:29:53.547"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:29:53.548" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:29:53.548" starttime="20201102 09:29:53.548"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:53.548" starttime="20201102 09:29:53.547"></status>
</kw>
<msg timestamp="20201102 09:29:53.548" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:29:53.548" starttime="20201102 09:29:53.546"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:53.548" starttime="20201102 09:29:53.546"></status>
</kw>
<msg timestamp="20201102 09:29:53.549" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:29:53.549" starttime="20201102 09:29:53.545"></status>
</kw>
<msg timestamp="20201102 09:29:53.549" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:29:53.549" starttime="20201102 09:29:53.543"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:29:53.550" level="INFO">${random} = 46747</msg>
<status status="PASS" endtime="20201102 09:29:53.550" starttime="20201102 09:29:53.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:53.556" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-46747 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:57.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:57.315" level="INFO">${output} = 2020-11-02 09:29:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:29:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201102 09:29:57.315" starttime="20201102 09:29:53.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:57.316" level="INFO">2020-11-02 09:29:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:29:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:29:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:29:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:29:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D5EF0185CA86-&gt;c4782616-299d-4ae3-89ee-807134061db3
2020-11-02 09:29:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201102 09:29:57.317" starttime="20201102 09:29:57.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:57.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:57.317" starttime="20201102 09:29:57.317"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:57.317" starttime="20201102 09:29:53.550"></status>
</kw>
<msg timestamp="20201102 09:29:57.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:57.318" starttime="20201102 09:29:53.550"></status>
</kw>
<msg timestamp="20201102 09:29:57.318" level="INFO">${result} = 2020-11-02 09:29:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:29:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201102 09:29:57.318" starttime="20201102 09:29:53.550"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:29:57.321" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:29:59.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:29:59.137" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 09:29 o3fs://bucket1.volume1.om/ozone-46747
dr...</msg>
<status status="PASS" endtime="20201102 09:29:59.137" starttime="20201102 09:29:57.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:29:59.138" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 09:29 o3fs://bucket1.volume1.om/ozone-46747
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:29 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201102 09:29:59.138" starttime="20201102 09:29:59.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:29:59.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:29:59.139" starttime="20201102 09:29:59.138"></status>
</kw>
<status status="PASS" endtime="20201102 09:29:59.139" starttime="20201102 09:29:57.319"></status>
</kw>
<msg timestamp="20201102 09:29:59.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:29:59.139" starttime="20201102 09:29:57.318"></status>
</kw>
<msg timestamp="20201102 09:29:59.140" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-02 09:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-02 09:29 o3fs://bucket1.volume1.om/ozone-46747
dr...</msg>
<status status="PASS" endtime="20201102 09:29:59.140" starttime="20201102 09:29:57.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:29:59.140" starttime="20201102 09:29:59.140"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201102 09:29:59.140" critical="yes" starttime="20201102 09:29:53.543"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201102 09:29:59.141" starttime="20201102 09:29:53.490"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:31:43.858" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:31:43.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:31:43.869" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:31:43.869" starttime="20201102 09:31:43.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:31:43.870" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:31:43.870" starttime="20201102 09:31:43.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:31:43.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:31:43.871" starttime="20201102 09:31:43.870"></status>
</kw>
<status status="PASS" endtime="20201102 09:31:43.871" starttime="20201102 09:31:43.853"></status>
</kw>
<msg timestamp="20201102 09:31:43.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:31:43.871" starttime="20201102 09:31:43.853"></status>
</kw>
<msg timestamp="20201102 09:31:43.871" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:31:43.871" starttime="20201102 09:31:43.852"></status>
</kw>
<msg timestamp="20201102 09:31:43.872" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:31:43.872" starttime="20201102 09:31:43.852"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:31:43.875" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:31:43.875" starttime="20201102 09:31:43.874"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:31:43.876" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:31:43.876" starttime="20201102 09:31:43.875"></status>
</kw>
<status status="PASS" endtime="20201102 09:31:43.876" starttime="20201102 09:31:43.874"></status>
</kw>
<msg timestamp="20201102 09:31:43.876" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:31:43.876" starttime="20201102 09:31:43.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:31:43.877" starttime="20201102 09:31:43.877"></status>
</kw>
<msg timestamp="20201102 09:31:43.877" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 09:31:43.877" starttime="20201102 09:31:43.876"></status>
</kw>
<status status="PASS" endtime="20201102 09:31:43.877" starttime="20201102 09:31:43.873"></status>
</kw>
<msg timestamp="20201102 09:31:43.877" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:31:43.877" starttime="20201102 09:31:43.873"></status>
</kw>
<msg timestamp="20201102 09:31:43.878" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:31:43.878" starttime="20201102 09:31:43.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:31:43.883" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:32:23.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:32:23.224" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:31:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:31:45 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201102 09:32:23.224" starttime="20201102 09:31:43.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:32:23.225" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:31:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:31:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:31:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:31:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:31:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A75FDC8C03B5-&gt;c4782616-299d-4ae3-89ee-807134061db3
2020-11-02 09:31:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 09:31:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-02 09:31:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 09:31:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 09:31:50 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 09:31:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604309323693_0003
2020-11-02 09:31:50 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 09:31:51 INFO  Configuration:2795 - resource-types.xml not found
2020-11-02 09:31:51 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-02 09:31:51 INFO  YarnClientImpl:329 - Submitted application application_1604309323693_0003
2020-11-02 09:31:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604309323693_0003/
2020-11-02 09:31:51 INFO  Job:1619 - Running job: job_1604309323693_0003
2020-11-02 09:31:59 INFO  Job:1640 - Job job_1604309323693_0003 running in uber mode : false
2020-11-02 09:31:59 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 09:32:06 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 09:32:11 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 09:32:17 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 09:32:22 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 09:32:22 INFO  Job:1658 - Job job_1604309323693_0003 completed successfully
2020-11-02 09:32:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40804
		Total time spent by all reduces in occupied slots (ms)=15288
		Total time spent by all map tasks (ms)=10201
		Total time spent by all reduce tasks (ms)=3822
		Total vcore-milliseconds taken by all map tasks=10201
		Total vcore-milliseconds taken by all reduce tasks=3822
		Total megabyte-milliseconds taken by all map tasks=41783296
		Total megabyte-milliseconds taken by all reduce tasks=15654912
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=663
		CPU time spent (ms)=7730
		Physical memory (bytes) snapshot=1487765504
		Virtual memory (bytes) snapshot=16085266432
		Total committed heap usage (bytes)=1719664640
		Peak Map Physical memory (bytes)=372297728
		Peak Map Virtual memory (bytes)=4019814400
		Peak Reduce Physical memory (bytes)=378404864
		Peak Reduce Virtual memory (bytes)=4035112960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.092 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201102 09:32:23.225" starttime="20201102 09:32:23.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:32:23.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:32:23.226" starttime="20201102 09:32:23.225"></status>
</kw>
<status status="PASS" endtime="20201102 09:32:23.226" starttime="20201102 09:31:43.879"></status>
</kw>
<msg timestamp="20201102 09:32:23.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:32:23.226" starttime="20201102 09:31:43.878"></status>
</kw>
<msg timestamp="20201102 09:32:23.227" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:31:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:31:45 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201102 09:32:23.227" starttime="20201102 09:31:43.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:32:23.227" starttime="20201102 09:32:23.227"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:32:23.227" critical="yes" starttime="20201102 09:31:43.851"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:32:23.233" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:32:23.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:32:23.238" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:32:23.239" starttime="20201102 09:32:23.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:32:23.239" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:32:23.239" starttime="20201102 09:32:23.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:32:23.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:32:23.240" starttime="20201102 09:32:23.240"></status>
</kw>
<status status="PASS" endtime="20201102 09:32:23.240" starttime="20201102 09:32:23.230"></status>
</kw>
<msg timestamp="20201102 09:32:23.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:32:23.241" starttime="20201102 09:32:23.230"></status>
</kw>
<msg timestamp="20201102 09:32:23.241" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:32:23.241" starttime="20201102 09:32:23.230"></status>
</kw>
<msg timestamp="20201102 09:32:23.241" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:32:23.241" starttime="20201102 09:32:23.229"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:32:23.242" level="INFO">${random} = 98</msg>
<status status="PASS" endtime="20201102 09:32:23.242" starttime="20201102 09:32:23.241"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:32:23.245" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:32:23.245" starttime="20201102 09:32:23.244"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:32:23.245" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:32:23.245" starttime="20201102 09:32:23.245"></status>
</kw>
<status status="PASS" endtime="20201102 09:32:23.246" starttime="20201102 09:32:23.244"></status>
</kw>
<msg timestamp="20201102 09:32:23.246" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:32:23.246" starttime="20201102 09:32:23.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201102 09:32:23.247" starttime="20201102 09:32:23.246"></status>
</kw>
<msg timestamp="20201102 09:32:23.247" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201102 09:32:23.247" starttime="20201102 09:32:23.246"></status>
</kw>
<status status="PASS" endtime="20201102 09:32:23.247" starttime="20201102 09:32:23.243"></status>
</kw>
<msg timestamp="20201102 09:32:23.247" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:32:23.247" starttime="20201102 09:32:23.242"></status>
</kw>
<msg timestamp="20201102 09:32:23.247" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201102 09:32:23.247" starttime="20201102 09:32:23.242"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:32:23.250" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:32:23.250" starttime="20201102 09:32:23.249"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:32:23.250" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:32:23.250" starttime="20201102 09:32:23.250"></status>
</kw>
<status status="PASS" endtime="20201102 09:32:23.250" starttime="20201102 09:32:23.249"></status>
</kw>
<msg timestamp="20201102 09:32:23.251" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:32:23.251" starttime="20201102 09:32:23.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:32:23.252" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201102 09:32:23.252" starttime="20201102 09:32:23.252"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:32:23.253" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201102 09:32:23.253" starttime="20201102 09:32:23.252"></status>
</kw>
<status status="PASS" endtime="20201102 09:32:23.253" starttime="20201102 09:32:23.251"></status>
</kw>
<msg timestamp="20201102 09:32:23.253" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201102 09:32:23.253" starttime="20201102 09:32:23.251"></status>
</kw>
<status status="PASS" endtime="20201102 09:32:23.253" starttime="20201102 09:32:23.248"></status>
</kw>
<msg timestamp="20201102 09:32:23.253" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 09:32:23.253" starttime="20201102 09:32:23.248"></status>
</kw>
<msg timestamp="20201102 09:32:23.253" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201102 09:32:23.253" starttime="20201102 09:32:23.247"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201102 09:32:23.256" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201102 09:32:23.256" starttime="20201102 09:32:23.256"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:32:23.257" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201102 09:32:23.257" starttime="20201102 09:32:23.256"></status>
</kw>
<status status="PASS" endtime="20201102 09:32:23.257" starttime="20201102 09:32:23.255"></status>
</kw>
<msg timestamp="20201102 09:32:23.257" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201102 09:32:23.257" starttime="20201102 09:32:23.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:32:23.258" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201102 09:32:23.258" starttime="20201102 09:32:23.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:32:23.259" level="INFO">${result} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20201102 09:32:23.259" starttime="20201102 09:32:23.258"></status>
</kw>
<status status="PASS" endtime="20201102 09:32:23.259" starttime="20201102 09:32:23.258"></status>
</kw>
<msg timestamp="20201102 09:32:23.259" level="INFO">${path_with_leading} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20201102 09:32:23.259" starttime="20201102 09:32:23.257"></status>
</kw>
<status status="PASS" endtime="20201102 09:32:23.259" starttime="20201102 09:32:23.254"></status>
</kw>
<msg timestamp="20201102 09:32:23.259" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201102 09:32:23.259" starttime="20201102 09:32:23.254"></status>
</kw>
<msg timestamp="20201102 09:32:23.260" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201102 09:32:23.260" starttime="20201102 09:32:23.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:32:23.263" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-98.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:33:02.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:33:02.659" level="INFO">${output} = 2020-11-02 09:32:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-02 09:32:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201102 09:33:02.659" starttime="20201102 09:32:23.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:33:02.661" level="INFO">2020-11-02 09:32:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-02 09:32:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 09:32:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:32:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:32:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:32:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:32:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1C5D05CEC834-&gt;c4782616-299d-4ae3-89ee-807134061db3
2020-11-02 09:32:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 09:32:26 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 09:32:27 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 09:32:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604309323693_0004
2020-11-02 09:32:27 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 09:32:27 INFO  Configuration:2795 - resource-types.xml not found
2020-11-02 09:32:27 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-02 09:32:27 INFO  YarnClientImpl:329 - Submitted application application_1604309323693_0004
2020-11-02 09:32:27 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604309323693_0004/
2020-11-02 09:32:27 INFO  Job:1619 - Running job: job_1604309323693_0004
2020-11-02 09:32:35 INFO  Job:1640 - Job job_1604309323693_0004 running in uber mode : false
2020-11-02 09:32:35 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 09:32:43 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 09:32:49 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 09:32:55 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 09:32:59 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 09:33:02 INFO  Job:1658 - Job job_1604309323693_0004 completed successfully
2020-11-02 09:33:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41532
		Total time spent by all reduces in occupied slots (ms)=15248
		Total time spent by all map tasks (ms)=10383
		Total time spent by all reduce tasks (ms)=3812
		Total vcore-milliseconds taken by all map tasks=10383
		Total vcore-milliseconds taken by all reduce tasks=3812
		Total megabyte-milliseconds taken by all map tasks=42528768
		Total megabyte-milliseconds taken by all reduce tasks=15613952
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=685
		CPU time spent (ms)=7910
		Physical memory (bytes) snapshot=1449119744
		Virtual memory (bytes) snapshot=16061984768
		Total committed heap usage (bytes)=1689780224
		Peak Map Physical memory (bytes)=367431680
		Peak Map Virtual memory (bytes)=4016504832
		Peak Reduce Physical memory (bytes)=373305344
		Peak Reduce Virtual memory (bytes)=4035907584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201102 09:33:02.661" starttime="20201102 09:33:02.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:33:02.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:33:02.661" starttime="20201102 09:33:02.661"></status>
</kw>
<status status="PASS" endtime="20201102 09:33:02.662" starttime="20201102 09:32:23.260"></status>
</kw>
<msg timestamp="20201102 09:33:02.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:33:02.662" starttime="20201102 09:32:23.260"></status>
</kw>
<msg timestamp="20201102 09:33:02.662" level="INFO">${output} = 2020-11-02 09:32:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-02 09:32:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201102 09:33:02.662" starttime="20201102 09:32:23.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 09:33:02.666" starttime="20201102 09:33:02.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:33:02.667" starttime="20201102 09:33:02.666"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:33:02.667" critical="yes" starttime="20201102 09:32:23.228"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 09:33:02.668" starttime="20201102 09:31:43.803"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:30:04.063" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:30:04.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:30:04.068" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:30:04.068" starttime="20201102 09:30:04.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:30:04.069" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:30:04.069" starttime="20201102 09:30:04.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:30:04.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:30:04.069" starttime="20201102 09:30:04.069"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:04.070" starttime="20201102 09:30:04.057"></status>
</kw>
<msg timestamp="20201102 09:30:04.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:30:04.070" starttime="20201102 09:30:04.057"></status>
</kw>
<msg timestamp="20201102 09:30:04.070" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:30:04.070" starttime="20201102 09:30:04.057"></status>
</kw>
<msg timestamp="20201102 09:30:04.070" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:30:04.070" starttime="20201102 09:30:04.057"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:30:04.073" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:30:04.073" starttime="20201102 09:30:04.073"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:30:04.074" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:30:04.074" starttime="20201102 09:30:04.073"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:04.074" starttime="20201102 09:30:04.072"></status>
</kw>
<msg timestamp="20201102 09:30:04.074" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:30:04.074" starttime="20201102 09:30:04.072"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:04.074" starttime="20201102 09:30:04.071"></status>
</kw>
<msg timestamp="20201102 09:30:04.075" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:30:04.075" starttime="20201102 09:30:04.071"></status>
</kw>
<msg timestamp="20201102 09:30:04.075" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:30:04.075" starttime="20201102 09:30:04.070"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:30:04.079" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:30:46.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:30:46.967" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:30:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:30:06 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201102 09:30:46.967" starttime="20201102 09:30:04.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:30:46.968" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:30:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:30:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:30:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:30:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:30:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-136B658F8E6C-&gt;c4782616-299d-4ae3-89ee-807134061db3
2020-11-02 09:30:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-02 09:30:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-02 09:30:08 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 09:30:10 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 09:30:11 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604309323693_0001
2020-11-02 09:30:11 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 09:30:11 INFO  Configuration:2795 - resource-types.xml not found
2020-11-02 09:30:11 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-02 09:30:11 INFO  YarnClientImpl:329 - Submitted application application_1604309323693_0001
2020-11-02 09:30:11 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604309323693_0001/
2020-11-02 09:30:11 INFO  Job:1619 - Running job: job_1604309323693_0001
2020-11-02 09:30:22 INFO  Job:1640 - Job job_1604309323693_0001 running in uber mode : false
2020-11-02 09:30:22 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 09:30:29 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 09:30:35 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 09:30:40 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 09:30:46 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 09:30:46 INFO  Job:1658 - Job job_1604309323693_0001 completed successfully
2020-11-02 09:30:46 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41180
		Total time spent by all reduces in occupied slots (ms)=16052
		Total time spent by all map tasks (ms)=10295
		Total time spent by all reduce tasks (ms)=4013
		Total vcore-milliseconds taken by all map tasks=10295
		Total vcore-milliseconds taken by all reduce tasks=4013
		Total megabyte-milliseconds taken by all map tasks=42168320
		Total megabyte-milliseconds taken by all reduce tasks=16437248
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=654
		CPU time spent (ms)=7150
		Physical memory (bytes) snapshot=1446637568
		Virtual memory (bytes) snapshot=16063184896
		Total committed heap usage (bytes)=1665662976
		Peak Map Physical memory (bytes)=365527040
		Peak Map Virtual memory (bytes)=4014252032
		Peak Reduce Physical memory (bytes)=374661120
		Peak Reduce Virtual memory (bytes)=4033835008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.84 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201102 09:30:46.969" starttime="20201102 09:30:46.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:30:46.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:30:46.969" starttime="20201102 09:30:46.969"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:46.969" starttime="20201102 09:30:04.075"></status>
</kw>
<msg timestamp="20201102 09:30:46.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:30:46.970" starttime="20201102 09:30:04.075"></status>
</kw>
<msg timestamp="20201102 09:30:46.970" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-02 09:30:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:30:06 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201102 09:30:46.970" starttime="20201102 09:30:04.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:30:46.971" starttime="20201102 09:30:46.970"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:30:46.971" critical="yes" starttime="20201102 09:30:04.056"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:30:46.978" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:30:46.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:30:46.982" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:30:46.982" starttime="20201102 09:30:46.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:30:46.983" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:30:46.983" starttime="20201102 09:30:46.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:30:46.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:30:46.984" starttime="20201102 09:30:46.983"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:46.984" starttime="20201102 09:30:46.973"></status>
</kw>
<msg timestamp="20201102 09:30:46.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:30:46.984" starttime="20201102 09:30:46.973"></status>
</kw>
<msg timestamp="20201102 09:30:46.985" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:30:46.985" starttime="20201102 09:30:46.973"></status>
</kw>
<msg timestamp="20201102 09:30:46.985" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201102 09:30:46.985" starttime="20201102 09:30:46.972"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201102 09:30:46.985" level="INFO">${random} = 31</msg>
<status status="PASS" endtime="20201102 09:30:46.985" starttime="20201102 09:30:46.985"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:30:46.989" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:30:46.989" starttime="20201102 09:30:46.988"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:30:46.989" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:30:46.989" starttime="20201102 09:30:46.989"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:46.989" starttime="20201102 09:30:46.988"></status>
</kw>
<msg timestamp="20201102 09:30:46.989" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:30:46.989" starttime="20201102 09:30:46.987"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:46.990" starttime="20201102 09:30:46.987"></status>
</kw>
<msg timestamp="20201102 09:30:46.990" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:30:46.990" starttime="20201102 09:30:46.986"></status>
</kw>
<msg timestamp="20201102 09:30:46.990" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201102 09:30:46.990" starttime="20201102 09:30:46.985"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:30:46.993" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:30:46.993" starttime="20201102 09:30:46.992"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:30:46.993" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:30:46.993" starttime="20201102 09:30:46.993"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:46.994" starttime="20201102 09:30:46.992"></status>
</kw>
<msg timestamp="20201102 09:30:46.994" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:30:46.994" starttime="20201102 09:30:46.992"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:46.994" starttime="20201102 09:30:46.991"></status>
</kw>
<msg timestamp="20201102 09:30:46.994" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 09:30:46.994" starttime="20201102 09:30:46.991"></status>
</kw>
<msg timestamp="20201102 09:30:46.994" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201102 09:30:46.994" starttime="20201102 09:30:46.990"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201102 09:30:46.997" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201102 09:30:46.997" starttime="20201102 09:30:46.996"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201102 09:30:46.997" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201102 09:30:46.997" starttime="20201102 09:30:46.997"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:46.998" starttime="20201102 09:30:46.996"></status>
</kw>
<msg timestamp="20201102 09:30:46.998" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201102 09:30:46.998" starttime="20201102 09:30:46.996"></status>
</kw>
<status status="PASS" endtime="20201102 09:30:46.998" starttime="20201102 09:30:46.995"></status>
</kw>
<msg timestamp="20201102 09:30:46.998" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-31.txt</msg>
<status status="PASS" endtime="20201102 09:30:46.998" starttime="20201102 09:30:46.995"></status>
</kw>
<msg timestamp="20201102 09:30:46.998" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-31.txt</msg>
<status status="PASS" endtime="20201102 09:30:46.998" starttime="20201102 09:30:46.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201102 09:30:47.003" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-31.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201102 09:31:28.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20201102 09:31:28.578" level="INFO">${output} = 2020-11-02 09:30:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-02 09:30:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201102 09:31:28.578" starttime="20201102 09:30:46.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201102 09:31:28.579" level="INFO">2020-11-02 09:30:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-02 09:30:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-02 09:30:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-02 09:30:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-02 09:30:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-02 09:30:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-02 09:30:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-26D44842E443-&gt;c4782616-299d-4ae3-89ee-807134061db3
2020-11-02 09:30:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-02 09:30:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-02 09:30:51 INFO  JobSubmitter:202 - number of splits:3
2020-11-02 09:30:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604309323693_0002
2020-11-02 09:30:51 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-02 09:30:51 INFO  Configuration:2795 - resource-types.xml not found
2020-11-02 09:30:51 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-02 09:30:51 INFO  YarnClientImpl:329 - Submitted application application_1604309323693_0002
2020-11-02 09:30:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604309323693_0002/
2020-11-02 09:30:51 INFO  Job:1619 - Running job: job_1604309323693_0002
2020-11-02 09:30:59 INFO  Job:1640 - Job job_1604309323693_0002 running in uber mode : false
2020-11-02 09:30:59 INFO  Job:1647 -  map 0% reduce 0%
2020-11-02 09:31:05 INFO  Job:1647 -  map 33% reduce 0%
2020-11-02 09:31:11 INFO  Job:1647 -  map 67% reduce 0%
2020-11-02 09:31:18 INFO  Job:1647 -  map 100% reduce 0%
2020-11-02 09:31:22 INFO  Job:1647 -  map 100% reduce 100%
2020-11-02 09:31:28 INFO  Job:1658 - Job job_1604309323693_0002 completed successfully
2020-11-02 09:31:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42720
		Total time spent by all reduces in occupied slots (ms)=15484
		Total time spent by all map tasks (ms)=10680
		Total time spent by all reduce tasks (ms)=3871
		Total vcore-milliseconds taken by all map tasks=10680
		Total vcore-milliseconds taken by all reduce tasks=3871
		Total megabyte-milliseconds taken by all map tasks=43745280
		Total megabyte-milliseconds taken by all reduce tasks=15855616
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=729
		CPU time spent (ms)=8140
		Physical memory (bytes) snapshot=1487499264
		Virtual memory (bytes) snapshot=16093339648
		Total committed heap usage (bytes)=1691877376
		Peak Map Physical memory (bytes)=376389632
		Peak Map Virtual memory (bytes)=4019122176
		Peak Reduce Physical memory (bytes)=370831360
		Peak Reduce Virtual memory (bytes)=4041924608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201102 09:31:28.580" starttime="20201102 09:31:28.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201102 09:31:28.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201102 09:31:28.580" starttime="20201102 09:31:28.580"></status>
</kw>
<status status="PASS" endtime="20201102 09:31:28.581" starttime="20201102 09:30:46.999"></status>
</kw>
<msg timestamp="20201102 09:31:28.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201102 09:31:28.581" starttime="20201102 09:30:46.999"></status>
</kw>
<msg timestamp="20201102 09:31:28.581" level="INFO">${output} = 2020-11-02 09:30:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-11-02 09:30:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201102 09:31:28.581" starttime="20201102 09:30:46.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201102 09:31:28.582" starttime="20201102 09:31:28.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201102 09:31:28.582" starttime="20201102 09:31:28.582"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201102 09:31:28.583" critical="yes" starttime="20201102 09:30:46.971"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201102 09:31:28.584" starttime="20201102 09:30:04.007"></status>
</suite>
<status status="PASS" elapsedtime="217814" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="604031" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
