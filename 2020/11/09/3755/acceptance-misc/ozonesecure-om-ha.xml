<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201109 13:35:51.309" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:31:50.722" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:00.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:00.907" level="INFO">${output} = 2020-11-09 13:31:52,341 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:31:52,579 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201109 13:32:00.907" starttime="20201109 13:31:50.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:00.908" level="INFO">2020-11-09 13:31:52,341 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:31:52,579 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:31:52,579 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-09 13:31:55,258 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-09 13:31:55,259 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-09 13:31:55,259 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-09 13:31:55,259 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-09 13:31:55,259 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-09 13:31:55,259 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-09 13:31:55,260 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-09 13:31:55,262 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-09 13:31:55,276 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:31:55,314 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-21838, with testuser/scm@EXAMPLE.COM as owner.
2020-11-09 13:31:55,756 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-21838/bucket-0-62348, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-09 13:31:56,292 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:31:57,293 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:31:58,297 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:31:58,552 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-09 13:31:59,300 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,427
Average Time spent in bucket creation: 00:00:00,174
Average Time spent in key creation: 00:00:01,364
Average Time spent in key write: 00:00:01,626
Total bytes written: 10240
Total Execution time: 00:00:07,741
***************************************************</msg>
<status status="PASS" endtime="20201109 13:32:00.908" starttime="20201109 13:32:00.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:00.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:00.909" starttime="20201109 13:32:00.908"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:00.909" starttime="20201109 13:31:50.717"></status>
</kw>
<msg timestamp="20201109 13:32:00.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:00.909" starttime="20201109 13:31:50.717"></status>
</kw>
<msg timestamp="20201109 13:32:00.910" level="INFO">${result} = 2020-11-09 13:31:52,341 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:31:52,579 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201109 13:32:00.910" starttime="20201109 13:31:50.716"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201109 13:32:00.911" starttime="20201109 13:32:00.910"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:00.911" starttime="20201109 13:32:00.910"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:32:00.911" critical="yes" starttime="20201109 13:31:50.715"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:00.918" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:08.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:08.962" level="INFO">${output} = 2020-11-09 13:32:02,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:32:02,664 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201109 13:32:08.962" starttime="20201109 13:32:00.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:08.965" level="INFO">2020-11-09 13:32:02,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:32:02,664 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:32:02,664 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-09 13:32:02,827 [main] INFO freon.BaseFreonGenerator: Executing test with prefix c5l0qbugqf
2020-11-09 13:32:02,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-09 13:32:03,849 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:32:04,287 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-09 13:32:04,353 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-09 13:32:04,849 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:32:04,992 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-09 13:32:05,401 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:32:05,402 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-B85704F89D5D-&gt;85bcaa81-e17a-433a-8853-9425ed2cd0a5
2020-11-09 13:32:05,403 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-09 13:32:05,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:32:06,853 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:32:07,853 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-09 13:32:08,465 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3186.899707, max=3186.899707, mean=3186.899707, stddev=0.0, median=3186.899707, p75=3186.899707, p95=3186.899707, p98=3186.899707, p99=3186.899707, p999=3186.899707, mean_rate=0.24765199361756832, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-09 13:32:08,465 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-11-09 13:32:08,471 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-09 13:32:08,471 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201109 13:32:08.965" starttime="20201109 13:32:08.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:08.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:08.966" starttime="20201109 13:32:08.965"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:08.966" starttime="20201109 13:32:00.913"></status>
</kw>
<msg timestamp="20201109 13:32:08.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:08.966" starttime="20201109 13:32:00.913"></status>
</kw>
<msg timestamp="20201109 13:32:08.967" level="INFO">${result} = 2020-11-09 13:32:02,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:32:02,664 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201109 13:32:08.967" starttime="20201109 13:32:00.912"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201109 13:32:08.968" starttime="20201109 13:32:08.968"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:08.968" starttime="20201109 13:32:08.967"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:32:08.968" critical="yes" starttime="20201109 13:32:00.911"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:08.973" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:14.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:14.623" level="INFO">${output} = 2020-11-09 13:32:11,028 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:32:11,190 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201109 13:32:14.623" starttime="20201109 13:32:08.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:14.624" level="INFO">2020-11-09 13:32:11,028 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:32:11,190 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:32:11,190 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-09 13:32:11,378 [main] INFO freon.BaseFreonGenerator: Executing test with prefix czsj8ggiop
2020-11-09 13:32:11,391 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-09 13:32:12,402 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:32:13,402 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:32:14,403 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-09 13:32:14,548 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=256.133738, max=256.133738, mean=256.133738, stddev=0.0, median=256.133738, p75=256.133738, p95=256.133738, p98=256.133738, p99=256.133738, p999=256.133738, mean_rate=0.8776039967405928, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-09 13:32:14,549 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-09 13:32:14,549 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-09 13:32:14,549 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201109 13:32:14.625" starttime="20201109 13:32:14.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:14.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:14.625" starttime="20201109 13:32:14.625"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:14.625" starttime="20201109 13:32:08.971"></status>
</kw>
<msg timestamp="20201109 13:32:14.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:14.626" starttime="20201109 13:32:08.970"></status>
</kw>
<msg timestamp="20201109 13:32:14.626" level="INFO">${result} = 2020-11-09 13:32:11,028 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:32:11,190 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201109 13:32:14.626" starttime="20201109 13:32:08.970"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201109 13:32:14.627" starttime="20201109 13:32:14.627"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:14.627" starttime="20201109 13:32:14.626"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:32:14.627" critical="yes" starttime="20201109 13:32:08.969"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:14.632" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:19.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:19.299" level="INFO">${output} = 2020-11-09 13:32:16,363 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:32:16,572 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201109 13:32:19.299" starttime="20201109 13:32:14.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:19.300" level="INFO">2020-11-09 13:32:16,363 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:32:16,572 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:32:16,572 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-09 13:32:16,720 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qvwmht6uoo
2020-11-09 13:32:16,735 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-09 13:32:17,739 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-09 13:32:18,740 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-09 13:32:19,269 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=94.230929, max=94.230929, mean=94.230929, stddev=0.0, median=94.230929, p75=94.230929, p95=94.230929, p98=94.230929, p99=94.230929, p999=94.230929, mean_rate=0.8735143209467122, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-09 13:32:19,273 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-09 13:32:19,274 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-09 13:32:19,274 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201109 13:32:19.300" starttime="20201109 13:32:19.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:19.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:19.301" starttime="20201109 13:32:19.300"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:19.301" starttime="20201109 13:32:14.630"></status>
</kw>
<msg timestamp="20201109 13:32:19.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:19.301" starttime="20201109 13:32:14.629"></status>
</kw>
<msg timestamp="20201109 13:32:19.302" level="INFO">${result} = 2020-11-09 13:32:16,363 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-09 13:32:16,572 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201109 13:32:19.302" starttime="20201109 13:32:14.629"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201109 13:32:19.303" starttime="20201109 13:32:19.302"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:19.303" starttime="20201109 13:32:19.302"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:32:19.303" critical="yes" starttime="20201109 13:32:14.628"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201109 13:32:19.305" starttime="20201109 13:31:50.691"></status>
</suite>
<status status="PASS" endtime="20201109 13:32:19.308" starttime="20201109 13:31:50.665"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:31:45.172" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:31:45.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:31:45.177" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:31:45.177" starttime="20201109 13:31:45.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:31:45.178" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:31:45.178" starttime="20201109 13:31:45.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:31:45.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:31:45.179" starttime="20201109 13:31:45.178"></status>
</kw>
<status status="PASS" endtime="20201109 13:31:45.179" starttime="20201109 13:31:45.167"></status>
</kw>
<msg timestamp="20201109 13:31:45.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:31:45.179" starttime="20201109 13:31:45.167"></status>
</kw>
<msg timestamp="20201109 13:31:45.179" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:31:45.179" starttime="20201109 13:31:45.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:31:45.180" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:31:45.180" starttime="20201109 13:31:45.179"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:31:45.185" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:31:45.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:31:45.207" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:31:45.207" starttime="20201109 13:31:45.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:31:45.208" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:31:45.208" starttime="20201109 13:31:45.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:31:45.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:31:45.208" starttime="20201109 13:31:45.208"></status>
</kw>
<status status="PASS" endtime="20201109 13:31:45.209" starttime="20201109 13:31:45.181"></status>
</kw>
<msg timestamp="20201109 13:31:45.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:31:45.209" starttime="20201109 13:31:45.181"></status>
</kw>
<status status="PASS" endtime="20201109 13:31:45.209" starttime="20201109 13:31:45.181"></status>
</kw>
<status status="PASS" endtime="20201109 13:31:45.209" starttime="20201109 13:31:45.180"></status>
</kw>
<status status="PASS" endtime="20201109 13:31:45.209" starttime="20201109 13:31:45.166"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:31:45.210" critical="yes" starttime="20201109 13:31:45.165"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201109 13:31:45.210" starttime="20201109 13:31:45.117"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:32:24.766" level="INFO">${random} = 30169</msg>
<status status="PASS" endtime="20201109 13:32:24.766" starttime="20201109 13:32:24.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201109 13:32:24.767" level="INFO">${source} = 30169-source</msg>
<status status="PASS" endtime="20201109 13:32:24.767" starttime="20201109 13:32:24.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201109 13:32:24.768" level="INFO">${target} = 30169-target</msg>
<status status="PASS" endtime="20201109 13:32:24.769" starttime="20201109 13:32:24.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:24.773" level="INFO">Running command 'ozone sh volume create 30169-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:28.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:28.168" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:32:28.168" starttime="20201109 13:32:24.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:28.169" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:32:28.169" starttime="20201109 13:32:28.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:28.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:28.170" starttime="20201109 13:32:28.169"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:28.170" starttime="20201109 13:32:24.769"></status>
</kw>
<msg timestamp="20201109 13:32:28.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:28.170" starttime="20201109 13:32:24.769"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:28.170" starttime="20201109 13:32:24.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:28.175" level="INFO">Running command 'ozone sh volume create 30169-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:31.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:31.784" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:32:31.784" starttime="20201109 13:32:28.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:31.785" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:32:31.785" starttime="20201109 13:32:31.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:31.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:31.786" starttime="20201109 13:32:31.785"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:31.786" starttime="20201109 13:32:28.171"></status>
</kw>
<msg timestamp="20201109 13:32:31.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:31.786" starttime="20201109 13:32:28.171"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:31.786" starttime="20201109 13:32:28.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:31.791" level="INFO">Running command 'ozone sh bucket create 30169-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:35.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:35.204" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:32:35.204" starttime="20201109 13:32:31.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:35.205" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:32:35.205" starttime="20201109 13:32:35.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:35.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:35.206" starttime="20201109 13:32:35.205"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:35.206" starttime="20201109 13:32:31.788"></status>
</kw>
<msg timestamp="20201109 13:32:35.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:35.206" starttime="20201109 13:32:31.788"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:35.207" starttime="20201109 13:32:31.788"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:35.212" level="INFO">Running command 'ozone sh key put 30169-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:41.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:41.001" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:32:41.001" starttime="20201109 13:32:35.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:41.002" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:32:41.002" starttime="20201109 13:32:41.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:41.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:41.002" starttime="20201109 13:32:41.002"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:41.003" starttime="20201109 13:32:35.208"></status>
</kw>
<msg timestamp="20201109 13:32:41.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:41.003" starttime="20201109 13:32:35.208"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:41.003" starttime="20201109 13:32:35.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:41.006" level="INFO">Running command 'ozone sh bucket create 30169-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:44.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:44.594" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:32:44.594" starttime="20201109 13:32:41.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:44.595" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:32:44.595" starttime="20201109 13:32:44.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:44.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:44.596" starttime="20201109 13:32:44.595"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:44.596" starttime="20201109 13:32:41.004"></status>
</kw>
<msg timestamp="20201109 13:32:44.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:44.596" starttime="20201109 13:32:41.004"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:44.597" starttime="20201109 13:32:41.003"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:44.602" level="INFO">Running command 'ozone sh bucket link 30169-source/readable-bucket 30169-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:48.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:48.096" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:32:48.096" starttime="20201109 13:32:44.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:48.098" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:32:48.098" starttime="20201109 13:32:48.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:48.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:48.099" starttime="20201109 13:32:48.098"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:48.099" starttime="20201109 13:32:44.597"></status>
</kw>
<msg timestamp="20201109 13:32:48.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:48.099" starttime="20201109 13:32:44.597"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:48.099" starttime="20201109 13:32:44.597"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:48.103" level="INFO">Running command 'ozone sh bucket link 30169-source/readable-bucket 30169-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:51.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:51.471" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:32:51.471" starttime="20201109 13:32:48.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:51.472" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:32:51.472" starttime="20201109 13:32:51.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:51.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:51.472" starttime="20201109 13:32:51.472"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:51.473" starttime="20201109 13:32:48.100"></status>
</kw>
<msg timestamp="20201109 13:32:51.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:51.473" starttime="20201109 13:32:48.100"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:51.473" starttime="20201109 13:32:48.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:51.477" level="INFO">Running command 'ozone sh bucket link 30169-source/unreadable-bucket 30169-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:54.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:54.954" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:32:54.954" starttime="20201109 13:32:51.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:54.955" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:32:54.956" starttime="20201109 13:32:54.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:54.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:54.956" starttime="20201109 13:32:54.956"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:54.957" starttime="20201109 13:32:51.474"></status>
</kw>
<msg timestamp="20201109 13:32:54.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:54.957" starttime="20201109 13:32:51.474"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:54.957" starttime="20201109 13:32:51.473"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:54.961" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 30169-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:32:58.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:32:58.540" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:32:58.540" starttime="20201109 13:32:54.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:32:58.541" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201109 13:32:58.541" starttime="20201109 13:32:58.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:32:58.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:32:58.542" starttime="20201109 13:32:58.541"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:58.542" starttime="20201109 13:32:54.958"></status>
</kw>
<msg timestamp="20201109 13:32:58.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:32:58.542" starttime="20201109 13:32:54.958"></status>
</kw>
<status status="PASS" endtime="20201109 13:32:58.543" starttime="20201109 13:32:54.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:32:58.546" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 30169-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:02.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:02.085" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:02.085" starttime="20201109 13:32:58.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:02.086" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201109 13:33:02.086" starttime="20201109 13:33:02.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:02.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:02.087" starttime="20201109 13:33:02.086"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:02.087" starttime="20201109 13:32:58.543"></status>
</kw>
<msg timestamp="20201109 13:33:02.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:02.087" starttime="20201109 13:32:58.543"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:02.087" starttime="20201109 13:32:58.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:02.091" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 30169-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:05.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:05.297" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:05.297" starttime="20201109 13:33:02.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:05.298" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201109 13:33:05.298" starttime="20201109 13:33:05.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:05.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:05.299" starttime="20201109 13:33:05.299"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:05.299" starttime="20201109 13:33:02.088"></status>
</kw>
<msg timestamp="20201109 13:33:05.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:05.300" starttime="20201109 13:33:02.088"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:05.300" starttime="20201109 13:33:02.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:05.304" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 30169-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:08.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:08.928" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:08.928" starttime="20201109 13:33:05.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:08.929" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201109 13:33:08.929" starttime="20201109 13:33:08.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:08.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:08.930" starttime="20201109 13:33:08.929"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:08.930" starttime="20201109 13:33:05.301"></status>
</kw>
<msg timestamp="20201109 13:33:08.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:08.930" starttime="20201109 13:33:05.301"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:08.931" starttime="20201109 13:33:05.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:08.935" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 30169-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:12.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:12.391" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:12.391" starttime="20201109 13:33:08.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:12.392" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201109 13:33:12.392" starttime="20201109 13:33:12.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:12.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:12.392" starttime="20201109 13:33:12.392"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.393" starttime="20201109 13:33:08.931"></status>
</kw>
<msg timestamp="20201109 13:33:12.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:12.393" starttime="20201109 13:33:08.931"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.393" starttime="20201109 13:33:08.931"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.393" starttime="20201109 13:32:31.787"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.394" starttime="20201109 13:32:31.787"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.394" starttime="20201109 13:32:24.765"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:12.400" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:12.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:12.403" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:33:12.403" starttime="20201109 13:33:12.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:12.404" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:33:12.404" starttime="20201109 13:33:12.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:12.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:12.405" starttime="20201109 13:33:12.404"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.405" starttime="20201109 13:33:12.397"></status>
</kw>
<msg timestamp="20201109 13:33:12.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:12.405" starttime="20201109 13:33:12.397"></status>
</kw>
<msg timestamp="20201109 13:33:12.405" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:33:12.405" starttime="20201109 13:33:12.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:33:12.407" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:33:12.407" starttime="20201109 13:33:12.405"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:12.411" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:12.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:12.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:33:12.423" starttime="20201109 13:33:12.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:12.424" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:33:12.424" starttime="20201109 13:33:12.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:12.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:12.424" starttime="20201109 13:33:12.424"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.425" starttime="20201109 13:33:12.408"></status>
</kw>
<msg timestamp="20201109 13:33:12.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:12.425" starttime="20201109 13:33:12.408"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.425" starttime="20201109 13:33:12.407"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.425" starttime="20201109 13:33:12.407"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.425" starttime="20201109 13:33:12.396"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:12.425" starttime="20201109 13:33:12.395"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:12.430" level="INFO">Running command 'ozone sh bucket link 30169-source/no-such-bucket 30169-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:15.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:15.858" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:15.859" starttime="20201109 13:33:12.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:15.863" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:33:15.863" starttime="20201109 13:33:15.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:15.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:15.864" starttime="20201109 13:33:15.863"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:15.864" starttime="20201109 13:33:12.426"></status>
</kw>
<msg timestamp="20201109 13:33:15.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:15.864" starttime="20201109 13:33:12.426"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:15.865" starttime="20201109 13:33:12.426"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:15.868" level="INFO">Running command 'ozone sh key list 30169-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:19.109" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:33:19.109" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:19.109" starttime="20201109 13:33:15.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:19.110" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201109 13:33:19.110" starttime="20201109 13:33:19.110"></status>
</kw>
<msg timestamp="20201109 13:33:19.111" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:19.111" starttime="20201109 13:33:15.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201109 13:33:19.111" starttime="20201109 13:33:19.111"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:33:19.112" critical="yes" starttime="20201109 13:33:12.394"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:19.118" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:19.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:19.120" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:33:19.121" starttime="20201109 13:33:19.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:19.121" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:33:19.122" starttime="20201109 13:33:19.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:19.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:19.122" starttime="20201109 13:33:19.122"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:19.122" starttime="20201109 13:33:19.115"></status>
</kw>
<msg timestamp="20201109 13:33:19.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:19.123" starttime="20201109 13:33:19.115"></status>
</kw>
<msg timestamp="20201109 13:33:19.123" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:33:19.123" starttime="20201109 13:33:19.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:33:19.124" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:33:19.124" starttime="20201109 13:33:19.123"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:19.128" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:19.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:19.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:33:19.144" starttime="20201109 13:33:19.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:19.145" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:33:19.146" starttime="20201109 13:33:19.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:19.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:19.146" starttime="20201109 13:33:19.146"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:19.146" starttime="20201109 13:33:19.125"></status>
</kw>
<msg timestamp="20201109 13:33:19.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:19.147" starttime="20201109 13:33:19.125"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:19.147" starttime="20201109 13:33:19.124"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:19.147" starttime="20201109 13:33:19.124"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:19.147" starttime="20201109 13:33:19.114"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:19.147" starttime="20201109 13:33:19.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:19.151" level="INFO">Running command 'ozone sh bucket link 30169-source/bucket1 30169-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:22.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:22.528" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:22.528" starttime="20201109 13:33:19.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:22.529" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:33:22.529" starttime="20201109 13:33:22.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:22.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:22.530" starttime="20201109 13:33:22.530"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:22.530" starttime="20201109 13:33:19.148"></status>
</kw>
<msg timestamp="20201109 13:33:22.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:22.531" starttime="20201109 13:33:19.148"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:22.531" starttime="20201109 13:33:19.147"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:22.535" level="INFO">Running command 'ozone sh bucket create 30169-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:25.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:25.780" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:25.780" starttime="20201109 13:33:22.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:25.781" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:33:25.781" starttime="20201109 13:33:25.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:25.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:25.782" starttime="20201109 13:33:25.782"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:25.782" starttime="20201109 13:33:22.532"></status>
</kw>
<msg timestamp="20201109 13:33:25.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:25.783" starttime="20201109 13:33:22.532"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:25.783" starttime="20201109 13:33:22.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:25.787" level="INFO">Running command 'ozone sh key put 30169-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:31.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:31.322" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:31.323" starttime="20201109 13:33:25.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:31.324" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:33:31.324" starttime="20201109 13:33:31.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:31.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:31.324" starttime="20201109 13:33:31.324"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:31.325" starttime="20201109 13:33:25.784"></status>
</kw>
<msg timestamp="20201109 13:33:31.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:31.325" starttime="20201109 13:33:25.784"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:31.325" starttime="20201109 13:33:25.783"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201109 13:33:31.327" level="INFO">${postfix} = 13086</msg>
<status status="PASS" endtime="20201109 13:33:31.327" starttime="20201109 13:33:31.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201109 13:33:31.327" level="INFO">${tmpfile} = /tmp/tempkey-13086</msg>
<status status="PASS" endtime="20201109 13:33:31.328" starttime="20201109 13:33:31.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:31.331" level="INFO">Running command 'ozone sh key get -f 30169-target/link1/key1 /tmp/tempkey-13086 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:37.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:37.442" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:37.442" starttime="20201109 13:33:31.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:37.443" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:33:37.443" starttime="20201109 13:33:37.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:37.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:37.444" starttime="20201109 13:33:37.443"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.444" starttime="20201109 13:33:31.328"></status>
</kw>
<msg timestamp="20201109 13:33:37.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:37.444" starttime="20201109 13:33:31.328"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.445" starttime="20201109 13:33:31.328"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201109 13:33:37.447" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-13086 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:37.449" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201109 13:33:37.449" starttime="20201109 13:33:37.445"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:37.455" level="INFO">Running command 'rm -f /tmp/tempkey-13086 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:37.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:37.456" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:33:37.456" starttime="20201109 13:33:37.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:37.457" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:33:37.457" starttime="20201109 13:33:37.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:37.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:37.458" starttime="20201109 13:33:37.458"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.458" starttime="20201109 13:33:37.451"></status>
</kw>
<msg timestamp="20201109 13:33:37.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:37.459" starttime="20201109 13:33:37.450"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.459" starttime="20201109 13:33:37.450"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:33:37.459" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201109 13:33:37.460" starttime="20201109 13:33:37.459"></status>
</kw>
<msg timestamp="20201109 13:33:37.460" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201109 13:33:37.460" starttime="20201109 13:33:31.326"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:33:37.460" starttime="20201109 13:33:37.460"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.460" starttime="20201109 13:33:31.325"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:33:37.461" critical="yes" starttime="20201109 13:33:19.113"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:37.467" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:37.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:37.469" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:33:37.469" starttime="20201109 13:33:37.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:37.470" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:33:37.470" starttime="20201109 13:33:37.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:37.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:37.471" starttime="20201109 13:33:37.471"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.471" starttime="20201109 13:33:37.464"></status>
</kw>
<msg timestamp="20201109 13:33:37.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:37.472" starttime="20201109 13:33:37.464"></status>
</kw>
<msg timestamp="20201109 13:33:37.472" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:33:37.472" starttime="20201109 13:33:37.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:33:37.473" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:33:37.473" starttime="20201109 13:33:37.472"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:37.477" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:37.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:37.527" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:33:37.527" starttime="20201109 13:33:37.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:37.529" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:33:37.529" starttime="20201109 13:33:37.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:37.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:37.530" starttime="20201109 13:33:37.529"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.530" starttime="20201109 13:33:37.474"></status>
</kw>
<msg timestamp="20201109 13:33:37.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:37.530" starttime="20201109 13:33:37.474"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.530" starttime="20201109 13:33:37.473"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.530" starttime="20201109 13:33:37.473"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.530" starttime="20201109 13:33:37.463"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:37.530" starttime="20201109 13:33:37.463"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:37.535" level="INFO">Running command 'ozone sh key put 30169-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:43.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:43.132" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:43.132" starttime="20201109 13:33:37.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:43.133" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:33:43.133" starttime="20201109 13:33:43.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:43.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:43.133" starttime="20201109 13:33:43.133"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:43.134" starttime="20201109 13:33:37.532"></status>
</kw>
<msg timestamp="20201109 13:33:43.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:43.134" starttime="20201109 13:33:37.531"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:43.134" starttime="20201109 13:33:37.531"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201109 13:33:43.137" level="INFO">${postfix} = 32635</msg>
<status status="PASS" endtime="20201109 13:33:43.137" starttime="20201109 13:33:43.136"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201109 13:33:43.137" level="INFO">${tmpfile} = /tmp/tempkey-32635</msg>
<status status="PASS" endtime="20201109 13:33:43.137" starttime="20201109 13:33:43.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:43.143" level="INFO">Running command 'ozone sh key get -f 30169-source/bucket1/key2 /tmp/tempkey-32635 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:48.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:48.621" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:33:48.621" starttime="20201109 13:33:43.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:48.622" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:33:48.622" starttime="20201109 13:33:48.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:48.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:48.623" starttime="20201109 13:33:48.623"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.623" starttime="20201109 13:33:43.138"></status>
</kw>
<msg timestamp="20201109 13:33:48.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:48.624" starttime="20201109 13:33:43.138"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.624" starttime="20201109 13:33:43.138"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201109 13:33:48.626" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-32635 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:48.629" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201109 13:33:48.629" starttime="20201109 13:33:48.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:48.633" level="INFO">Running command 'rm -f /tmp/tempkey-32635 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:48.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:48.636" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:33:48.636" starttime="20201109 13:33:48.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:48.637" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:33:48.637" starttime="20201109 13:33:48.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:48.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:48.638" starttime="20201109 13:33:48.638"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.638" starttime="20201109 13:33:48.631"></status>
</kw>
<msg timestamp="20201109 13:33:48.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:48.638" starttime="20201109 13:33:48.630"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.639" starttime="20201109 13:33:48.630"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:33:48.639" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201109 13:33:48.639" starttime="20201109 13:33:48.639"></status>
</kw>
<msg timestamp="20201109 13:33:48.640" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201109 13:33:48.640" starttime="20201109 13:33:43.136"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:33:48.640" starttime="20201109 13:33:48.640"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.640" starttime="20201109 13:33:43.134"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:33:48.640" critical="yes" starttime="20201109 13:33:37.462"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:48.647" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:48.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:48.649" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:33:48.649" starttime="20201109 13:33:48.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:48.650" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:33:48.650" starttime="20201109 13:33:48.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:48.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:48.650" starttime="20201109 13:33:48.650"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.651" starttime="20201109 13:33:48.644"></status>
</kw>
<msg timestamp="20201109 13:33:48.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:48.651" starttime="20201109 13:33:48.644"></status>
</kw>
<msg timestamp="20201109 13:33:48.651" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:33:48.651" starttime="20201109 13:33:48.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:33:48.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:33:48.652" starttime="20201109 13:33:48.651"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:48.657" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:48.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:48.668" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:33:48.668" starttime="20201109 13:33:48.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:48.669" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:33:48.669" starttime="20201109 13:33:48.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:48.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:48.670" starttime="20201109 13:33:48.669"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.670" starttime="20201109 13:33:48.653"></status>
</kw>
<msg timestamp="20201109 13:33:48.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:48.670" starttime="20201109 13:33:48.653"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.670" starttime="20201109 13:33:48.652"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.671" starttime="20201109 13:33:48.652"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.671" starttime="20201109 13:33:48.643"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:48.671" starttime="20201109 13:33:48.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:48.674" level="INFO">Running command 'ozone sh key list 30169-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:52.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:52.594" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201109 13:33:52.594" starttime="20201109 13:33:48.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:52.595" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201109 13:33:52.596" starttime="20201109 13:33:52.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:52.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:52.596" starttime="20201109 13:33:52.596"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:52.597" starttime="20201109 13:33:48.672"></status>
</kw>
<msg timestamp="20201109 13:33:52.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:52.597" starttime="20201109 13:33:48.672"></status>
</kw>
<msg timestamp="20201109 13:33:52.597" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201109 13:33:52.597" starttime="20201109 13:33:48.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:52.601" level="INFO">Running command 'ozone sh key list 30169-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:56.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:56.552" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201109 13:33:56.553" starttime="20201109 13:33:52.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:56.554" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201109 13:33:56.554" starttime="20201109 13:33:56.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:56.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:56.554" starttime="20201109 13:33:56.554"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:56.555" starttime="20201109 13:33:52.598"></status>
</kw>
<msg timestamp="20201109 13:33:56.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:56.555" starttime="20201109 13:33:52.598"></status>
</kw>
<msg timestamp="20201109 13:33:56.555" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201109 13:33:56.555" starttime="20201109 13:33:52.597"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:33:56.556" starttime="20201109 13:33:56.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201109 13:33:56.556" starttime="20201109 13:33:56.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201109 13:33:56.557" starttime="20201109 13:33:56.557"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:33:56.557" critical="yes" starttime="20201109 13:33:48.642"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:56.565" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:56.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:56.566" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:33:56.566" starttime="20201109 13:33:56.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:56.567" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:33:56.567" starttime="20201109 13:33:56.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:56.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:56.568" starttime="20201109 13:33:56.567"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:56.568" starttime="20201109 13:33:56.561"></status>
</kw>
<msg timestamp="20201109 13:33:56.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:56.568" starttime="20201109 13:33:56.560"></status>
</kw>
<msg timestamp="20201109 13:33:56.569" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:33:56.569" starttime="20201109 13:33:56.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:33:56.569" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:33:56.569" starttime="20201109 13:33:56.569"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:56.574" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:33:56.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:33:56.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:33:56.597" starttime="20201109 13:33:56.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:33:56.598" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:33:56.598" starttime="20201109 13:33:56.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:33:56.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:33:56.599" starttime="20201109 13:33:56.598"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:56.599" starttime="20201109 13:33:56.571"></status>
</kw>
<msg timestamp="20201109 13:33:56.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:33:56.599" starttime="20201109 13:33:56.571"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:56.600" starttime="20201109 13:33:56.570"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:56.600" starttime="20201109 13:33:56.570"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:56.600" starttime="20201109 13:33:56.560"></status>
</kw>
<status status="PASS" endtime="20201109 13:33:56.600" starttime="20201109 13:33:56.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:33:56.604" level="INFO">Running command 'ozone sh key delete 30169-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:00.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:00.540" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:00.540" starttime="20201109 13:33:56.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:00.541" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:34:00.541" starttime="20201109 13:34:00.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:00.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:00.542" starttime="20201109 13:34:00.541"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:00.542" starttime="20201109 13:33:56.601"></status>
</kw>
<msg timestamp="20201109 13:34:00.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:00.542" starttime="20201109 13:33:56.601"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:00.542" starttime="20201109 13:33:56.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:00.546" level="INFO">Running command 'ozone sh key list 30169-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:04.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:04.719" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201109 13:34:04.719" starttime="20201109 13:34:00.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:04.720" level="INFO">key1</msg>
<status status="PASS" endtime="20201109 13:34:04.721" starttime="20201109 13:34:04.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:04.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:04.721" starttime="20201109 13:34:04.721"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:04.722" starttime="20201109 13:34:00.544"></status>
</kw>
<msg timestamp="20201109 13:34:04.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:04.722" starttime="20201109 13:34:00.543"></status>
</kw>
<msg timestamp="20201109 13:34:04.722" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201109 13:34:04.722" starttime="20201109 13:34:00.543"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:04.723" starttime="20201109 13:34:04.722"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:34:04.723" critical="yes" starttime="20201109 13:33:56.558"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:04.730" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:04.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:04.731" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:34:04.732" starttime="20201109 13:34:04.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:04.732" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:34:04.733" starttime="20201109 13:34:04.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:04.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:04.733" starttime="20201109 13:34:04.733"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:04.733" starttime="20201109 13:34:04.726"></status>
</kw>
<msg timestamp="20201109 13:34:04.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:04.734" starttime="20201109 13:34:04.726"></status>
</kw>
<msg timestamp="20201109 13:34:04.734" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:34:04.734" starttime="20201109 13:34:04.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:34:04.735" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:34:04.735" starttime="20201109 13:34:04.734"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:04.739" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:04.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:04.757" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:04.757" starttime="20201109 13:34:04.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:04.758" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:04.758" starttime="20201109 13:34:04.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:04.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:04.759" starttime="20201109 13:34:04.758"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:04.759" starttime="20201109 13:34:04.736"></status>
</kw>
<msg timestamp="20201109 13:34:04.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:04.759" starttime="20201109 13:34:04.736"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:04.759" starttime="20201109 13:34:04.735"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:04.759" starttime="20201109 13:34:04.735"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:04.759" starttime="20201109 13:34:04.725"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:04.760" starttime="20201109 13:34:04.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:04.763" level="INFO">Running command 'ozone sh bucket list 30169-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:09.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:09.190" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:09.190" starttime="20201109 13:34:04.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:09.191" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:33:15.767Z",
  "modificationTime" : "2020-11-09T13:33:15.767Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:32:54.798Z",
  "modificationTime" : "2020-11-09T13:33:12.272Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:33:22.461Z",
  "modificationTime" : "2020-11-09T13:33:22.461Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:32:47.928Z",
  "modificationTime" : "2020-11-09T13:33:08.727Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:32:51.320Z",
  "modificationTime" : "2020-11-09T13:32:51.320Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201109 13:34:09.191" starttime="20201109 13:34:09.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:09.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:09.192" starttime="20201109 13:34:09.191"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:09.192" starttime="20201109 13:34:04.760"></status>
</kw>
<msg timestamp="20201109 13:34:09.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:09.192" starttime="20201109 13:34:04.760"></status>
</kw>
<msg timestamp="20201109 13:34:09.193" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:09.193" starttime="20201109 13:34:04.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:09.193" starttime="20201109 13:34:09.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:09.194" starttime="20201109 13:34:09.193"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:34:09.194" critical="yes" starttime="20201109 13:34:04.724"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:09.200" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:09.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:09.203" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:34:09.203" starttime="20201109 13:34:09.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:09.204" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:34:09.204" starttime="20201109 13:34:09.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:09.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:09.205" starttime="20201109 13:34:09.204"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:09.205" starttime="20201109 13:34:09.197"></status>
</kw>
<msg timestamp="20201109 13:34:09.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:09.205" starttime="20201109 13:34:09.197"></status>
</kw>
<msg timestamp="20201109 13:34:09.206" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:34:09.206" starttime="20201109 13:34:09.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:34:09.207" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:34:09.207" starttime="20201109 13:34:09.206"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:09.211" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:09.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:09.225" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:09.225" starttime="20201109 13:34:09.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:09.226" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:09.226" starttime="20201109 13:34:09.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:09.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:09.227" starttime="20201109 13:34:09.226"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:09.227" starttime="20201109 13:34:09.208"></status>
</kw>
<msg timestamp="20201109 13:34:09.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:09.227" starttime="20201109 13:34:09.208"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:09.228" starttime="20201109 13:34:09.207"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:09.228" starttime="20201109 13:34:09.207"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:09.228" starttime="20201109 13:34:09.196"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:09.228" starttime="20201109 13:34:09.196"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:09.232" level="INFO">Running command 'ozone sh bucket info 30169-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:12.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:12.897" level="INFO">${output} = 30169-source bucket1</msg>
<status status="PASS" endtime="20201109 13:34:12.897" starttime="20201109 13:34:09.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:12.898" level="INFO">30169-source bucket1</msg>
<status status="PASS" endtime="20201109 13:34:12.898" starttime="20201109 13:34:12.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:12.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:12.899" starttime="20201109 13:34:12.899"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:12.899" starttime="20201109 13:34:09.229"></status>
</kw>
<msg timestamp="20201109 13:34:12.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:12.900" starttime="20201109 13:34:09.229"></status>
</kw>
<msg timestamp="20201109 13:34:12.900" level="INFO">${result} = 30169-source bucket1</msg>
<status status="PASS" endtime="20201109 13:34:12.900" starttime="20201109 13:34:09.228"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:12.900" starttime="20201109 13:34:12.900"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:34:12.901" critical="yes" starttime="20201109 13:34:09.195"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:12.907" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:12.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:12.909" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:34:12.910" starttime="20201109 13:34:12.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:12.910" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:34:12.911" starttime="20201109 13:34:12.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:12.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:12.911" starttime="20201109 13:34:12.911"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:12.912" starttime="20201109 13:34:12.904"></status>
</kw>
<msg timestamp="20201109 13:34:12.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:12.912" starttime="20201109 13:34:12.904"></status>
</kw>
<msg timestamp="20201109 13:34:12.912" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:34:12.912" starttime="20201109 13:34:12.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:34:12.913" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:34:12.913" starttime="20201109 13:34:12.912"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:12.918" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:12.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:12.929" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:12.929" starttime="20201109 13:34:12.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:12.930" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:12.930" starttime="20201109 13:34:12.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:12.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:12.931" starttime="20201109 13:34:12.930"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:12.931" starttime="20201109 13:34:12.914"></status>
</kw>
<msg timestamp="20201109 13:34:12.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:12.931" starttime="20201109 13:34:12.914"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:12.931" starttime="20201109 13:34:12.913"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:12.931" starttime="20201109 13:34:12.913"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:12.931" starttime="20201109 13:34:12.903"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:12.932" starttime="20201109 13:34:12.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:12.935" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 30169-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:16.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:16.804" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:16.804" starttime="20201109 13:34:12.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:16.805" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201109 13:34:16.805" starttime="20201109 13:34:16.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:16.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:16.806" starttime="20201109 13:34:16.805"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:16.806" starttime="20201109 13:34:12.932"></status>
</kw>
<msg timestamp="20201109 13:34:16.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:16.806" starttime="20201109 13:34:12.932"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:16.807" starttime="20201109 13:34:12.932"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:16.811" level="INFO">Running command 'ozone sh bucket getacl 30169-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:20.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:20.302" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201109 13:34:20.302" starttime="20201109 13:34:16.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:20.303" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201109 13:34:20.303" starttime="20201109 13:34:20.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:20.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:20.304" starttime="20201109 13:34:20.303"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:20.304" starttime="20201109 13:34:16.809"></status>
</kw>
<msg timestamp="20201109 13:34:20.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:20.304" starttime="20201109 13:34:16.808"></status>
</kw>
<msg timestamp="20201109 13:34:20.304" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201109 13:34:20.304" starttime="20201109 13:34:16.808"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:20.305" starttime="20201109 13:34:20.305"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:20.305" starttime="20201109 13:34:16.807"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:20.311" level="INFO">Running command 'ozone sh bucket getacl 30169-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:23.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:23.882" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:23.882" starttime="20201109 13:34:20.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:23.883" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:23.883" starttime="20201109 13:34:23.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:23.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:23.884" starttime="20201109 13:34:23.883"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:23.884" starttime="20201109 13:34:20.307"></status>
</kw>
<msg timestamp="20201109 13:34:23.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:23.884" starttime="20201109 13:34:20.307"></status>
</kw>
<msg timestamp="20201109 13:34:23.885" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201109 13:34:23.885" starttime="20201109 13:34:20.306"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:23.885" starttime="20201109 13:34:23.885"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:23.885" starttime="20201109 13:34:20.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:23.890" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 30169-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:27.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:27.330" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:27.330" starttime="20201109 13:34:23.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:27.331" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201109 13:34:27.331" starttime="20201109 13:34:27.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:27.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:27.332" starttime="20201109 13:34:27.331"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:27.332" starttime="20201109 13:34:23.887"></status>
</kw>
<msg timestamp="20201109 13:34:27.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:27.332" starttime="20201109 13:34:23.886"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:27.333" starttime="20201109 13:34:23.885"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:27.338" level="INFO">Running command 'ozone sh bucket getacl 30169-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:31.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:31.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:31.050" starttime="20201109 13:34:27.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:31.052" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:31.052" starttime="20201109 13:34:31.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:31.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:31.053" starttime="20201109 13:34:31.052"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:31.053" starttime="20201109 13:34:27.335"></status>
</kw>
<msg timestamp="20201109 13:34:31.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:31.053" starttime="20201109 13:34:27.334"></status>
</kw>
<msg timestamp="20201109 13:34:31.053" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201109 13:34:31.053" starttime="20201109 13:34:27.334"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:31.054" starttime="20201109 13:34:31.053"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:31.054" starttime="20201109 13:34:27.333"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:31.060" level="INFO">Running command 'ozone sh bucket getacl 30169-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:34.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:34.500" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201109 13:34:34.500" starttime="20201109 13:34:31.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:34.501" level="INFO">READ</msg>
<status status="PASS" endtime="20201109 13:34:34.501" starttime="20201109 13:34:34.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:34.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:34.502" starttime="20201109 13:34:34.501"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:34.502" starttime="20201109 13:34:31.056"></status>
</kw>
<msg timestamp="20201109 13:34:34.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:34.502" starttime="20201109 13:34:31.056"></status>
</kw>
<msg timestamp="20201109 13:34:34.502" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201109 13:34:34.502" starttime="20201109 13:34:31.055"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:34.503" starttime="20201109 13:34:34.503"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:34.503" starttime="20201109 13:34:31.054"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:34:34.503" critical="yes" starttime="20201109 13:34:12.901"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:34.511" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:34.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:34.512" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:34:34.512" starttime="20201109 13:34:34.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:34.513" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:34:34.513" starttime="20201109 13:34:34.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:34.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:34.514" starttime="20201109 13:34:34.514"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:34.514" starttime="20201109 13:34:34.507"></status>
</kw>
<msg timestamp="20201109 13:34:34.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:34.514" starttime="20201109 13:34:34.506"></status>
</kw>
<msg timestamp="20201109 13:34:34.515" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:34:34.515" starttime="20201109 13:34:34.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:34:34.515" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:34:34.515" starttime="20201109 13:34:34.515"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:34.519" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:34.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:34.531" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:34.531" starttime="20201109 13:34:34.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:34.533" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:34.533" starttime="20201109 13:34:34.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:34.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:34.533" starttime="20201109 13:34:34.533"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:34.534" starttime="20201109 13:34:34.517"></status>
</kw>
<msg timestamp="20201109 13:34:34.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:34.534" starttime="20201109 13:34:34.516"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:34.534" starttime="20201109 13:34:34.516"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:34.534" starttime="20201109 13:34:34.516"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:34.534" starttime="20201109 13:34:34.505"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:34.534" starttime="20201109 13:34:34.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:34.539" level="INFO">Running command 'ozone sh bucket link 30169-source/bucket2 30169-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:38.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:38.174" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:38.174" starttime="20201109 13:34:34.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:38.175" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:34:38.175" starttime="20201109 13:34:38.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:38.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:38.176" starttime="20201109 13:34:38.176"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:38.176" starttime="20201109 13:34:34.535"></status>
</kw>
<msg timestamp="20201109 13:34:38.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:38.177" starttime="20201109 13:34:34.535"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:38.177" starttime="20201109 13:34:34.534"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:38.180" level="INFO">Running command 'ozone sh bucket create 30169-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:41.467" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:34:41.467" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:41.467" starttime="20201109 13:34:38.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:41.468" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201109 13:34:41.469" starttime="20201109 13:34:41.468"></status>
</kw>
<msg timestamp="20201109 13:34:41.469" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:41.469" starttime="20201109 13:34:38.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:41.469" starttime="20201109 13:34:41.469"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:41.474" level="INFO">Running command 'ozone sh bucket create 30169-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:44.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:44.715" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:44.715" starttime="20201109 13:34:41.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:44.717" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:34:44.717" starttime="20201109 13:34:44.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:44.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:44.717" starttime="20201109 13:34:44.717"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:44.718" starttime="20201109 13:34:41.470"></status>
</kw>
<msg timestamp="20201109 13:34:44.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:44.718" starttime="20201109 13:34:41.470"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:44.718" starttime="20201109 13:34:41.470"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:44.722" level="INFO">Running command 'ozone sh bucket link 30169-source/bucket1 30169-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:48.133" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:34:48.133" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:48.133" starttime="20201109 13:34:44.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.134" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201109 13:34:48.135" starttime="20201109 13:34:48.134"></status>
</kw>
<msg timestamp="20201109 13:34:48.135" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:48.135" starttime="20201109 13:34:44.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:48.136" starttime="20201109 13:34:48.135"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:34:48.136" critical="yes" starttime="20201109 13:34:34.504"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:48.145" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:48.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:48.149" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:34:48.149" starttime="20201109 13:34:48.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.152" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:34:48.152" starttime="20201109 13:34:48.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:48.153" starttime="20201109 13:34:48.152"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.153" starttime="20201109 13:34:48.140"></status>
</kw>
<msg timestamp="20201109 13:34:48.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:48.153" starttime="20201109 13:34:48.139"></status>
</kw>
<msg timestamp="20201109 13:34:48.153" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:34:48.153" starttime="20201109 13:34:48.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:34:48.154" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:34:48.154" starttime="20201109 13:34:48.154"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:48.158" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:48.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:48.169" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:48.170" starttime="20201109 13:34:48.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.171" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:48.171" starttime="20201109 13:34:48.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:48.171" starttime="20201109 13:34:48.171"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.172" starttime="20201109 13:34:48.156"></status>
</kw>
<msg timestamp="20201109 13:34:48.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:48.172" starttime="20201109 13:34:48.155"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.172" starttime="20201109 13:34:48.155"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.172" starttime="20201109 13:34:48.154"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.172" starttime="20201109 13:34:48.138"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.172" starttime="20201109 13:34:48.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:48.178" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:48.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:48.181" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:48.181" starttime="20201109 13:34:48.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.182" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:48.182" starttime="20201109 13:34:48.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:48.182" starttime="20201109 13:34:48.182"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.183" starttime="20201109 13:34:48.174"></status>
</kw>
<msg timestamp="20201109 13:34:48.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:48.183" starttime="20201109 13:34:48.174"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.183" starttime="20201109 13:34:48.174"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:48.189" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:48.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:48.190" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:34:48.190" starttime="20201109 13:34:48.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.191" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:34:48.191" starttime="20201109 13:34:48.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:48.192" starttime="20201109 13:34:48.191"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.192" starttime="20201109 13:34:48.185"></status>
</kw>
<msg timestamp="20201109 13:34:48.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:48.192" starttime="20201109 13:34:48.185"></status>
</kw>
<msg timestamp="20201109 13:34:48.193" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:34:48.193" starttime="20201109 13:34:48.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:34:48.193" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:34:48.193" starttime="20201109 13:34:48.193"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:48.197" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:48.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:48.209" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:48.209" starttime="20201109 13:34:48.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.210" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:48.210" starttime="20201109 13:34:48.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:48.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:48.211" starttime="20201109 13:34:48.210"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.211" starttime="20201109 13:34:48.195"></status>
</kw>
<msg timestamp="20201109 13:34:48.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:48.211" starttime="20201109 13:34:48.194"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.212" starttime="20201109 13:34:48.194"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.212" starttime="20201109 13:34:48.193"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.212" starttime="20201109 13:34:48.184"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:48.212" starttime="20201109 13:34:48.183"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:48.215" level="INFO">Running command 'ozone sh key list 30169-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:52.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:52.107" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:52.107" starttime="20201109 13:34:48.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.108" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "30169-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-09T13:32:38.784Z",
  "modificationTime" : "2020-11-09T13:32:40.589Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201109 13:34:52.108" starttime="20201109 13:34:52.107"></status>
</kw>
<msg timestamp="20201109 13:34:52.108" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:52.108" starttime="20201109 13:34:48.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:52.109" starttime="20201109 13:34:52.108"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.109" starttime="20201109 13:34:48.173"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.109" starttime="20201109 13:34:48.172"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:34:52.109" critical="yes" starttime="20201109 13:34:48.137"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:52.115" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:52.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:52.118" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:34:52.118" starttime="20201109 13:34:52.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.119" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:34:52.119" starttime="20201109 13:34:52.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:52.120" starttime="20201109 13:34:52.119"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.120" starttime="20201109 13:34:52.112"></status>
</kw>
<msg timestamp="20201109 13:34:52.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:52.120" starttime="20201109 13:34:52.112"></status>
</kw>
<msg timestamp="20201109 13:34:52.121" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:34:52.121" starttime="20201109 13:34:52.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:34:52.121" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:34:52.121" starttime="20201109 13:34:52.121"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:52.126" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:52.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:52.137" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:52.137" starttime="20201109 13:34:52.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.138" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:52.138" starttime="20201109 13:34:52.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:52.138" starttime="20201109 13:34:52.138"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.139" starttime="20201109 13:34:52.123"></status>
</kw>
<msg timestamp="20201109 13:34:52.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:52.139" starttime="20201109 13:34:52.123"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.139" starttime="20201109 13:34:52.122"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.139" starttime="20201109 13:34:52.122"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.139" starttime="20201109 13:34:52.111"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.139" starttime="20201109 13:34:52.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:52.145" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:52.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:52.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:52.147" starttime="20201109 13:34:52.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.148" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:52.148" starttime="20201109 13:34:52.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:52.149" starttime="20201109 13:34:52.148"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.149" starttime="20201109 13:34:52.141"></status>
</kw>
<msg timestamp="20201109 13:34:52.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:52.149" starttime="20201109 13:34:52.141"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.149" starttime="20201109 13:34:52.140"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:52.154" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:52.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:52.156" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:34:52.156" starttime="20201109 13:34:52.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.157" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:34:52.157" starttime="20201109 13:34:52.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:52.157" starttime="20201109 13:34:52.157"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.158" starttime="20201109 13:34:52.151"></status>
</kw>
<msg timestamp="20201109 13:34:52.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:52.158" starttime="20201109 13:34:52.151"></status>
</kw>
<msg timestamp="20201109 13:34:52.158" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:34:52.158" starttime="20201109 13:34:52.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:34:52.159" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:34:52.159" starttime="20201109 13:34:52.158"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:52.163" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:52.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:52.179" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:52.179" starttime="20201109 13:34:52.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.180" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:52.180" starttime="20201109 13:34:52.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:52.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:52.180" starttime="20201109 13:34:52.180"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.181" starttime="20201109 13:34:52.160"></status>
</kw>
<msg timestamp="20201109 13:34:52.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:52.181" starttime="20201109 13:34:52.160"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.181" starttime="20201109 13:34:52.159"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.181" starttime="20201109 13:34:52.159"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.181" starttime="20201109 13:34:52.150"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:52.181" starttime="20201109 13:34:52.150"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:52.185" level="INFO">Running command 'ozone sh key list 30169-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:55.761" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:34:55.761" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:55.761" starttime="20201109 13:34:52.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.763" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201109 13:34:55.763" starttime="20201109 13:34:55.762"></status>
</kw>
<msg timestamp="20201109 13:34:55.763" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:55.763" starttime="20201109 13:34:52.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:55.764" starttime="20201109 13:34:55.763"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.764" starttime="20201109 13:34:52.140"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.764" starttime="20201109 13:34:52.140"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:34:55.764" critical="yes" starttime="20201109 13:34:52.110"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:55.770" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:55.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:55.772" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:34:55.772" starttime="20201109 13:34:55.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.773" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:34:55.773" starttime="20201109 13:34:55.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:55.774" starttime="20201109 13:34:55.773"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.774" starttime="20201109 13:34:55.767"></status>
</kw>
<msg timestamp="20201109 13:34:55.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:55.774" starttime="20201109 13:34:55.767"></status>
</kw>
<msg timestamp="20201109 13:34:55.775" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:34:55.775" starttime="20201109 13:34:55.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:34:55.775" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:34:55.775" starttime="20201109 13:34:55.775"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:55.780" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:55.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:55.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:55.791" starttime="20201109 13:34:55.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.792" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:55.793" starttime="20201109 13:34:55.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:55.793" starttime="20201109 13:34:55.793"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.793" starttime="20201109 13:34:55.777"></status>
</kw>
<msg timestamp="20201109 13:34:55.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:55.794" starttime="20201109 13:34:55.777"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.794" starttime="20201109 13:34:55.776"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.794" starttime="20201109 13:34:55.775"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.794" starttime="20201109 13:34:55.766"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.794" starttime="20201109 13:34:55.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:55.799" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:55.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:55.802" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:55.802" starttime="20201109 13:34:55.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.803" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:55.803" starttime="20201109 13:34:55.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:55.804" starttime="20201109 13:34:55.803"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.804" starttime="20201109 13:34:55.796"></status>
</kw>
<msg timestamp="20201109 13:34:55.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:55.804" starttime="20201109 13:34:55.796"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.804" starttime="20201109 13:34:55.795"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:55.809" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:55.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:55.811" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:34:55.811" starttime="20201109 13:34:55.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.812" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:34:55.812" starttime="20201109 13:34:55.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:55.813" starttime="20201109 13:34:55.812"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.813" starttime="20201109 13:34:55.806"></status>
</kw>
<msg timestamp="20201109 13:34:55.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:55.813" starttime="20201109 13:34:55.806"></status>
</kw>
<msg timestamp="20201109 13:34:55.813" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:34:55.813" starttime="20201109 13:34:55.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:34:55.814" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:34:55.814" starttime="20201109 13:34:55.813"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:55.819" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:55.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:55.829" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:34:55.829" starttime="20201109 13:34:55.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.830" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:34:55.830" starttime="20201109 13:34:55.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:55.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:55.831" starttime="20201109 13:34:55.830"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.831" starttime="20201109 13:34:55.815"></status>
</kw>
<msg timestamp="20201109 13:34:55.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:55.831" starttime="20201109 13:34:55.815"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.831" starttime="20201109 13:34:55.814"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.831" starttime="20201109 13:34:55.814"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.832" starttime="20201109 13:34:55.805"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:55.832" starttime="20201109 13:34:55.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:55.837" level="INFO">Running command 'ozone sh bucket info 30169-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:34:59.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:34:59.634" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:59.634" starttime="20201109 13:34:55.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:34:59.635" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:32:54.798Z",
  "modificationTime" : "2020-11-09T13:33:12.272Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201109 13:34:59.636" starttime="20201109 13:34:59.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:34:59.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:34:59.636" starttime="20201109 13:34:59.636"></status>
</kw>
<status status="PASS" endtime="20201109 13:34:59.637" starttime="20201109 13:34:55.833"></status>
</kw>
<msg timestamp="20201109 13:34:59.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:34:59.637" starttime="20201109 13:34:55.832"></status>
</kw>
<msg timestamp="20201109 13:34:59.637" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:34:59.637" starttime="20201109 13:34:55.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:59.638" starttime="20201109 13:34:59.637"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201109 13:34:59.638" starttime="20201109 13:34:59.638"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:34:59.642" level="INFO">Running command 'ozone sh key list 30169-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:03.037" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:35:03.037" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:03.037" starttime="20201109 13:34:59.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:03.039" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201109 13:35:03.039" starttime="20201109 13:35:03.038"></status>
</kw>
<msg timestamp="20201109 13:35:03.039" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:03.039" starttime="20201109 13:34:59.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201109 13:35:03.040" starttime="20201109 13:35:03.039"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:03.040" starttime="20201109 13:34:55.795"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:03.040" starttime="20201109 13:34:55.794"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:35:03.040" critical="yes" starttime="20201109 13:34:55.765"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:03.046" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:03.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:03.050" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:35:03.050" starttime="20201109 13:35:03.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:03.051" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:35:03.051" starttime="20201109 13:35:03.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:03.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:03.052" starttime="20201109 13:35:03.051"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:03.052" starttime="20201109 13:35:03.044"></status>
</kw>
<msg timestamp="20201109 13:35:03.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:03.052" starttime="20201109 13:35:03.043"></status>
</kw>
<msg timestamp="20201109 13:35:03.052" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:35:03.052" starttime="20201109 13:35:03.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:35:03.053" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:35:03.053" starttime="20201109 13:35:03.053"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:03.058" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:03.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:03.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:35:03.079" starttime="20201109 13:35:03.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:03.080" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:35:03.080" starttime="20201109 13:35:03.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:03.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:03.081" starttime="20201109 13:35:03.080"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:03.081" starttime="20201109 13:35:03.055"></status>
</kw>
<msg timestamp="20201109 13:35:03.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:03.081" starttime="20201109 13:35:03.054"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:03.081" starttime="20201109 13:35:03.054"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:03.081" starttime="20201109 13:35:03.053"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:03.081" starttime="20201109 13:35:03.042"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:03.081" starttime="20201109 13:35:03.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:03.086" level="INFO">Running command 'ozone sh bucket link 30169-target/loop1 30169-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:06.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:06.533" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:06.533" starttime="20201109 13:35:03.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:06.535" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:35:06.535" starttime="20201109 13:35:06.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:06.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:06.536" starttime="20201109 13:35:06.535"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:06.536" starttime="20201109 13:35:03.083"></status>
</kw>
<msg timestamp="20201109 13:35:06.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:06.536" starttime="20201109 13:35:03.082"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:06.536" starttime="20201109 13:35:03.082"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:06.540" level="INFO">Running command 'ozone sh bucket link 30169-target/loop2 30169-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:10.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:10.037" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:10.037" starttime="20201109 13:35:06.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:10.038" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:35:10.038" starttime="20201109 13:35:10.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:10.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:10.039" starttime="20201109 13:35:10.038"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:10.039" starttime="20201109 13:35:06.537"></status>
</kw>
<msg timestamp="20201109 13:35:10.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:10.040" starttime="20201109 13:35:06.537"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:10.040" starttime="20201109 13:35:06.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:10.044" level="INFO">Running command 'ozone sh bucket link 30169-target/loop3 30169-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:13.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:13.425" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:13.425" starttime="20201109 13:35:10.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:13.426" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:35:13.426" starttime="20201109 13:35:13.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:13.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:13.427" starttime="20201109 13:35:13.426"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:13.427" starttime="20201109 13:35:10.041"></status>
</kw>
<msg timestamp="20201109 13:35:13.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:13.427" starttime="20201109 13:35:10.041"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:13.427" starttime="20201109 13:35:10.040"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:13.430" level="INFO">Running command 'ozone sh key list 30169-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:17.219" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:35:17.219" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:17.219" starttime="20201109 13:35:13.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:17.220" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201109 13:35:17.220" starttime="20201109 13:35:17.220"></status>
</kw>
<msg timestamp="20201109 13:35:17.221" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:17.221" starttime="20201109 13:35:13.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201109 13:35:17.221" starttime="20201109 13:35:17.221"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:35:17.222" critical="yes" starttime="20201109 13:35:03.041"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:17.228" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:17.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:17.230" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:35:17.230" starttime="20201109 13:35:17.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:17.232" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:35:17.232" starttime="20201109 13:35:17.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:17.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:17.232" starttime="20201109 13:35:17.232"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:17.233" starttime="20201109 13:35:17.225"></status>
</kw>
<msg timestamp="20201109 13:35:17.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:17.233" starttime="20201109 13:35:17.224"></status>
</kw>
<msg timestamp="20201109 13:35:17.233" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:35:17.233" starttime="20201109 13:35:17.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:35:17.234" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:35:17.234" starttime="20201109 13:35:17.233"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:17.238" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:17.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:17.256" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:35:17.256" starttime="20201109 13:35:17.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:17.257" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:35:17.257" starttime="20201109 13:35:17.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:17.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:17.257" starttime="20201109 13:35:17.257"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:17.258" starttime="20201109 13:35:17.235"></status>
</kw>
<msg timestamp="20201109 13:35:17.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:17.258" starttime="20201109 13:35:17.235"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:17.258" starttime="20201109 13:35:17.234"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:17.258" starttime="20201109 13:35:17.234"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:17.258" starttime="20201109 13:35:17.224"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:17.259" starttime="20201109 13:35:17.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:17.263" level="INFO">Running command 'ozone sh bucket link 30169-source/bucket1 30169-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:20.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:20.806" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:20.806" starttime="20201109 13:35:17.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:20.807" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:35:20.807" starttime="20201109 13:35:20.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:20.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:20.808" starttime="20201109 13:35:20.807"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:20.808" starttime="20201109 13:35:17.260"></status>
</kw>
<msg timestamp="20201109 13:35:20.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:20.808" starttime="20201109 13:35:17.259"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:20.809" starttime="20201109 13:35:17.259"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:20.814" level="INFO">Running command 'ozone sh key put 30169-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:26.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:26.342" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:26.343" starttime="20201109 13:35:20.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:26.344" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:35:26.344" starttime="20201109 13:35:26.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:26.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:26.344" starttime="20201109 13:35:26.344"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:26.345" starttime="20201109 13:35:20.810"></status>
</kw>
<msg timestamp="20201109 13:35:26.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:26.345" starttime="20201109 13:35:20.809"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:26.345" starttime="20201109 13:35:20.809"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201109 13:35:26.347" level="INFO">${postfix} = 39678</msg>
<status status="PASS" endtime="20201109 13:35:26.347" starttime="20201109 13:35:26.347"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201109 13:35:26.348" level="INFO">${tmpfile} = /tmp/tempkey-39678</msg>
<status status="PASS" endtime="20201109 13:35:26.348" starttime="20201109 13:35:26.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:26.353" level="INFO">Running command 'ozone sh key get -f 30169-target/link1/key3 /tmp/tempkey-39678 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:31.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:31.193" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:31.193" starttime="20201109 13:35:26.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:31.194" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:35:31.194" starttime="20201109 13:35:31.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:31.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:31.194" starttime="20201109 13:35:31.194"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.195" starttime="20201109 13:35:26.349"></status>
</kw>
<msg timestamp="20201109 13:35:31.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:31.195" starttime="20201109 13:35:26.349"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.195" starttime="20201109 13:35:26.348"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201109 13:35:31.198" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-39678 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:31.200" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201109 13:35:31.200" starttime="20201109 13:35:31.195"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:31.204" level="INFO">Running command 'rm -f /tmp/tempkey-39678 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:31.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:31.206" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:35:31.207" starttime="20201109 13:35:31.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:31.208" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:35:31.208" starttime="20201109 13:35:31.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:31.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:31.209" starttime="20201109 13:35:31.208"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.209" starttime="20201109 13:35:31.202"></status>
</kw>
<msg timestamp="20201109 13:35:31.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:31.209" starttime="20201109 13:35:31.201"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.209" starttime="20201109 13:35:31.201"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:35:31.210" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201109 13:35:31.210" starttime="20201109 13:35:31.209"></status>
</kw>
<msg timestamp="20201109 13:35:31.210" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201109 13:35:31.210" starttime="20201109 13:35:26.346"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:35:31.211" starttime="20201109 13:35:31.210"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.211" starttime="20201109 13:35:26.345"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:35:31.211" critical="yes" starttime="20201109 13:35:17.222"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:31.219" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:31.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:31.220" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201109 13:35:31.220" starttime="20201109 13:35:31.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:31.221" level="INFO">scm</msg>
<status status="PASS" endtime="20201109 13:35:31.221" starttime="20201109 13:35:31.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:31.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:31.222" starttime="20201109 13:35:31.221"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.222" starttime="20201109 13:35:31.214"></status>
</kw>
<msg timestamp="20201109 13:35:31.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:31.222" starttime="20201109 13:35:31.214"></status>
</kw>
<msg timestamp="20201109 13:35:31.223" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201109 13:35:31.223" starttime="20201109 13:35:31.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:35:31.223" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:35:31.223" starttime="20201109 13:35:31.223"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:31.227" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:31.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:31.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:35:31.238" starttime="20201109 13:35:31.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:31.239" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:35:31.239" starttime="20201109 13:35:31.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:31.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:31.240" starttime="20201109 13:35:31.240"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.240" starttime="20201109 13:35:31.225"></status>
</kw>
<msg timestamp="20201109 13:35:31.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:31.241" starttime="20201109 13:35:31.224"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.241" starttime="20201109 13:35:31.224"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.241" starttime="20201109 13:35:31.223"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.241" starttime="20201109 13:35:31.213"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:31.241" starttime="20201109 13:35:31.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:31.246" level="INFO">Running command 'ozone sh bucket delete 30169-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:34.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:34.676" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:34.676" starttime="20201109 13:35:31.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:34.677" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:35:34.677" starttime="20201109 13:35:34.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:34.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:34.678" starttime="20201109 13:35:34.678"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:34.678" starttime="20201109 13:35:31.242"></status>
</kw>
<msg timestamp="20201109 13:35:34.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:34.679" starttime="20201109 13:35:31.242"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:34.679" starttime="20201109 13:35:31.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:34.683" level="INFO">Running command 'ozone sh bucket list 30169-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:38.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:38.406" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:38.406" starttime="20201109 13:35:34.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:38.407" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:34:44.571Z",
  "modificationTime" : "2020-11-09T13:34:44.571Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:33:15.767Z",
  "modificationTime" : "2020-11-09T13:33:15.767Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:32:54.798Z",
  "modificationTime" : "2020-11-09T13:33:12.272Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:34:37.928Z",
  "modificationTime" : "2020-11-09T13:34:37.928Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:35:20.640Z",
  "modificationTime" : "2020-11-09T13:35:20.640Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:35:13.213Z",
  "modificationTime" : "2020-11-09T13:35:13.213Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:35:06.476Z",
  "modificationTime" : "2020-11-09T13:35:06.476Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:35:09.894Z",
  "modificationTime" : "2020-11-09T13:35:09.894Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:32:47.928Z",
  "modificationTime" : "2020-11-09T13:33:08.727Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "30169-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:32:51.320Z",
  "modificationTime" : "2020-11-09T13:32:51.320Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30169-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201109 13:35:38.407" starttime="20201109 13:35:38.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:38.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:38.408" starttime="20201109 13:35:38.407"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:38.408" starttime="20201109 13:35:34.680"></status>
</kw>
<msg timestamp="20201109 13:35:38.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:38.408" starttime="20201109 13:35:34.680"></status>
</kw>
<msg timestamp="20201109 13:35:38.409" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:35:38.409" starttime="20201109 13:35:34.679"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201109 13:35:38.409" starttime="20201109 13:35:38.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:35:38.413" level="INFO">Running command 'ozone sh key list 30169-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:35:41.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:35:41.981" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201109 13:35:41.982" starttime="20201109 13:35:38.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:35:41.983" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201109 13:35:41.983" starttime="20201109 13:35:41.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:35:41.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:35:41.984" starttime="20201109 13:35:41.983"></status>
</kw>
<status status="PASS" endtime="20201109 13:35:41.984" starttime="20201109 13:35:38.410"></status>
</kw>
<msg timestamp="20201109 13:35:41.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:35:41.984" starttime="20201109 13:35:38.410"></status>
</kw>
<msg timestamp="20201109 13:35:41.984" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201109 13:35:41.984" starttime="20201109 13:35:38.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201109 13:35:41.985" starttime="20201109 13:35:41.985"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:35:41.985" critical="yes" starttime="20201109 13:35:31.212"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201109 13:35:41.988" starttime="20201109 13:32:24.712"></status>
</suite>
<status status="PASS" elapsedtime="226012" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
