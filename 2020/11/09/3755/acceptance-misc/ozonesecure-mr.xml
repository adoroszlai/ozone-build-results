<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201109 13:29:20.624" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:27:44.881" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:27:49.312" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:27:49.313" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:27:49.313" starttime="20201109 13:27:44.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:27:49.314" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201109 13:27:49.314" starttime="20201109 13:27:49.313"></status>
</kw>
<msg timestamp="20201109 13:27:49.314" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:27:49.314" starttime="20201109 13:27:44.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:27:49.320" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:27:52.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:27:52.845" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:27:52.845" starttime="20201109 13:27:49.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:27:52.846" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:27:52.846" starttime="20201109 13:27:52.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:27:52.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:27:52.847" starttime="20201109 13:27:52.846"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:52.847" starttime="20201109 13:27:49.317"></status>
</kw>
<msg timestamp="20201109 13:27:52.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:27:52.847" starttime="20201109 13:27:49.316"></status>
</kw>
<msg timestamp="20201109 13:27:52.847" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:27:52.847" starttime="20201109 13:27:49.315"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201109 13:27:52.848" starttime="20201109 13:27:52.848"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:52.848" starttime="20201109 13:27:49.315"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:52.848" starttime="20201109 13:27:49.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:27:52.854" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:27:56.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:27:56.300" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:27:56.300" starttime="20201109 13:27:52.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:27:56.301" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:27:56.301" starttime="20201109 13:27:56.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:27:56.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:27:56.302" starttime="20201109 13:27:56.301"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:56.302" starttime="20201109 13:27:52.850"></status>
</kw>
<msg timestamp="20201109 13:27:56.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:27:56.302" starttime="20201109 13:27:52.850"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:56.302" starttime="20201109 13:27:52.849"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:56.303" starttime="20201109 13:27:52.849"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:56.303" starttime="20201109 13:27:52.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201109 13:27:56.304" starttime="20201109 13:27:56.303"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:27:56.307" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:27:59.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:27:59.856" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:27:59.856" starttime="20201109 13:27:56.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:27:59.857" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:27:56.104Z",
  "modificationTime" : "2020-11-09T13:27:56.104Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201109 13:27:59.858" starttime="20201109 13:27:59.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:27:59.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:27:59.860" starttime="20201109 13:27:59.860"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:59.861" starttime="20201109 13:27:56.305"></status>
</kw>
<msg timestamp="20201109 13:27:59.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:27:59.861" starttime="20201109 13:27:56.304"></status>
</kw>
<msg timestamp="20201109 13:27:59.861" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:27:59.861" starttime="20201109 13:27:56.304"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201109 13:27:59.862" starttime="20201109 13:27:59.862"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:27:59.866" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:27:59.866" starttime="20201109 13:27:59.866"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:27:59.867" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:27:59.867" starttime="20201109 13:27:59.866"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:59.867" starttime="20201109 13:27:59.865"></status>
</kw>
<msg timestamp="20201109 13:27:59.867" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:27:59.867" starttime="20201109 13:27:59.865"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:59.868" starttime="20201109 13:27:59.864"></status>
</kw>
<msg timestamp="20201109 13:27:59.868" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201109 13:27:59.868" starttime="20201109 13:27:59.863"></status>
</kw>
<msg timestamp="20201109 13:27:59.868" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201109 13:27:59.868" starttime="20201109 13:27:59.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:27:59.873" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:28:03.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:28:03.330" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:28:03.331" starttime="20201109 13:27:59.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:28:03.332" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:28:03.332" starttime="20201109 13:28:03.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:28:03.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:28:03.332" starttime="20201109 13:28:03.332"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:03.333" starttime="20201109 13:27:59.869"></status>
</kw>
<msg timestamp="20201109 13:28:03.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:28:03.333" starttime="20201109 13:27:59.869"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:03.333" starttime="20201109 13:27:59.868"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:28:03.337" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:28:11.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:28:11.286" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:28:11.286" starttime="20201109 13:28:03.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:28:11.287" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:28:11.287" starttime="20201109 13:28:11.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:28:11.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:28:11.288" starttime="20201109 13:28:11.287"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:11.288" starttime="20201109 13:28:03.334"></status>
</kw>
<msg timestamp="20201109 13:28:11.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:28:11.289" starttime="20201109 13:28:03.334"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:11.289" starttime="20201109 13:28:03.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:28:11.293" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:28:19.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:28:19.147" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:28:19.147" starttime="20201109 13:28:11.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:28:19.148" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:28:19.148" starttime="20201109 13:28:19.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:28:19.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:28:19.149" starttime="20201109 13:28:19.149"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:19.149" starttime="20201109 13:28:11.290"></status>
</kw>
<msg timestamp="20201109 13:28:19.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:28:19.150" starttime="20201109 13:28:11.290"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:19.150" starttime="20201109 13:28:11.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:28:19.154" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:28:24.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:28:24.656" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:28:24.656" starttime="20201109 13:28:19.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:28:24.657" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:28:24.657" starttime="20201109 13:28:24.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:28:24.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:28:24.658" starttime="20201109 13:28:24.657"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:24.658" starttime="20201109 13:28:19.151"></status>
</kw>
<msg timestamp="20201109 13:28:24.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:28:24.658" starttime="20201109 13:28:19.150"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:24.658" starttime="20201109 13:28:19.150"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:28:24.659" critical="yes" starttime="20201109 13:27:44.875"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:28:24.664" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:28:24.664" starttime="20201109 13:28:24.663"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:28:24.664" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:28:24.665" starttime="20201109 13:28:24.664"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:24.665" starttime="20201109 13:28:24.663"></status>
</kw>
<msg timestamp="20201109 13:28:24.665" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:28:24.665" starttime="20201109 13:28:24.662"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:24.665" starttime="20201109 13:28:24.662"></status>
</kw>
<msg timestamp="20201109 13:28:24.665" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:28:24.665" starttime="20201109 13:28:24.661"></status>
</kw>
<msg timestamp="20201109 13:28:24.665" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:28:24.665" starttime="20201109 13:28:24.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:28:24.669" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:28:28.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:28:28.153" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:28:28.153" starttime="20201109 13:28:24.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:28:28.155" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:28:28.155" starttime="20201109 13:28:28.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:28:28.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:28:28.155" starttime="20201109 13:28:28.155"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:28.156" starttime="20201109 13:28:24.666"></status>
</kw>
<msg timestamp="20201109 13:28:28.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:28:28.156" starttime="20201109 13:28:24.666"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:28.156" starttime="20201109 13:28:24.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:28:28.160" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:28:31.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:28:31.588" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201109 13:28:31.588" starttime="20201109 13:28:28.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:28:31.589" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201109 13:28:31.589" starttime="20201109 13:28:31.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:28:31.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:28:31.590" starttime="20201109 13:28:31.589"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:31.590" starttime="20201109 13:28:28.157"></status>
</kw>
<msg timestamp="20201109 13:28:31.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:28:31.591" starttime="20201109 13:28:28.157"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:31.591" starttime="20201109 13:28:28.156"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:28:31.591" critical="yes" starttime="20201109 13:28:24.660"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201109 13:28:31.593" starttime="20201109 13:27:44.821"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-o3fs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:28:55.319" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:28:55.319" starttime="20201109 13:28:55.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:28:55.319" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:28:55.319" starttime="20201109 13:28:55.319"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:55.320" starttime="20201109 13:28:55.318"></status>
</kw>
<msg timestamp="20201109 13:28:55.320" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:28:55.320" starttime="20201109 13:28:55.317"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:55.320" starttime="20201109 13:28:55.317"></status>
</kw>
<msg timestamp="20201109 13:28:55.320" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:28:55.320" starttime="20201109 13:28:55.316"></status>
</kw>
<msg timestamp="20201109 13:28:55.320" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:28:55.320" starttime="20201109 13:28:55.315"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:28:55.321" level="INFO">${random} = 54031</msg>
<status status="PASS" endtime="20201109 13:28:55.321" starttime="20201109 13:28:55.321"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:28:55.327" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-54031 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:28:59.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:28:59.287" level="INFO">${output} = 2020-11-09 13:28:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:28:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201109 13:28:59.287" starttime="20201109 13:28:55.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:28:59.288" level="INFO">2020-11-09 13:28:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:28:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:28:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:28:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:28:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F22C4806834D-&gt;8b8e6eb5-709b-4720-b243-4395c7df5926
2020-11-09 13:28:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201109 13:28:59.288" starttime="20201109 13:28:59.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:28:59.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:28:59.289" starttime="20201109 13:28:59.288"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:59.289" starttime="20201109 13:28:55.322"></status>
</kw>
<msg timestamp="20201109 13:28:59.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:28:59.289" starttime="20201109 13:28:55.322"></status>
</kw>
<msg timestamp="20201109 13:28:59.289" level="INFO">${result} = 2020-11-09 13:28:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:28:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201109 13:28:59.289" starttime="20201109 13:28:55.321"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:28:59.294" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:29:01.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:29:01.492" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-09 13:28 o3fs://bucket1.volume1.om/ozone-54031
dr...</msg>
<status status="PASS" endtime="20201109 13:29:01.493" starttime="20201109 13:28:59.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:29:01.494" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-09 13:28 o3fs://bucket1.volume1.om/ozone-54031
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:28 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:29:01.494" starttime="20201109 13:29:01.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:29:01.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:29:01.495" starttime="20201109 13:29:01.494"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:01.495" starttime="20201109 13:28:59.292"></status>
</kw>
<msg timestamp="20201109 13:29:01.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:29:01.495" starttime="20201109 13:28:59.290"></status>
</kw>
<msg timestamp="20201109 13:29:01.495" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-09 13:28 o3fs://bucket1.volume1.om/ozone-54031
dr...</msg>
<status status="PASS" endtime="20201109 13:29:01.495" starttime="20201109 13:28:59.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:29:01.496" starttime="20201109 13:29:01.496"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:29:01.496" critical="yes" starttime="20201109 13:28:55.314"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201109 13:29:01.497" starttime="20201109 13:28:55.263"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s3" name="Kinit-Hadoop">
<test id="s1-s3-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:28:50.028" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:28:50.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:28:50.031" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201109 13:28:50.031" starttime="20201109 13:28:50.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:28:50.032" level="INFO">rm</msg>
<status status="PASS" endtime="20201109 13:28:50.032" starttime="20201109 13:28:50.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:28:50.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:28:50.033" starttime="20201109 13:28:50.032"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:50.033" starttime="20201109 13:28:50.024"></status>
</kw>
<msg timestamp="20201109 13:28:50.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:28:50.033" starttime="20201109 13:28:50.023"></status>
</kw>
<msg timestamp="20201109 13:28:50.033" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201109 13:28:50.034" starttime="20201109 13:28:50.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:28:50.035" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:28:50.035" starttime="20201109 13:28:50.034"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:28:50.039" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:28:50.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:28:50.069" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:28:50.069" starttime="20201109 13:28:50.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:28:50.070" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:28:50.070" starttime="20201109 13:28:50.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:28:50.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:28:50.072" starttime="20201109 13:28:50.071"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:50.072" starttime="20201109 13:28:50.036"></status>
</kw>
<msg timestamp="20201109 13:28:50.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:28:50.072" starttime="20201109 13:28:50.036"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:50.072" starttime="20201109 13:28:50.035"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:50.072" starttime="20201109 13:28:50.035"></status>
</kw>
<status status="PASS" endtime="20201109 13:28:50.072" starttime="20201109 13:28:50.022"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:28:50.073" critical="yes" starttime="20201109 13:28:50.022"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201109 13:28:50.074" starttime="20201109 13:28:49.975"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s4" name="Kinit">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:27:39.627" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:27:39.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:27:39.629" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201109 13:27:39.629" starttime="20201109 13:27:39.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:27:39.630" level="INFO">om</msg>
<status status="PASS" endtime="20201109 13:27:39.630" starttime="20201109 13:27:39.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:27:39.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:27:39.631" starttime="20201109 13:27:39.630"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:39.631" starttime="20201109 13:27:39.622"></status>
</kw>
<msg timestamp="20201109 13:27:39.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:27:39.631" starttime="20201109 13:27:39.622"></status>
</kw>
<msg timestamp="20201109 13:27:39.632" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201109 13:27:39.632" starttime="20201109 13:27:39.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201109 13:27:39.632" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201109 13:27:39.632" starttime="20201109 13:27:39.632"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:27:39.636" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:27:39.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:27:39.660" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:27:39.661" starttime="20201109 13:27:39.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:27:39.661" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:27:39.662" starttime="20201109 13:27:39.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:27:39.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:27:39.662" starttime="20201109 13:27:39.662"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:39.663" starttime="20201109 13:27:39.634"></status>
</kw>
<msg timestamp="20201109 13:27:39.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:27:39.663" starttime="20201109 13:27:39.634"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:39.663" starttime="20201109 13:27:39.633"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:39.663" starttime="20201109 13:27:39.633"></status>
</kw>
<status status="PASS" endtime="20201109 13:27:39.663" starttime="20201109 13:27:39.621"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:27:39.663" critical="yes" starttime="20201109 13:27:39.620"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201109 13:27:39.665" starttime="20201109 13:27:39.572"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s5" name="mapreduce-o3fs">
<test id="s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:29:06.715" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:29:06.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:29:06.720" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:29:06.720" starttime="20201109 13:29:06.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:29:06.721" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:29:06.721" starttime="20201109 13:29:06.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:29:06.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:29:06.722" starttime="20201109 13:29:06.721"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:06.722" starttime="20201109 13:29:06.709"></status>
</kw>
<msg timestamp="20201109 13:29:06.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:29:06.722" starttime="20201109 13:29:06.709"></status>
</kw>
<msg timestamp="20201109 13:29:06.722" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:29:06.722" starttime="20201109 13:29:06.709"></status>
</kw>
<msg timestamp="20201109 13:29:06.722" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:29:06.723" starttime="20201109 13:29:06.708"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:29:06.727" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:29:06.727" starttime="20201109 13:29:06.727"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:29:06.728" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:29:06.728" starttime="20201109 13:29:06.728"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:06.728" starttime="20201109 13:29:06.725"></status>
</kw>
<msg timestamp="20201109 13:29:06.728" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:29:06.728" starttime="20201109 13:29:06.725"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:06.729" starttime="20201109 13:29:06.724"></status>
</kw>
<msg timestamp="20201109 13:29:06.729" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:29:06.729" starttime="20201109 13:29:06.724"></status>
</kw>
<msg timestamp="20201109 13:29:06.730" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:29:06.730" starttime="20201109 13:29:06.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:29:06.733" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:29:11.067" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:29:11.067" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:29:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:29:08 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201109 13:29:11.067" starttime="20201109 13:29:06.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:29:11.068" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:29:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:29:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:29:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:29:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:29:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-74A35296618E-&gt;8b8e6eb5-709b-4720-b243-4395c7df5926
2020-11-09 13:29:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-09 13:29:10 INFO  AbstractService:267 - Service org.apache.hadoop.yarn.client.api.impl.YarnClientImpl failed in state INITED
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:447)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:152)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1540)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1536)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1536)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1564)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.QuasiMonteCarlo.estimatePi(QuasiMonteCarlo.java:307)
	at org.apache.hadoop.examples.QuasiMonteCarlo.run(QuasiMonteCarlo.java:360)
	at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:76)
	at org.apache.hadoop.examples.QuasiMonteCarlo.main(QuasiMonteCarlo.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 37 more
2020-11-09 13:29:10 INFO  AbstractService:267 - Service org.apache.hadoop.mapred.ResourceMgrDelegate failed in state INITED
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:447)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:152)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1540)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1536)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1536)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1564)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.QuasiMonteCarlo.estimatePi(QuasiMonteCarlo.java:307)
	at org.apache.hadoop.examples.QuasiMonteCarlo.run(QuasiMonteCarlo.java:360)
	at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:76)
	at org.apache.hadoop.examples.QuasiMonteCarlo.main(QuasiMonteCarlo.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 37 more
2020-11-09 13:29:10 INFO  Cluster:149 - Failed to use org.apache.hadoop.mapred.YarnClientProtocolProvider due to error: 
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:447)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:152)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1540)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1536)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1536)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1564)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.QuasiMonteCarlo.estimatePi(QuasiMonteCarlo.java:307)
	at org.apache.hadoop.examples.QuasiMonteCarlo.run(QuasiMonteCarlo.java:360)
	at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:76)
	at org.apache.hadoop.examples.QuasiMonteCarlo.main(QuasiMonteCarlo.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 37 more
java.io.IOException: Cannot initialize Cluster. Please check your configuration for mapreduce.framework.name and the correspond server addresses.
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:116)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1540)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1536)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1536)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1564)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.QuasiMonteCarlo.estimatePi(QuasiMonteCarlo.java:307)
	at org.apache.hadoop.examples.QuasiMonteCarlo.run(QuasiMonteCarlo.java:360)
	at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:76)
	at org.apache.hadoop.examples.QuasiMonteCarlo.main(QuasiMonteCarlo.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
	Suppressed: java.io.IOException: Failed to use org.apache.hadoop.mapred.YarnClientProtocolProvider due to error: 
		at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:148)
		... 27 more
	Caused by: java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
		at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:447)
		at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
		at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
		at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
		at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
		at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
		at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
		at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:152)
		at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
		at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
		... 27 more
	Caused by: java.net.UnknownHostException: jhs
		... 37 more</msg>
<status status="PASS" endtime="20201109 13:29:11.069" starttime="20201109 13:29:11.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:29:11.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201109 13:29:11.070" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201109 13:29:11.070" starttime="20201109 13:29:11.069"></status>
</kw>
<status status="FAIL" endtime="20201109 13:29:11.070" starttime="20201109 13:29:06.731"></status>
</kw>
<msg timestamp="20201109 13:29:11.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201109 13:29:11.070" starttime="20201109 13:29:06.730"></status>
</kw>
<status status="FAIL" endtime="20201109 13:29:11.070" starttime="20201109 13:29:06.730"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201109 13:29:11.071" critical="yes" starttime="20201109 13:29:06.708">255 != 0</status>
</test>
<test id="s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:29:11.076" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:29:11.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:29:11.081" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:29:11.081" starttime="20201109 13:29:11.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:29:11.082" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:29:11.082" starttime="20201109 13:29:11.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:29:11.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:29:11.083" starttime="20201109 13:29:11.082"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:11.083" starttime="20201109 13:29:11.073"></status>
</kw>
<msg timestamp="20201109 13:29:11.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:29:11.083" starttime="20201109 13:29:11.073"></status>
</kw>
<msg timestamp="20201109 13:29:11.083" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:29:11.083" starttime="20201109 13:29:11.073"></status>
</kw>
<msg timestamp="20201109 13:29:11.084" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:29:11.084" starttime="20201109 13:29:11.072"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:29:11.084" level="INFO">${random} = 50</msg>
<status status="PASS" endtime="20201109 13:29:11.084" starttime="20201109 13:29:11.084"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:29:11.088" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:29:11.088" starttime="20201109 13:29:11.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:29:11.089" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:29:11.089" starttime="20201109 13:29:11.088"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:11.089" starttime="20201109 13:29:11.087"></status>
</kw>
<msg timestamp="20201109 13:29:11.089" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:29:11.089" starttime="20201109 13:29:11.087"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:11.089" starttime="20201109 13:29:11.086"></status>
</kw>
<msg timestamp="20201109 13:29:11.089" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:29:11.089" starttime="20201109 13:29:11.085"></status>
</kw>
<msg timestamp="20201109 13:29:11.090" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:29:11.090" starttime="20201109 13:29:11.084"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:29:11.093" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:29:11.093" starttime="20201109 13:29:11.093"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:29:11.094" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:29:11.094" starttime="20201109 13:29:11.093"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:11.094" starttime="20201109 13:29:11.092"></status>
</kw>
<msg timestamp="20201109 13:29:11.094" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:29:11.094" starttime="20201109 13:29:11.092"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:11.094" starttime="20201109 13:29:11.091"></status>
</kw>
<msg timestamp="20201109 13:29:11.094" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201109 13:29:11.094" starttime="20201109 13:29:11.090"></status>
</kw>
<msg timestamp="20201109 13:29:11.094" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201109 13:29:11.095" starttime="20201109 13:29:11.090"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:29:11.098" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:29:11.098" starttime="20201109 13:29:11.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:29:11.098" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:29:11.098" starttime="20201109 13:29:11.098"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:11.099" starttime="20201109 13:29:11.097"></status>
</kw>
<msg timestamp="20201109 13:29:11.099" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:29:11.099" starttime="20201109 13:29:11.096"></status>
</kw>
<status status="PASS" endtime="20201109 13:29:11.099" starttime="20201109 13:29:11.096"></status>
</kw>
<msg timestamp="20201109 13:29:11.099" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-50.txt</msg>
<status status="PASS" endtime="20201109 13:29:11.099" starttime="20201109 13:29:11.095"></status>
</kw>
<msg timestamp="20201109 13:29:11.100" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-50.txt</msg>
<status status="PASS" endtime="20201109 13:29:11.100" starttime="20201109 13:29:11.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:29:11.105" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-50.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:29:13.253" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:29:13.253" level="INFO">${output} = 2020-11-09 13:29:13 INFO  AbstractService:267 - Service org.apache.hadoop.yarn.client.api.impl.YarnClientImpl failed in state INITED
java.lang.IllegalArgumentException: java.net.UnknownHostException: ...</msg>
<status status="PASS" endtime="20201109 13:29:13.253" starttime="20201109 13:29:11.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:29:13.255" level="INFO">2020-11-09 13:29:13 INFO  AbstractService:267 - Service org.apache.hadoop.yarn.client.api.impl.YarnClientImpl failed in state INITED
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:447)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:152)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1540)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1536)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1536)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1564)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 34 more
2020-11-09 13:29:13 INFO  AbstractService:267 - Service org.apache.hadoop.mapred.ResourceMgrDelegate failed in state INITED
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:447)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:152)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1540)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1536)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1536)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1564)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 34 more
2020-11-09 13:29:13 INFO  Cluster:149 - Failed to use org.apache.hadoop.mapred.YarnClientProtocolProvider due to error: 
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:447)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:152)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1540)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1536)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1536)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1564)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 34 more
java.io.IOException: Cannot initialize Cluster. Please check your configuration for mapreduce.framework.name and the correspond server addresses.
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:116)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1540)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1536)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1536)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1564)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
	Suppressed: java.io.IOException: Failed to use org.apache.hadoop.mapred.YarnClientProtocolProvider due to error: 
		at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:148)
		... 24 more
	Caused by: java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
		at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:447)
		at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
		at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
		at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
		at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
		at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
		at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
		at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:152)
		at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
		at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
		... 24 more
	Caused by: java.net.UnknownHostException: jhs
		... 34 more</msg>
<status status="PASS" endtime="20201109 13:29:13.255" starttime="20201109 13:29:13.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:29:13.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201109 13:29:13.256" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201109 13:29:13.256" starttime="20201109 13:29:13.255"></status>
</kw>
<status status="FAIL" endtime="20201109 13:29:13.256" starttime="20201109 13:29:11.101"></status>
</kw>
<msg timestamp="20201109 13:29:13.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201109 13:29:13.256" starttime="20201109 13:29:11.100"></status>
</kw>
<status status="FAIL" endtime="20201109 13:29:13.256" starttime="20201109 13:29:11.100"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201109 13:29:13.257" critical="yes" starttime="20201109 13:29:11.072">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201109 13:29:13.258" starttime="20201109 13:29:06.657"></status>
</suite>
<status status="FAIL" elapsedtime="59799" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="5">Critical Tests</stat>
<stat fail="2" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="ozonesecure-mr" pass="5">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s4" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="2" id="s1-s5" name="mapreduce-o3fs" pass="0">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
