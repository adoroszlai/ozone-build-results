<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201109 13:38:19.376" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="upgrade">
<suite source="/opt/ozone/smoketest/topology/loaddata.robot" id="s1-s1" name="Loaddata">
<test id="s1-s1-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:37:03.823" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:37:06.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:37:06.670" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:37:06.671" starttime="20201109 13:37:03.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:37:06.672" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:37:06.672" starttime="20201109 13:37:06.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:37:06.673" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:37:06.673" starttime="20201109 13:37:06.672"></status>
</kw>
<status status="PASS" endtime="20201109 13:37:06.673" starttime="20201109 13:37:03.821"></status>
</kw>
<msg timestamp="20201109 13:37:06.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:37:06.673" starttime="20201109 13:37:03.820"></status>
</kw>
<msg timestamp="20201109 13:37:06.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:37:06.674" starttime="20201109 13:37:03.820"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201109 13:37:06.674" starttime="20201109 13:37:06.674"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:37:06.677" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:37:08.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:37:08.664" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:37:08.664" starttime="20201109 13:37:06.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:37:08.665" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:37:08.665" starttime="20201109 13:37:08.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:37:08.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:37:08.666" starttime="20201109 13:37:08.665"></status>
</kw>
<status status="PASS" endtime="20201109 13:37:08.666" starttime="20201109 13:37:06.675"></status>
</kw>
<msg timestamp="20201109 13:37:08.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:37:08.666" starttime="20201109 13:37:06.675"></status>
</kw>
<msg timestamp="20201109 13:37:08.666" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:37:08.666" starttime="20201109 13:37:06.674"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201109 13:37:08.667" starttime="20201109 13:37:08.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:37:08.669" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:37:12.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:37:12.924" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:37:12.925" starttime="20201109 13:37:08.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:37:12.926" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:37:12.926" starttime="20201109 13:37:12.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:37:12.927" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:37:12.927" starttime="20201109 13:37:12.926"></status>
</kw>
<status status="PASS" endtime="20201109 13:37:12.927" starttime="20201109 13:37:08.668"></status>
</kw>
<msg timestamp="20201109 13:37:12.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:37:12.927" starttime="20201109 13:37:08.667"></status>
</kw>
<msg timestamp="20201109 13:37:12.927" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:37:12.927" starttime="20201109 13:37:08.667"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201109 13:37:12.928" starttime="20201109 13:37:12.928"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:37:12.928" critical="yes" starttime="20201109 13:37:03.819"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201109 13:37:12.929" starttime="20201109 13:37:03.779"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s2" name="Readdata">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:38:08.461" level="INFO">${random} = 72512</msg>
<status status="PASS" endtime="20201109 13:38:08.461" starttime="20201109 13:38:08.460"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:38:08.466" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-72512 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:38:12.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:38:12.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:38:12.915" starttime="20201109 13:38:08.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:38:12.916" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:38:12.916" starttime="20201109 13:38:12.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:38:12.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:38:12.917" starttime="20201109 13:38:12.916"></status>
</kw>
<status status="PASS" endtime="20201109 13:38:12.917" starttime="20201109 13:38:08.462"></status>
</kw>
<msg timestamp="20201109 13:38:12.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:38:12.918" starttime="20201109 13:38:08.461"></status>
</kw>
<msg timestamp="20201109 13:38:12.918" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:38:12.918" starttime="20201109 13:38:08.461"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201109 13:38:12.918" starttime="20201109 13:38:12.918"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:38:12.919" critical="yes" starttime="20201109 13:38:08.459"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201109 13:38:12.920" starttime="20201109 13:38:08.409"></status>
</suite>
<status status="PASS" elapsedtime="13661" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="upgrade" pass="2">upgrade</stat>
<stat fail="0" id="s1-s1" name="Loaddata" pass="1">upgrade.Loaddata</stat>
<stat fail="0" id="s1-s2" name="Readdata" pass="1">upgrade.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
