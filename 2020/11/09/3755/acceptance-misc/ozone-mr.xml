<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201109 13:14:10.034" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:01:23.279" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:01:25.633" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:01:25.633" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201109 13:01:25.633" starttime="20201109 13:01:23.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:01:25.634" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201109 13:01:25.634" starttime="20201109 13:01:25.633"></status>
</kw>
<msg timestamp="20201109 13:01:25.634" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201109 13:01:25.634" starttime="20201109 13:01:23.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:01:25.640" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:01:27.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:01:27.848" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:01:27.848" starttime="20201109 13:01:25.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:01:27.849" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:01:27.849" starttime="20201109 13:01:27.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:01:27.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:01:27.849" starttime="20201109 13:01:27.849"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:27.850" starttime="20201109 13:01:25.636"></status>
</kw>
<msg timestamp="20201109 13:01:27.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:01:27.850" starttime="20201109 13:01:25.636"></status>
</kw>
<msg timestamp="20201109 13:01:27.850" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201109 13:01:27.850" starttime="20201109 13:01:25.636"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201109 13:01:27.851" starttime="20201109 13:01:27.850"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:27.852" starttime="20201109 13:01:25.635"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:27.852" starttime="20201109 13:01:25.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:01:27.860" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:01:29.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:01:29.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:01:29.915" starttime="20201109 13:01:27.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:01:29.916" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:01:29.916" starttime="20201109 13:01:29.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:01:29.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:01:29.917" starttime="20201109 13:01:29.916"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:29.917" starttime="20201109 13:01:27.853"></status>
</kw>
<msg timestamp="20201109 13:01:29.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:01:29.917" starttime="20201109 13:01:27.853"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:29.917" starttime="20201109 13:01:27.853"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:29.917" starttime="20201109 13:01:27.852"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:29.917" starttime="20201109 13:01:27.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201109 13:01:29.918" starttime="20201109 13:01:29.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:01:29.922" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:01:32.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:01:32.226" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:01:29.775Z",
  "modificat...</msg>
<status status="PASS" endtime="20201109 13:01:32.226" starttime="20201109 13:01:29.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:01:32.227" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:01:29.775Z",
  "modificationTime" : "2020-11-09T13:01:29.775Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201109 13:01:32.227" starttime="20201109 13:01:32.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:01:32.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:01:32.228" starttime="20201109 13:01:32.228"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:32.228" starttime="20201109 13:01:29.919"></status>
</kw>
<msg timestamp="20201109 13:01:32.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:01:32.229" starttime="20201109 13:01:29.919"></status>
</kw>
<msg timestamp="20201109 13:01:32.229" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:01:29.775Z",
  "modificat...</msg>
<status status="PASS" endtime="20201109 13:01:32.229" starttime="20201109 13:01:29.918"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201109 13:01:32.229" starttime="20201109 13:01:32.229"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:01:32.233" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:01:32.233" starttime="20201109 13:01:32.233"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:01:32.234" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:01:32.234" starttime="20201109 13:01:32.233"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:32.234" starttime="20201109 13:01:32.232"></status>
</kw>
<msg timestamp="20201109 13:01:32.234" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:01:32.234" starttime="20201109 13:01:32.232"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:32.234" starttime="20201109 13:01:32.231"></status>
</kw>
<msg timestamp="20201109 13:01:32.234" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201109 13:01:32.235" starttime="20201109 13:01:32.230"></status>
</kw>
<msg timestamp="20201109 13:01:32.235" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201109 13:01:32.235" starttime="20201109 13:01:32.229"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:01:32.239" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:01:34.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:01:34.298" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:01:34.298" starttime="20201109 13:01:32.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:01:34.299" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:01:34.299" starttime="20201109 13:01:34.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:01:34.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:01:34.300" starttime="20201109 13:01:34.299"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:34.300" starttime="20201109 13:01:32.236"></status>
</kw>
<msg timestamp="20201109 13:01:34.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:01:34.300" starttime="20201109 13:01:32.235"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:34.300" starttime="20201109 13:01:32.235"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:01:34.304" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:01:40.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:01:40.176" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:01:40.176" starttime="20201109 13:01:34.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:01:40.177" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:01:40.177" starttime="20201109 13:01:40.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:01:40.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:01:40.178" starttime="20201109 13:01:40.177"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:40.178" starttime="20201109 13:01:34.302"></status>
</kw>
<msg timestamp="20201109 13:01:40.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:01:40.178" starttime="20201109 13:01:34.301"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:40.178" starttime="20201109 13:01:34.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:01:40.182" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:01:46.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:01:46.951" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:01:46.951" starttime="20201109 13:01:40.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:01:46.952" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:01:46.952" starttime="20201109 13:01:46.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:01:46.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:01:46.953" starttime="20201109 13:01:46.952"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:46.953" starttime="20201109 13:01:40.179"></status>
</kw>
<msg timestamp="20201109 13:01:46.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:01:46.953" starttime="20201109 13:01:40.179"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:46.953" starttime="20201109 13:01:40.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:01:46.957" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:01:50.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:01:50.838" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:01:50.838" starttime="20201109 13:01:46.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:01:50.840" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:01:50.840" starttime="20201109 13:01:50.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:01:50.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:01:50.841" starttime="20201109 13:01:50.840"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:50.841" starttime="20201109 13:01:46.954"></status>
</kw>
<msg timestamp="20201109 13:01:50.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:01:50.841" starttime="20201109 13:01:46.954"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:50.841" starttime="20201109 13:01:46.954"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:01:50.842" critical="yes" starttime="20201109 13:01:23.273"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:01:50.847" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:01:50.847" starttime="20201109 13:01:50.846"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:01:50.847" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:01:50.847" starttime="20201109 13:01:50.847"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:50.848" starttime="20201109 13:01:50.846"></status>
</kw>
<msg timestamp="20201109 13:01:50.848" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:01:50.848" starttime="20201109 13:01:50.845"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:50.848" starttime="20201109 13:01:50.844"></status>
</kw>
<msg timestamp="20201109 13:01:50.848" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:01:50.848" starttime="20201109 13:01:50.844"></status>
</kw>
<msg timestamp="20201109 13:01:50.848" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:01:50.848" starttime="20201109 13:01:50.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:01:50.852" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:01:53.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:01:53.063" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:01:53.063" starttime="20201109 13:01:50.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:01:53.065" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:01:53.065" starttime="20201109 13:01:53.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:01:53.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:01:53.065" starttime="20201109 13:01:53.065"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:53.066" starttime="20201109 13:01:50.849"></status>
</kw>
<msg timestamp="20201109 13:01:53.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:01:53.066" starttime="20201109 13:01:50.849"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:53.066" starttime="20201109 13:01:50.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:01:53.071" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:01:55.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:01:55.295" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:01:55.295" starttime="20201109 13:01:53.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:01:55.296" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:01:55.298" starttime="20201109 13:01:55.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:01:55.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:01:55.299" starttime="20201109 13:01:55.298"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:55.299" starttime="20201109 13:01:53.067"></status>
</kw>
<msg timestamp="20201109 13:01:55.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:01:55.299" starttime="20201109 13:01:53.067"></status>
</kw>
<status status="PASS" endtime="20201109 13:01:55.300" starttime="20201109 13:01:53.066"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:01:55.300" critical="yes" starttime="20201109 13:01:50.842"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201109 13:01:55.301" starttime="20201109 13:01:23.217"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:03:25.404" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:03:25.404" starttime="20201109 13:03:25.403"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:03:25.404" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:03:25.405" starttime="20201109 13:03:25.404"></status>
</kw>
<status status="PASS" endtime="20201109 13:03:25.405" starttime="20201109 13:03:25.403"></status>
</kw>
<msg timestamp="20201109 13:03:25.405" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:03:25.405" starttime="20201109 13:03:25.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:03:25.406" starttime="20201109 13:03:25.405"></status>
</kw>
<msg timestamp="20201109 13:03:25.406" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201109 13:03:25.406" starttime="20201109 13:03:25.405"></status>
</kw>
<status status="PASS" endtime="20201109 13:03:25.406" starttime="20201109 13:03:25.402"></status>
</kw>
<msg timestamp="20201109 13:03:25.406" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:03:25.406" starttime="20201109 13:03:25.401"></status>
</kw>
<msg timestamp="20201109 13:03:25.407" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:03:25.407" starttime="20201109 13:03:25.400"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:03:25.407" level="INFO">${random} = 30447</msg>
<status status="PASS" endtime="20201109 13:03:25.407" starttime="20201109 13:03:25.407"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:03:25.414" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-30447 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:03:28.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:03:28.760" level="INFO">${output} = 2020-11-09 13:03:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:03:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-09 ...</msg>
<status status="PASS" endtime="20201109 13:03:28.760" starttime="20201109 13:03:25.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:03:28.761" level="INFO">2020-11-09 13:03:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:03:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-09 13:03:27 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-09 13:03:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:03:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E4DFCC97EB1A-&gt;a35cdb7a-4c53-48eb-8964-4f142622088e
2020-11-09 13:03:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201109 13:03:28.761" starttime="20201109 13:03:28.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:03:28.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:03:28.764" starttime="20201109 13:03:28.763"></status>
</kw>
<status status="PASS" endtime="20201109 13:03:28.764" starttime="20201109 13:03:25.408"></status>
</kw>
<msg timestamp="20201109 13:03:28.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:03:28.764" starttime="20201109 13:03:25.408"></status>
</kw>
<msg timestamp="20201109 13:03:28.764" level="INFO">${result} = 2020-11-09 13:03:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:03:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-09 ...</msg>
<status status="PASS" endtime="20201109 13:03:28.764" starttime="20201109 13:03:25.407"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:03:28.769" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:03:30.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:03:30.585" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-09 13:02 ofs://om/volume1/bucket1/ozone-13059
-rw-...</msg>
<status status="PASS" endtime="20201109 13:03:30.585" starttime="20201109 13:03:28.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:03:30.586" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-09 13:02 ofs://om/volume1/bucket1/ozone-13059
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-09 13:03 ofs://om/volume1/bucket1/ozone-30447
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:01 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:02 ofs://om/volume1/bucket1/wordcount-29.txt</msg>
<status status="PASS" endtime="20201109 13:03:30.586" starttime="20201109 13:03:30.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:03:30.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:03:30.587" starttime="20201109 13:03:30.586"></status>
</kw>
<status status="PASS" endtime="20201109 13:03:30.587" starttime="20201109 13:03:28.767"></status>
</kw>
<msg timestamp="20201109 13:03:30.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:03:30.587" starttime="20201109 13:03:28.766"></status>
</kw>
<msg timestamp="20201109 13:03:30.588" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-09 13:02 ofs://om/volume1/bucket1/ozone-13059
-rw-...</msg>
<status status="PASS" endtime="20201109 13:03:30.588" starttime="20201109 13:03:28.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:03:30.588" starttime="20201109 13:03:30.588"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:03:30.588" critical="yes" starttime="20201109 13:03:25.399"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201109 13:03:30.589" starttime="20201109 13:03:25.349"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:02:00.349" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:02:00.349" starttime="20201109 13:02:00.349"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:02:00.350" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:02:00.350" starttime="20201109 13:02:00.349"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:00.350" starttime="20201109 13:02:00.348"></status>
</kw>
<msg timestamp="20201109 13:02:00.350" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:02:00.350" starttime="20201109 13:02:00.348"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:00.350" starttime="20201109 13:02:00.347"></status>
</kw>
<msg timestamp="20201109 13:02:00.350" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:02:00.350" starttime="20201109 13:02:00.346"></status>
</kw>
<msg timestamp="20201109 13:02:00.351" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:02:00.351" starttime="20201109 13:02:00.345"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:02:00.351" level="INFO">${random} = 13059</msg>
<status status="PASS" endtime="20201109 13:02:00.351" starttime="20201109 13:02:00.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:02:00.356" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-13059 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:02:03.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:02:03.744" level="INFO">${output} = 2020-11-09 13:02:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:02:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-09 ...</msg>
<status status="PASS" endtime="20201109 13:02:03.744" starttime="20201109 13:02:00.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:02:03.745" level="INFO">2020-11-09 13:02:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:02:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-09 13:02:02 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-09 13:02:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:02:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B5FDD4DF0E8E-&gt;a35cdb7a-4c53-48eb-8964-4f142622088e
2020-11-09 13:02:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201109 13:02:03.746" starttime="20201109 13:02:03.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:02:03.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:02:03.746" starttime="20201109 13:02:03.746"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:03.747" starttime="20201109 13:02:00.352"></status>
</kw>
<msg timestamp="20201109 13:02:03.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:02:03.747" starttime="20201109 13:02:00.352"></status>
</kw>
<msg timestamp="20201109 13:02:03.747" level="INFO">${result} = 2020-11-09 13:02:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:02:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-09 ...</msg>
<status status="PASS" endtime="20201109 13:02:03.747" starttime="20201109 13:02:00.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:02:03.752" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:02:05.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:02:05.593" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-09 13:02 o3fs://bucket1.volume1.om/ozone-13059
dr...</msg>
<status status="PASS" endtime="20201109 13:02:05.593" starttime="20201109 13:02:03.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:02:05.594" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-09 13:02 o3fs://bucket1.volume1.om/ozone-13059
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:01 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:02:05.594" starttime="20201109 13:02:05.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:02:05.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:02:05.595" starttime="20201109 13:02:05.594"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:05.595" starttime="20201109 13:02:03.749"></status>
</kw>
<msg timestamp="20201109 13:02:05.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:02:05.595" starttime="20201109 13:02:03.748"></status>
</kw>
<msg timestamp="20201109 13:02:05.595" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-09 13:02 o3fs://bucket1.volume1.om/ozone-13059
dr...</msg>
<status status="PASS" endtime="20201109 13:02:05.596" starttime="20201109 13:02:03.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:02:05.596" starttime="20201109 13:02:05.596"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:02:05.596" critical="yes" starttime="20201109 13:02:00.345"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201109 13:02:05.598" starttime="20201109 13:02:00.293"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:03:35.323" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:03:35.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:03:35.328" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:03:35.328" starttime="20201109 13:03:35.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:03:35.329" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:03:35.329" starttime="20201109 13:03:35.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:03:35.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:03:35.330" starttime="20201109 13:03:35.329"></status>
</kw>
<status status="PASS" endtime="20201109 13:03:35.330" starttime="20201109 13:03:35.317"></status>
</kw>
<msg timestamp="20201109 13:03:35.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:03:35.330" starttime="20201109 13:03:35.317"></status>
</kw>
<msg timestamp="20201109 13:03:35.330" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:03:35.330" starttime="20201109 13:03:35.316"></status>
</kw>
<msg timestamp="20201109 13:03:35.331" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:03:35.331" starttime="20201109 13:03:35.316"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:03:35.335" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:03:35.335" starttime="20201109 13:03:35.335"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:03:35.336" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:03:35.336" starttime="20201109 13:03:35.335"></status>
</kw>
<status status="PASS" endtime="20201109 13:03:35.336" starttime="20201109 13:03:35.333"></status>
</kw>
<msg timestamp="20201109 13:03:35.336" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:03:35.336" starttime="20201109 13:03:35.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:03:35.337" starttime="20201109 13:03:35.337"></status>
</kw>
<msg timestamp="20201109 13:03:35.337" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201109 13:03:35.337" starttime="20201109 13:03:35.336"></status>
</kw>
<status status="PASS" endtime="20201109 13:03:35.338" starttime="20201109 13:03:35.332"></status>
</kw>
<msg timestamp="20201109 13:03:35.338" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:03:35.338" starttime="20201109 13:03:35.332"></status>
</kw>
<msg timestamp="20201109 13:03:35.338" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:03:35.338" starttime="20201109 13:03:35.331"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:03:35.342" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:04:13.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:04:13.876" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:03:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:03:37 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201109 13:04:13.876" starttime="20201109 13:03:35.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:04:13.877" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:03:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:03:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-09 13:03:37 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-09 13:03:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:03:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D101FF9B6C07-&gt;a35cdb7a-4c53-48eb-8964-4f142622088e
2020-11-09 13:03:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-09 13:03:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-09 13:03:41 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-09 13:03:41 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-09 13:03:41 INFO  JobSubmitter:198 - number of splits:3
2020-11-09 13:03:41 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604926849579_0003
2020-11-09 13:03:41 INFO  YarnClientImpl:273 - Submitted application application_1604926849579_0003
2020-11-09 13:03:41 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604926849579_0003/
2020-11-09 13:03:41 INFO  Job:1339 - Running job: job_1604926849579_0003
2020-11-09 13:03:49 INFO  Job:1360 - Job job_1604926849579_0003 running in uber mode : false
2020-11-09 13:03:49 INFO  Job:1367 -  map 0% reduce 0%
2020-11-09 13:03:55 INFO  Job:1367 -  map 33% reduce 0%
2020-11-09 13:04:00 INFO  Job:1367 -  map 67% reduce 0%
2020-11-09 13:04:05 INFO  Job:1367 -  map 100% reduce 0%
2020-11-09 13:04:13 INFO  Job:1367 -  map 100% reduce 100%
2020-11-09 13:04:13 INFO  Job:1378 - Job job_1604926849579_0003 completed successfully
2020-11-09 13:04:13 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615221
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38616
		Total time spent by all reduces in occupied slots (ms)=28336
		Total time spent by all map tasks (ms)=9654
		Total time spent by all reduce tasks (ms)=7084
		Total vcore-milliseconds taken by all map tasks=9654
		Total vcore-milliseconds taken by all reduce tasks=7084
		Total megabyte-milliseconds taken by all map tasks=39542784
		Total megabyte-milliseconds taken by all reduce tasks=29016064
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=567
		CPU time spent (ms)=6680
		Physical memory (bytes) snapshot=1138495488
		Virtual memory (bytes) snapshot=15782772736
		Total committed heap usage (bytes)=1047527424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.345 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201109 13:04:13.878" starttime="20201109 13:04:13.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:04:13.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:04:13.878" starttime="20201109 13:04:13.878"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:13.879" starttime="20201109 13:03:35.339"></status>
</kw>
<msg timestamp="20201109 13:04:13.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:04:13.879" starttime="20201109 13:03:35.339"></status>
</kw>
<msg timestamp="20201109 13:04:13.879" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:03:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:03:37 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201109 13:04:13.879" starttime="20201109 13:03:35.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:04:13.880" starttime="20201109 13:04:13.880"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:04:13.880" critical="yes" starttime="20201109 13:03:35.315"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:04:13.885" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:04:13.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:04:13.891" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:04:13.891" starttime="20201109 13:04:13.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:04:13.892" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:04:13.892" starttime="20201109 13:04:13.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:04:13.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:04:13.893" starttime="20201109 13:04:13.892"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:13.893" starttime="20201109 13:04:13.883"></status>
</kw>
<msg timestamp="20201109 13:04:13.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:04:13.893" starttime="20201109 13:04:13.882"></status>
</kw>
<msg timestamp="20201109 13:04:13.893" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:04:13.893" starttime="20201109 13:04:13.882"></status>
</kw>
<msg timestamp="20201109 13:04:13.894" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:04:13.894" starttime="20201109 13:04:13.881"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:04:13.894" level="INFO">${random} = 80</msg>
<status status="PASS" endtime="20201109 13:04:13.894" starttime="20201109 13:04:13.894"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:04:13.898" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:04:13.898" starttime="20201109 13:04:13.898"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:04:13.899" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:04:13.899" starttime="20201109 13:04:13.898"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:13.899" starttime="20201109 13:04:13.897"></status>
</kw>
<msg timestamp="20201109 13:04:13.899" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:04:13.899" starttime="20201109 13:04:13.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:04:13.900" starttime="20201109 13:04:13.900"></status>
</kw>
<msg timestamp="20201109 13:04:13.900" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201109 13:04:13.900" starttime="20201109 13:04:13.899"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:13.900" starttime="20201109 13:04:13.896"></status>
</kw>
<msg timestamp="20201109 13:04:13.901" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:04:13.901" starttime="20201109 13:04:13.895"></status>
</kw>
<msg timestamp="20201109 13:04:13.901" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:04:13.901" starttime="20201109 13:04:13.894"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:04:13.904" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:04:13.904" starttime="20201109 13:04:13.904"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:04:13.905" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:04:13.905" starttime="20201109 13:04:13.904"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:13.905" starttime="20201109 13:04:13.903"></status>
</kw>
<msg timestamp="20201109 13:04:13.905" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:04:13.905" starttime="20201109 13:04:13.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:04:13.906" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201109 13:04:13.906" starttime="20201109 13:04:13.906"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:04:13.907" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201109 13:04:13.907" starttime="20201109 13:04:13.907"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:13.907" starttime="20201109 13:04:13.906"></status>
</kw>
<msg timestamp="20201109 13:04:13.907" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201109 13:04:13.907" starttime="20201109 13:04:13.905"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:13.908" starttime="20201109 13:04:13.902"></status>
</kw>
<msg timestamp="20201109 13:04:13.908" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201109 13:04:13.908" starttime="20201109 13:04:13.902"></status>
</kw>
<msg timestamp="20201109 13:04:13.908" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201109 13:04:13.908" starttime="20201109 13:04:13.901"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:04:13.911" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:04:13.911" starttime="20201109 13:04:13.911"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:04:13.912" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:04:13.912" starttime="20201109 13:04:13.912"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:13.912" starttime="20201109 13:04:13.911"></status>
</kw>
<msg timestamp="20201109 13:04:13.912" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:04:13.912" starttime="20201109 13:04:13.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:04:13.914" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201109 13:04:13.914" starttime="20201109 13:04:13.913"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:04:13.914" level="INFO">${result} = /wordcount-80.txt</msg>
<status status="PASS" endtime="20201109 13:04:13.914" starttime="20201109 13:04:13.914"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:13.914" starttime="20201109 13:04:13.913"></status>
</kw>
<msg timestamp="20201109 13:04:13.915" level="INFO">${path_with_leading} = /wordcount-80.txt</msg>
<status status="PASS" endtime="20201109 13:04:13.915" starttime="20201109 13:04:13.912"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:13.915" starttime="20201109 13:04:13.909"></status>
</kw>
<msg timestamp="20201109 13:04:13.915" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-80.txt</msg>
<status status="PASS" endtime="20201109 13:04:13.915" starttime="20201109 13:04:13.909"></status>
</kw>
<msg timestamp="20201109 13:04:13.915" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-80.txt</msg>
<status status="PASS" endtime="20201109 13:04:13.915" starttime="20201109 13:04:13.908"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:04:13.919" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-80.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:04:47.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:04:47.535" level="INFO">${output} = 2020-11-09 13:04:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-09 13:04:15 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201109 13:04:47.535" starttime="20201109 13:04:13.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:04:47.536" level="INFO">2020-11-09 13:04:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-09 13:04:15 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-09 13:04:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:04:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-09 13:04:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-09 13:04:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:04:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FB36BE7BB9EC-&gt;a35cdb7a-4c53-48eb-8964-4f142622088e
2020-11-09 13:04:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-09 13:04:17 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-09 13:04:17 INFO  JobSubmitter:198 - number of splits:3
2020-11-09 13:04:17 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604926849579_0004
2020-11-09 13:04:17 INFO  YarnClientImpl:273 - Submitted application application_1604926849579_0004
2020-11-09 13:04:17 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604926849579_0004/
2020-11-09 13:04:17 INFO  Job:1339 - Running job: job_1604926849579_0004
2020-11-09 13:04:25 INFO  Job:1360 - Job job_1604926849579_0004 running in uber mode : false
2020-11-09 13:04:25 INFO  Job:1367 -  map 0% reduce 0%
2020-11-09 13:04:32 INFO  Job:1367 -  map 33% reduce 0%
2020-11-09 13:04:36 INFO  Job:1367 -  map 67% reduce 0%
2020-11-09 13:04:42 INFO  Job:1367 -  map 100% reduce 0%
2020-11-09 13:04:47 INFO  Job:1367 -  map 100% reduce 100%
2020-11-09 13:04:47 INFO  Job:1378 - Job job_1604926849579_0004 completed successfully
2020-11-09 13:04:47 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37948
		Total time spent by all reduces in occupied slots (ms)=13644
		Total time spent by all map tasks (ms)=9487
		Total time spent by all reduce tasks (ms)=3411
		Total vcore-milliseconds taken by all map tasks=9487
		Total vcore-milliseconds taken by all reduce tasks=3411
		Total megabyte-milliseconds taken by all map tasks=38858752
		Total megabyte-milliseconds taken by all reduce tasks=13971456
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=569
		CPU time spent (ms)=6820
		Physical memory (bytes) snapshot=1122181120
		Virtual memory (bytes) snapshot=15765565440
		Total committed heap usage (bytes)=1047003136
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201109 13:04:47.536" starttime="20201109 13:04:47.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:04:47.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:04:47.537" starttime="20201109 13:04:47.537"></status>
</kw>
<status status="PASS" endtime="20201109 13:04:47.538" starttime="20201109 13:04:13.916"></status>
</kw>
<msg timestamp="20201109 13:04:47.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:04:47.538" starttime="20201109 13:04:13.916"></status>
</kw>
<msg timestamp="20201109 13:04:47.538" level="INFO">${output} = 2020-11-09 13:04:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-09 13:04:15 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201109 13:04:47.538" starttime="20201109 13:04:13.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201109 13:04:47.539" starttime="20201109 13:04:47.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:04:47.539" starttime="20201109 13:04:47.539"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:04:47.540" critical="yes" starttime="20201109 13:04:13.881"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201109 13:04:47.541" starttime="20201109 13:03:35.262"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:02:10.511" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:02:10.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:02:10.516" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:02:10.516" starttime="20201109 13:02:10.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:02:10.517" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:02:10.517" starttime="20201109 13:02:10.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:02:10.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:02:10.518" starttime="20201109 13:02:10.517"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:10.518" starttime="20201109 13:02:10.505"></status>
</kw>
<msg timestamp="20201109 13:02:10.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:02:10.518" starttime="20201109 13:02:10.505"></status>
</kw>
<msg timestamp="20201109 13:02:10.518" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:02:10.518" starttime="20201109 13:02:10.504"></status>
</kw>
<msg timestamp="20201109 13:02:10.519" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:02:10.519" starttime="20201109 13:02:10.504"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:02:10.523" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:02:10.523" starttime="20201109 13:02:10.523"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:02:10.524" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:02:10.524" starttime="20201109 13:02:10.523"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:10.524" starttime="20201109 13:02:10.521"></status>
</kw>
<msg timestamp="20201109 13:02:10.524" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:02:10.524" starttime="20201109 13:02:10.521"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:10.524" starttime="20201109 13:02:10.520"></status>
</kw>
<msg timestamp="20201109 13:02:10.524" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:02:10.524" starttime="20201109 13:02:10.520"></status>
</kw>
<msg timestamp="20201109 13:02:10.525" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:02:10.525" starttime="20201109 13:02:10.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:02:10.530" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:02:46.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:02:46.821" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:02:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:02:12 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201109 13:02:46.821" starttime="20201109 13:02:10.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:02:46.822" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:02:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:02:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-09 13:02:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-09 13:02:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:02:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-08F6A069FD2E-&gt;a35cdb7a-4c53-48eb-8964-4f142622088e
2020-11-09 13:02:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-09 13:02:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-09 13:02:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-09 13:02:14 INFO  JobSubmitter:198 - number of splits:3
2020-11-09 13:02:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604926849579_0001
2020-11-09 13:02:14 INFO  YarnClientImpl:273 - Submitted application application_1604926849579_0001
2020-11-09 13:02:14 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604926849579_0001/
2020-11-09 13:02:14 INFO  Job:1339 - Running job: job_1604926849579_0001
2020-11-09 13:02:24 INFO  Job:1360 - Job job_1604926849579_0001 running in uber mode : false
2020-11-09 13:02:24 INFO  Job:1367 -  map 0% reduce 0%
2020-11-09 13:02:31 INFO  Job:1367 -  map 33% reduce 0%
2020-11-09 13:02:36 INFO  Job:1367 -  map 67% reduce 0%
2020-11-09 13:02:41 INFO  Job:1367 -  map 100% reduce 0%
2020-11-09 13:02:45 INFO  Job:1367 -  map 100% reduce 100%
2020-11-09 13:02:46 INFO  Job:1378 - Job job_1604926849579_0001 completed successfully
2020-11-09 13:02:46 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40480
		Total time spent by all reduces in occupied slots (ms)=14392
		Total time spent by all map tasks (ms)=10120
		Total time spent by all reduce tasks (ms)=3598
		Total vcore-milliseconds taken by all map tasks=10120
		Total vcore-milliseconds taken by all reduce tasks=3598
		Total megabyte-milliseconds taken by all map tasks=41451520
		Total megabyte-milliseconds taken by all reduce tasks=14737408
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=624
		CPU time spent (ms)=6940
		Physical memory (bytes) snapshot=1171628032
		Virtual memory (bytes) snapshot=15801327616
		Total committed heap usage (bytes)=1004011520
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.614 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201109 13:02:46.822" starttime="20201109 13:02:46.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:02:46.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:02:46.823" starttime="20201109 13:02:46.822"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:46.823" starttime="20201109 13:02:10.526"></status>
</kw>
<msg timestamp="20201109 13:02:46.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:02:46.823" starttime="20201109 13:02:10.525"></status>
</kw>
<msg timestamp="20201109 13:02:46.824" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:02:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:02:12 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201109 13:02:46.824" starttime="20201109 13:02:10.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:02:46.824" starttime="20201109 13:02:46.824"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:02:46.824" critical="yes" starttime="20201109 13:02:10.503"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:02:46.830" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:02:46.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:02:46.836" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:02:46.836" starttime="20201109 13:02:46.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:02:46.837" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:02:46.837" starttime="20201109 13:02:46.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:02:46.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:02:46.838" starttime="20201109 13:02:46.837"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:46.838" starttime="20201109 13:02:46.827"></status>
</kw>
<msg timestamp="20201109 13:02:46.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:02:46.838" starttime="20201109 13:02:46.827"></status>
</kw>
<msg timestamp="20201109 13:02:46.839" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:02:46.839" starttime="20201109 13:02:46.826"></status>
</kw>
<msg timestamp="20201109 13:02:46.839" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201109 13:02:46.839" starttime="20201109 13:02:46.826"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:02:46.839" level="INFO">${random} = 29</msg>
<status status="PASS" endtime="20201109 13:02:46.840" starttime="20201109 13:02:46.839"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:02:46.843" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:02:46.843" starttime="20201109 13:02:46.843"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:02:46.844" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:02:46.844" starttime="20201109 13:02:46.843"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:46.844" starttime="20201109 13:02:46.842"></status>
</kw>
<msg timestamp="20201109 13:02:46.844" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:02:46.844" starttime="20201109 13:02:46.842"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:46.844" starttime="20201109 13:02:46.841"></status>
</kw>
<msg timestamp="20201109 13:02:46.844" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:02:46.845" starttime="20201109 13:02:46.840"></status>
</kw>
<msg timestamp="20201109 13:02:46.845" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:02:46.845" starttime="20201109 13:02:46.840"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:02:46.848" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:02:46.848" starttime="20201109 13:02:46.848"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:02:46.849" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:02:46.849" starttime="20201109 13:02:46.848"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:46.849" starttime="20201109 13:02:46.847"></status>
</kw>
<msg timestamp="20201109 13:02:46.849" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:02:46.849" starttime="20201109 13:02:46.847"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:46.849" starttime="20201109 13:02:46.846"></status>
</kw>
<msg timestamp="20201109 13:02:46.849" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201109 13:02:46.849" starttime="20201109 13:02:46.846"></status>
</kw>
<msg timestamp="20201109 13:02:46.850" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201109 13:02:46.850" starttime="20201109 13:02:46.845"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:02:46.853" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:02:46.853" starttime="20201109 13:02:46.852"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:02:46.853" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:02:46.853" starttime="20201109 13:02:46.853"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:46.853" starttime="20201109 13:02:46.852"></status>
</kw>
<msg timestamp="20201109 13:02:46.854" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:02:46.854" starttime="20201109 13:02:46.851"></status>
</kw>
<status status="PASS" endtime="20201109 13:02:46.854" starttime="20201109 13:02:46.851"></status>
</kw>
<msg timestamp="20201109 13:02:46.854" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-29.txt</msg>
<status status="PASS" endtime="20201109 13:02:46.854" starttime="20201109 13:02:46.850"></status>
</kw>
<msg timestamp="20201109 13:02:46.854" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-29.txt</msg>
<status status="PASS" endtime="20201109 13:02:46.854" starttime="20201109 13:02:46.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:02:46.859" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-29.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:03:20.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:03:20.562" level="INFO">${output} = 2020-11-09 13:02:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-09 13:02:48 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201109 13:03:20.562" starttime="20201109 13:02:46.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:03:20.563" level="INFO">2020-11-09 13:02:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-09 13:02:48 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-09 13:02:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:02:49 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-09 13:02:49 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-09 13:02:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:02:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2E520B5F4F2C-&gt;a35cdb7a-4c53-48eb-8964-4f142622088e
2020-11-09 13:02:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-09 13:02:50 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-09 13:02:50 INFO  JobSubmitter:198 - number of splits:3
2020-11-09 13:02:50 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604926849579_0002
2020-11-09 13:02:50 INFO  YarnClientImpl:273 - Submitted application application_1604926849579_0002
2020-11-09 13:02:50 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604926849579_0002/
2020-11-09 13:02:50 INFO  Job:1339 - Running job: job_1604926849579_0002
2020-11-09 13:02:58 INFO  Job:1360 - Job job_1604926849579_0002 running in uber mode : false
2020-11-09 13:02:58 INFO  Job:1367 -  map 0% reduce 0%
2020-11-09 13:03:05 INFO  Job:1367 -  map 33% reduce 0%
2020-11-09 13:03:09 INFO  Job:1367 -  map 67% reduce 0%
2020-11-09 13:03:16 INFO  Job:1367 -  map 100% reduce 0%
2020-11-09 13:03:20 INFO  Job:1367 -  map 100% reduce 100%
2020-11-09 13:03:20 INFO  Job:1378 - Job job_1604926849579_0002 completed successfully
2020-11-09 13:03:20 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677783
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41156
		Total time spent by all reduces in occupied slots (ms)=14408
		Total time spent by all map tasks (ms)=10289
		Total time spent by all reduce tasks (ms)=3602
		Total vcore-milliseconds taken by all map tasks=10289
		Total vcore-milliseconds taken by all reduce tasks=3602
		Total megabyte-milliseconds taken by all map tasks=42143744
		Total megabyte-milliseconds taken by all reduce tasks=14753792
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=605
		CPU time spent (ms)=7230
		Physical memory (bytes) snapshot=1165934592
		Virtual memory (bytes) snapshot=15795621888
		Total committed heap usage (bytes)=1009254400
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201109 13:03:20.563" starttime="20201109 13:03:20.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:03:20.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:03:20.564" starttime="20201109 13:03:20.563"></status>
</kw>
<status status="PASS" endtime="20201109 13:03:20.564" starttime="20201109 13:02:46.855"></status>
</kw>
<msg timestamp="20201109 13:03:20.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:03:20.564" starttime="20201109 13:02:46.855"></status>
</kw>
<msg timestamp="20201109 13:03:20.565" level="INFO">${output} = 2020-11-09 13:02:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-09 13:02:48 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201109 13:03:20.565" starttime="20201109 13:02:46.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201109 13:03:20.565" starttime="20201109 13:03:20.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:03:20.566" starttime="20201109 13:03:20.565"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:03:20.566" critical="yes" starttime="20201109 13:02:46.825"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201109 13:03:20.567" starttime="20201109 13:02:10.453"></status>
</suite>
<status status="PASS" elapsedtime="185022" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:05:52.961" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:05:55.166" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:05:55.166" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201109 13:05:55.166" starttime="20201109 13:05:52.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:05:55.167" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201109 13:05:55.168" starttime="20201109 13:05:55.167"></status>
</kw>
<msg timestamp="20201109 13:05:55.168" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201109 13:05:55.168" starttime="20201109 13:05:52.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:05:55.174" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:05:57.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:05:57.145" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:05:57.145" starttime="20201109 13:05:55.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:05:57.146" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:05:57.146" starttime="20201109 13:05:57.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:05:57.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:05:57.147" starttime="20201109 13:05:57.146"></status>
</kw>
<status status="PASS" endtime="20201109 13:05:57.147" starttime="20201109 13:05:55.170"></status>
</kw>
<msg timestamp="20201109 13:05:57.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:05:57.147" starttime="20201109 13:05:55.169"></status>
</kw>
<msg timestamp="20201109 13:05:57.147" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201109 13:05:57.147" starttime="20201109 13:05:55.169"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201109 13:05:57.148" starttime="20201109 13:05:57.148"></status>
</kw>
<status status="PASS" endtime="20201109 13:05:57.148" starttime="20201109 13:05:55.169"></status>
</kw>
<status status="PASS" endtime="20201109 13:05:57.148" starttime="20201109 13:05:55.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:05:57.153" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:05:59.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:05:59.015" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:05:59.015" starttime="20201109 13:05:57.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:05:59.018" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:05:59.018" starttime="20201109 13:05:59.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:05:59.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:05:59.019" starttime="20201109 13:05:59.018"></status>
</kw>
<status status="PASS" endtime="20201109 13:05:59.019" starttime="20201109 13:05:57.150"></status>
</kw>
<msg timestamp="20201109 13:05:59.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:05:59.019" starttime="20201109 13:05:57.150"></status>
</kw>
<status status="PASS" endtime="20201109 13:05:59.019" starttime="20201109 13:05:57.149"></status>
</kw>
<status status="PASS" endtime="20201109 13:05:59.019" starttime="20201109 13:05:57.149"></status>
</kw>
<status status="PASS" endtime="20201109 13:05:59.019" starttime="20201109 13:05:57.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201109 13:05:59.020" starttime="20201109 13:05:59.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:05:59.024" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:06:01.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:06:01.403" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:05:58.977Z",
  "modificat...</msg>
<status status="PASS" endtime="20201109 13:06:01.403" starttime="20201109 13:05:59.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:06:01.404" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:05:58.977Z",
  "modificationTime" : "2020-11-09T13:05:58.977Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201109 13:06:01.404" starttime="20201109 13:06:01.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:06:01.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:06:01.405" starttime="20201109 13:06:01.404"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:01.405" starttime="20201109 13:05:59.021"></status>
</kw>
<msg timestamp="20201109 13:06:01.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:06:01.405" starttime="20201109 13:05:59.021"></status>
</kw>
<msg timestamp="20201109 13:06:01.405" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:05:58.977Z",
  "modificat...</msg>
<status status="PASS" endtime="20201109 13:06:01.406" starttime="20201109 13:05:59.020"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201109 13:06:01.406" starttime="20201109 13:06:01.406"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:06:01.410" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:06:01.410" starttime="20201109 13:06:01.410"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:06:01.411" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:06:01.411" starttime="20201109 13:06:01.410"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:01.411" starttime="20201109 13:06:01.409"></status>
</kw>
<msg timestamp="20201109 13:06:01.411" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:06:01.411" starttime="20201109 13:06:01.409"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:01.411" starttime="20201109 13:06:01.408"></status>
</kw>
<msg timestamp="20201109 13:06:01.411" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201109 13:06:01.411" starttime="20201109 13:06:01.407"></status>
</kw>
<msg timestamp="20201109 13:06:01.412" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201109 13:06:01.412" starttime="20201109 13:06:01.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:06:01.415" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:06:03.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:06:03.386" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:06:03.386" starttime="20201109 13:06:01.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:06:03.388" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:06:03.388" starttime="20201109 13:06:03.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:06:03.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:06:03.388" starttime="20201109 13:06:03.388"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:03.389" starttime="20201109 13:06:01.412"></status>
</kw>
<msg timestamp="20201109 13:06:03.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:06:03.389" starttime="20201109 13:06:01.412"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:03.389" starttime="20201109 13:06:01.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:06:03.394" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:06:08.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:06:08.849" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:06:08.849" starttime="20201109 13:06:03.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:06:08.851" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:06:08.851" starttime="20201109 13:06:08.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:06:08.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:06:08.852" starttime="20201109 13:06:08.851"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:08.852" starttime="20201109 13:06:03.390"></status>
</kw>
<msg timestamp="20201109 13:06:08.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:06:08.852" starttime="20201109 13:06:03.390"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:08.853" starttime="20201109 13:06:03.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:06:08.857" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:06:13.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:06:13.393" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:06:13.393" starttime="20201109 13:06:08.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:06:13.394" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:06:13.394" starttime="20201109 13:06:13.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:06:13.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:06:13.395" starttime="20201109 13:06:13.394"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:13.395" starttime="20201109 13:06:08.854"></status>
</kw>
<msg timestamp="20201109 13:06:13.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:06:13.395" starttime="20201109 13:06:08.854"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:13.395" starttime="20201109 13:06:08.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:06:13.400" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:06:17.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:06:17.189" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:06:17.189" starttime="20201109 13:06:13.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:06:17.190" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:06:17.190" starttime="20201109 13:06:17.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:06:17.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:06:17.191" starttime="20201109 13:06:17.190"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:17.191" starttime="20201109 13:06:13.396"></status>
</kw>
<msg timestamp="20201109 13:06:17.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:06:17.191" starttime="20201109 13:06:13.396"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:17.192" starttime="20201109 13:06:13.395"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:06:17.192" critical="yes" starttime="20201109 13:05:52.954"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:06:17.197" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:06:17.197" starttime="20201109 13:06:17.196"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:06:17.197" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:06:17.197" starttime="20201109 13:06:17.197"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:17.198" starttime="20201109 13:06:17.196"></status>
</kw>
<msg timestamp="20201109 13:06:17.198" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:06:17.198" starttime="20201109 13:06:17.195"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:17.198" starttime="20201109 13:06:17.194"></status>
</kw>
<msg timestamp="20201109 13:06:17.198" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:06:17.198" starttime="20201109 13:06:17.194"></status>
</kw>
<msg timestamp="20201109 13:06:17.198" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:06:17.198" starttime="20201109 13:06:17.193"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:06:17.202" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:06:19.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:06:19.207" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:06:19.207" starttime="20201109 13:06:17.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:06:19.208" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:06:19.208" starttime="20201109 13:06:19.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:06:19.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:06:19.209" starttime="20201109 13:06:19.209"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:19.209" starttime="20201109 13:06:17.199"></status>
</kw>
<msg timestamp="20201109 13:06:19.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:06:19.210" starttime="20201109 13:06:17.199"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:19.210" starttime="20201109 13:06:17.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:06:19.214" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:06:21.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:06:21.343" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:06:21.343" starttime="20201109 13:06:19.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:06:21.344" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:06:21.344" starttime="20201109 13:06:21.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:06:21.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:06:21.345" starttime="20201109 13:06:21.344"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:21.345" starttime="20201109 13:06:19.211"></status>
</kw>
<msg timestamp="20201109 13:06:21.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:06:21.345" starttime="20201109 13:06:19.210"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:21.346" starttime="20201109 13:06:19.210"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:06:21.346" critical="yes" starttime="20201109 13:06:17.192"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201109 13:06:21.347" starttime="20201109 13:05:52.902"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:07:58.577" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:07:58.577" starttime="20201109 13:07:58.577"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:07:58.578" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:07:58.578" starttime="20201109 13:07:58.577"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:58.578" starttime="20201109 13:07:58.576"></status>
</kw>
<msg timestamp="20201109 13:07:58.578" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:07:58.578" starttime="20201109 13:07:58.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:07:58.579" starttime="20201109 13:07:58.579"></status>
</kw>
<msg timestamp="20201109 13:07:58.580" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201109 13:07:58.580" starttime="20201109 13:07:58.578"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:58.580" starttime="20201109 13:07:58.575"></status>
</kw>
<msg timestamp="20201109 13:07:58.580" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:07:58.580" starttime="20201109 13:07:58.575"></status>
</kw>
<msg timestamp="20201109 13:07:58.580" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:07:58.580" starttime="20201109 13:07:58.574"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:07:58.581" level="INFO">${random} = 18435</msg>
<status status="PASS" endtime="20201109 13:07:58.581" starttime="20201109 13:07:58.580"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:07:58.586" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-18435 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:08:02.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:08:02.136" level="INFO">${output} = 2020-11-09 13:07:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:08:02.136" starttime="20201109 13:07:58.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:08:02.137" level="INFO">2020-11-09 13:07:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:00 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-09 13:08:00 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:08:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:08:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:08:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:08:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-33D183F5B386-&gt;0d8f6376-211b-4182-9283-9c308736aee9
2020-11-09 13:08:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-09 13:08:01 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201109 13:08:02.138" starttime="20201109 13:08:02.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:08:02.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:08:02.138" starttime="20201109 13:08:02.138"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:02.138" starttime="20201109 13:07:58.582"></status>
</kw>
<msg timestamp="20201109 13:08:02.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:08:02.139" starttime="20201109 13:07:58.581"></status>
</kw>
<msg timestamp="20201109 13:08:02.139" level="INFO">${result} = 2020-11-09 13:07:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:08:02.139" starttime="20201109 13:07:58.581"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:08:02.144" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:08:03.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:08:03.860" level="INFO">${output} = 2020-11-09 13:08:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:08:03.860" starttime="20201109 13:08:02.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:08:03.861" level="INFO">2020-11-09 13:08:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:03 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-09 13:08 ofs://om/volume1/bucket1/ozone-18435
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-09 13:06 ofs://om/volume1/bucket1/ozone-22966
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:06 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:07 ofs://om/volume1/bucket1/wordcount-42.txt
2020-11-09 13:08:03 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201109 13:08:03.861" starttime="20201109 13:08:03.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:08:03.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:08:03.861" starttime="20201109 13:08:03.861"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:03.862" starttime="20201109 13:08:02.141"></status>
</kw>
<msg timestamp="20201109 13:08:03.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:08:03.862" starttime="20201109 13:08:02.141"></status>
</kw>
<msg timestamp="20201109 13:08:03.862" level="INFO">${result} = 2020-11-09 13:08:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:08:03.862" starttime="20201109 13:08:02.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:08:03.863" starttime="20201109 13:08:03.862"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:08:03.863" critical="yes" starttime="20201109 13:07:58.573"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201109 13:08:03.864" starttime="20201109 13:07:58.520"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:06:26.127" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:06:26.127" starttime="20201109 13:06:26.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:06:26.128" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:06:26.128" starttime="20201109 13:06:26.127"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:26.128" starttime="20201109 13:06:26.126"></status>
</kw>
<msg timestamp="20201109 13:06:26.128" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:06:26.128" starttime="20201109 13:06:26.125"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:26.128" starttime="20201109 13:06:26.124"></status>
</kw>
<msg timestamp="20201109 13:06:26.128" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:06:26.128" starttime="20201109 13:06:26.124"></status>
</kw>
<msg timestamp="20201109 13:06:26.129" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:06:26.129" starttime="20201109 13:06:26.123"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:06:26.129" level="INFO">${random} = 22966</msg>
<status status="PASS" endtime="20201109 13:06:26.129" starttime="20201109 13:06:26.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:06:26.134" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-22966 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:06:29.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:06:29.914" level="INFO">${output} = 2020-11-09 13:06:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:06:29.914" starttime="20201109 13:06:26.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:06:29.915" level="INFO">2020-11-09 13:06:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:28 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-09 13:06:28 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:06:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:06:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:06:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:06:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-785A2ACF0DBD-&gt;0d8f6376-211b-4182-9283-9c308736aee9
2020-11-09 13:06:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-09 13:06:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201109 13:06:29.915" starttime="20201109 13:06:29.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:06:29.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:06:29.915" starttime="20201109 13:06:29.915"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:29.916" starttime="20201109 13:06:26.130"></status>
</kw>
<msg timestamp="20201109 13:06:29.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:06:29.916" starttime="20201109 13:06:26.130"></status>
</kw>
<msg timestamp="20201109 13:06:29.916" level="INFO">${result} = 2020-11-09 13:06:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:06:29.916" starttime="20201109 13:06:26.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:06:29.921" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:06:31.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:06:31.794" level="INFO">${output} = 2020-11-09 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:06:31.794" starttime="20201109 13:06:29.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:06:31.795" level="INFO">2020-11-09 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:31 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-09 13:06 o3fs://bucket1.volume1.om/ozone-22966
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:06 o3fs://bucket1.volume1.om/user
2020-11-09 13:06:31 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201109 13:06:31.795" starttime="20201109 13:06:31.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:06:31.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:06:31.796" starttime="20201109 13:06:31.795"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:31.796" starttime="20201109 13:06:29.918"></status>
</kw>
<msg timestamp="20201109 13:06:31.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:06:31.796" starttime="20201109 13:06:29.917"></status>
</kw>
<msg timestamp="20201109 13:06:31.797" level="INFO">${result} = 2020-11-09 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:06:31.797" starttime="20201109 13:06:29.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:06:31.797" starttime="20201109 13:06:31.797"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:06:31.798" critical="yes" starttime="20201109 13:06:26.122"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201109 13:06:31.798" starttime="20201109 13:06:26.070"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:08:08.652" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:08:08.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:08:08.659" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:08:08.660" starttime="20201109 13:08:08.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:08:08.661" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:08:08.661" starttime="20201109 13:08:08.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:08:08.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:08:08.662" starttime="20201109 13:08:08.661"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:08.662" starttime="20201109 13:08:08.648"></status>
</kw>
<msg timestamp="20201109 13:08:08.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:08:08.662" starttime="20201109 13:08:08.647"></status>
</kw>
<msg timestamp="20201109 13:08:08.662" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:08:08.662" starttime="20201109 13:08:08.647"></status>
</kw>
<msg timestamp="20201109 13:08:08.663" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:08:08.663" starttime="20201109 13:08:08.646"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:08:08.667" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:08:08.667" starttime="20201109 13:08:08.667"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:08:08.668" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:08:08.668" starttime="20201109 13:08:08.667"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:08.668" starttime="20201109 13:08:08.665"></status>
</kw>
<msg timestamp="20201109 13:08:08.668" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:08:08.668" starttime="20201109 13:08:08.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:08:08.669" starttime="20201109 13:08:08.669"></status>
</kw>
<msg timestamp="20201109 13:08:08.669" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201109 13:08:08.669" starttime="20201109 13:08:08.668"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:08.669" starttime="20201109 13:08:08.664"></status>
</kw>
<msg timestamp="20201109 13:08:08.670" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:08:08.670" starttime="20201109 13:08:08.663"></status>
</kw>
<msg timestamp="20201109 13:08:08.670" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:08:08.670" starttime="20201109 13:08:08.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:08:08.675" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:08:45.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:08:45.103" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:08:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08...</msg>
<status status="PASS" endtime="20201109 13:08:45.103" starttime="20201109 13:08:08.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:08:45.104" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:08:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:10 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-09 13:08:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:08:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:08:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:08:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:08:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A6465ADA6E1A-&gt;0d8f6376-211b-4182-9283-9c308736aee9
2020-11-09 13:08:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-09 13:08:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-09 13:08:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-09 13:08:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:12 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-09 13:08:12 INFO  JobSubmitter:202 - number of splits:3
2020-11-09 13:08:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604927129921_0003
2020-11-09 13:08:12 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-09 13:08:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:12 INFO  Configuration:2752 - resource-types.xml not found
2020-11-09 13:08:12 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-09 13:08:13 INFO  YarnClientImpl:324 - Submitted application application_1604927129921_0003
2020-11-09 13:08:13 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604927129921_0003/
2020-11-09 13:08:13 INFO  Job:1619 - Running job: job_1604927129921_0003
2020-11-09 13:08:21 INFO  Job:1640 - Job job_1604927129921_0003 running in uber mode : false
2020-11-09 13:08:21 INFO  Job:1647 -  map 0% reduce 0%
2020-11-09 13:08:28 INFO  Job:1647 -  map 33% reduce 0%
2020-11-09 13:08:33 INFO  Job:1647 -  map 67% reduce 0%
2020-11-09 13:08:38 INFO  Job:1647 -  map 100% reduce 0%
2020-11-09 13:08:43 INFO  Job:1647 -  map 100% reduce 100%
2020-11-09 13:08:44 INFO  Job:1658 - Job job_1604927129921_0003 completed successfully
2020-11-09 13:08:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39800
		Total time spent by all reduces in occupied slots (ms)=14896
		Total time spent by all map tasks (ms)=9950
		Total time spent by all reduce tasks (ms)=3724
		Total vcore-milliseconds taken by all map tasks=9950
		Total vcore-milliseconds taken by all reduce tasks=3724
		Total megabyte-milliseconds taken by all map tasks=40755200
		Total megabyte-milliseconds taken by all reduce tasks=15253504
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=584
		CPU time spent (ms)=6180
		Physical memory (bytes) snapshot=1187971072
		Virtual memory (bytes) snapshot=15775686656
		Total committed heap usage (bytes)=1070596096
		Peak Map Physical memory (bytes)=306638848
		Peak Map Virtual memory (bytes)=3941998592
		Peak Reduce Physical memory (bytes)=277823488
		Peak Reduce Virtual memory (bytes)=3954929664
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.651 seconds
2020-11-09 13:08:44 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-09 13:08:44 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201109 13:08:45.104" starttime="20201109 13:08:45.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:08:45.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:08:45.105" starttime="20201109 13:08:45.104"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:45.105" starttime="20201109 13:08:08.671"></status>
</kw>
<msg timestamp="20201109 13:08:45.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:08:45.106" starttime="20201109 13:08:08.671"></status>
</kw>
<msg timestamp="20201109 13:08:45.106" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:08:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08...</msg>
<status status="PASS" endtime="20201109 13:08:45.106" starttime="20201109 13:08:08.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:08:45.107" starttime="20201109 13:08:45.106"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:08:45.107" critical="yes" starttime="20201109 13:08:08.646"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:08:45.112" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:08:45.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:08:45.119" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:08:45.119" starttime="20201109 13:08:45.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:08:45.121" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:08:45.121" starttime="20201109 13:08:45.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:08:45.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:08:45.122" starttime="20201109 13:08:45.121"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:45.123" starttime="20201109 13:08:45.110"></status>
</kw>
<msg timestamp="20201109 13:08:45.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:08:45.123" starttime="20201109 13:08:45.109"></status>
</kw>
<msg timestamp="20201109 13:08:45.124" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:08:45.124" starttime="20201109 13:08:45.109"></status>
</kw>
<msg timestamp="20201109 13:08:45.124" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:08:45.124" starttime="20201109 13:08:45.108"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:08:45.125" level="INFO">${random} = 98</msg>
<status status="PASS" endtime="20201109 13:08:45.125" starttime="20201109 13:08:45.124"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:08:45.129" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:08:45.129" starttime="20201109 13:08:45.128"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:08:45.129" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:08:45.129" starttime="20201109 13:08:45.129"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:45.130" starttime="20201109 13:08:45.128"></status>
</kw>
<msg timestamp="20201109 13:08:45.130" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:08:45.130" starttime="20201109 13:08:45.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:08:45.131" starttime="20201109 13:08:45.130"></status>
</kw>
<msg timestamp="20201109 13:08:45.131" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201109 13:08:45.131" starttime="20201109 13:08:45.130"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:45.131" starttime="20201109 13:08:45.126"></status>
</kw>
<msg timestamp="20201109 13:08:45.131" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:08:45.131" starttime="20201109 13:08:45.126"></status>
</kw>
<msg timestamp="20201109 13:08:45.131" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:08:45.131" starttime="20201109 13:08:45.125"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:08:45.135" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:08:45.135" starttime="20201109 13:08:45.134"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:08:45.135" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:08:45.135" starttime="20201109 13:08:45.135"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:45.136" starttime="20201109 13:08:45.134"></status>
</kw>
<msg timestamp="20201109 13:08:45.136" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:08:45.136" starttime="20201109 13:08:45.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:08:45.137" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201109 13:08:45.137" starttime="20201109 13:08:45.137"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:08:45.138" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201109 13:08:45.138" starttime="20201109 13:08:45.137"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:45.138" starttime="20201109 13:08:45.136"></status>
</kw>
<msg timestamp="20201109 13:08:45.138" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201109 13:08:45.138" starttime="20201109 13:08:45.136"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:45.138" starttime="20201109 13:08:45.133"></status>
</kw>
<msg timestamp="20201109 13:08:45.138" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201109 13:08:45.138" starttime="20201109 13:08:45.132"></status>
</kw>
<msg timestamp="20201109 13:08:45.139" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201109 13:08:45.139" starttime="20201109 13:08:45.132"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:08:45.142" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:08:45.142" starttime="20201109 13:08:45.142"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:08:45.142" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:08:45.143" starttime="20201109 13:08:45.142"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:45.143" starttime="20201109 13:08:45.141"></status>
</kw>
<msg timestamp="20201109 13:08:45.143" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:08:45.143" starttime="20201109 13:08:45.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:08:45.144" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201109 13:08:45.144" starttime="20201109 13:08:45.144"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:08:45.145" level="INFO">${result} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20201109 13:08:45.145" starttime="20201109 13:08:45.144"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:45.145" starttime="20201109 13:08:45.143"></status>
</kw>
<msg timestamp="20201109 13:08:45.145" level="INFO">${path_with_leading} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20201109 13:08:45.145" starttime="20201109 13:08:45.143"></status>
</kw>
<status status="PASS" endtime="20201109 13:08:45.145" starttime="20201109 13:08:45.140"></status>
</kw>
<msg timestamp="20201109 13:08:45.146" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201109 13:08:45.146" starttime="20201109 13:08:45.140"></status>
</kw>
<msg timestamp="20201109 13:08:45.146" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201109 13:08:45.146" starttime="20201109 13:08:45.139"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:08:45.151" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-98.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:09:21.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:09:21.112" level="INFO">${output} = 2020-11-09 13:08:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:09:21.112" starttime="20201109 13:08:45.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:09:21.113" level="INFO">2020-11-09 13:08:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-09 13:08:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-09 13:08:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:47 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-09 13:08:47 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:08:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:08:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:08:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:08:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-03DCA5C82EE2-&gt;0d8f6376-211b-4182-9283-9c308736aee9
2020-11-09 13:08:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-09 13:08:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-09 13:08:48 INFO  JobSubmitter:202 - number of splits:3
2020-11-09 13:08:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604927129921_0004
2020-11-09 13:08:48 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-09 13:08:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:49 INFO  Configuration:2752 - resource-types.xml not found
2020-11-09 13:08:49 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-09 13:08:49 INFO  YarnClientImpl:324 - Submitted application application_1604927129921_0004
2020-11-09 13:08:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604927129921_0004/
2020-11-09 13:08:49 INFO  Job:1619 - Running job: job_1604927129921_0004
2020-11-09 13:08:57 INFO  Job:1640 - Job job_1604927129921_0004 running in uber mode : false
2020-11-09 13:08:57 INFO  Job:1647 -  map 0% reduce 0%
2020-11-09 13:09:04 INFO  Job:1647 -  map 33% reduce 0%
2020-11-09 13:09:10 INFO  Job:1647 -  map 67% reduce 0%
2020-11-09 13:09:15 INFO  Job:1647 -  map 100% reduce 0%
2020-11-09 13:09:19 INFO  Job:1647 -  map 100% reduce 100%
2020-11-09 13:09:20 INFO  Job:1658 - Job job_1604927129921_0004 completed successfully
2020-11-09 13:09:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:09:20 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083691
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41520
		Total time spent by all reduces in occupied slots (ms)=14052
		Total time spent by all map tasks (ms)=10380
		Total time spent by all reduce tasks (ms)=3513
		Total vcore-milliseconds taken by all map tasks=10380
		Total vcore-milliseconds taken by all reduce tasks=3513
		Total megabyte-milliseconds taken by all map tasks=42516480
		Total megabyte-milliseconds taken by all reduce tasks=14389248
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=852
		CPU time spent (ms)=7720
		Physical memory (bytes) snapshot=1428529152
		Virtual memory (bytes) snapshot=15793967104
		Total committed heap usage (bytes)=1274019840
		Peak Map Physical memory (bytes)=520146944
		Peak Map Virtual memory (bytes)=3948011520
		Peak Reduce Physical memory (bytes)=293986304
		Peak Reduce Virtual memory (bytes)=3962368000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-09 13:09:20 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201109 13:09:21.113" starttime="20201109 13:09:21.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:09:21.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:09:21.114" starttime="20201109 13:09:21.113"></status>
</kw>
<status status="PASS" endtime="20201109 13:09:21.114" starttime="20201109 13:08:45.147"></status>
</kw>
<msg timestamp="20201109 13:09:21.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:09:21.115" starttime="20201109 13:08:45.147"></status>
</kw>
<msg timestamp="20201109 13:09:21.115" level="INFO">${output} = 2020-11-09 13:08:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:08:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:09:21.115" starttime="20201109 13:08:45.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201109 13:09:21.116" starttime="20201109 13:09:21.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:09:21.116" starttime="20201109 13:09:21.116"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:09:21.116" critical="yes" starttime="20201109 13:08:45.108"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201109 13:09:21.117" starttime="20201109 13:08:08.594"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:06:36.558" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:06:36.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:06:36.563" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:06:36.563" starttime="20201109 13:06:36.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:06:36.564" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:06:36.564" starttime="20201109 13:06:36.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:06:36.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:06:36.565" starttime="20201109 13:06:36.564"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:36.565" starttime="20201109 13:06:36.552"></status>
</kw>
<msg timestamp="20201109 13:06:36.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:06:36.565" starttime="20201109 13:06:36.552"></status>
</kw>
<msg timestamp="20201109 13:06:36.565" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:06:36.565" starttime="20201109 13:06:36.552"></status>
</kw>
<msg timestamp="20201109 13:06:36.565" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:06:36.565" starttime="20201109 13:06:36.551"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:06:36.570" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:06:36.570" starttime="20201109 13:06:36.569"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:06:36.570" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:06:36.570" starttime="20201109 13:06:36.570"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:36.571" starttime="20201109 13:06:36.568"></status>
</kw>
<msg timestamp="20201109 13:06:36.571" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:06:36.571" starttime="20201109 13:06:36.568"></status>
</kw>
<status status="PASS" endtime="20201109 13:06:36.571" starttime="20201109 13:06:36.567"></status>
</kw>
<msg timestamp="20201109 13:06:36.571" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:06:36.571" starttime="20201109 13:06:36.566"></status>
</kw>
<msg timestamp="20201109 13:06:36.571" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:06:36.571" starttime="20201109 13:06:36.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:06:36.575" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:07:17.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:07:17.708" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:06:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06...</msg>
<status status="PASS" endtime="20201109 13:07:17.708" starttime="20201109 13:06:36.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:07:17.710" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:06:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:38 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-09 13:06:38 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:06:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:06:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:06:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:06:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DB78858C1107-&gt;0d8f6376-211b-4182-9283-9c308736aee9
2020-11-09 13:06:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-09 13:06:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-09 13:06:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-09 13:06:40 INFO  JobSubmitter:202 - number of splits:3
2020-11-09 13:06:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604927129921_0001
2020-11-09 13:06:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-09 13:06:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:41 INFO  Configuration:2752 - resource-types.xml not found
2020-11-09 13:06:41 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-09 13:06:41 INFO  YarnClientImpl:324 - Submitted application application_1604927129921_0001
2020-11-09 13:06:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604927129921_0001/
2020-11-09 13:06:41 INFO  Job:1619 - Running job: job_1604927129921_0001
2020-11-09 13:06:51 INFO  Job:1640 - Job job_1604927129921_0001 running in uber mode : false
2020-11-09 13:06:51 INFO  Job:1647 -  map 0% reduce 0%
2020-11-09 13:06:58 INFO  Job:1647 -  map 33% reduce 0%
2020-11-09 13:07:03 INFO  Job:1647 -  map 67% reduce 0%
2020-11-09 13:07:08 INFO  Job:1647 -  map 100% reduce 0%
2020-11-09 13:07:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-09 13:07:17 INFO  Job:1658 - Job job_1604927129921_0001 completed successfully
2020-11-09 13:07:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38976
		Total time spent by all reduces in occupied slots (ms)=24780
		Total time spent by all map tasks (ms)=9744
		Total time spent by all reduce tasks (ms)=6195
		Total vcore-milliseconds taken by all map tasks=9744
		Total vcore-milliseconds taken by all reduce tasks=6195
		Total megabyte-milliseconds taken by all map tasks=39911424
		Total megabyte-milliseconds taken by all reduce tasks=25374720
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=589
		CPU time spent (ms)=6760
		Physical memory (bytes) snapshot=1233088512
		Virtual memory (bytes) snapshot=15798444032
		Total committed heap usage (bytes)=1013972992
		Peak Map Physical memory (bytes)=316076032
		Peak Map Virtual memory (bytes)=3944644608
		Peak Reduce Physical memory (bytes)=299032576
		Peak Reduce Virtual memory (bytes)=3971555328
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.419 seconds
2020-11-09 13:07:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:17 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-09 13:07:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201109 13:07:17.710" starttime="20201109 13:07:17.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:07:17.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:07:17.711" starttime="20201109 13:07:17.710"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:17.711" starttime="20201109 13:06:36.572"></status>
</kw>
<msg timestamp="20201109 13:07:17.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:07:17.711" starttime="20201109 13:06:36.572"></status>
</kw>
<msg timestamp="20201109 13:07:17.712" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:06:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:06...</msg>
<status status="PASS" endtime="20201109 13:07:17.712" starttime="20201109 13:06:36.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:07:17.712" starttime="20201109 13:07:17.712"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:07:17.712" critical="yes" starttime="20201109 13:06:36.551"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:07:17.718" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:07:17.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:07:17.724" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:07:17.724" starttime="20201109 13:07:17.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:07:17.725" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:07:17.725" starttime="20201109 13:07:17.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:07:17.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:07:17.726" starttime="20201109 13:07:17.725"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:17.726" starttime="20201109 13:07:17.715"></status>
</kw>
<msg timestamp="20201109 13:07:17.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:07:17.726" starttime="20201109 13:07:17.715"></status>
</kw>
<msg timestamp="20201109 13:07:17.726" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:07:17.726" starttime="20201109 13:07:17.714"></status>
</kw>
<msg timestamp="20201109 13:07:17.726" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201109 13:07:17.726" starttime="20201109 13:07:17.714"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:07:17.727" level="INFO">${random} = 42</msg>
<status status="PASS" endtime="20201109 13:07:17.727" starttime="20201109 13:07:17.727"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:07:17.731" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:07:17.731" starttime="20201109 13:07:17.731"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:07:17.732" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:07:17.732" starttime="20201109 13:07:17.731"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:17.732" starttime="20201109 13:07:17.730"></status>
</kw>
<msg timestamp="20201109 13:07:17.732" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:07:17.732" starttime="20201109 13:07:17.730"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:17.732" starttime="20201109 13:07:17.729"></status>
</kw>
<msg timestamp="20201109 13:07:17.733" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:07:17.733" starttime="20201109 13:07:17.728"></status>
</kw>
<msg timestamp="20201109 13:07:17.733" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:07:17.733" starttime="20201109 13:07:17.727"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:07:17.737" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:07:17.737" starttime="20201109 13:07:17.736"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:07:17.737" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:07:17.737" starttime="20201109 13:07:17.737"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:17.737" starttime="20201109 13:07:17.736"></status>
</kw>
<msg timestamp="20201109 13:07:17.737" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:07:17.737" starttime="20201109 13:07:17.735"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:17.738" starttime="20201109 13:07:17.734"></status>
</kw>
<msg timestamp="20201109 13:07:17.738" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201109 13:07:17.738" starttime="20201109 13:07:17.734"></status>
</kw>
<msg timestamp="20201109 13:07:17.738" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201109 13:07:17.738" starttime="20201109 13:07:17.733"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:07:17.741" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:07:17.741" starttime="20201109 13:07:17.741"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:07:17.742" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:07:17.742" starttime="20201109 13:07:17.741"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:17.742" starttime="20201109 13:07:17.740"></status>
</kw>
<msg timestamp="20201109 13:07:17.742" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:07:17.742" starttime="20201109 13:07:17.740"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:17.742" starttime="20201109 13:07:17.739"></status>
</kw>
<msg timestamp="20201109 13:07:17.743" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-42.txt</msg>
<status status="PASS" endtime="20201109 13:07:17.743" starttime="20201109 13:07:17.739"></status>
</kw>
<msg timestamp="20201109 13:07:17.743" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-42.txt</msg>
<status status="PASS" endtime="20201109 13:07:17.743" starttime="20201109 13:07:17.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:07:17.746" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-42.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:07:53.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:07:53.810" level="INFO">${output} = 2020-11-09 13:07:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:07:53.810" starttime="20201109 13:07:17.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:07:53.811" level="INFO">2020-11-09 13:07:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-09 13:07:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-09 13:07:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-09 13:07:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-09 13:07:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:07:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:07:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:07:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B5E0F672F985-&gt;0d8f6376-211b-4182-9283-9c308736aee9
2020-11-09 13:07:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-09 13:07:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-09 13:07:21 INFO  JobSubmitter:202 - number of splits:3
2020-11-09 13:07:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604927129921_0002
2020-11-09 13:07:21 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-09 13:07:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:21 INFO  Configuration:2752 - resource-types.xml not found
2020-11-09 13:07:21 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-09 13:07:21 INFO  YarnClientImpl:324 - Submitted application application_1604927129921_0002
2020-11-09 13:07:22 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604927129921_0002/
2020-11-09 13:07:22 INFO  Job:1619 - Running job: job_1604927129921_0002
2020-11-09 13:07:30 INFO  Job:1640 - Job job_1604927129921_0002 running in uber mode : false
2020-11-09 13:07:30 INFO  Job:1647 -  map 0% reduce 0%
2020-11-09 13:07:37 INFO  Job:1647 -  map 33% reduce 0%
2020-11-09 13:07:43 INFO  Job:1647 -  map 67% reduce 0%
2020-11-09 13:07:47 INFO  Job:1647 -  map 100% reduce 0%
2020-11-09 13:07:52 INFO  Job:1647 -  map 100% reduce 100%
2020-11-09 13:07:53 INFO  Job:1658 - Job job_1604927129921_0002 completed successfully
2020-11-09 13:07:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083775
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39700
		Total time spent by all reduces in occupied slots (ms)=14472
		Total time spent by all map tasks (ms)=9925
		Total time spent by all reduce tasks (ms)=3618
		Total vcore-milliseconds taken by all map tasks=9925
		Total vcore-milliseconds taken by all reduce tasks=3618
		Total megabyte-milliseconds taken by all map tasks=40652800
		Total megabyte-milliseconds taken by all reduce tasks=14819328
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=595
		CPU time spent (ms)=6890
		Physical memory (bytes) snapshot=1201795072
		Virtual memory (bytes) snapshot=15782068224
		Total committed heap usage (bytes)=1021837312
		Peak Map Physical memory (bytes)=311754752
		Peak Map Virtual memory (bytes)=3943653376
		Peak Reduce Physical memory (bytes)=291332096
		Peak Reduce Virtual memory (bytes)=3969531904
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-09 13:07:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201109 13:07:53.811" starttime="20201109 13:07:53.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:07:53.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:07:53.812" starttime="20201109 13:07:53.812"></status>
</kw>
<status status="PASS" endtime="20201109 13:07:53.812" starttime="20201109 13:07:17.744"></status>
</kw>
<msg timestamp="20201109 13:07:53.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:07:53.813" starttime="20201109 13:07:17.744"></status>
</kw>
<msg timestamp="20201109 13:07:53.813" level="INFO">${output} = 2020-11-09 13:07:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-09 13:07:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201109 13:07:53.813" starttime="20201109 13:07:17.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201109 13:07:53.814" starttime="20201109 13:07:53.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:07:53.814" starttime="20201109 13:07:53.814"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:07:53.815" critical="yes" starttime="20201109 13:07:17.713"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201109 13:07:53.816" starttime="20201109 13:06:36.500"></status>
</suite>
<status status="PASS" elapsedtime="189356" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:10:25.443" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:10:29.044" level="INFO">${rc} = 255</msg>
<msg timestamp="20201109 13:10:29.044" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201109 13:10:29.044" starttime="20201109 13:10:25.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:10:29.045" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201109 13:10:29.045" starttime="20201109 13:10:29.044"></status>
</kw>
<msg timestamp="20201109 13:10:29.045" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201109 13:10:29.045" starttime="20201109 13:10:25.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:10:29.051" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:10:32.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:10:32.113" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:10:32.113" starttime="20201109 13:10:29.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:10:32.118" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:10:32.118" starttime="20201109 13:10:32.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:10:32.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:10:32.118" starttime="20201109 13:10:32.118"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:32.119" starttime="20201109 13:10:29.047"></status>
</kw>
<msg timestamp="20201109 13:10:32.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:10:32.119" starttime="20201109 13:10:29.047"></status>
</kw>
<msg timestamp="20201109 13:10:32.119" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201109 13:10:32.119" starttime="20201109 13:10:29.046"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201109 13:10:32.120" starttime="20201109 13:10:32.119"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:32.120" starttime="20201109 13:10:29.046"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:32.120" starttime="20201109 13:10:29.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:10:32.124" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:10:35.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:10:35.320" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:10:35.320" starttime="20201109 13:10:32.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:10:35.322" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:10:35.322" starttime="20201109 13:10:35.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:10:35.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:10:35.322" starttime="20201109 13:10:35.322"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:35.323" starttime="20201109 13:10:32.122"></status>
</kw>
<msg timestamp="20201109 13:10:35.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:10:35.323" starttime="20201109 13:10:32.121"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:35.323" starttime="20201109 13:10:32.121"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:35.323" starttime="20201109 13:10:32.121"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:35.324" starttime="20201109 13:10:32.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201109 13:10:35.324" starttime="20201109 13:10:35.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:10:35.329" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:10:38.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:10:38.455" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:10:35.030Z",
  "modificat...</msg>
<status status="PASS" endtime="20201109 13:10:38.455" starttime="20201109 13:10:35.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:10:38.456" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:10:35.030Z",
  "modificationTime" : "2020-11-09T13:10:35.030Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201109 13:10:38.456" starttime="20201109 13:10:38.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:10:38.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:10:38.457" starttime="20201109 13:10:38.456"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:38.457" starttime="20201109 13:10:35.326"></status>
</kw>
<msg timestamp="20201109 13:10:38.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:10:38.457" starttime="20201109 13:10:35.325"></status>
</kw>
<msg timestamp="20201109 13:10:38.457" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-09T13:10:35.030Z",
  "modificat...</msg>
<status status="PASS" endtime="20201109 13:10:38.457" starttime="20201109 13:10:35.324"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201109 13:10:38.458" starttime="20201109 13:10:38.458"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:10:38.462" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:10:38.462" starttime="20201109 13:10:38.461"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:10:38.462" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:10:38.462" starttime="20201109 13:10:38.462"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:38.462" starttime="20201109 13:10:38.461"></status>
</kw>
<msg timestamp="20201109 13:10:38.463" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:10:38.463" starttime="20201109 13:10:38.460"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:38.463" starttime="20201109 13:10:38.460"></status>
</kw>
<msg timestamp="20201109 13:10:38.463" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201109 13:10:38.463" starttime="20201109 13:10:38.459"></status>
</kw>
<msg timestamp="20201109 13:10:38.463" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201109 13:10:38.463" starttime="20201109 13:10:38.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:10:38.468" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:10:41.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:10:41.693" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:10:41.693" starttime="20201109 13:10:38.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:10:41.694" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:10:41.694" starttime="20201109 13:10:41.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:10:41.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:10:41.695" starttime="20201109 13:10:41.695"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:41.695" starttime="20201109 13:10:38.464"></status>
</kw>
<msg timestamp="20201109 13:10:41.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:10:41.696" starttime="20201109 13:10:38.464"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:41.696" starttime="20201109 13:10:38.463"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:10:41.701" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:10:48.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:10:48.601" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:10:48.601" starttime="20201109 13:10:41.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:10:48.602" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:10:48.602" starttime="20201109 13:10:48.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:10:48.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:10:48.602" starttime="20201109 13:10:48.602"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:48.603" starttime="20201109 13:10:41.697"></status>
</kw>
<msg timestamp="20201109 13:10:48.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:10:48.603" starttime="20201109 13:10:41.697"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:48.604" starttime="20201109 13:10:41.696"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:10:48.608" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:10:54.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:10:54.010" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:10:54.010" starttime="20201109 13:10:48.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:10:54.011" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:10:54.011" starttime="20201109 13:10:54.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:10:54.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:10:54.012" starttime="20201109 13:10:54.011"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:54.012" starttime="20201109 13:10:48.605"></status>
</kw>
<msg timestamp="20201109 13:10:54.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:10:54.012" starttime="20201109 13:10:48.604"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:54.012" starttime="20201109 13:10:48.604"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:10:54.016" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:10:59.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:10:59.443" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:10:59.443" starttime="20201109 13:10:54.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:10:59.444" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:10:59.444" starttime="20201109 13:10:59.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:10:59.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:10:59.445" starttime="20201109 13:10:59.444"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:59.445" starttime="20201109 13:10:54.013"></status>
</kw>
<msg timestamp="20201109 13:10:59.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:10:59.445" starttime="20201109 13:10:54.013"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:59.446" starttime="20201109 13:10:54.013"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:10:59.446" critical="yes" starttime="20201109 13:10:25.437"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:10:59.451" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:10:59.451" starttime="20201109 13:10:59.450"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:10:59.452" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:10:59.452" starttime="20201109 13:10:59.451"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:59.452" starttime="20201109 13:10:59.450"></status>
</kw>
<msg timestamp="20201109 13:10:59.452" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:10:59.452" starttime="20201109 13:10:59.450"></status>
</kw>
<status status="PASS" endtime="20201109 13:10:59.452" starttime="20201109 13:10:59.449"></status>
</kw>
<msg timestamp="20201109 13:10:59.452" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:10:59.452" starttime="20201109 13:10:59.448"></status>
</kw>
<msg timestamp="20201109 13:10:59.453" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:10:59.453" starttime="20201109 13:10:59.448"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:10:59.456" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:11:02.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:11:02.415" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:11:02.415" starttime="20201109 13:10:59.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:11:02.416" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:11:02.416" starttime="20201109 13:11:02.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:11:02.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:11:02.417" starttime="20201109 13:11:02.416"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:02.418" starttime="20201109 13:10:59.453"></status>
</kw>
<msg timestamp="20201109 13:11:02.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:11:02.418" starttime="20201109 13:10:59.453"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:02.418" starttime="20201109 13:10:59.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:11:02.423" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:11:05.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:11:05.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201109 13:11:05.423" starttime="20201109 13:11:02.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:11:05.425" level="INFO"></msg>
<status status="PASS" endtime="20201109 13:11:05.425" starttime="20201109 13:11:05.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:11:05.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:11:05.425" starttime="20201109 13:11:05.425"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:05.426" starttime="20201109 13:11:02.419"></status>
</kw>
<msg timestamp="20201109 13:11:05.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:11:05.426" starttime="20201109 13:11:02.419"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:05.426" starttime="20201109 13:11:02.418"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201109 13:11:05.426" critical="yes" starttime="20201109 13:10:59.447"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201109 13:11:05.427" starttime="20201109 13:10:25.383"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:12:37.902" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:12:37.902" starttime="20201109 13:12:37.901"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:12:37.902" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:12:37.902" starttime="20201109 13:12:37.902"></status>
</kw>
<status status="PASS" endtime="20201109 13:12:37.902" starttime="20201109 13:12:37.901"></status>
</kw>
<msg timestamp="20201109 13:12:37.903" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:12:37.903" starttime="20201109 13:12:37.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:12:37.904" starttime="20201109 13:12:37.903"></status>
</kw>
<msg timestamp="20201109 13:12:37.904" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201109 13:12:37.904" starttime="20201109 13:12:37.903"></status>
</kw>
<status status="PASS" endtime="20201109 13:12:37.904" starttime="20201109 13:12:37.900"></status>
</kw>
<msg timestamp="20201109 13:12:37.904" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:12:37.904" starttime="20201109 13:12:37.899"></status>
</kw>
<msg timestamp="20201109 13:12:37.904" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:12:37.904" starttime="20201109 13:12:37.898"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:12:37.905" level="INFO">${random} = 70603</msg>
<status status="PASS" endtime="20201109 13:12:37.905" starttime="20201109 13:12:37.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:12:37.911" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-70603 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:12:41.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:12:41.438" level="INFO">${output} = 2020-11-09 13:12:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:12:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201109 13:12:41.438" starttime="20201109 13:12:37.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:12:41.439" level="INFO">2020-11-09 13:12:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:12:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:12:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:12:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:12:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F46293BDCAFB-&gt;53e84242-34d2-4cad-bfca-20eae057f92b
2020-11-09 13:12:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201109 13:12:41.439" starttime="20201109 13:12:41.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:12:41.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:12:41.440" starttime="20201109 13:12:41.439"></status>
</kw>
<status status="PASS" endtime="20201109 13:12:41.440" starttime="20201109 13:12:37.906"></status>
</kw>
<msg timestamp="20201109 13:12:41.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:12:41.440" starttime="20201109 13:12:37.905"></status>
</kw>
<msg timestamp="20201109 13:12:41.440" level="INFO">${result} = 2020-11-09 13:12:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:12:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201109 13:12:41.440" starttime="20201109 13:12:37.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:12:41.447" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:12:43.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:12:43.339" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-09 13:12 ofs://om/volume1/bucket1/ozone-70603
-rw-...</msg>
<status status="PASS" endtime="20201109 13:12:43.339" starttime="20201109 13:12:41.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:12:43.340" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-09 13:12 ofs://om/volume1/bucket1/ozone-70603
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-09 13:11 ofs://om/volume1/bucket1/ozone-84646
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:11 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:12 ofs://om/volume1/bucket1/wordcount-68.txt</msg>
<status status="PASS" endtime="20201109 13:12:43.340" starttime="20201109 13:12:43.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:12:43.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:12:43.341" starttime="20201109 13:12:43.340"></status>
</kw>
<status status="PASS" endtime="20201109 13:12:43.341" starttime="20201109 13:12:41.443"></status>
</kw>
<msg timestamp="20201109 13:12:43.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:12:43.341" starttime="20201109 13:12:41.442"></status>
</kw>
<msg timestamp="20201109 13:12:43.341" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-09 13:12 ofs://om/volume1/bucket1/ozone-70603
-rw-...</msg>
<status status="PASS" endtime="20201109 13:12:43.341" starttime="20201109 13:12:41.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:12:43.342" starttime="20201109 13:12:43.342"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:12:43.342" critical="yes" starttime="20201109 13:12:37.897"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201109 13:12:43.343" starttime="20201109 13:12:37.847"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:11:10.230" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:11:10.230" starttime="20201109 13:11:10.229"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:11:10.231" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:11:10.231" starttime="20201109 13:11:10.230"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:10.231" starttime="20201109 13:11:10.229"></status>
</kw>
<msg timestamp="20201109 13:11:10.231" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:11:10.231" starttime="20201109 13:11:10.228"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:10.231" starttime="20201109 13:11:10.228"></status>
</kw>
<msg timestamp="20201109 13:11:10.231" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:11:10.231" starttime="20201109 13:11:10.227"></status>
</kw>
<msg timestamp="20201109 13:11:10.232" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:11:10.232" starttime="20201109 13:11:10.226"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:11:10.232" level="INFO">${random} = 84646</msg>
<status status="PASS" endtime="20201109 13:11:10.232" starttime="20201109 13:11:10.232"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:11:10.238" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-84646 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:11:13.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:11:13.957" level="INFO">${output} = 2020-11-09 13:11:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:11:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201109 13:11:13.957" starttime="20201109 13:11:10.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:11:13.958" level="INFO">2020-11-09 13:11:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:11:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:11:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:11:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:11:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B8E9914AC0FB-&gt;53e84242-34d2-4cad-bfca-20eae057f92b
2020-11-09 13:11:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201109 13:11:13.958" starttime="20201109 13:11:13.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:11:13.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:11:13.959" starttime="20201109 13:11:13.958"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:13.959" starttime="20201109 13:11:10.233"></status>
</kw>
<msg timestamp="20201109 13:11:13.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:11:13.959" starttime="20201109 13:11:10.233"></status>
</kw>
<msg timestamp="20201109 13:11:13.960" level="INFO">${result} = 2020-11-09 13:11:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:11:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201109 13:11:13.960" starttime="20201109 13:11:10.232"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:11:13.965" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:11:15.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:11:15.860" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-09 13:11 o3fs://bucket1.volume1.om/ozone-84646
dr...</msg>
<status status="PASS" endtime="20201109 13:11:15.860" starttime="20201109 13:11:13.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:11:15.862" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-09 13:11 o3fs://bucket1.volume1.om/ozone-84646
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:11 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201109 13:11:15.862" starttime="20201109 13:11:15.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:11:15.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:11:15.862" starttime="20201109 13:11:15.862"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:15.863" starttime="20201109 13:11:13.962"></status>
</kw>
<msg timestamp="20201109 13:11:15.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:11:15.863" starttime="20201109 13:11:13.960"></status>
</kw>
<msg timestamp="20201109 13:11:15.863" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-09 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-09 13:11 o3fs://bucket1.volume1.om/ozone-84646
dr...</msg>
<status status="PASS" endtime="20201109 13:11:15.863" starttime="20201109 13:11:13.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:11:15.864" starttime="20201109 13:11:15.863"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201109 13:11:15.864" critical="yes" starttime="20201109 13:11:10.225"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201109 13:11:15.865" starttime="20201109 13:11:10.173"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:12:48.135" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:12:48.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:12:48.138" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:12:48.138" starttime="20201109 13:12:48.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:12:48.139" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:12:48.139" starttime="20201109 13:12:48.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:12:48.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:12:48.140" starttime="20201109 13:12:48.140"></status>
</kw>
<status status="PASS" endtime="20201109 13:12:48.140" starttime="20201109 13:12:48.129"></status>
</kw>
<msg timestamp="20201109 13:12:48.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:12:48.140" starttime="20201109 13:12:48.128"></status>
</kw>
<msg timestamp="20201109 13:12:48.141" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:12:48.141" starttime="20201109 13:12:48.128"></status>
</kw>
<msg timestamp="20201109 13:12:48.141" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:12:48.141" starttime="20201109 13:12:48.128"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:12:48.145" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:12:48.145" starttime="20201109 13:12:48.145"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:12:48.146" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:12:48.146" starttime="20201109 13:12:48.145"></status>
</kw>
<status status="PASS" endtime="20201109 13:12:48.146" starttime="20201109 13:12:48.144"></status>
</kw>
<msg timestamp="20201109 13:12:48.146" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:12:48.146" starttime="20201109 13:12:48.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:12:48.147" starttime="20201109 13:12:48.147"></status>
</kw>
<msg timestamp="20201109 13:12:48.147" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201109 13:12:48.147" starttime="20201109 13:12:48.146"></status>
</kw>
<status status="PASS" endtime="20201109 13:12:48.148" starttime="20201109 13:12:48.142"></status>
</kw>
<msg timestamp="20201109 13:12:48.148" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:12:48.148" starttime="20201109 13:12:48.142"></status>
</kw>
<msg timestamp="20201109 13:12:48.148" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:12:48.148" starttime="20201109 13:12:48.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:12:48.151" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:13:28.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:13:28.558" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:12:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:12:50 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201109 13:13:28.558" starttime="20201109 13:12:48.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:13:28.559" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:12:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:12:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:12:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:12:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:12:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6B8EA884B18A-&gt;53e84242-34d2-4cad-bfca-20eae057f92b
2020-11-09 13:12:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-09 13:12:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-09 13:12:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-09 13:12:54 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-09 13:12:57 INFO  JobSubmitter:202 - number of splits:3
2020-11-09 13:12:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604927404653_0003
2020-11-09 13:12:57 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-09 13:12:57 INFO  Configuration:2795 - resource-types.xml not found
2020-11-09 13:12:57 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-09 13:12:57 INFO  YarnClientImpl:329 - Submitted application application_1604927404653_0003
2020-11-09 13:12:57 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604927404653_0003/
2020-11-09 13:12:57 INFO  Job:1619 - Running job: job_1604927404653_0003
2020-11-09 13:13:05 INFO  Job:1640 - Job job_1604927404653_0003 running in uber mode : false
2020-11-09 13:13:05 INFO  Job:1647 -  map 0% reduce 0%
2020-11-09 13:13:11 INFO  Job:1647 -  map 33% reduce 0%
2020-11-09 13:13:17 INFO  Job:1647 -  map 67% reduce 0%
2020-11-09 13:13:22 INFO  Job:1647 -  map 100% reduce 0%
2020-11-09 13:13:26 INFO  Job:1647 -  map 100% reduce 100%
2020-11-09 13:13:27 INFO  Job:1658 - Job job_1604927404653_0003 completed successfully
2020-11-09 13:13:27 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39660
		Total time spent by all reduces in occupied slots (ms)=14668
		Total time spent by all map tasks (ms)=9915
		Total time spent by all reduce tasks (ms)=3667
		Total vcore-milliseconds taken by all map tasks=9915
		Total vcore-milliseconds taken by all reduce tasks=3667
		Total megabyte-milliseconds taken by all map tasks=40611840
		Total megabyte-milliseconds taken by all reduce tasks=15020032
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=610
		CPU time spent (ms)=6490
		Physical memory (bytes) snapshot=1207177216
		Virtual memory (bytes) snapshot=15768051712
		Total committed heap usage (bytes)=1225785344
		Peak Map Physical memory (bytes)=278671360
		Peak Map Virtual memory (bytes)=3937406976
		Peak Reduce Physical memory (bytes)=382263296
		Peak Reduce Virtual memory (bytes)=3967840256
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.175 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201109 13:13:28.559" starttime="20201109 13:13:28.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:13:28.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:13:28.560" starttime="20201109 13:13:28.560"></status>
</kw>
<status status="PASS" endtime="20201109 13:13:28.560" starttime="20201109 13:12:48.149"></status>
</kw>
<msg timestamp="20201109 13:13:28.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:13:28.561" starttime="20201109 13:12:48.149"></status>
</kw>
<msg timestamp="20201109 13:13:28.561" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:12:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:12:50 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201109 13:13:28.561" starttime="20201109 13:12:48.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:13:28.561" starttime="20201109 13:13:28.561"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:13:28.562" critical="yes" starttime="20201109 13:12:48.127"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:13:28.567" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:13:28.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:13:28.572" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:13:28.572" starttime="20201109 13:13:28.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:13:28.573" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:13:28.573" starttime="20201109 13:13:28.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:13:28.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:13:28.574" starttime="20201109 13:13:28.573"></status>
</kw>
<status status="PASS" endtime="20201109 13:13:28.574" starttime="20201109 13:13:28.564"></status>
</kw>
<msg timestamp="20201109 13:13:28.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:13:28.574" starttime="20201109 13:13:28.564"></status>
</kw>
<msg timestamp="20201109 13:13:28.574" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:13:28.574" starttime="20201109 13:13:28.564"></status>
</kw>
<msg timestamp="20201109 13:13:28.575" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:13:28.575" starttime="20201109 13:13:28.563"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:13:28.575" level="INFO">${random} = 69</msg>
<status status="PASS" endtime="20201109 13:13:28.575" starttime="20201109 13:13:28.575"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:13:28.579" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:13:28.579" starttime="20201109 13:13:28.579"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:13:28.580" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:13:28.580" starttime="20201109 13:13:28.579"></status>
</kw>
<status status="PASS" endtime="20201109 13:13:28.580" starttime="20201109 13:13:28.578"></status>
</kw>
<msg timestamp="20201109 13:13:28.580" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:13:28.580" starttime="20201109 13:13:28.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201109 13:13:28.581" starttime="20201109 13:13:28.581"></status>
</kw>
<msg timestamp="20201109 13:13:28.581" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201109 13:13:28.581" starttime="20201109 13:13:28.580"></status>
</kw>
<status status="PASS" endtime="20201109 13:13:28.582" starttime="20201109 13:13:28.577"></status>
</kw>
<msg timestamp="20201109 13:13:28.582" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:13:28.582" starttime="20201109 13:13:28.576"></status>
</kw>
<msg timestamp="20201109 13:13:28.582" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201109 13:13:28.582" starttime="20201109 13:13:28.575"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:13:28.585" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:13:28.585" starttime="20201109 13:13:28.585"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:13:28.586" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:13:28.586" starttime="20201109 13:13:28.585"></status>
</kw>
<status status="PASS" endtime="20201109 13:13:28.586" starttime="20201109 13:13:28.584"></status>
</kw>
<msg timestamp="20201109 13:13:28.586" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:13:28.586" starttime="20201109 13:13:28.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:13:28.588" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201109 13:13:28.588" starttime="20201109 13:13:28.587"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:13:28.588" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201109 13:13:28.588" starttime="20201109 13:13:28.588"></status>
</kw>
<status status="PASS" endtime="20201109 13:13:28.588" starttime="20201109 13:13:28.587"></status>
</kw>
<msg timestamp="20201109 13:13:28.589" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201109 13:13:28.589" starttime="20201109 13:13:28.586"></status>
</kw>
<status status="PASS" endtime="20201109 13:13:28.589" starttime="20201109 13:13:28.583"></status>
</kw>
<msg timestamp="20201109 13:13:28.589" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201109 13:13:28.589" starttime="20201109 13:13:28.583"></status>
</kw>
<msg timestamp="20201109 13:13:28.589" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201109 13:13:28.589" starttime="20201109 13:13:28.582"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201109 13:13:28.592" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201109 13:13:28.592" starttime="20201109 13:13:28.592"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:13:28.593" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201109 13:13:28.593" starttime="20201109 13:13:28.592"></status>
</kw>
<status status="PASS" endtime="20201109 13:13:28.593" starttime="20201109 13:13:28.591"></status>
</kw>
<msg timestamp="20201109 13:13:28.593" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201109 13:13:28.593" starttime="20201109 13:13:28.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:13:28.595" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201109 13:13:28.595" starttime="20201109 13:13:28.594"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:13:28.595" level="INFO">${result} = /wordcount-69.txt</msg>
<status status="PASS" endtime="20201109 13:13:28.595" starttime="20201109 13:13:28.595"></status>
</kw>
<status status="PASS" endtime="20201109 13:13:28.595" starttime="20201109 13:13:28.594"></status>
</kw>
<msg timestamp="20201109 13:13:28.596" level="INFO">${path_with_leading} = /wordcount-69.txt</msg>
<status status="PASS" endtime="20201109 13:13:28.596" starttime="20201109 13:13:28.593"></status>
</kw>
<status status="PASS" endtime="20201109 13:13:28.596" starttime="20201109 13:13:28.590"></status>
</kw>
<msg timestamp="20201109 13:13:28.596" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-69.txt</msg>
<status status="PASS" endtime="20201109 13:13:28.596" starttime="20201109 13:13:28.590"></status>
</kw>
<msg timestamp="20201109 13:13:28.596" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-69.txt</msg>
<status status="PASS" endtime="20201109 13:13:28.596" starttime="20201109 13:13:28.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:13:28.600" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-69.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:14:02.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:14:02.777" level="INFO">${output} = 2020-11-09 13:13:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-09 13:13:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201109 13:14:02.777" starttime="20201109 13:13:28.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:14:02.779" level="INFO">2020-11-09 13:13:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-09 13:13:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-09 13:13:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:13:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:13:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:13:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:13:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-47B31EA26793-&gt;53e84242-34d2-4cad-bfca-20eae057f92b
2020-11-09 13:13:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-09 13:13:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-09 13:13:32 INFO  JobSubmitter:202 - number of splits:3
2020-11-09 13:13:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604927404653_0004
2020-11-09 13:13:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-09 13:13:32 INFO  Configuration:2795 - resource-types.xml not found
2020-11-09 13:13:32 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-09 13:13:32 INFO  YarnClientImpl:329 - Submitted application application_1604927404653_0004
2020-11-09 13:13:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604927404653_0004/
2020-11-09 13:13:32 INFO  Job:1619 - Running job: job_1604927404653_0004
2020-11-09 13:13:41 INFO  Job:1640 - Job job_1604927404653_0004 running in uber mode : false
2020-11-09 13:13:41 INFO  Job:1647 -  map 0% reduce 0%
2020-11-09 13:13:47 INFO  Job:1647 -  map 33% reduce 0%
2020-11-09 13:13:52 INFO  Job:1647 -  map 67% reduce 0%
2020-11-09 13:13:57 INFO  Job:1647 -  map 100% reduce 0%
2020-11-09 13:14:01 INFO  Job:1647 -  map 100% reduce 100%
2020-11-09 13:14:02 INFO  Job:1658 - Job job_1604927404653_0004 completed successfully
2020-11-09 13:14:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123795
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39056
		Total time spent by all reduces in occupied slots (ms)=15168
		Total time spent by all map tasks (ms)=9764
		Total time spent by all reduce tasks (ms)=3792
		Total vcore-milliseconds taken by all map tasks=9764
		Total vcore-milliseconds taken by all reduce tasks=3792
		Total megabyte-milliseconds taken by all map tasks=39993344
		Total megabyte-milliseconds taken by all reduce tasks=15532032
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=674
		CPU time spent (ms)=7040
		Physical memory (bytes) snapshot=1272438784
		Virtual memory (bytes) snapshot=15815131136
		Total committed heap usage (bytes)=1091567616
		Peak Map Physical memory (bytes)=298012672
		Peak Map Virtual memory (bytes)=3954098176
		Peak Reduce Physical memory (bytes)=387870720
		Peak Reduce Virtual memory (bytes)=3968098304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201109 13:14:02.779" starttime="20201109 13:14:02.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:14:02.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:14:02.780" starttime="20201109 13:14:02.779"></status>
</kw>
<status status="PASS" endtime="20201109 13:14:02.780" starttime="20201109 13:13:28.597"></status>
</kw>
<msg timestamp="20201109 13:14:02.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:14:02.780" starttime="20201109 13:13:28.597"></status>
</kw>
<msg timestamp="20201109 13:14:02.781" level="INFO">${output} = 2020-11-09 13:13:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-09 13:13:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201109 13:14:02.781" starttime="20201109 13:13:28.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201109 13:14:02.782" starttime="20201109 13:14:02.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:14:02.782" starttime="20201109 13:14:02.782"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:14:02.782" critical="yes" starttime="20201109 13:13:28.562"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201109 13:14:02.784" starttime="20201109 13:12:48.075"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:11:20.659" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:11:20.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:11:20.663" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:11:20.663" starttime="20201109 13:11:20.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:11:20.664" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:11:20.664" starttime="20201109 13:11:20.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:11:20.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:11:20.665" starttime="20201109 13:11:20.664"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:20.665" starttime="20201109 13:11:20.652"></status>
</kw>
<msg timestamp="20201109 13:11:20.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:11:20.665" starttime="20201109 13:11:20.652"></status>
</kw>
<msg timestamp="20201109 13:11:20.666" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:11:20.666" starttime="20201109 13:11:20.652"></status>
</kw>
<msg timestamp="20201109 13:11:20.666" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:11:20.666" starttime="20201109 13:11:20.651"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:11:20.671" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:11:20.671" starttime="20201109 13:11:20.670"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:11:20.671" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:11:20.671" starttime="20201109 13:11:20.671"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:20.672" starttime="20201109 13:11:20.669"></status>
</kw>
<msg timestamp="20201109 13:11:20.672" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:11:20.672" starttime="20201109 13:11:20.668"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:20.672" starttime="20201109 13:11:20.667"></status>
</kw>
<msg timestamp="20201109 13:11:20.672" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:11:20.672" starttime="20201109 13:11:20.667"></status>
</kw>
<msg timestamp="20201109 13:11:20.673" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:11:20.673" starttime="20201109 13:11:20.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:11:20.676" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:11:58.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:11:58.774" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:11:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:11:22 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201109 13:11:58.774" starttime="20201109 13:11:20.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:11:58.775" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:11:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:11:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:11:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:11:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:11:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1F491DA5BA33-&gt;53e84242-34d2-4cad-bfca-20eae057f92b
2020-11-09 13:11:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-09 13:11:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-09 13:11:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-09 13:11:24 INFO  JobSubmitter:202 - number of splits:3
2020-11-09 13:11:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604927404653_0001
2020-11-09 13:11:24 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-09 13:11:25 INFO  Configuration:2795 - resource-types.xml not found
2020-11-09 13:11:25 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-09 13:11:25 INFO  YarnClientImpl:329 - Submitted application application_1604927404653_0001
2020-11-09 13:11:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604927404653_0001/
2020-11-09 13:11:25 INFO  Job:1619 - Running job: job_1604927404653_0001
2020-11-09 13:11:35 INFO  Job:1640 - Job job_1604927404653_0001 running in uber mode : false
2020-11-09 13:11:35 INFO  Job:1647 -  map 0% reduce 0%
2020-11-09 13:11:42 INFO  Job:1647 -  map 33% reduce 0%
2020-11-09 13:11:46 INFO  Job:1647 -  map 67% reduce 0%
2020-11-09 13:11:52 INFO  Job:1647 -  map 100% reduce 0%
2020-11-09 13:11:57 INFO  Job:1647 -  map 100% reduce 100%
2020-11-09 13:11:58 INFO  Job:1658 - Job job_1604927404653_0001 completed successfully
2020-11-09 13:11:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38972
		Total time spent by all reduces in occupied slots (ms)=15088
		Total time spent by all map tasks (ms)=9743
		Total time spent by all reduce tasks (ms)=3772
		Total vcore-milliseconds taken by all map tasks=9743
		Total vcore-milliseconds taken by all reduce tasks=3772
		Total megabyte-milliseconds taken by all map tasks=39907328
		Total megabyte-milliseconds taken by all reduce tasks=15450112
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=607
		CPU time spent (ms)=7020
		Physical memory (bytes) snapshot=1285570560
		Virtual memory (bytes) snapshot=15815733248
		Total committed heap usage (bytes)=1244659712
		Peak Map Physical memory (bytes)=309514240
		Peak Map Virtual memory (bytes)=3949068288
		Peak Reduce Physical memory (bytes)=385781760
		Peak Reduce Virtual memory (bytes)=3971432448
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.262 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201109 13:11:58.775" starttime="20201109 13:11:58.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:11:58.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:11:58.776" starttime="20201109 13:11:58.775"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:58.776" starttime="20201109 13:11:20.674"></status>
</kw>
<msg timestamp="20201109 13:11:58.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:11:58.777" starttime="20201109 13:11:20.673"></status>
</kw>
<msg timestamp="20201109 13:11:58.777" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-09 13:11:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:11:22 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201109 13:11:58.777" starttime="20201109 13:11:20.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:11:58.778" starttime="20201109 13:11:58.777"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:11:58.778" critical="yes" starttime="20201109 13:11:20.651"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:11:58.785" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:11:58.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:11:58.788" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:11:58.788" starttime="20201109 13:11:58.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:11:58.789" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:11:58.789" starttime="20201109 13:11:58.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:11:58.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:11:58.790" starttime="20201109 13:11:58.789"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:58.790" starttime="20201109 13:11:58.780"></status>
</kw>
<msg timestamp="20201109 13:11:58.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:11:58.790" starttime="20201109 13:11:58.780"></status>
</kw>
<msg timestamp="20201109 13:11:58.790" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:11:58.790" starttime="20201109 13:11:58.780"></status>
</kw>
<msg timestamp="20201109 13:11:58.791" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201109 13:11:58.791" starttime="20201109 13:11:58.779"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201109 13:11:58.791" level="INFO">${random} = 68</msg>
<status status="PASS" endtime="20201109 13:11:58.791" starttime="20201109 13:11:58.791"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:11:58.795" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:11:58.795" starttime="20201109 13:11:58.795"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:11:58.796" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:11:58.796" starttime="20201109 13:11:58.795"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:58.796" starttime="20201109 13:11:58.794"></status>
</kw>
<msg timestamp="20201109 13:11:58.796" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:11:58.796" starttime="20201109 13:11:58.794"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:58.796" starttime="20201109 13:11:58.793"></status>
</kw>
<msg timestamp="20201109 13:11:58.797" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:11:58.797" starttime="20201109 13:11:58.792"></status>
</kw>
<msg timestamp="20201109 13:11:58.797" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201109 13:11:58.797" starttime="20201109 13:11:58.792"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:11:58.800" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:11:58.800" starttime="20201109 13:11:58.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:11:58.801" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:11:58.801" starttime="20201109 13:11:58.801"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:58.801" starttime="20201109 13:11:58.799"></status>
</kw>
<msg timestamp="20201109 13:11:58.801" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:11:58.801" starttime="20201109 13:11:58.799"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:58.802" starttime="20201109 13:11:58.798"></status>
</kw>
<msg timestamp="20201109 13:11:58.802" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201109 13:11:58.802" starttime="20201109 13:11:58.798"></status>
</kw>
<msg timestamp="20201109 13:11:58.802" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201109 13:11:58.802" starttime="20201109 13:11:58.797"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201109 13:11:58.805" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201109 13:11:58.805" starttime="20201109 13:11:58.805"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201109 13:11:58.806" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201109 13:11:58.806" starttime="20201109 13:11:58.805"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:58.806" starttime="20201109 13:11:58.804"></status>
</kw>
<msg timestamp="20201109 13:11:58.806" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201109 13:11:58.806" starttime="20201109 13:11:58.804"></status>
</kw>
<status status="PASS" endtime="20201109 13:11:58.806" starttime="20201109 13:11:58.803"></status>
</kw>
<msg timestamp="20201109 13:11:58.807" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-68.txt</msg>
<status status="PASS" endtime="20201109 13:11:58.807" starttime="20201109 13:11:58.803"></status>
</kw>
<msg timestamp="20201109 13:11:58.807" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-68.txt</msg>
<status status="PASS" endtime="20201109 13:11:58.807" starttime="20201109 13:11:58.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201109 13:11:58.811" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-68.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201109 13:12:33.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20201109 13:12:33.017" level="INFO">${output} = 2020-11-09 13:12:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-09 13:12:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201109 13:12:33.017" starttime="20201109 13:11:58.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201109 13:12:33.018" level="INFO">2020-11-09 13:12:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-09 13:12:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-09 13:12:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-09 13:12:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-09 13:12:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-09 13:12:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-09 13:12:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4BCD6A8DFF7B-&gt;53e84242-34d2-4cad-bfca-20eae057f92b
2020-11-09 13:12:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-09 13:12:02 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-09 13:12:02 INFO  JobSubmitter:202 - number of splits:3
2020-11-09 13:12:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604927404653_0002
2020-11-09 13:12:02 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-09 13:12:02 INFO  Configuration:2795 - resource-types.xml not found
2020-11-09 13:12:02 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-09 13:12:03 INFO  YarnClientImpl:329 - Submitted application application_1604927404653_0002
2020-11-09 13:12:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604927404653_0002/
2020-11-09 13:12:03 INFO  Job:1619 - Running job: job_1604927404653_0002
2020-11-09 13:12:11 INFO  Job:1640 - Job job_1604927404653_0002 running in uber mode : false
2020-11-09 13:12:11 INFO  Job:1647 -  map 0% reduce 0%
2020-11-09 13:12:17 INFO  Job:1647 -  map 33% reduce 0%
2020-11-09 13:12:22 INFO  Job:1647 -  map 67% reduce 0%
2020-11-09 13:12:27 INFO  Job:1647 -  map 100% reduce 0%
2020-11-09 13:12:31 INFO  Job:1647 -  map 100% reduce 100%
2020-11-09 13:12:32 INFO  Job:1658 - Job job_1604927404653_0002 completed successfully
2020-11-09 13:12:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123879
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39408
		Total time spent by all reduces in occupied slots (ms)=14240
		Total time spent by all map tasks (ms)=9852
		Total time spent by all reduce tasks (ms)=3560
		Total vcore-milliseconds taken by all map tasks=9852
		Total vcore-milliseconds taken by all reduce tasks=3560
		Total megabyte-milliseconds taken by all map tasks=40353792
		Total megabyte-milliseconds taken by all reduce tasks=14581760
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=6730
		Physical memory (bytes) snapshot=1152675840
		Virtual memory (bytes) snapshot=15779893248
		Total committed heap usage (bytes)=1059586048
		Peak Map Physical memory (bytes)=298278912
		Peak Map Virtual memory (bytes)=3947663360
		Peak Reduce Physical memory (bytes)=292184064
		Peak Reduce Virtual memory (bytes)=3963400192
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201109 13:12:33.018" starttime="20201109 13:12:33.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201109 13:12:33.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201109 13:12:33.019" starttime="20201109 13:12:33.018"></status>
</kw>
<status status="PASS" endtime="20201109 13:12:33.019" starttime="20201109 13:11:58.808"></status>
</kw>
<msg timestamp="20201109 13:12:33.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201109 13:12:33.019" starttime="20201109 13:11:58.808"></status>
</kw>
<msg timestamp="20201109 13:12:33.020" level="INFO">${output} = 2020-11-09 13:12:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-09 13:12:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201109 13:12:33.020" starttime="20201109 13:11:58.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201109 13:12:33.020" starttime="20201109 13:12:33.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201109 13:12:33.021" starttime="20201109 13:12:33.021"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201109 13:12:33.021" critical="yes" starttime="20201109 13:11:58.778"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201109 13:12:33.023" starttime="20201109 13:11:20.598"></status>
</suite>
<status status="PASS" elapsedtime="198366" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="572744" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
