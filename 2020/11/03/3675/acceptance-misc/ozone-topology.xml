<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201103 01:39:12.325" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201103 01:35:37.588" starttime="20201103 01:35:37.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:35:37.595" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:35:37.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:35:37.681" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 03 Nov 2020 01:35:37 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 03 Nov 2020 00:56:00 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201103 01:35:37.681" starttime="20201103 01:35:37.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:35:37.684" level="INFO">HTTP/1.1 200 OK
Date: Tue, 03 Nov 2020 01:35:37 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 03 Nov 2020 00:56:00 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201103 01:35:37.684" starttime="20201103 01:35:37.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:35:37.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:35:37.686" starttime="20201103 01:35:37.685"></status>
</kw>
<status status="PASS" endtime="20201103 01:35:37.686" starttime="20201103 01:35:37.589"></status>
</kw>
<msg timestamp="20201103 01:35:37.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:35:37.688" starttime="20201103 01:35:37.589"></status>
</kw>
<msg timestamp="20201103 01:35:37.688" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 03 Nov 2020 01:35:37 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 03 Nov 2020 00:56:00 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201103 01:35:37.688" starttime="20201103 01:35:37.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201103 01:35:37.692" starttime="20201103 01:35:37.688"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:35:37.692" critical="yes" starttime="20201103 01:35:37.587"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201103 01:35:37.696" starttime="20201103 01:35:37.695"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:35:37.705" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:37:12.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:37:12.103" level="INFO">${output} = 2020-11-03 01:35:39,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:35:40,134 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 01:37:12.103" starttime="20201103 01:35:37.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:37:12.105" level="INFO">2020-11-03 01:35:39,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:35:40,134 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:35:40,134 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 01:35:42,462 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-03 01:35:42,463 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-11-03 01:35:42,463 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-11-03 01:35:42,463 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-11-03 01:35:42,463 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-03 01:35:42,463 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-03 01:35:42,463 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-11-03 01:35:42,468 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-11-03 01:35:42,473 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-03 01:35:42,483 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-03 01:35:42,530 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-61153, with hadoop as owner.
2020-11-03 01:35:42,909 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-11922, with hadoop as owner.
2020-11-03 01:35:42,930 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-74217, with hadoop as owner.
2020-11-03 01:35:42,949 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-39751, with hadoop as owner.
2020-11-03 01:35:42,960 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-87238, with hadoop as owner.
2020-11-03 01:35:43,005 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-61153/bucket-0-05204, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,146 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11922/bucket-0-85663, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,161 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-74217/bucket-0-13442, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,184 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-39751/bucket-0-17402, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,194 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87238/bucket-0-89099, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,204 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-61153/bucket-1-95287, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,215 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11922/bucket-1-04865, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,221 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-74217/bucket-1-78540, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,228 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-39751/bucket-1-66549, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,247 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87238/bucket-1-74461, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,257 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-61153/bucket-2-71055, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,267 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11922/bucket-2-81024, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,280 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-74217/bucket-2-78136, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,294 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-39751/bucket-2-94497, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,319 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87238/bucket-2-41222, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,330 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-61153/bucket-3-93100, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,339 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11922/bucket-3-42615, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,348 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-74217/bucket-3-18431, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,357 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-39751/bucket-3-31940, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,375 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87238/bucket-3-77605, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,382 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-61153/bucket-4-62726, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,391 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11922/bucket-4-55026, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,397 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-74217/bucket-4-25962, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,401 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-39751/bucket-4-10245, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,409 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87238/bucket-4-80440, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:35:43,499 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-03 01:35:44,499 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-03 01:35:44,782 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-03 01:35:45,188 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:35:45,189 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-6003933679D9-&gt;1881afac-7713-4af9-8899-f5a6647d5df3
2020-11-03 01:35:45,190 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:35:45,504 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-03 01:35:46,504 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-03 01:35:47,508 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-03 01:35:48,147 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-EEFD8BD5099D-&gt;3f93fb5c-7434-4c4c-af33-0c5c6a436eb1
2020-11-03 01:35:48,147 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:35:48,509 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-03 01:35:49,509 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-03 01:35:50,510 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-03 01:35:51,511 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-11-03 01:35:52,511 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-11-03 01:35:53,512 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-11-03 01:35:54,512 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-11-03 01:35:55,513 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-11-03 01:35:56,514 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-11-03 01:35:57,515 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-11-03 01:35:58,515 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-11-03 01:35:59,516 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-11-03 01:36:00,516 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-11-03 01:36:01,517 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-03 01:36:02,517 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-03 01:36:03,518 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-11-03 01:36:04,518 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-11-03 01:36:05,519 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-11-03 01:36:06,519 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-11-03 01:36:07,520 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-11-03 01:36:08,520 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-11-03 01:36:09,521 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-11-03 01:36:10,521 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-11-03 01:36:11,522 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-11-03 01:36:12,522 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-11-03 01:36:13,523 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-11-03 01:36:14,523 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-11-03 01:36:15,524 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-11-03 01:36:16,524 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-11-03 01:36:17,525 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-11-03 01:36:18,525 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-11-03 01:36:19,526 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-11-03 01:36:20,526 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-11-03 01:36:21,527 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-11-03 01:36:22,528 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-11-03 01:36:23,528 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-11-03 01:36:24,529 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-11-03 01:36:25,533 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-11-03 01:36:26,533 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-11-03 01:36:27,534 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-11-03 01:36:28,534 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-11-03 01:36:29,535 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-11-03 01:36:30,535 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-11-03 01:36:31,535 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-11-03 01:36:32,536 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-11-03 01:36:33,537 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-11-03 01:36:34,537 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-11-03 01:36:35,537 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-11-03 01:36:36,538 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-11-03 01:36:37,538 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-11-03 01:36:38,539 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-11-03 01:36:39,539 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-11-03 01:36:40,540 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-11-03 01:36:41,540 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-11-03 01:36:42,541 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-11-03 01:36:43,541 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-11-03 01:36:44,542 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-11-03 01:36:45,542 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-11-03 01:36:46,543 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-11-03 01:36:47,543 [Thread-7] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-11-03 01:36:48,543 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-11-03 01:36:49,544 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-11-03 01:36:50,545 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-11-03 01:36:51,545 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-11-03 01:36:52,546 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-11-03 01:36:53,546 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-11-03 01:36:54,547 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-11-03 01:36:55,548 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-11-03 01:36:56,548 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-11-03 01:36:57,549 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-11-03 01:36:58,549 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-11-03 01:36:59,550 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-11-03 01:37:00,550 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-11-03 01:37:01,550 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-11-03 01:37:02,551 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-11-03 01:37:03,551 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-11-03 01:37:04,552 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,443
Average Time spent in bucket creation: 00:00:00,247
Average Time spent in key creation: 00:00:02,415
Average Time spent in key write: 00:00:01,199
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:31,398
***************************************************</msg>
<status status="PASS" endtime="20201103 01:37:12.105" starttime="20201103 01:37:12.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:37:12.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:37:12.106" starttime="20201103 01:37:12.105"></status>
</kw>
<status status="PASS" endtime="20201103 01:37:12.106" starttime="20201103 01:35:37.697"></status>
</kw>
<msg timestamp="20201103 01:37:12.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:37:12.107" starttime="20201103 01:35:37.697"></status>
</kw>
<msg timestamp="20201103 01:37:12.107" level="INFO">${result} = 2020-11-03 01:35:39,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:35:40,134 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 01:37:12.107" starttime="20201103 01:35:37.696"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201103 01:37:12.108" starttime="20201103 01:37:12.108"></status>
</kw>
<status status="PASS" endtime="20201103 01:37:12.108" starttime="20201103 01:37:12.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201103 01:37:12.109" starttime="20201103 01:37:12.109"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:37:12.109" critical="yes" starttime="20201103 01:35:37.694"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 01:37:12.110" starttime="20201103 01:35:37.519"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:37:17.255" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:37:20.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:37:20.238" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201103 01:37:20.239" starttime="20201103 01:37:17.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:37:20.240" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1</msg>
<status status="PASS" endtime="20201103 01:37:20.240" starttime="20201103 01:37:20.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:37:20.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:37:20.241" starttime="20201103 01:37:20.240"></status>
</kw>
<status status="PASS" endtime="20201103 01:37:20.241" starttime="20201103 01:37:17.250"></status>
</kw>
<msg timestamp="20201103 01:37:20.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:37:20.241" starttime="20201103 01:37:17.249"></status>
</kw>
<msg timestamp="20201103 01:37:20.242" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201103 01:37:20.242" starttime="20201103 01:37:17.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201103 01:37:20.242" starttime="20201103 01:37:20.242"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:37:20.243" critical="yes" starttime="20201103 01:37:17.248"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:37:20.249" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:37:23.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:37:23.035" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201103 01:37:23.035" starttime="20201103 01:37:20.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:37:23.036" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201103 01:37:23.036" starttime="20201103 01:37:23.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:37:23.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:37:23.037" starttime="20201103 01:37:23.036"></status>
</kw>
<status status="PASS" endtime="20201103 01:37:23.037" starttime="20201103 01:37:20.246"></status>
</kw>
<msg timestamp="20201103 01:37:23.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:37:23.037" starttime="20201103 01:37:20.246"></status>
</kw>
<msg timestamp="20201103 01:37:23.038" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201103 01:37:23.038" starttime="20201103 01:37:20.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201103 01:37:23.038" starttime="20201103 01:37:23.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201103 01:37:23.039" starttime="20201103 01:37:23.038"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:37:23.039" critical="yes" starttime="20201103 01:37:20.244"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 01:37:23.040" starttime="20201103 01:37:17.174"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:37:28.137" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:37:31.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:37:31.394" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:37:31.394" starttime="20201103 01:37:28.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:37:31.395" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:37:31.395" starttime="20201103 01:37:31.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:37:31.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:37:31.396" starttime="20201103 01:37:31.396"></status>
</kw>
<status status="PASS" endtime="20201103 01:37:31.397" starttime="20201103 01:37:28.131"></status>
</kw>
<msg timestamp="20201103 01:37:31.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:37:31.397" starttime="20201103 01:37:28.130"></status>
</kw>
<msg timestamp="20201103 01:37:31.397" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:37:31.397" starttime="20201103 01:37:28.130"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 01:37:31.398" starttime="20201103 01:37:31.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:37:31.401" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:37:34.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:37:34.783" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:37:34.783" starttime="20201103 01:37:31.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:37:34.784" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:37:34.784" starttime="20201103 01:37:34.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:37:34.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:37:34.785" starttime="20201103 01:37:34.784"></status>
</kw>
<status status="PASS" endtime="20201103 01:37:34.785" starttime="20201103 01:37:31.399"></status>
</kw>
<msg timestamp="20201103 01:37:34.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:37:34.785" starttime="20201103 01:37:31.398"></status>
</kw>
<msg timestamp="20201103 01:37:34.785" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:37:34.786" starttime="20201103 01:37:31.398"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 01:37:34.786" starttime="20201103 01:37:34.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:37:34.790" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:37:40.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:37:40.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:37:40.611" starttime="20201103 01:37:34.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:37:40.613" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:37:40.613" starttime="20201103 01:37:40.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:37:40.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:37:40.614" starttime="20201103 01:37:40.613"></status>
</kw>
<status status="PASS" endtime="20201103 01:37:40.614" starttime="20201103 01:37:34.787"></status>
</kw>
<msg timestamp="20201103 01:37:40.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:37:40.614" starttime="20201103 01:37:34.787"></status>
</kw>
<msg timestamp="20201103 01:37:40.614" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:37:40.614" starttime="20201103 01:37:34.786"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 01:37:40.615" starttime="20201103 01:37:40.615"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:37:40.615" critical="yes" starttime="20201103 01:37:28.129"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 01:37:40.617" starttime="20201103 01:37:28.064"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:38:59.285" level="INFO">${random} = 69073</msg>
<status status="PASS" endtime="20201103 01:38:59.285" starttime="20201103 01:38:59.284"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:38:59.291" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-69073 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:39:04.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:39:04.993" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:39:04.993" starttime="20201103 01:38:59.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:39:04.994" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:39:04.994" starttime="20201103 01:39:04.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:39:04.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:39:04.995" starttime="20201103 01:39:04.994"></status>
</kw>
<status status="PASS" endtime="20201103 01:39:04.995" starttime="20201103 01:38:59.286"></status>
</kw>
<msg timestamp="20201103 01:39:04.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:39:04.995" starttime="20201103 01:38:59.286"></status>
</kw>
<msg timestamp="20201103 01:39:04.996" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:39:04.996" starttime="20201103 01:38:59.285"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 01:39:04.996" starttime="20201103 01:39:04.996"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:39:04.997" critical="yes" starttime="20201103 01:38:59.283"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 01:39:04.998" starttime="20201103 01:38:59.217"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:37:47.774" level="INFO">${random} = 16903</msg>
<status status="PASS" endtime="20201103 01:37:47.774" starttime="20201103 01:37:47.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:37:47.781" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-16903 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:38:23.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:38:23.169" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:38:23.169" starttime="20201103 01:37:47.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:38:23.170" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:38:23.171" starttime="20201103 01:38:23.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:38:23.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:38:23.172" starttime="20201103 01:38:23.172"></status>
</kw>
<status status="PASS" endtime="20201103 01:38:23.173" starttime="20201103 01:37:47.775"></status>
</kw>
<msg timestamp="20201103 01:38:23.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:38:23.173" starttime="20201103 01:37:47.775"></status>
</kw>
<msg timestamp="20201103 01:38:23.173" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:38:23.173" starttime="20201103 01:37:47.774"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 01:38:23.174" starttime="20201103 01:38:23.173"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:38:23.174" critical="yes" starttime="20201103 01:37:47.772"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 01:38:23.175" starttime="20201103 01:37:47.711"></status>
</suite>
<status status="PASS" elapsedtime="154255" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
