<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201103 01:27:15.272" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:12:46.568" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:12:49.314" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 01:12:49.314" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 01:12:49.314" starttime="20201103 01:12:46.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:12:49.316" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 01:12:49.316" starttime="20201103 01:12:49.315"></status>
</kw>
<msg timestamp="20201103 01:12:49.316" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 01:12:49.316" starttime="20201103 01:12:46.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:12:49.332" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:12:51.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:12:51.768" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:12:51.768" starttime="20201103 01:12:49.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:12:51.769" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:12:51.769" starttime="20201103 01:12:51.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:12:51.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:12:51.770" starttime="20201103 01:12:51.769"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:51.771" starttime="20201103 01:12:49.325"></status>
</kw>
<msg timestamp="20201103 01:12:51.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:12:51.771" starttime="20201103 01:12:49.318"></status>
</kw>
<msg timestamp="20201103 01:12:51.771" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201103 01:12:51.771" starttime="20201103 01:12:49.318"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 01:12:51.772" starttime="20201103 01:12:51.772"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:51.773" starttime="20201103 01:12:49.317"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:51.773" starttime="20201103 01:12:49.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:12:51.782" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:12:54.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:12:54.211" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:12:54.211" starttime="20201103 01:12:51.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:12:54.212" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:12:54.212" starttime="20201103 01:12:54.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:12:54.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:12:54.213" starttime="20201103 01:12:54.213"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:54.213" starttime="20201103 01:12:51.775"></status>
</kw>
<msg timestamp="20201103 01:12:54.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:12:54.214" starttime="20201103 01:12:51.775"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:54.214" starttime="20201103 01:12:51.774"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:54.214" starttime="20201103 01:12:51.773"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:54.214" starttime="20201103 01:12:51.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 01:12:54.215" starttime="20201103 01:12:54.214"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:12:54.221" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:12:56.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:12:56.862" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:12:54.172Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 01:12:56.863" starttime="20201103 01:12:54.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:12:56.864" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:12:54.172Z",
  "modificationTime" : "2020-11-03T01:12:54.172Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 01:12:56.864" starttime="20201103 01:12:56.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:12:56.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:12:56.865" starttime="20201103 01:12:56.865"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:56.866" starttime="20201103 01:12:54.216"></status>
</kw>
<msg timestamp="20201103 01:12:56.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:12:56.866" starttime="20201103 01:12:54.216"></status>
</kw>
<msg timestamp="20201103 01:12:56.866" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:12:54.172Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 01:12:56.866" starttime="20201103 01:12:54.215"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 01:12:56.867" starttime="20201103 01:12:56.866"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:12:56.872" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:12:56.872" starttime="20201103 01:12:56.871"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:12:56.873" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:12:56.873" starttime="20201103 01:12:56.872"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:56.873" starttime="20201103 01:12:56.871"></status>
</kw>
<msg timestamp="20201103 01:12:56.873" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:12:56.873" starttime="20201103 01:12:56.870"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:56.874" starttime="20201103 01:12:56.870"></status>
</kw>
<msg timestamp="20201103 01:12:56.874" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 01:12:56.874" starttime="20201103 01:12:56.869"></status>
</kw>
<msg timestamp="20201103 01:12:56.874" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 01:12:56.874" starttime="20201103 01:12:56.868"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:12:56.878" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:12:59.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:12:59.415" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:12:59.415" starttime="20201103 01:12:56.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:12:59.416" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:12:59.416" starttime="20201103 01:12:59.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:12:59.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:12:59.417" starttime="20201103 01:12:59.416"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:59.417" starttime="20201103 01:12:56.875"></status>
</kw>
<msg timestamp="20201103 01:12:59.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:12:59.418" starttime="20201103 01:12:56.875"></status>
</kw>
<status status="PASS" endtime="20201103 01:12:59.418" starttime="20201103 01:12:56.874"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:12:59.423" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:13:06.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:13:06.143" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:13:06.143" starttime="20201103 01:12:59.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:13:06.145" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:13:06.145" starttime="20201103 01:13:06.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:13:06.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:13:06.146" starttime="20201103 01:13:06.145"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:06.147" starttime="20201103 01:12:59.419"></status>
</kw>
<msg timestamp="20201103 01:13:06.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:13:06.147" starttime="20201103 01:12:59.419"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:06.147" starttime="20201103 01:12:59.418"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:13:06.151" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:13:10.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:13:10.902" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:13:10.902" starttime="20201103 01:13:06.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:13:10.903" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:13:10.903" starttime="20201103 01:13:10.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:13:10.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:13:10.904" starttime="20201103 01:13:10.903"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:10.904" starttime="20201103 01:13:06.148"></status>
</kw>
<msg timestamp="20201103 01:13:10.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:13:10.905" starttime="20201103 01:13:06.148"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:10.905" starttime="20201103 01:13:06.147"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:13:10.910" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:13:15.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:13:15.344" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:13:15.344" starttime="20201103 01:13:10.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:13:15.345" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:13:15.345" starttime="20201103 01:13:15.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:13:15.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:13:15.346" starttime="20201103 01:13:15.345"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:15.346" starttime="20201103 01:13:10.907"></status>
</kw>
<msg timestamp="20201103 01:13:15.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:13:15.347" starttime="20201103 01:13:10.906"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:15.347" starttime="20201103 01:13:10.905"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:13:15.347" critical="yes" starttime="20201103 01:12:46.561"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:13:15.353" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:13:15.353" starttime="20201103 01:13:15.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:13:15.354" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:13:15.354" starttime="20201103 01:13:15.353"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:15.354" starttime="20201103 01:13:15.352"></status>
</kw>
<msg timestamp="20201103 01:13:15.354" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:13:15.354" starttime="20201103 01:13:15.351"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:15.355" starttime="20201103 01:13:15.351"></status>
</kw>
<msg timestamp="20201103 01:13:15.355" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 01:13:15.355" starttime="20201103 01:13:15.350"></status>
</kw>
<msg timestamp="20201103 01:13:15.355" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 01:13:15.355" starttime="20201103 01:13:15.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:13:15.359" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:13:17.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:13:17.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:13:17.847" starttime="20201103 01:13:15.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:13:17.848" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:13:17.848" starttime="20201103 01:13:17.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:13:17.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:13:17.849" starttime="20201103 01:13:17.849"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:17.850" starttime="20201103 01:13:15.356"></status>
</kw>
<msg timestamp="20201103 01:13:17.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:13:17.851" starttime="20201103 01:13:15.356"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:17.851" starttime="20201103 01:13:15.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:13:17.855" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:13:20.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:13:20.344" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:13:20.344" starttime="20201103 01:13:17.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:13:20.346" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:13:20.346" starttime="20201103 01:13:20.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:13:20.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:13:20.347" starttime="20201103 01:13:20.346"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:20.347" starttime="20201103 01:13:17.853"></status>
</kw>
<msg timestamp="20201103 01:13:20.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:13:20.347" starttime="20201103 01:13:17.852"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:20.347" starttime="20201103 01:13:17.851"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:13:20.348" critical="yes" starttime="20201103 01:13:15.348"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201103 01:13:20.349" starttime="20201103 01:12:46.486"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:15:04.705" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:15:04.705" starttime="20201103 01:15:04.705"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:15:04.706" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:15:04.706" starttime="20201103 01:15:04.706"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:04.706" starttime="20201103 01:15:04.704"></status>
</kw>
<msg timestamp="20201103 01:15:04.706" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:15:04.706" starttime="20201103 01:15:04.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:15:04.707" starttime="20201103 01:15:04.707"></status>
</kw>
<msg timestamp="20201103 01:15:04.708" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 01:15:04.708" starttime="20201103 01:15:04.707"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:04.708" starttime="20201103 01:15:04.703"></status>
</kw>
<msg timestamp="20201103 01:15:04.708" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:15:04.708" starttime="20201103 01:15:04.703"></status>
</kw>
<msg timestamp="20201103 01:15:04.708" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:15:04.708" starttime="20201103 01:15:04.701"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:15:04.709" level="INFO">${random} = 69660</msg>
<status status="PASS" endtime="20201103 01:15:04.709" starttime="20201103 01:15:04.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:15:04.717" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-69660 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:15:08.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:15:08.516" level="INFO">${output} = 2020-11-03 01:15:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:15:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 01:15:08.516" starttime="20201103 01:15:04.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:15:08.517" level="INFO">2020-11-03 01:15:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:15:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 01:15:07 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 01:15:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:15:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C3E2A5C2DC26-&gt;0354c809-2fab-4fc4-a8e2-6f8f1082af9c
2020-11-03 01:15:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 01:15:08.517" starttime="20201103 01:15:08.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:15:08.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:15:08.518" starttime="20201103 01:15:08.517"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:08.518" starttime="20201103 01:15:04.710"></status>
</kw>
<msg timestamp="20201103 01:15:08.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:15:08.518" starttime="20201103 01:15:04.710"></status>
</kw>
<msg timestamp="20201103 01:15:08.518" level="INFO">${result} = 2020-11-03 01:15:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:15:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 01:15:08.518" starttime="20201103 01:15:04.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:15:08.522" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:15:10.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:15:10.538" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:12 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 01:13 ofs://om/volume1/bucket1/ozone-51969
-rw-...</msg>
<status status="PASS" endtime="20201103 01:15:10.538" starttime="20201103 01:15:08.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:15:10.539" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:12 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 01:13 ofs://om/volume1/bucket1/ozone-51969
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 01:15 ofs://om/volume1/bucket1/ozone-69660
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:13 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:14 ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201103 01:15:10.540" starttime="20201103 01:15:10.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:15:10.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:15:10.540" starttime="20201103 01:15:10.540"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:10.541" starttime="20201103 01:15:08.519"></status>
</kw>
<msg timestamp="20201103 01:15:10.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:15:10.542" starttime="20201103 01:15:08.519"></status>
</kw>
<msg timestamp="20201103 01:15:10.542" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:12 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 01:13 ofs://om/volume1/bucket1/ozone-51969
-rw-...</msg>
<status status="PASS" endtime="20201103 01:15:10.542" starttime="20201103 01:15:08.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:15:10.543" starttime="20201103 01:15:10.542"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:15:10.543" critical="yes" starttime="20201103 01:15:04.700"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 01:15:10.544" starttime="20201103 01:15:04.639"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:13:25.699" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:13:25.699" starttime="20201103 01:13:25.699"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:13:25.700" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:13:25.700" starttime="20201103 01:13:25.699"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:25.700" starttime="20201103 01:13:25.698"></status>
</kw>
<msg timestamp="20201103 01:13:25.700" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:13:25.700" starttime="20201103 01:13:25.698"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:25.700" starttime="20201103 01:13:25.697"></status>
</kw>
<msg timestamp="20201103 01:13:25.700" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:13:25.701" starttime="20201103 01:13:25.696"></status>
</kw>
<msg timestamp="20201103 01:13:25.701" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:13:25.701" starttime="20201103 01:13:25.695"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:13:25.701" level="INFO">${random} = 51969</msg>
<status status="PASS" endtime="20201103 01:13:25.701" starttime="20201103 01:13:25.701"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:13:25.709" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-51969 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:13:29.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:13:29.678" level="INFO">${output} = 2020-11-03 01:13:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:13:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 01:13:29.678" starttime="20201103 01:13:25.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:13:29.679" level="INFO">2020-11-03 01:13:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:13:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 01:13:27 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 01:13:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:13:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-00290860A231-&gt;0354c809-2fab-4fc4-a8e2-6f8f1082af9c
2020-11-03 01:13:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 01:13:29.680" starttime="20201103 01:13:29.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:13:29.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:13:29.681" starttime="20201103 01:13:29.680"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:29.681" starttime="20201103 01:13:25.702"></status>
</kw>
<msg timestamp="20201103 01:13:29.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:13:29.681" starttime="20201103 01:13:25.702"></status>
</kw>
<msg timestamp="20201103 01:13:29.681" level="INFO">${result} = 2020-11-03 01:13:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:13:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 01:13:29.681" starttime="20201103 01:13:25.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:13:29.687" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:13:31.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:13:31.882" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:12 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 01:13 o3fs://bucket1.volume1.om/ozone-51969
dr...</msg>
<status status="PASS" endtime="20201103 01:13:31.882" starttime="20201103 01:13:29.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:13:31.883" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:12 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 01:13 o3fs://bucket1.volume1.om/ozone-51969
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:13 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 01:13:31.883" starttime="20201103 01:13:31.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:13:31.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:13:31.884" starttime="20201103 01:13:31.883"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:31.884" starttime="20201103 01:13:29.683"></status>
</kw>
<msg timestamp="20201103 01:13:31.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:13:31.884" starttime="20201103 01:13:29.682"></status>
</kw>
<msg timestamp="20201103 01:13:31.885" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:12 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 01:13 o3fs://bucket1.volume1.om/ozone-51969
dr...</msg>
<status status="PASS" endtime="20201103 01:13:31.885" starttime="20201103 01:13:29.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:13:31.885" starttime="20201103 01:13:31.885"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:13:31.886" critical="yes" starttime="20201103 01:13:25.693"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 01:13:31.887" starttime="20201103 01:13:25.613"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:15:15.791" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:15:15.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:15:15.797" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:15:15.797" starttime="20201103 01:15:15.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:15:15.798" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:15:15.798" starttime="20201103 01:15:15.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:15:15.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:15:15.799" starttime="20201103 01:15:15.798"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:15.799" starttime="20201103 01:15:15.785"></status>
</kw>
<msg timestamp="20201103 01:15:15.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:15:15.799" starttime="20201103 01:15:15.785"></status>
</kw>
<msg timestamp="20201103 01:15:15.799" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:15:15.799" starttime="20201103 01:15:15.785"></status>
</kw>
<msg timestamp="20201103 01:15:15.800" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:15:15.800" starttime="20201103 01:15:15.784"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:15:15.803" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:15:15.803" starttime="20201103 01:15:15.803"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:15:15.804" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:15:15.804" starttime="20201103 01:15:15.804"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:15.804" starttime="20201103 01:15:15.802"></status>
</kw>
<msg timestamp="20201103 01:15:15.805" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:15:15.805" starttime="20201103 01:15:15.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:15:15.806" starttime="20201103 01:15:15.805"></status>
</kw>
<msg timestamp="20201103 01:15:15.806" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 01:15:15.806" starttime="20201103 01:15:15.805"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:15.806" starttime="20201103 01:15:15.801"></status>
</kw>
<msg timestamp="20201103 01:15:15.806" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:15:15.806" starttime="20201103 01:15:15.801"></status>
</kw>
<msg timestamp="20201103 01:15:15.806" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:15:15.807" starttime="20201103 01:15:15.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:15:15.811" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:15:54.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:15:54.972" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:15:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:15:18 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 01:15:54.972" starttime="20201103 01:15:15.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:15:54.973" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:15:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:15:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 01:15:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 01:15:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:15:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AB8E25D62DB6-&gt;0354c809-2fab-4fc4-a8e2-6f8f1082af9c
2020-11-03 01:15:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 01:15:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-03 01:15:22 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 01:15:22 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 01:15:22 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 01:15:22 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604365928953_0003
2020-11-03 01:15:22 INFO  YarnClientImpl:273 - Submitted application application_1604365928953_0003
2020-11-03 01:15:22 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604365928953_0003/
2020-11-03 01:15:22 INFO  Job:1339 - Running job: job_1604365928953_0003
2020-11-03 01:15:31 INFO  Job:1360 - Job job_1604365928953_0003 running in uber mode : false
2020-11-03 01:15:31 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 01:15:38 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 01:15:43 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 01:15:48 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 01:15:53 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 01:15:54 INFO  Job:1378 - Job job_1604365928953_0003 completed successfully
2020-11-03 01:15:54 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615221
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44028
		Total time spent by all reduces in occupied slots (ms)=16720
		Total time spent by all map tasks (ms)=11007
		Total time spent by all reduce tasks (ms)=4180
		Total vcore-milliseconds taken by all map tasks=11007
		Total vcore-milliseconds taken by all reduce tasks=4180
		Total megabyte-milliseconds taken by all map tasks=45084672
		Total megabyte-milliseconds taken by all reduce tasks=17121280
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=638
		CPU time spent (ms)=7790
		Physical memory (bytes) snapshot=1131819008
		Virtual memory (bytes) snapshot=16055382016
		Total committed heap usage (bytes)=1056964608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.618 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 01:15:54.974" starttime="20201103 01:15:54.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:15:54.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:15:54.974" starttime="20201103 01:15:54.974"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:54.975" starttime="20201103 01:15:15.808"></status>
</kw>
<msg timestamp="20201103 01:15:54.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:15:54.975" starttime="20201103 01:15:15.807"></status>
</kw>
<msg timestamp="20201103 01:15:54.975" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:15:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:15:18 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 01:15:54.975" starttime="20201103 01:15:15.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:15:54.976" starttime="20201103 01:15:54.976"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:15:54.976" critical="yes" starttime="20201103 01:15:15.784"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:15:54.983" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:15:54.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:15:54.988" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:15:54.988" starttime="20201103 01:15:54.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:15:54.989" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:15:54.989" starttime="20201103 01:15:54.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:15:54.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:15:54.990" starttime="20201103 01:15:54.989"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:54.990" starttime="20201103 01:15:54.979"></status>
</kw>
<msg timestamp="20201103 01:15:54.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:15:54.990" starttime="20201103 01:15:54.979"></status>
</kw>
<msg timestamp="20201103 01:15:54.991" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:15:54.991" starttime="20201103 01:15:54.978"></status>
</kw>
<msg timestamp="20201103 01:15:54.991" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:15:54.991" starttime="20201103 01:15:54.978"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:15:54.992" level="INFO">${random} = 78</msg>
<status status="PASS" endtime="20201103 01:15:54.992" starttime="20201103 01:15:54.991"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:15:54.996" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:15:54.996" starttime="20201103 01:15:54.995"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:15:54.997" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:15:54.997" starttime="20201103 01:15:54.996"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:54.997" starttime="20201103 01:15:54.995"></status>
</kw>
<msg timestamp="20201103 01:15:54.997" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:15:54.997" starttime="20201103 01:15:54.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:15:54.998" starttime="20201103 01:15:54.998"></status>
</kw>
<msg timestamp="20201103 01:15:54.998" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 01:15:54.998" starttime="20201103 01:15:54.997"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:54.999" starttime="20201103 01:15:54.993"></status>
</kw>
<msg timestamp="20201103 01:15:54.999" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:15:54.999" starttime="20201103 01:15:54.993"></status>
</kw>
<msg timestamp="20201103 01:15:54.999" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:15:54.999" starttime="20201103 01:15:54.992"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:15:55.002" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:15:55.002" starttime="20201103 01:15:55.002"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:15:55.003" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:15:55.003" starttime="20201103 01:15:55.002"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:55.003" starttime="20201103 01:15:55.001"></status>
</kw>
<msg timestamp="20201103 01:15:55.003" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:15:55.003" starttime="20201103 01:15:55.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:15:55.005" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201103 01:15:55.005" starttime="20201103 01:15:55.004"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:15:55.006" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201103 01:15:55.006" starttime="20201103 01:15:55.005"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:55.006" starttime="20201103 01:15:55.004"></status>
</kw>
<msg timestamp="20201103 01:15:55.006" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201103 01:15:55.006" starttime="20201103 01:15:55.003"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:55.006" starttime="20201103 01:15:55.000"></status>
</kw>
<msg timestamp="20201103 01:15:55.006" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 01:15:55.006" starttime="20201103 01:15:55.000"></status>
</kw>
<msg timestamp="20201103 01:15:55.007" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 01:15:55.007" starttime="20201103 01:15:54.999"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:15:55.010" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:15:55.010" starttime="20201103 01:15:55.010"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:15:55.011" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:15:55.011" starttime="20201103 01:15:55.010"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:55.011" starttime="20201103 01:15:55.009"></status>
</kw>
<msg timestamp="20201103 01:15:55.011" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:15:55.011" starttime="20201103 01:15:55.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:15:55.013" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201103 01:15:55.013" starttime="20201103 01:15:55.012"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:15:55.013" level="INFO">${result} = /wordcount-78.txt</msg>
<status status="PASS" endtime="20201103 01:15:55.013" starttime="20201103 01:15:55.013"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:55.014" starttime="20201103 01:15:55.012"></status>
</kw>
<msg timestamp="20201103 01:15:55.014" level="INFO">${path_with_leading} = /wordcount-78.txt</msg>
<status status="PASS" endtime="20201103 01:15:55.014" starttime="20201103 01:15:55.011"></status>
</kw>
<status status="PASS" endtime="20201103 01:15:55.014" starttime="20201103 01:15:55.008"></status>
</kw>
<msg timestamp="20201103 01:15:55.014" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-78.txt</msg>
<status status="PASS" endtime="20201103 01:15:55.014" starttime="20201103 01:15:55.007"></status>
</kw>
<msg timestamp="20201103 01:15:55.014" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-78.txt</msg>
<status status="PASS" endtime="20201103 01:15:55.014" starttime="20201103 01:15:55.007"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:15:55.020" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-78.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:16:29.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:16:29.634" level="INFO">${output} = 2020-11-03 01:15:57 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-03 01:15:57 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 01:16:29.634" starttime="20201103 01:15:55.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:16:29.635" level="INFO">2020-11-03 01:15:57 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-03 01:15:57 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 01:15:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:15:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 01:15:57 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 01:15:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:15:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8EA1617B0DB2-&gt;0354c809-2fab-4fc4-a8e2-6f8f1082af9c
2020-11-03 01:15:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:15:59 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 01:15:59 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 01:15:59 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604365928953_0004
2020-11-03 01:15:59 INFO  YarnClientImpl:273 - Submitted application application_1604365928953_0004
2020-11-03 01:15:59 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604365928953_0004/
2020-11-03 01:15:59 INFO  Job:1339 - Running job: job_1604365928953_0004
2020-11-03 01:16:07 INFO  Job:1360 - Job job_1604365928953_0004 running in uber mode : false
2020-11-03 01:16:07 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 01:16:13 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 01:16:19 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 01:16:24 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 01:16:28 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 01:16:29 INFO  Job:1378 - Job job_1604365928953_0004 completed successfully
2020-11-03 01:16:29 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45768
		Total time spent by all reduces in occupied slots (ms)=16172
		Total time spent by all map tasks (ms)=11442
		Total time spent by all reduce tasks (ms)=4043
		Total vcore-milliseconds taken by all map tasks=11442
		Total vcore-milliseconds taken by all reduce tasks=4043
		Total megabyte-milliseconds taken by all map tasks=46866432
		Total megabyte-milliseconds taken by all reduce tasks=16560128
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=597
		CPU time spent (ms)=7860
		Physical memory (bytes) snapshot=1120813056
		Virtual memory (bytes) snapshot=16059396096
		Total committed heap usage (bytes)=1005060096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 01:16:29.636" starttime="20201103 01:16:29.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:16:29.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:16:29.637" starttime="20201103 01:16:29.636"></status>
</kw>
<status status="PASS" endtime="20201103 01:16:29.637" starttime="20201103 01:15:55.015"></status>
</kw>
<msg timestamp="20201103 01:16:29.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:16:29.637" starttime="20201103 01:15:55.015"></status>
</kw>
<msg timestamp="20201103 01:16:29.638" level="INFO">${output} = 2020-11-03 01:15:57 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-03 01:15:57 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 01:16:29.638" starttime="20201103 01:15:55.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 01:16:29.639" starttime="20201103 01:16:29.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:16:29.640" starttime="20201103 01:16:29.640"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:16:29.641" critical="yes" starttime="20201103 01:15:54.977"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 01:16:29.642" starttime="20201103 01:15:15.721"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:13:37.244" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:13:37.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:13:37.251" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:13:37.251" starttime="20201103 01:13:37.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:13:37.252" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:13:37.252" starttime="20201103 01:13:37.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:13:37.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:13:37.252" starttime="20201103 01:13:37.252"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:37.253" starttime="20201103 01:13:37.237"></status>
</kw>
<msg timestamp="20201103 01:13:37.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:13:37.253" starttime="20201103 01:13:37.237"></status>
</kw>
<msg timestamp="20201103 01:13:37.254" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:13:37.254" starttime="20201103 01:13:37.236"></status>
</kw>
<msg timestamp="20201103 01:13:37.254" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:13:37.254" starttime="20201103 01:13:37.236"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:13:37.258" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:13:37.258" starttime="20201103 01:13:37.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:13:37.259" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:13:37.259" starttime="20201103 01:13:37.258"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:37.259" starttime="20201103 01:13:37.257"></status>
</kw>
<msg timestamp="20201103 01:13:37.259" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:13:37.259" starttime="20201103 01:13:37.257"></status>
</kw>
<status status="PASS" endtime="20201103 01:13:37.260" starttime="20201103 01:13:37.256"></status>
</kw>
<msg timestamp="20201103 01:13:37.260" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:13:37.260" starttime="20201103 01:13:37.255"></status>
</kw>
<msg timestamp="20201103 01:13:37.260" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:13:37.260" starttime="20201103 01:13:37.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:13:37.264" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:14:22.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:14:22.340" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:13:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:13:39 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 01:14:22.340" starttime="20201103 01:13:37.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:14:22.341" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:13:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:13:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 01:13:39 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 01:13:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:13:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AF655E5E76C7-&gt;0354c809-2fab-4fc4-a8e2-6f8f1082af9c
2020-11-03 01:13:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 01:13:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-03 01:13:41 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 01:13:44 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 01:13:44 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604365928953_0001
2020-11-03 01:13:45 INFO  YarnClientImpl:273 - Submitted application application_1604365928953_0001
2020-11-03 01:13:45 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604365928953_0001/
2020-11-03 01:13:45 INFO  Job:1339 - Running job: job_1604365928953_0001
2020-11-03 01:13:55 INFO  Job:1360 - Job job_1604365928953_0001 running in uber mode : false
2020-11-03 01:13:55 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 01:14:02 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 01:14:07 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 01:14:12 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 01:14:19 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 01:14:21 INFO  Job:1378 - Job job_1604365928953_0001 completed successfully
2020-11-03 01:14:21 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45596
		Total time spent by all reduces in occupied slots (ms)=26856
		Total time spent by all map tasks (ms)=11399
		Total time spent by all reduce tasks (ms)=6714
		Total vcore-milliseconds taken by all map tasks=11399
		Total vcore-milliseconds taken by all reduce tasks=6714
		Total megabyte-milliseconds taken by all map tasks=46690304
		Total megabyte-milliseconds taken by all reduce tasks=27500544
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=626
		CPU time spent (ms)=7760
		Physical memory (bytes) snapshot=1148035072
		Virtual memory (bytes) snapshot=16066646016
		Total committed heap usage (bytes)=999817216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.52 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 01:14:22.342" starttime="20201103 01:14:22.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:14:22.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:14:22.342" starttime="20201103 01:14:22.342"></status>
</kw>
<status status="PASS" endtime="20201103 01:14:22.343" starttime="20201103 01:13:37.261"></status>
</kw>
<msg timestamp="20201103 01:14:22.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:14:22.343" starttime="20201103 01:13:37.261"></status>
</kw>
<msg timestamp="20201103 01:14:22.343" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:13:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:13:39 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 01:14:22.343" starttime="20201103 01:13:37.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:14:22.344" starttime="20201103 01:14:22.344"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:14:22.344" critical="yes" starttime="20201103 01:13:37.235"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:14:22.350" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:14:22.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:14:22.356" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:14:22.356" starttime="20201103 01:14:22.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:14:22.357" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:14:22.357" starttime="20201103 01:14:22.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:14:22.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:14:22.358" starttime="20201103 01:14:22.357"></status>
</kw>
<status status="PASS" endtime="20201103 01:14:22.358" starttime="20201103 01:14:22.347"></status>
</kw>
<msg timestamp="20201103 01:14:22.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:14:22.358" starttime="20201103 01:14:22.347"></status>
</kw>
<msg timestamp="20201103 01:14:22.359" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:14:22.359" starttime="20201103 01:14:22.346"></status>
</kw>
<msg timestamp="20201103 01:14:22.359" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 01:14:22.359" starttime="20201103 01:14:22.346"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:14:22.359" level="INFO">${random} = 08</msg>
<status status="PASS" endtime="20201103 01:14:22.360" starttime="20201103 01:14:22.359"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:14:22.363" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:14:22.363" starttime="20201103 01:14:22.363"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:14:22.365" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:14:22.365" starttime="20201103 01:14:22.363"></status>
</kw>
<status status="PASS" endtime="20201103 01:14:22.365" starttime="20201103 01:14:22.362"></status>
</kw>
<msg timestamp="20201103 01:14:22.365" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:14:22.365" starttime="20201103 01:14:22.362"></status>
</kw>
<status status="PASS" endtime="20201103 01:14:22.365" starttime="20201103 01:14:22.361"></status>
</kw>
<msg timestamp="20201103 01:14:22.365" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:14:22.365" starttime="20201103 01:14:22.360"></status>
</kw>
<msg timestamp="20201103 01:14:22.365" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:14:22.365" starttime="20201103 01:14:22.360"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:14:22.369" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:14:22.369" starttime="20201103 01:14:22.368"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:14:22.370" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:14:22.370" starttime="20201103 01:14:22.369"></status>
</kw>
<status status="PASS" endtime="20201103 01:14:22.370" starttime="20201103 01:14:22.368"></status>
</kw>
<msg timestamp="20201103 01:14:22.370" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:14:22.370" starttime="20201103 01:14:22.367"></status>
</kw>
<status status="PASS" endtime="20201103 01:14:22.370" starttime="20201103 01:14:22.367"></status>
</kw>
<msg timestamp="20201103 01:14:22.370" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 01:14:22.370" starttime="20201103 01:14:22.366"></status>
</kw>
<msg timestamp="20201103 01:14:22.370" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 01:14:22.370" starttime="20201103 01:14:22.366"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:14:22.374" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:14:22.374" starttime="20201103 01:14:22.373"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:14:22.374" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:14:22.374" starttime="20201103 01:14:22.374"></status>
</kw>
<status status="PASS" endtime="20201103 01:14:22.375" starttime="20201103 01:14:22.373"></status>
</kw>
<msg timestamp="20201103 01:14:22.375" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:14:22.375" starttime="20201103 01:14:22.372"></status>
</kw>
<status status="PASS" endtime="20201103 01:14:22.375" starttime="20201103 01:14:22.372"></status>
</kw>
<msg timestamp="20201103 01:14:22.375" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-08.txt</msg>
<status status="PASS" endtime="20201103 01:14:22.375" starttime="20201103 01:14:22.371"></status>
</kw>
<msg timestamp="20201103 01:14:22.375" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-08.txt</msg>
<status status="PASS" endtime="20201103 01:14:22.375" starttime="20201103 01:14:22.371"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:14:22.381" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-08.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:14:59.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:14:59.199" level="INFO">${output} = 2020-11-03 01:14:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-03 01:14:24 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 01:14:59.199" starttime="20201103 01:14:22.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:14:59.200" level="INFO">2020-11-03 01:14:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-03 01:14:24 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 01:14:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:14:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 01:14:25 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 01:14:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:14:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-97D2E84B94F2-&gt;0354c809-2fab-4fc4-a8e2-6f8f1082af9c
2020-11-03 01:14:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:14:26 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 01:14:26 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 01:14:26 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604365928953_0002
2020-11-03 01:14:27 INFO  YarnClientImpl:273 - Submitted application application_1604365928953_0002
2020-11-03 01:14:27 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604365928953_0002/
2020-11-03 01:14:27 INFO  Job:1339 - Running job: job_1604365928953_0002
2020-11-03 01:14:35 INFO  Job:1360 - Job job_1604365928953_0002 running in uber mode : false
2020-11-03 01:14:35 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 01:14:42 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 01:14:47 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 01:14:53 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 01:14:57 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 01:14:58 INFO  Job:1378 - Job job_1604365928953_0002 completed successfully
2020-11-03 01:14:58 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45452
		Total time spent by all reduces in occupied slots (ms)=16592
		Total time spent by all map tasks (ms)=11363
		Total time spent by all reduce tasks (ms)=4148
		Total vcore-milliseconds taken by all map tasks=11363
		Total vcore-milliseconds taken by all reduce tasks=4148
		Total megabyte-milliseconds taken by all map tasks=46542848
		Total megabyte-milliseconds taken by all reduce tasks=16990208
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=629
		CPU time spent (ms)=8160
		Physical memory (bytes) snapshot=1135390720
		Virtual memory (bytes) snapshot=16055148544
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 01:14:59.201" starttime="20201103 01:14:59.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:14:59.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:14:59.201" starttime="20201103 01:14:59.201"></status>
</kw>
<status status="PASS" endtime="20201103 01:14:59.202" starttime="20201103 01:14:22.376"></status>
</kw>
<msg timestamp="20201103 01:14:59.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:14:59.202" starttime="20201103 01:14:22.376"></status>
</kw>
<msg timestamp="20201103 01:14:59.203" level="INFO">${output} = 2020-11-03 01:14:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-03 01:14:24 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 01:14:59.203" starttime="20201103 01:14:22.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 01:14:59.203" starttime="20201103 01:14:59.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:14:59.204" starttime="20201103 01:14:59.203"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:14:59.204" critical="yes" starttime="20201103 01:14:22.345"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 01:14:59.206" starttime="20201103 01:13:37.174"></status>
</suite>
<status status="PASS" elapsedtime="201995" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:17:40.520" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:17:43.006" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 01:17:43.006" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 01:17:43.006" starttime="20201103 01:17:40.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:17:43.007" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 01:17:43.007" starttime="20201103 01:17:43.006"></status>
</kw>
<msg timestamp="20201103 01:17:43.008" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 01:17:43.008" starttime="20201103 01:17:40.512"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:17:43.013" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:17:45.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:17:45.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:17:45.444" starttime="20201103 01:17:43.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:17:45.445" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:17:45.445" starttime="20201103 01:17:45.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:17:45.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:17:45.446" starttime="20201103 01:17:45.445"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:45.446" starttime="20201103 01:17:43.010"></status>
</kw>
<msg timestamp="20201103 01:17:45.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:17:45.446" starttime="20201103 01:17:43.009"></status>
</kw>
<msg timestamp="20201103 01:17:45.447" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201103 01:17:45.447" starttime="20201103 01:17:43.009"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 01:17:45.447" starttime="20201103 01:17:45.447"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:45.447" starttime="20201103 01:17:43.008"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:45.447" starttime="20201103 01:17:43.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:17:45.453" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:17:47.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:17:47.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:17:47.877" starttime="20201103 01:17:45.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:17:47.878" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:17:47.878" starttime="20201103 01:17:47.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:17:47.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:17:47.879" starttime="20201103 01:17:47.878"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:47.879" starttime="20201103 01:17:45.450"></status>
</kw>
<msg timestamp="20201103 01:17:47.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:17:47.879" starttime="20201103 01:17:45.449"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:47.880" starttime="20201103 01:17:45.449"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:47.880" starttime="20201103 01:17:45.448"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:47.880" starttime="20201103 01:17:45.448"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 01:17:47.881" starttime="20201103 01:17:47.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:17:47.886" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:17:50.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:17:50.531" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:17:47.752Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 01:17:50.531" starttime="20201103 01:17:47.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:17:50.532" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:17:47.752Z",
  "modificationTime" : "2020-11-03T01:17:47.752Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 01:17:50.532" starttime="20201103 01:17:50.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:17:50.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:17:50.533" starttime="20201103 01:17:50.532"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:50.533" starttime="20201103 01:17:47.882"></status>
</kw>
<msg timestamp="20201103 01:17:50.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:17:50.534" starttime="20201103 01:17:47.882"></status>
</kw>
<msg timestamp="20201103 01:17:50.534" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:17:47.752Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 01:17:50.534" starttime="20201103 01:17:47.881"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 01:17:50.534" starttime="20201103 01:17:50.534"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:17:50.539" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:17:50.539" starttime="20201103 01:17:50.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:17:50.539" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:17:50.539" starttime="20201103 01:17:50.539"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:50.540" starttime="20201103 01:17:50.538"></status>
</kw>
<msg timestamp="20201103 01:17:50.540" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:17:50.540" starttime="20201103 01:17:50.537"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:50.540" starttime="20201103 01:17:50.536"></status>
</kw>
<msg timestamp="20201103 01:17:50.540" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 01:17:50.540" starttime="20201103 01:17:50.535"></status>
</kw>
<msg timestamp="20201103 01:17:50.541" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 01:17:50.541" starttime="20201103 01:17:50.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:17:50.545" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:17:52.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:17:52.884" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:17:52.884" starttime="20201103 01:17:50.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:17:52.886" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:17:52.886" starttime="20201103 01:17:52.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:17:52.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:17:52.886" starttime="20201103 01:17:52.886"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:52.887" starttime="20201103 01:17:50.541"></status>
</kw>
<msg timestamp="20201103 01:17:52.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:17:52.887" starttime="20201103 01:17:50.541"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:52.887" starttime="20201103 01:17:50.541"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:17:52.892" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:17:58.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:17:58.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:17:58.724" starttime="20201103 01:17:52.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:17:58.725" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:17:58.726" starttime="20201103 01:17:58.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:17:58.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:17:58.726" starttime="20201103 01:17:58.726"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:58.727" starttime="20201103 01:17:52.889"></status>
</kw>
<msg timestamp="20201103 01:17:58.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:17:58.727" starttime="20201103 01:17:52.888"></status>
</kw>
<status status="PASS" endtime="20201103 01:17:58.727" starttime="20201103 01:17:52.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:17:58.731" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:18:03.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:18:03.708" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:18:03.708" starttime="20201103 01:17:58.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:18:03.709" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:18:03.709" starttime="20201103 01:18:03.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:18:03.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:18:03.710" starttime="20201103 01:18:03.709"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:03.710" starttime="20201103 01:17:58.728"></status>
</kw>
<msg timestamp="20201103 01:18:03.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:18:03.711" starttime="20201103 01:17:58.728"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:03.711" starttime="20201103 01:17:58.727"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:18:03.715" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:18:08.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:18:08.473" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:18:08.473" starttime="20201103 01:18:03.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:18:08.474" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:18:08.474" starttime="20201103 01:18:08.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:18:08.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:18:08.475" starttime="20201103 01:18:08.474"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:08.475" starttime="20201103 01:18:03.712"></status>
</kw>
<msg timestamp="20201103 01:18:08.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:18:08.476" starttime="20201103 01:18:03.712"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:08.476" starttime="20201103 01:18:03.711"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:18:08.476" critical="yes" starttime="20201103 01:17:40.511"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:18:08.484" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:18:08.484" starttime="20201103 01:18:08.483"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:18:08.485" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:18:08.485" starttime="20201103 01:18:08.484"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:08.485" starttime="20201103 01:18:08.482"></status>
</kw>
<msg timestamp="20201103 01:18:08.486" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:18:08.486" starttime="20201103 01:18:08.481"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:08.486" starttime="20201103 01:18:08.480"></status>
</kw>
<msg timestamp="20201103 01:18:08.486" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 01:18:08.487" starttime="20201103 01:18:08.479"></status>
</kw>
<msg timestamp="20201103 01:18:08.487" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 01:18:08.487" starttime="20201103 01:18:08.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:18:08.491" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:18:10.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:18:10.806" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:18:10.807" starttime="20201103 01:18:08.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:18:10.808" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:18:10.808" starttime="20201103 01:18:10.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:18:10.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:18:10.809" starttime="20201103 01:18:10.808"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:10.809" starttime="20201103 01:18:08.488"></status>
</kw>
<msg timestamp="20201103 01:18:10.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:18:10.809" starttime="20201103 01:18:08.488"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:10.809" starttime="20201103 01:18:08.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:18:10.814" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:18:13.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:18:13.101" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:18:13.101" starttime="20201103 01:18:10.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:18:13.102" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:18:13.102" starttime="20201103 01:18:13.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:18:13.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:18:13.103" starttime="20201103 01:18:13.102"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:13.103" starttime="20201103 01:18:10.811"></status>
</kw>
<msg timestamp="20201103 01:18:13.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:18:13.104" starttime="20201103 01:18:10.810"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:13.104" starttime="20201103 01:18:10.810"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:18:13.104" critical="yes" starttime="20201103 01:18:08.477"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201103 01:18:13.105" starttime="20201103 01:17:40.442"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:20:01.494" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:20:01.494" starttime="20201103 01:20:01.494"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:20:01.495" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:20:01.495" starttime="20201103 01:20:01.494"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:01.495" starttime="20201103 01:20:01.493"></status>
</kw>
<msg timestamp="20201103 01:20:01.495" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:20:01.495" starttime="20201103 01:20:01.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:20:01.496" starttime="20201103 01:20:01.496"></status>
</kw>
<msg timestamp="20201103 01:20:01.496" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 01:20:01.496" starttime="20201103 01:20:01.495"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:01.497" starttime="20201103 01:20:01.492"></status>
</kw>
<msg timestamp="20201103 01:20:01.497" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:20:01.497" starttime="20201103 01:20:01.492"></status>
</kw>
<msg timestamp="20201103 01:20:01.497" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:20:01.497" starttime="20201103 01:20:01.490"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:20:01.498" level="INFO">${random} = 13341</msg>
<status status="PASS" endtime="20201103 01:20:01.498" starttime="20201103 01:20:01.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:20:01.504" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-13341 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:20:05.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:20:05.548" level="INFO">${output} = 2020-11-03 01:20:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:20:05.548" starttime="20201103 01:20:01.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:20:05.549" level="INFO">2020-11-03 01:20:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 01:20:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:20:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:20:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:20:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:20:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F64FEC99FC91-&gt;5edba961-10b5-433e-b4ff-05a8868516f4
2020-11-03 01:20:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:20:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 01:20:05.549" starttime="20201103 01:20:05.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:20:05.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:20:05.551" starttime="20201103 01:20:05.549"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:05.551" starttime="20201103 01:20:01.499"></status>
</kw>
<msg timestamp="20201103 01:20:05.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:20:05.551" starttime="20201103 01:20:01.499"></status>
</kw>
<msg timestamp="20201103 01:20:05.552" level="INFO">${result} = 2020-11-03 01:20:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:20:05.552" starttime="20201103 01:20:01.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:20:05.557" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:20:07.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:20:07.498" level="INFO">${output} = 2020-11-03 01:20:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:20:07.498" starttime="20201103 01:20:05.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:20:07.499" level="INFO">2020-11-03 01:20:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:07 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-03 01:20 ofs://om/volume1/bucket1/ozone-13341
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-03 01:18 ofs://om/volume1/bucket1/ozone-55241
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:18 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:19 ofs://om/volume1/bucket1/wordcount-01.txt
2020-11-03 01:20:07 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 01:20:07.499" starttime="20201103 01:20:07.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:20:07.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:20:07.500" starttime="20201103 01:20:07.499"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:07.500" starttime="20201103 01:20:05.553"></status>
</kw>
<msg timestamp="20201103 01:20:07.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:20:07.500" starttime="20201103 01:20:05.553"></status>
</kw>
<msg timestamp="20201103 01:20:07.500" level="INFO">${result} = 2020-11-03 01:20:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:20:07.500" starttime="20201103 01:20:05.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:20:07.501" starttime="20201103 01:20:07.501"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:20:07.501" critical="yes" starttime="20201103 01:20:01.489"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 01:20:07.502" starttime="20201103 01:20:01.421"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:18:18.324" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:18:18.324" starttime="20201103 01:18:18.323"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:18:18.325" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:18:18.325" starttime="20201103 01:18:18.324"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:18.325" starttime="20201103 01:18:18.323"></status>
</kw>
<msg timestamp="20201103 01:18:18.325" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:18:18.325" starttime="20201103 01:18:18.323"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:18.325" starttime="20201103 01:18:18.322"></status>
</kw>
<msg timestamp="20201103 01:18:18.325" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:18:18.325" starttime="20201103 01:18:18.321"></status>
</kw>
<msg timestamp="20201103 01:18:18.326" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:18:18.326" starttime="20201103 01:18:18.320"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:18:18.326" level="INFO">${random} = 55241</msg>
<status status="PASS" endtime="20201103 01:18:18.326" starttime="20201103 01:18:18.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:18:18.331" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-55241 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:18:22.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:18:22.335" level="INFO">${output} = 2020-11-03 01:18:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:18:22.335" starttime="20201103 01:18:18.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:18:22.336" level="INFO">2020-11-03 01:18:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 01:18:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:18:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:18:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:18:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:18:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DA84D77D4DD3-&gt;5edba961-10b5-433e-b4ff-05a8868516f4
2020-11-03 01:18:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:18:22 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 01:18:22.336" starttime="20201103 01:18:22.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:18:22.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:18:22.337" starttime="20201103 01:18:22.336"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:22.337" starttime="20201103 01:18:18.327"></status>
</kw>
<msg timestamp="20201103 01:18:22.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:18:22.337" starttime="20201103 01:18:18.327"></status>
</kw>
<msg timestamp="20201103 01:18:22.337" level="INFO">${result} = 2020-11-03 01:18:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:18:22.337" starttime="20201103 01:18:18.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:18:22.342" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:18:24.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:18:24.538" level="INFO">${output} = 2020-11-03 01:18:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:24 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:18:24.538" starttime="20201103 01:18:22.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:18:24.539" level="INFO">2020-11-03 01:18:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:24 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-03 01:18 o3fs://bucket1.volume1.om/ozone-55241
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:18 o3fs://bucket1.volume1.om/user
2020-11-03 01:18:24 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 01:18:24.539" starttime="20201103 01:18:24.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:18:24.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:18:24.540" starttime="20201103 01:18:24.539"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:24.540" starttime="20201103 01:18:22.338"></status>
</kw>
<msg timestamp="20201103 01:18:24.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:18:24.540" starttime="20201103 01:18:22.338"></status>
</kw>
<msg timestamp="20201103 01:18:24.540" level="INFO">${result} = 2020-11-03 01:18:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:24 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:18:24.541" starttime="20201103 01:18:22.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:18:24.541" starttime="20201103 01:18:24.541"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:18:24.541" critical="yes" starttime="20201103 01:18:18.317"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 01:18:24.542" starttime="20201103 01:18:18.246"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:20:12.832" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:20:12.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:20:12.839" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:20:12.839" starttime="20201103 01:20:12.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:20:12.840" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:20:12.840" starttime="20201103 01:20:12.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:20:12.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:20:12.841" starttime="20201103 01:20:12.840"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:12.841" starttime="20201103 01:20:12.827"></status>
</kw>
<msg timestamp="20201103 01:20:12.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:20:12.841" starttime="20201103 01:20:12.827"></status>
</kw>
<msg timestamp="20201103 01:20:12.841" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:20:12.841" starttime="20201103 01:20:12.826"></status>
</kw>
<msg timestamp="20201103 01:20:12.842" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:20:12.842" starttime="20201103 01:20:12.826"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:20:12.845" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:20:12.845" starttime="20201103 01:20:12.845"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:20:12.846" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:20:12.846" starttime="20201103 01:20:12.845"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:12.846" starttime="20201103 01:20:12.844"></status>
</kw>
<msg timestamp="20201103 01:20:12.846" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:20:12.846" starttime="20201103 01:20:12.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:20:12.848" starttime="20201103 01:20:12.848"></status>
</kw>
<msg timestamp="20201103 01:20:12.848" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 01:20:12.848" starttime="20201103 01:20:12.847"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:12.849" starttime="20201103 01:20:12.843"></status>
</kw>
<msg timestamp="20201103 01:20:12.849" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:20:12.849" starttime="20201103 01:20:12.843"></status>
</kw>
<msg timestamp="20201103 01:20:12.849" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:20:12.849" starttime="20201103 01:20:12.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:20:12.854" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:20:52.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:20:52.276" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:20:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20...</msg>
<status status="PASS" endtime="20201103 01:20:52.276" starttime="20201103 01:20:12.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:20:52.277" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:20:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 01:20:15 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:20:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:20:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:20:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:20:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0D91F3D8A092-&gt;5edba961-10b5-433e-b4ff-05a8868516f4
2020-11-03 01:20:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 01:20:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-03 01:20:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 01:20:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 01:20:17 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 01:20:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604366239887_0003
2020-11-03 01:20:17 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 01:20:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:17 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 01:20:17 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 01:20:17 INFO  YarnClientImpl:324 - Submitted application application_1604366239887_0003
2020-11-03 01:20:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604366239887_0003/
2020-11-03 01:20:17 INFO  Job:1619 - Running job: job_1604366239887_0003
2020-11-03 01:20:26 INFO  Job:1640 - Job job_1604366239887_0003 running in uber mode : false
2020-11-03 01:20:26 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 01:20:33 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 01:20:39 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 01:20:45 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 01:20:50 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 01:20:51 INFO  Job:1658 - Job job_1604366239887_0003 completed successfully
2020-11-03 01:20:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44804
		Total time spent by all reduces in occupied slots (ms)=16208
		Total time spent by all map tasks (ms)=11201
		Total time spent by all reduce tasks (ms)=4052
		Total vcore-milliseconds taken by all map tasks=11201
		Total vcore-milliseconds taken by all reduce tasks=4052
		Total megabyte-milliseconds taken by all map tasks=45879296
		Total megabyte-milliseconds taken by all reduce tasks=16596992
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=663
		CPU time spent (ms)=6820
		Physical memory (bytes) snapshot=1115459584
		Virtual memory (bytes) snapshot=16040611840
		Total committed heap usage (bytes)=1018691584
		Peak Map Physical memory (bytes)=294359040
		Peak Map Virtual memory (bytes)=4018585600
		Peak Reduce Physical memory (bytes)=263618560
		Peak Reduce Virtual memory (bytes)=4017696768
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.179 seconds
2020-11-03 01:20:51 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-03 01:20:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 01:20:52.277" starttime="20201103 01:20:52.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:20:52.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:20:52.278" starttime="20201103 01:20:52.278"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:52.278" starttime="20201103 01:20:12.850"></status>
</kw>
<msg timestamp="20201103 01:20:52.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:20:52.279" starttime="20201103 01:20:12.850"></status>
</kw>
<msg timestamp="20201103 01:20:52.279" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:20:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20...</msg>
<status status="PASS" endtime="20201103 01:20:52.279" starttime="20201103 01:20:12.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:20:52.280" starttime="20201103 01:20:52.280"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:20:52.280" critical="yes" starttime="20201103 01:20:12.825"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:20:52.285" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:20:52.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:20:52.291" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:20:52.291" starttime="20201103 01:20:52.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:20:52.292" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:20:52.293" starttime="20201103 01:20:52.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:20:52.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:20:52.293" starttime="20201103 01:20:52.293"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:52.293" starttime="20201103 01:20:52.282"></status>
</kw>
<msg timestamp="20201103 01:20:52.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:20:52.294" starttime="20201103 01:20:52.282"></status>
</kw>
<msg timestamp="20201103 01:20:52.294" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:20:52.294" starttime="20201103 01:20:52.282"></status>
</kw>
<msg timestamp="20201103 01:20:52.294" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:20:52.294" starttime="20201103 01:20:52.281"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:20:52.295" level="INFO">${random} = 46</msg>
<status status="PASS" endtime="20201103 01:20:52.295" starttime="20201103 01:20:52.294"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:20:52.299" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:20:52.299" starttime="20201103 01:20:52.298"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:20:52.300" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:20:52.300" starttime="20201103 01:20:52.299"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:52.300" starttime="20201103 01:20:52.298"></status>
</kw>
<msg timestamp="20201103 01:20:52.300" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:20:52.300" starttime="20201103 01:20:52.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:20:52.301" starttime="20201103 01:20:52.301"></status>
</kw>
<msg timestamp="20201103 01:20:52.301" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 01:20:52.301" starttime="20201103 01:20:52.300"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:52.304" starttime="20201103 01:20:52.296"></status>
</kw>
<msg timestamp="20201103 01:20:52.304" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:20:52.304" starttime="20201103 01:20:52.296"></status>
</kw>
<msg timestamp="20201103 01:20:52.305" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:20:52.305" starttime="20201103 01:20:52.295"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:20:52.308" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:20:52.308" starttime="20201103 01:20:52.308"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:20:52.309" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:20:52.309" starttime="20201103 01:20:52.308"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:52.309" starttime="20201103 01:20:52.307"></status>
</kw>
<msg timestamp="20201103 01:20:52.309" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:20:52.309" starttime="20201103 01:20:52.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:20:52.311" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201103 01:20:52.311" starttime="20201103 01:20:52.310"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:20:52.311" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201103 01:20:52.311" starttime="20201103 01:20:52.311"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:52.311" starttime="20201103 01:20:52.310"></status>
</kw>
<msg timestamp="20201103 01:20:52.312" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201103 01:20:52.312" starttime="20201103 01:20:52.309"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:52.312" starttime="20201103 01:20:52.306"></status>
</kw>
<msg timestamp="20201103 01:20:52.312" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 01:20:52.312" starttime="20201103 01:20:52.305"></status>
</kw>
<msg timestamp="20201103 01:20:52.312" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 01:20:52.312" starttime="20201103 01:20:52.305"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:20:52.316" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:20:52.316" starttime="20201103 01:20:52.315"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:20:52.316" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:20:52.316" starttime="20201103 01:20:52.316"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:52.316" starttime="20201103 01:20:52.315"></status>
</kw>
<msg timestamp="20201103 01:20:52.317" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:20:52.317" starttime="20201103 01:20:52.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:20:52.318" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201103 01:20:52.318" starttime="20201103 01:20:52.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:20:52.319" level="INFO">${result} = /wordcount-46.txt</msg>
<status status="PASS" endtime="20201103 01:20:52.319" starttime="20201103 01:20:52.318"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:52.319" starttime="20201103 01:20:52.317"></status>
</kw>
<msg timestamp="20201103 01:20:52.319" level="INFO">${path_with_leading} = /wordcount-46.txt</msg>
<status status="PASS" endtime="20201103 01:20:52.319" starttime="20201103 01:20:52.317"></status>
</kw>
<status status="PASS" endtime="20201103 01:20:52.319" starttime="20201103 01:20:52.313"></status>
</kw>
<msg timestamp="20201103 01:20:52.319" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-46.txt</msg>
<status status="PASS" endtime="20201103 01:20:52.320" starttime="20201103 01:20:52.313"></status>
</kw>
<msg timestamp="20201103 01:20:52.320" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-46.txt</msg>
<status status="PASS" endtime="20201103 01:20:52.320" starttime="20201103 01:20:52.312"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:20:52.324" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-46.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:21:36.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:21:36.505" level="INFO">${output} = 2020-11-03 01:20:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:54 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:21:36.505" starttime="20201103 01:20:52.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:21:36.510" level="INFO">2020-11-03 01:20:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-03 01:20:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 01:20:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:55 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 01:20:55 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:20:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:20:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:20:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:20:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F2ED8B1B3C4C-&gt;5edba961-10b5-433e-b4ff-05a8868516f4
2020-11-03 01:20:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:20:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 01:21:01 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 01:21:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604366239887_0004
2020-11-03 01:21:01 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 01:21:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:21:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:21:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:21:02 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 01:21:02 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 01:21:02 INFO  YarnClientImpl:324 - Submitted application application_1604366239887_0004
2020-11-03 01:21:02 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604366239887_0004/
2020-11-03 01:21:02 INFO  Job:1619 - Running job: job_1604366239887_0004
2020-11-03 01:21:10 INFO  Job:1640 - Job job_1604366239887_0004 running in uber mode : false
2020-11-03 01:21:10 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 01:21:17 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 01:21:23 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 01:21:29 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 01:21:36 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 01:21:36 INFO  Job:1658 - Job job_1604366239887_0004 completed successfully
2020-11-03 01:21:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:21:36 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44804
		Total time spent by all reduces in occupied slots (ms)=16788
		Total time spent by all map tasks (ms)=11201
		Total time spent by all reduce tasks (ms)=4197
		Total vcore-milliseconds taken by all map tasks=11201
		Total vcore-milliseconds taken by all reduce tasks=4197
		Total megabyte-milliseconds taken by all map tasks=45879296
		Total megabyte-milliseconds taken by all reduce tasks=17190912
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=624
		CPU time spent (ms)=7650
		Physical memory (bytes) snapshot=1132343296
		Virtual memory (bytes) snapshot=16038420480
		Total committed heap usage (bytes)=1059586048
		Peak Map Physical memory (bytes)=291229696
		Peak Map Virtual memory (bytes)=4008869888
		Peak Reduce Physical memory (bytes)=298160128
		Peak Reduce Virtual memory (bytes)=4037496832
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-03 01:21:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 01:21:36.510" starttime="20201103 01:21:36.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:21:36.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:21:36.514" starttime="20201103 01:21:36.510"></status>
</kw>
<status status="PASS" endtime="20201103 01:21:36.515" starttime="20201103 01:20:52.321"></status>
</kw>
<msg timestamp="20201103 01:21:36.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:21:36.515" starttime="20201103 01:20:52.320"></status>
</kw>
<msg timestamp="20201103 01:21:36.516" level="INFO">${output} = 2020-11-03 01:20:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:20:54 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:21:36.516" starttime="20201103 01:20:52.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 01:21:36.516" starttime="20201103 01:21:36.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:21:36.517" starttime="20201103 01:21:36.516"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:21:36.517" critical="yes" starttime="20201103 01:20:52.281"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 01:21:36.518" starttime="20201103 01:20:12.763"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:18:29.997" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:18:30.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:18:30.004" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:18:30.004" starttime="20201103 01:18:29.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:18:30.005" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:18:30.005" starttime="20201103 01:18:30.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:18:30.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:18:30.006" starttime="20201103 01:18:30.005"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:30.006" starttime="20201103 01:18:29.991"></status>
</kw>
<msg timestamp="20201103 01:18:30.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:18:30.006" starttime="20201103 01:18:29.991"></status>
</kw>
<msg timestamp="20201103 01:18:30.006" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:18:30.006" starttime="20201103 01:18:29.990"></status>
</kw>
<msg timestamp="20201103 01:18:30.006" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:18:30.007" starttime="20201103 01:18:29.990"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:18:30.010" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:18:30.010" starttime="20201103 01:18:30.010"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:18:30.011" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:18:30.011" starttime="20201103 01:18:30.010"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:30.011" starttime="20201103 01:18:30.009"></status>
</kw>
<msg timestamp="20201103 01:18:30.011" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:18:30.011" starttime="20201103 01:18:30.009"></status>
</kw>
<status status="PASS" endtime="20201103 01:18:30.012" starttime="20201103 01:18:30.008"></status>
</kw>
<msg timestamp="20201103 01:18:30.012" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:18:30.012" starttime="20201103 01:18:30.007"></status>
</kw>
<msg timestamp="20201103 01:18:30.012" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:18:30.012" starttime="20201103 01:18:30.007"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:18:30.016" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:19:13.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:19:13.716" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:18:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18...</msg>
<status status="PASS" endtime="20201103 01:19:13.716" starttime="20201103 01:18:30.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:19:13.717" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:18:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:32 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 01:18:32 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:18:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:18:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:18:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:18:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C24D369DB982-&gt;5edba961-10b5-433e-b4ff-05a8868516f4
2020-11-03 01:18:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 01:18:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-03 01:18:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:34 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 01:18:34 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 01:18:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604366239887_0001
2020-11-03 01:18:34 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 01:18:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:35 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 01:18:35 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 01:18:35 INFO  YarnClientImpl:324 - Submitted application application_1604366239887_0001
2020-11-03 01:18:35 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604366239887_0001/
2020-11-03 01:18:35 INFO  Job:1619 - Running job: job_1604366239887_0001
2020-11-03 01:18:46 INFO  Job:1640 - Job job_1604366239887_0001 running in uber mode : false
2020-11-03 01:18:46 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 01:18:54 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 01:18:59 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 01:19:05 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 01:19:11 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 01:19:12 INFO  Job:1658 - Job job_1604366239887_0001 completed successfully
2020-11-03 01:19:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:13 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021529
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46880
		Total time spent by all reduces in occupied slots (ms)=17188
		Total time spent by all map tasks (ms)=11720
		Total time spent by all reduce tasks (ms)=4297
		Total vcore-milliseconds taken by all map tasks=11720
		Total vcore-milliseconds taken by all reduce tasks=4297
		Total megabyte-milliseconds taken by all map tasks=48005120
		Total megabyte-milliseconds taken by all reduce tasks=17600512
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=666
		CPU time spent (ms)=7970
		Physical memory (bytes) snapshot=1182416896
		Virtual memory (bytes) snapshot=16072642560
		Total committed heap usage (bytes)=1063256064
		Peak Map Physical memory (bytes)=295415808
		Peak Map Virtual memory (bytes)=4013764608
		Peak Reduce Physical memory (bytes)=301019136
		Peak Reduce Virtual memory (bytes)=4031873024
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.443 seconds
2020-11-03 01:19:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:13 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-03 01:19:13 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 01:19:13.717" starttime="20201103 01:19:13.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:19:13.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:19:13.718" starttime="20201103 01:19:13.717"></status>
</kw>
<status status="PASS" endtime="20201103 01:19:13.718" starttime="20201103 01:18:30.013"></status>
</kw>
<msg timestamp="20201103 01:19:13.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:19:13.719" starttime="20201103 01:18:30.013"></status>
</kw>
<msg timestamp="20201103 01:19:13.719" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:18:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:18...</msg>
<status status="PASS" endtime="20201103 01:19:13.719" starttime="20201103 01:18:30.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:19:13.720" starttime="20201103 01:19:13.719"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:19:13.720" critical="yes" starttime="20201103 01:18:29.989"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:19:13.726" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:19:13.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:19:13.733" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:19:13.733" starttime="20201103 01:19:13.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:19:13.734" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:19:13.734" starttime="20201103 01:19:13.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:19:13.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:19:13.735" starttime="20201103 01:19:13.734"></status>
</kw>
<status status="PASS" endtime="20201103 01:19:13.735" starttime="20201103 01:19:13.723"></status>
</kw>
<msg timestamp="20201103 01:19:13.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:19:13.735" starttime="20201103 01:19:13.722"></status>
</kw>
<msg timestamp="20201103 01:19:13.735" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:19:13.735" starttime="20201103 01:19:13.722"></status>
</kw>
<msg timestamp="20201103 01:19:13.736" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 01:19:13.736" starttime="20201103 01:19:13.722"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:19:13.737" level="INFO">${random} = 01</msg>
<status status="PASS" endtime="20201103 01:19:13.737" starttime="20201103 01:19:13.736"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:19:13.740" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:19:13.740" starttime="20201103 01:19:13.740"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:19:13.741" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:19:13.741" starttime="20201103 01:19:13.741"></status>
</kw>
<status status="PASS" endtime="20201103 01:19:13.741" starttime="20201103 01:19:13.739"></status>
</kw>
<msg timestamp="20201103 01:19:13.741" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:19:13.741" starttime="20201103 01:19:13.739"></status>
</kw>
<status status="PASS" endtime="20201103 01:19:13.742" starttime="20201103 01:19:13.738"></status>
</kw>
<msg timestamp="20201103 01:19:13.742" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:19:13.742" starttime="20201103 01:19:13.737"></status>
</kw>
<msg timestamp="20201103 01:19:13.742" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:19:13.742" starttime="20201103 01:19:13.737"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:19:13.745" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:19:13.745" starttime="20201103 01:19:13.745"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:19:13.746" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:19:13.746" starttime="20201103 01:19:13.746"></status>
</kw>
<status status="PASS" endtime="20201103 01:19:13.746" starttime="20201103 01:19:13.745"></status>
</kw>
<msg timestamp="20201103 01:19:13.746" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:19:13.746" starttime="20201103 01:19:13.744"></status>
</kw>
<status status="PASS" endtime="20201103 01:19:13.747" starttime="20201103 01:19:13.743"></status>
</kw>
<msg timestamp="20201103 01:19:13.747" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 01:19:13.747" starttime="20201103 01:19:13.743"></status>
</kw>
<msg timestamp="20201103 01:19:13.747" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 01:19:13.747" starttime="20201103 01:19:13.742"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:19:13.750" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:19:13.750" starttime="20201103 01:19:13.750"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:19:13.751" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:19:13.751" starttime="20201103 01:19:13.750"></status>
</kw>
<status status="PASS" endtime="20201103 01:19:13.751" starttime="20201103 01:19:13.749"></status>
</kw>
<msg timestamp="20201103 01:19:13.751" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:19:13.751" starttime="20201103 01:19:13.749"></status>
</kw>
<status status="PASS" endtime="20201103 01:19:13.751" starttime="20201103 01:19:13.748"></status>
</kw>
<msg timestamp="20201103 01:19:13.752" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-01.txt</msg>
<status status="PASS" endtime="20201103 01:19:13.752" starttime="20201103 01:19:13.748"></status>
</kw>
<msg timestamp="20201103 01:19:13.753" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-01.txt</msg>
<status status="PASS" endtime="20201103 01:19:13.753" starttime="20201103 01:19:13.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:19:13.756" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-01.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:19:56.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:19:56.224" level="INFO">${output} = 2020-11-03 01:19:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:19:56.224" starttime="20201103 01:19:13.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:19:56.225" level="INFO">2020-11-03 01:19:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-03 01:19:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 01:19:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:16 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 01:19:16 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 01:19:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:19:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:19:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:19:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-617F7D72573A-&gt;5edba961-10b5-433e-b4ff-05a8868516f4
2020-11-03 01:19:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:19:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 01:19:18 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 01:19:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604366239887_0002
2020-11-03 01:19:18 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 01:19:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:19 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 01:19:19 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 01:19:19 INFO  YarnClientImpl:324 - Submitted application application_1604366239887_0002
2020-11-03 01:19:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604366239887_0002/
2020-11-03 01:19:19 INFO  Job:1619 - Running job: job_1604366239887_0002
2020-11-03 01:19:27 INFO  Job:1640 - Job job_1604366239887_0002 running in uber mode : false
2020-11-03 01:19:27 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 01:19:34 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 01:19:40 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 01:19:46 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 01:19:51 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 01:19:55 INFO  Job:1658 - Job job_1604366239887_0002 completed successfully
2020-11-03 01:19:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44964
		Total time spent by all reduces in occupied slots (ms)=16380
		Total time spent by all map tasks (ms)=11241
		Total time spent by all reduce tasks (ms)=4095
		Total vcore-milliseconds taken by all map tasks=11241
		Total vcore-milliseconds taken by all reduce tasks=4095
		Total megabyte-milliseconds taken by all map tasks=46043136
		Total megabyte-milliseconds taken by all reduce tasks=16773120
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=647
		CPU time spent (ms)=7470
		Physical memory (bytes) snapshot=1133395968
		Virtual memory (bytes) snapshot=16053334016
		Total committed heap usage (bytes)=1027604480
		Peak Map Physical memory (bytes)=293494784
		Peak Map Virtual memory (bytes)=4014026752
		Peak Reduce Physical memory (bytes)=259518464
		Peak Reduce Virtual memory (bytes)=4019105792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-03 01:19:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 01:19:56.225" starttime="20201103 01:19:56.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:19:56.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:19:56.226" starttime="20201103 01:19:56.225"></status>
</kw>
<status status="PASS" endtime="20201103 01:19:56.226" starttime="20201103 01:19:13.754"></status>
</kw>
<msg timestamp="20201103 01:19:56.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:19:56.226" starttime="20201103 01:19:13.753"></status>
</kw>
<msg timestamp="20201103 01:19:56.228" level="INFO">${output} = 2020-11-03 01:19:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 01:19:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 01:19:56.228" starttime="20201103 01:19:13.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 01:19:56.228" starttime="20201103 01:19:56.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:19:56.229" starttime="20201103 01:19:56.229"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:19:56.229" critical="yes" starttime="20201103 01:19:13.721"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 01:19:56.231" starttime="20201103 01:18:29.928"></status>
</suite>
<status status="PASS" elapsedtime="215098" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:22:50.633" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:22:55.061" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 01:22:55.061" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 01:22:55.061" starttime="20201103 01:22:50.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:22:55.062" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 01:22:55.062" starttime="20201103 01:22:55.061"></status>
</kw>
<msg timestamp="20201103 01:22:55.063" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 01:22:55.063" starttime="20201103 01:22:50.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:22:55.071" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:22:59.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:22:59.381" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:22:59.381" starttime="20201103 01:22:55.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:22:59.382" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:22:59.382" starttime="20201103 01:22:59.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:22:59.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:22:59.383" starttime="20201103 01:22:59.382"></status>
</kw>
<status status="PASS" endtime="20201103 01:22:59.383" starttime="20201103 01:22:55.067"></status>
</kw>
<msg timestamp="20201103 01:22:59.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:22:59.383" starttime="20201103 01:22:55.066"></status>
</kw>
<msg timestamp="20201103 01:22:59.384" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201103 01:22:59.384" starttime="20201103 01:22:55.065"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 01:22:59.384" starttime="20201103 01:22:59.384"></status>
</kw>
<status status="PASS" endtime="20201103 01:22:59.385" starttime="20201103 01:22:55.064"></status>
</kw>
<status status="PASS" endtime="20201103 01:22:59.385" starttime="20201103 01:22:55.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:22:59.391" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:03.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:03.130" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:23:03.130" starttime="20201103 01:22:59.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:03.131" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:23:03.132" starttime="20201103 01:23:03.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:03.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:03.132" starttime="20201103 01:23:03.132"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:03.133" starttime="20201103 01:22:59.387"></status>
</kw>
<msg timestamp="20201103 01:23:03.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:03.134" starttime="20201103 01:22:59.386"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:03.134" starttime="20201103 01:22:59.386"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:03.134" starttime="20201103 01:22:59.385"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:03.134" starttime="20201103 01:22:59.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 01:23:03.135" starttime="20201103 01:23:03.135"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:03.140" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:07.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:07.130" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:23:02.741Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 01:23:07.130" starttime="20201103 01:23:03.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:07.132" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:23:02.741Z",
  "modificationTime" : "2020-11-03T01:23:02.741Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 01:23:07.132" starttime="20201103 01:23:07.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:07.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:07.133" starttime="20201103 01:23:07.132"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:07.133" starttime="20201103 01:23:03.136"></status>
</kw>
<msg timestamp="20201103 01:23:07.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:07.133" starttime="20201103 01:23:03.136"></status>
</kw>
<msg timestamp="20201103 01:23:07.133" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:23:02.741Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 01:23:07.134" starttime="20201103 01:23:03.135"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 01:23:07.134" starttime="20201103 01:23:07.134"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:23:07.139" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:23:07.139" starttime="20201103 01:23:07.138"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:23:07.140" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:23:07.140" starttime="20201103 01:23:07.139"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:07.140" starttime="20201103 01:23:07.137"></status>
</kw>
<msg timestamp="20201103 01:23:07.140" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:23:07.140" starttime="20201103 01:23:07.137"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:07.141" starttime="20201103 01:23:07.136"></status>
</kw>
<msg timestamp="20201103 01:23:07.141" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 01:23:07.141" starttime="20201103 01:23:07.135"></status>
</kw>
<msg timestamp="20201103 01:23:07.141" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 01:23:07.141" starttime="20201103 01:23:07.134"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:07.145" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:10.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:10.874" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:23:10.874" starttime="20201103 01:23:07.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:10.876" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:23:10.876" starttime="20201103 01:23:10.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:10.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:10.877" starttime="20201103 01:23:10.876"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:10.877" starttime="20201103 01:23:07.142"></status>
</kw>
<msg timestamp="20201103 01:23:10.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:10.877" starttime="20201103 01:23:07.142"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:10.877" starttime="20201103 01:23:07.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:10.882" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:18.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:18.487" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:23:18.487" starttime="20201103 01:23:10.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:18.489" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:23:18.489" starttime="20201103 01:23:18.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:18.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:18.490" starttime="20201103 01:23:18.489"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:18.490" starttime="20201103 01:23:10.879"></status>
</kw>
<msg timestamp="20201103 01:23:18.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:18.490" starttime="20201103 01:23:10.878"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:18.490" starttime="20201103 01:23:10.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:18.494" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:24.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:24.739" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:23:24.739" starttime="20201103 01:23:18.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:24.741" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:23:24.741" starttime="20201103 01:23:24.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:24.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:24.742" starttime="20201103 01:23:24.741"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:24.742" starttime="20201103 01:23:18.492"></status>
</kw>
<msg timestamp="20201103 01:23:24.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:24.742" starttime="20201103 01:23:18.491"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:24.742" starttime="20201103 01:23:18.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:24.748" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:30.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:30.810" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:23:30.810" starttime="20201103 01:23:24.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:30.811" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:23:30.811" starttime="20201103 01:23:30.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:30.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:30.812" starttime="20201103 01:23:30.812"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:30.813" starttime="20201103 01:23:24.744"></status>
</kw>
<msg timestamp="20201103 01:23:30.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:30.813" starttime="20201103 01:23:24.743"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:30.813" starttime="20201103 01:23:24.743"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:23:30.813" critical="yes" starttime="20201103 01:22:50.622"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:23:30.819" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:23:30.819" starttime="20201103 01:23:30.818"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:23:30.820" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:23:30.820" starttime="20201103 01:23:30.819"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:30.820" starttime="20201103 01:23:30.818"></status>
</kw>
<msg timestamp="20201103 01:23:30.820" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:23:30.820" starttime="20201103 01:23:30.817"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:30.821" starttime="20201103 01:23:30.817"></status>
</kw>
<msg timestamp="20201103 01:23:30.821" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 01:23:30.821" starttime="20201103 01:23:30.816"></status>
</kw>
<msg timestamp="20201103 01:23:30.821" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 01:23:30.821" starttime="20201103 01:23:30.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:30.825" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:34.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:34.632" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:23:34.632" starttime="20201103 01:23:30.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:34.634" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:23:34.635" starttime="20201103 01:23:34.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:34.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:34.636" starttime="20201103 01:23:34.635"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:34.637" starttime="20201103 01:23:30.822"></status>
</kw>
<msg timestamp="20201103 01:23:34.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:34.637" starttime="20201103 01:23:30.822"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:34.637" starttime="20201103 01:23:30.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:34.643" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:38.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:38.296" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:23:38.296" starttime="20201103 01:23:34.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:38.298" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:23:38.298" starttime="20201103 01:23:38.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:38.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:38.298" starttime="20201103 01:23:38.298"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:38.299" starttime="20201103 01:23:34.638"></status>
</kw>
<msg timestamp="20201103 01:23:38.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:38.299" starttime="20201103 01:23:34.638"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:38.299" starttime="20201103 01:23:34.637"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:23:38.299" critical="yes" starttime="20201103 01:23:30.814"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201103 01:23:38.301" starttime="20201103 01:22:50.546"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:25:33.105" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:25:33.105" starttime="20201103 01:25:33.104"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:25:33.105" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:25:33.105" starttime="20201103 01:25:33.105"></status>
</kw>
<status status="PASS" endtime="20201103 01:25:33.107" starttime="20201103 01:25:33.104"></status>
</kw>
<msg timestamp="20201103 01:25:33.107" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:25:33.107" starttime="20201103 01:25:33.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:25:33.108" starttime="20201103 01:25:33.108"></status>
</kw>
<msg timestamp="20201103 01:25:33.108" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 01:25:33.108" starttime="20201103 01:25:33.107"></status>
</kw>
<status status="PASS" endtime="20201103 01:25:33.109" starttime="20201103 01:25:33.103"></status>
</kw>
<msg timestamp="20201103 01:25:33.109" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:25:33.109" starttime="20201103 01:25:33.102"></status>
</kw>
<msg timestamp="20201103 01:25:33.109" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:25:33.109" starttime="20201103 01:25:33.101"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:25:33.110" level="INFO">${random} = 10841</msg>
<status status="PASS" endtime="20201103 01:25:33.110" starttime="20201103 01:25:33.109"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:25:33.116" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-10841 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:25:36.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:25:36.979" level="INFO">${output} = 2020-11-03 01:25:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:25:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 01:25:36.979" starttime="20201103 01:25:33.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:25:36.980" level="INFO">2020-11-03 01:25:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:25:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:25:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:25:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:25:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-606376530AAE-&gt;5fedd3dd-fa91-45eb-a2f6-a97bd6f51569
2020-11-03 01:25:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 01:25:36.981" starttime="20201103 01:25:36.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:25:36.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:25:36.981" starttime="20201103 01:25:36.981"></status>
</kw>
<status status="PASS" endtime="20201103 01:25:36.982" starttime="20201103 01:25:33.111"></status>
</kw>
<msg timestamp="20201103 01:25:36.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:25:36.982" starttime="20201103 01:25:33.110"></status>
</kw>
<msg timestamp="20201103 01:25:36.982" level="INFO">${result} = 2020-11-03 01:25:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:25:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 01:25:36.982" starttime="20201103 01:25:33.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:25:36.986" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:25:39.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:25:39.016" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 01:25 ofs://om/volume1/bucket1/ozone-10841
-rw-...</msg>
<status status="PASS" endtime="20201103 01:25:39.016" starttime="20201103 01:25:36.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:25:39.017" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 01:25 ofs://om/volume1/bucket1/ozone-10841
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 01:23 ofs://om/volume1/bucket1/ozone-58393
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:23 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:25 ofs://om/volume1/bucket1/wordcount-29.txt</msg>
<status status="PASS" endtime="20201103 01:25:39.017" starttime="20201103 01:25:39.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:25:39.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:25:39.018" starttime="20201103 01:25:39.018"></status>
</kw>
<status status="PASS" endtime="20201103 01:25:39.018" starttime="20201103 01:25:36.983"></status>
</kw>
<msg timestamp="20201103 01:25:39.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:25:39.019" starttime="20201103 01:25:36.983"></status>
</kw>
<msg timestamp="20201103 01:25:39.019" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 01:25 ofs://om/volume1/bucket1/ozone-10841
-rw-...</msg>
<status status="PASS" endtime="20201103 01:25:39.019" starttime="20201103 01:25:36.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:25:39.019" starttime="20201103 01:25:39.019"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:25:39.020" critical="yes" starttime="20201103 01:25:33.100"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 01:25:39.021" starttime="20201103 01:25:33.036"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:23:43.733" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:23:43.733" starttime="20201103 01:23:43.733"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:23:43.734" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:23:43.734" starttime="20201103 01:23:43.733"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:43.734" starttime="20201103 01:23:43.732"></status>
</kw>
<msg timestamp="20201103 01:23:43.734" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:23:43.734" starttime="20201103 01:23:43.732"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:43.734" starttime="20201103 01:23:43.731"></status>
</kw>
<msg timestamp="20201103 01:23:43.735" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:23:43.735" starttime="20201103 01:23:43.731"></status>
</kw>
<msg timestamp="20201103 01:23:43.735" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:23:43.735" starttime="20201103 01:23:43.729"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:23:43.735" level="INFO">${random} = 58393</msg>
<status status="PASS" endtime="20201103 01:23:43.735" starttime="20201103 01:23:43.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:43.741" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-58393 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:47.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:47.919" level="INFO">${output} = 2020-11-03 01:23:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:23:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 01:23:47.919" starttime="20201103 01:23:43.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:47.920" level="INFO">2020-11-03 01:23:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:23:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:23:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:23:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:23:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D267BAF3117B-&gt;5fedd3dd-fa91-45eb-a2f6-a97bd6f51569
2020-11-03 01:23:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 01:23:47.920" starttime="20201103 01:23:47.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:47.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:47.921" starttime="20201103 01:23:47.920"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:47.921" starttime="20201103 01:23:43.736"></status>
</kw>
<msg timestamp="20201103 01:23:47.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:47.922" starttime="20201103 01:23:43.736"></status>
</kw>
<msg timestamp="20201103 01:23:47.922" level="INFO">${result} = 2020-11-03 01:23:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:23:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 01:23:47.922" starttime="20201103 01:23:43.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:47.926" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:50.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:50.079" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 01:23 o3fs://bucket1.volume1.om/ozone-58393
dr...</msg>
<status status="PASS" endtime="20201103 01:23:50.079" starttime="20201103 01:23:47.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:50.081" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 01:23 o3fs://bucket1.volume1.om/ozone-58393
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:23 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 01:23:50.081" starttime="20201103 01:23:50.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:50.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:50.081" starttime="20201103 01:23:50.081"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:50.082" starttime="20201103 01:23:47.923"></status>
</kw>
<msg timestamp="20201103 01:23:50.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:50.082" starttime="20201103 01:23:47.923"></status>
</kw>
<msg timestamp="20201103 01:23:50.082" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 01:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 01:23 o3fs://bucket1.volume1.om/ozone-58393
dr...</msg>
<status status="PASS" endtime="20201103 01:23:50.082" starttime="20201103 01:23:47.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:23:50.083" starttime="20201103 01:23:50.082"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:23:50.083" critical="yes" starttime="20201103 01:23:43.727"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 01:23:50.084" starttime="20201103 01:23:43.668"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:25:44.322" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:25:44.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:25:44.328" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:25:44.328" starttime="20201103 01:25:44.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:25:44.329" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:25:44.329" starttime="20201103 01:25:44.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:25:44.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:25:44.330" starttime="20201103 01:25:44.329"></status>
</kw>
<status status="PASS" endtime="20201103 01:25:44.330" starttime="20201103 01:25:44.317"></status>
</kw>
<msg timestamp="20201103 01:25:44.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:25:44.331" starttime="20201103 01:25:44.317"></status>
</kw>
<msg timestamp="20201103 01:25:44.331" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:25:44.331" starttime="20201103 01:25:44.317"></status>
</kw>
<msg timestamp="20201103 01:25:44.331" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:25:44.331" starttime="20201103 01:25:44.316"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:25:44.336" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:25:44.336" starttime="20201103 01:25:44.336"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:25:44.337" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:25:44.337" starttime="20201103 01:25:44.336"></status>
</kw>
<status status="PASS" endtime="20201103 01:25:44.337" starttime="20201103 01:25:44.335"></status>
</kw>
<msg timestamp="20201103 01:25:44.337" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:25:44.337" starttime="20201103 01:25:44.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:25:44.339" starttime="20201103 01:25:44.338"></status>
</kw>
<msg timestamp="20201103 01:25:44.339" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 01:25:44.339" starttime="20201103 01:25:44.337"></status>
</kw>
<status status="PASS" endtime="20201103 01:25:44.339" starttime="20201103 01:25:44.333"></status>
</kw>
<msg timestamp="20201103 01:25:44.339" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:25:44.339" starttime="20201103 01:25:44.332"></status>
</kw>
<msg timestamp="20201103 01:25:44.340" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:25:44.340" starttime="20201103 01:25:44.331"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:25:44.345" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:26:24.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:26:24.728" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:25:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:25:46 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 01:26:24.728" starttime="20201103 01:25:44.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:26:24.729" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:25:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:25:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:25:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:25:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:25:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D783F2DB0207-&gt;5fedd3dd-fa91-45eb-a2f6-a97bd6f51569
2020-11-03 01:25:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 01:25:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-03 01:25:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 01:25:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 01:25:48 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 01:25:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604366546952_0003
2020-11-03 01:25:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 01:25:49 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 01:25:49 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 01:25:49 INFO  YarnClientImpl:329 - Submitted application application_1604366546952_0003
2020-11-03 01:25:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604366546952_0003/
2020-11-03 01:25:49 INFO  Job:1619 - Running job: job_1604366546952_0003
2020-11-03 01:25:57 INFO  Job:1640 - Job job_1604366546952_0003 running in uber mode : false
2020-11-03 01:25:57 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 01:26:04 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 01:26:10 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 01:26:16 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 01:26:23 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 01:26:24 INFO  Job:1658 - Job job_1604366546952_0003 completed successfully
2020-11-03 01:26:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44520
		Total time spent by all reduces in occupied slots (ms)=17028
		Total time spent by all map tasks (ms)=11130
		Total time spent by all reduce tasks (ms)=4257
		Total vcore-milliseconds taken by all map tasks=11130
		Total vcore-milliseconds taken by all reduce tasks=4257
		Total megabyte-milliseconds taken by all map tasks=45588480
		Total megabyte-milliseconds taken by all reduce tasks=17436672
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=677
		CPU time spent (ms)=8160
		Physical memory (bytes) snapshot=1491542016
		Virtual memory (bytes) snapshot=16082931712
		Total committed heap usage (bytes)=1741684736
		Peak Map Physical memory (bytes)=372543488
		Peak Map Virtual memory (bytes)=4017307648
		Peak Reduce Physical memory (bytes)=380915712
		Peak Reduce Virtual memory (bytes)=4036489216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.103 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 01:26:24.729" starttime="20201103 01:26:24.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:26:24.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:26:24.730" starttime="20201103 01:26:24.730"></status>
</kw>
<status status="PASS" endtime="20201103 01:26:24.730" starttime="20201103 01:25:44.341"></status>
</kw>
<msg timestamp="20201103 01:26:24.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:26:24.731" starttime="20201103 01:25:44.340"></status>
</kw>
<msg timestamp="20201103 01:26:24.731" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:25:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:25:46 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 01:26:24.731" starttime="20201103 01:25:44.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:26:24.732" starttime="20201103 01:26:24.731"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:26:24.732" critical="yes" starttime="20201103 01:25:44.316"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:26:24.739" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:26:24.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:26:24.745" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:26:24.745" starttime="20201103 01:26:24.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:26:24.746" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:26:24.746" starttime="20201103 01:26:24.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:26:24.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:26:24.747" starttime="20201103 01:26:24.747"></status>
</kw>
<status status="PASS" endtime="20201103 01:26:24.748" starttime="20201103 01:26:24.735"></status>
</kw>
<msg timestamp="20201103 01:26:24.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:26:24.748" starttime="20201103 01:26:24.735"></status>
</kw>
<msg timestamp="20201103 01:26:24.748" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:26:24.748" starttime="20201103 01:26:24.734"></status>
</kw>
<msg timestamp="20201103 01:26:24.748" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:26:24.748" starttime="20201103 01:26:24.734"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:26:24.749" level="INFO">${random} = 52</msg>
<status status="PASS" endtime="20201103 01:26:24.749" starttime="20201103 01:26:24.749"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:26:24.753" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:26:24.753" starttime="20201103 01:26:24.752"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:26:24.753" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:26:24.754" starttime="20201103 01:26:24.753"></status>
</kw>
<status status="PASS" endtime="20201103 01:26:24.754" starttime="20201103 01:26:24.752"></status>
</kw>
<msg timestamp="20201103 01:26:24.754" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:26:24.754" starttime="20201103 01:26:24.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:26:24.755" starttime="20201103 01:26:24.755"></status>
</kw>
<msg timestamp="20201103 01:26:24.755" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 01:26:24.755" starttime="20201103 01:26:24.754"></status>
</kw>
<status status="PASS" endtime="20201103 01:26:24.755" starttime="20201103 01:26:24.751"></status>
</kw>
<msg timestamp="20201103 01:26:24.755" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:26:24.755" starttime="20201103 01:26:24.750"></status>
</kw>
<msg timestamp="20201103 01:26:24.756" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 01:26:24.756" starttime="20201103 01:26:24.749"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:26:24.759" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:26:24.759" starttime="20201103 01:26:24.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:26:24.760" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:26:24.760" starttime="20201103 01:26:24.759"></status>
</kw>
<status status="PASS" endtime="20201103 01:26:24.760" starttime="20201103 01:26:24.758"></status>
</kw>
<msg timestamp="20201103 01:26:24.760" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:26:24.760" starttime="20201103 01:26:24.758"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:26:24.762" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201103 01:26:24.762" starttime="20201103 01:26:24.761"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:26:24.764" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201103 01:26:24.764" starttime="20201103 01:26:24.762"></status>
</kw>
<status status="PASS" endtime="20201103 01:26:24.764" starttime="20201103 01:26:24.761"></status>
</kw>
<msg timestamp="20201103 01:26:24.764" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201103 01:26:24.764" starttime="20201103 01:26:24.760"></status>
</kw>
<status status="PASS" endtime="20201103 01:26:24.765" starttime="20201103 01:26:24.757"></status>
</kw>
<msg timestamp="20201103 01:26:24.765" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 01:26:24.765" starttime="20201103 01:26:24.756"></status>
</kw>
<msg timestamp="20201103 01:26:24.765" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 01:26:24.765" starttime="20201103 01:26:24.756"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 01:26:24.770" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 01:26:24.770" starttime="20201103 01:26:24.769"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:26:24.771" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 01:26:24.771" starttime="20201103 01:26:24.770"></status>
</kw>
<status status="PASS" endtime="20201103 01:26:24.771" starttime="20201103 01:26:24.769"></status>
</kw>
<msg timestamp="20201103 01:26:24.771" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 01:26:24.771" starttime="20201103 01:26:24.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:26:24.773" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201103 01:26:24.773" starttime="20201103 01:26:24.772"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:26:24.773" level="INFO">${result} = /wordcount-52.txt</msg>
<status status="PASS" endtime="20201103 01:26:24.773" starttime="20201103 01:26:24.773"></status>
</kw>
<status status="PASS" endtime="20201103 01:26:24.774" starttime="20201103 01:26:24.772"></status>
</kw>
<msg timestamp="20201103 01:26:24.774" level="INFO">${path_with_leading} = /wordcount-52.txt</msg>
<status status="PASS" endtime="20201103 01:26:24.774" starttime="20201103 01:26:24.771"></status>
</kw>
<status status="PASS" endtime="20201103 01:26:24.774" starttime="20201103 01:26:24.767"></status>
</kw>
<msg timestamp="20201103 01:26:24.774" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-52.txt</msg>
<status status="PASS" endtime="20201103 01:26:24.774" starttime="20201103 01:26:24.766"></status>
</kw>
<msg timestamp="20201103 01:26:24.774" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-52.txt</msg>
<status status="PASS" endtime="20201103 01:26:24.774" starttime="20201103 01:26:24.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:26:24.780" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-52.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:27:07.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:27:07.451" level="INFO">${output} = 2020-11-03 01:26:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-03 01:26:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 01:27:07.451" starttime="20201103 01:26:24.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:27:07.452" level="INFO">2020-11-03 01:26:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-03 01:26:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 01:26:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:26:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:26:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:26:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:26:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DE34DA038DF0-&gt;5fedd3dd-fa91-45eb-a2f6-a97bd6f51569
2020-11-03 01:26:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:26:29 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 01:26:31 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 01:26:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604366546952_0004
2020-11-03 01:26:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 01:26:32 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 01:26:32 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 01:26:32 INFO  YarnClientImpl:329 - Submitted application application_1604366546952_0004
2020-11-03 01:26:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604366546952_0004/
2020-11-03 01:26:32 INFO  Job:1619 - Running job: job_1604366546952_0004
2020-11-03 01:26:41 INFO  Job:1640 - Job job_1604366546952_0004 running in uber mode : false
2020-11-03 01:26:41 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 01:26:48 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 01:26:54 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 01:26:59 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 01:27:05 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 01:27:06 INFO  Job:1658 - Job job_1604366546952_0004 completed successfully
2020-11-03 01:27:07 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45596
		Total time spent by all reduces in occupied slots (ms)=18040
		Total time spent by all map tasks (ms)=11399
		Total time spent by all reduce tasks (ms)=4510
		Total vcore-milliseconds taken by all map tasks=11399
		Total vcore-milliseconds taken by all reduce tasks=4510
		Total megabyte-milliseconds taken by all map tasks=46690304
		Total megabyte-milliseconds taken by all reduce tasks=18472960
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=667
		CPU time spent (ms)=8520
		Physical memory (bytes) snapshot=1409019904
		Virtual memory (bytes) snapshot=16093814784
		Total committed heap usage (bytes)=1545076736
		Peak Map Physical memory (bytes)=366813184
		Peak Map Virtual memory (bytes)=4019728384
		Peak Reduce Physical memory (bytes)=378183680
		Peak Reduce Virtual memory (bytes)=4039610368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 01:27:07.452" starttime="20201103 01:27:07.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:27:07.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:27:07.453" starttime="20201103 01:27:07.453"></status>
</kw>
<status status="PASS" endtime="20201103 01:27:07.454" starttime="20201103 01:26:24.775"></status>
</kw>
<msg timestamp="20201103 01:27:07.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:27:07.454" starttime="20201103 01:26:24.775"></status>
</kw>
<msg timestamp="20201103 01:27:07.454" level="INFO">${output} = 2020-11-03 01:26:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-03 01:26:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 01:27:07.454" starttime="20201103 01:26:24.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 01:27:07.455" starttime="20201103 01:27:07.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:27:07.455" starttime="20201103 01:27:07.455"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:27:07.456" critical="yes" starttime="20201103 01:26:24.733"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 01:27:07.457" starttime="20201103 01:25:44.252"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:55.280" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:23:55.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:23:55.285" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:23:55.286" starttime="20201103 01:23:55.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:23:55.287" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:23:55.287" starttime="20201103 01:23:55.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:23:55.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:23:55.287" starttime="20201103 01:23:55.287"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:55.288" starttime="20201103 01:23:55.268"></status>
</kw>
<msg timestamp="20201103 01:23:55.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:23:55.288" starttime="20201103 01:23:55.268"></status>
</kw>
<msg timestamp="20201103 01:23:55.288" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:23:55.288" starttime="20201103 01:23:55.268"></status>
</kw>
<msg timestamp="20201103 01:23:55.288" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:23:55.288" starttime="20201103 01:23:55.267"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:23:55.292" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:23:55.292" starttime="20201103 01:23:55.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:23:55.293" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:23:55.293" starttime="20201103 01:23:55.293"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:55.293" starttime="20201103 01:23:55.291"></status>
</kw>
<msg timestamp="20201103 01:23:55.294" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:23:55.294" starttime="20201103 01:23:55.291"></status>
</kw>
<status status="PASS" endtime="20201103 01:23:55.294" starttime="20201103 01:23:55.290"></status>
</kw>
<msg timestamp="20201103 01:23:55.294" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:23:55.294" starttime="20201103 01:23:55.289"></status>
</kw>
<msg timestamp="20201103 01:23:55.294" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:23:55.294" starttime="20201103 01:23:55.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:23:55.298" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:24:48.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:24:48.724" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:23:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:23:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 01:24:48.724" starttime="20201103 01:23:55.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:24:48.726" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:23:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:23:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:23:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:23:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:23:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-91D840372483-&gt;5fedd3dd-fa91-45eb-a2f6-a97bd6f51569
2020-11-03 01:23:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 01:24:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-03 01:24:02 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 01:24:04 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 01:24:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604366546952_0001
2020-11-03 01:24:07 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 01:24:07 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 01:24:07 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 01:24:08 INFO  YarnClientImpl:329 - Submitted application application_1604366546952_0001
2020-11-03 01:24:08 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604366546952_0001/
2020-11-03 01:24:08 INFO  Job:1619 - Running job: job_1604366546952_0001
2020-11-03 01:24:19 INFO  Job:1640 - Job job_1604366546952_0001 running in uber mode : false
2020-11-03 01:24:19 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 01:24:26 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 01:24:32 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 01:24:38 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 01:24:46 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 01:24:47 INFO  Job:1658 - Job job_1604366546952_0001 completed successfully
2020-11-03 01:24:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45652
		Total time spent by all reduces in occupied slots (ms)=27012
		Total time spent by all map tasks (ms)=11413
		Total time spent by all reduce tasks (ms)=6753
		Total vcore-milliseconds taken by all map tasks=11413
		Total vcore-milliseconds taken by all reduce tasks=6753
		Total megabyte-milliseconds taken by all map tasks=46747648
		Total megabyte-milliseconds taken by all reduce tasks=27660288
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=636
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1469054976
		Virtual memory (bytes) snapshot=16072454144
		Total committed heap usage (bytes)=1708130304
		Peak Map Physical memory (bytes)=367910912
		Peak Map Virtual memory (bytes)=4017967104
		Peak Reduce Physical memory (bytes)=374829056
		Peak Reduce Virtual memory (bytes)=4035944448
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 46.632 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 01:24:48.726" starttime="20201103 01:24:48.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:24:48.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:24:48.727" starttime="20201103 01:24:48.727"></status>
</kw>
<status status="PASS" endtime="20201103 01:24:48.727" starttime="20201103 01:23:55.295"></status>
</kw>
<msg timestamp="20201103 01:24:48.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:24:48.728" starttime="20201103 01:23:55.295"></status>
</kw>
<msg timestamp="20201103 01:24:48.728" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 01:23:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:23:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 01:24:48.728" starttime="20201103 01:23:55.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:24:48.729" starttime="20201103 01:24:48.728"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:24:48.729" critical="yes" starttime="20201103 01:23:55.266"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:24:48.734" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:24:48.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:24:48.740" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:24:48.741" starttime="20201103 01:24:48.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:24:48.741" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:24:48.742" starttime="20201103 01:24:48.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:24:48.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:24:48.742" starttime="20201103 01:24:48.742"></status>
</kw>
<status status="PASS" endtime="20201103 01:24:48.742" starttime="20201103 01:24:48.732"></status>
</kw>
<msg timestamp="20201103 01:24:48.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:24:48.743" starttime="20201103 01:24:48.731"></status>
</kw>
<msg timestamp="20201103 01:24:48.743" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:24:48.743" starttime="20201103 01:24:48.731"></status>
</kw>
<msg timestamp="20201103 01:24:48.743" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 01:24:48.743" starttime="20201103 01:24:48.730"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:24:48.744" level="INFO">${random} = 29</msg>
<status status="PASS" endtime="20201103 01:24:48.744" starttime="20201103 01:24:48.743"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:24:48.748" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:24:48.748" starttime="20201103 01:24:48.747"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:24:48.748" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:24:48.748" starttime="20201103 01:24:48.748"></status>
</kw>
<status status="PASS" endtime="20201103 01:24:48.748" starttime="20201103 01:24:48.747"></status>
</kw>
<msg timestamp="20201103 01:24:48.749" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:24:48.749" starttime="20201103 01:24:48.746"></status>
</kw>
<status status="PASS" endtime="20201103 01:24:48.749" starttime="20201103 01:24:48.745"></status>
</kw>
<msg timestamp="20201103 01:24:48.749" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:24:48.749" starttime="20201103 01:24:48.745"></status>
</kw>
<msg timestamp="20201103 01:24:48.749" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 01:24:48.749" starttime="20201103 01:24:48.744"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:24:48.752" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:24:48.752" starttime="20201103 01:24:48.752"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:24:48.753" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:24:48.753" starttime="20201103 01:24:48.753"></status>
</kw>
<status status="PASS" endtime="20201103 01:24:48.753" starttime="20201103 01:24:48.751"></status>
</kw>
<msg timestamp="20201103 01:24:48.754" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:24:48.754" starttime="20201103 01:24:48.751"></status>
</kw>
<status status="PASS" endtime="20201103 01:24:48.754" starttime="20201103 01:24:48.750"></status>
</kw>
<msg timestamp="20201103 01:24:48.754" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 01:24:48.754" starttime="20201103 01:24:48.750"></status>
</kw>
<msg timestamp="20201103 01:24:48.754" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 01:24:48.754" starttime="20201103 01:24:48.749"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 01:24:48.758" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 01:24:48.758" starttime="20201103 01:24:48.757"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:24:48.758" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 01:24:48.758" starttime="20201103 01:24:48.758"></status>
</kw>
<status status="PASS" endtime="20201103 01:24:48.759" starttime="20201103 01:24:48.757"></status>
</kw>
<msg timestamp="20201103 01:24:48.759" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 01:24:48.759" starttime="20201103 01:24:48.756"></status>
</kw>
<status status="PASS" endtime="20201103 01:24:48.759" starttime="20201103 01:24:48.756"></status>
</kw>
<msg timestamp="20201103 01:24:48.759" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-29.txt</msg>
<status status="PASS" endtime="20201103 01:24:48.759" starttime="20201103 01:24:48.755"></status>
</kw>
<msg timestamp="20201103 01:24:48.759" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-29.txt</msg>
<status status="PASS" endtime="20201103 01:24:48.759" starttime="20201103 01:24:48.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:24:48.763" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-29.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:25:27.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:25:27.825" level="INFO">${output} = 2020-11-03 01:24:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-03 01:24:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 01:25:27.825" starttime="20201103 01:24:48.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:25:27.827" level="INFO">2020-11-03 01:24:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-03 01:24:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 01:24:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 01:24:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:24:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 01:24:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:24:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4310E65A97D6-&gt;5fedd3dd-fa91-45eb-a2f6-a97bd6f51569
2020-11-03 01:24:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:24:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 01:24:53 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 01:24:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604366546952_0002
2020-11-03 01:24:53 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 01:24:53 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 01:24:53 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 01:24:53 INFO  YarnClientImpl:329 - Submitted application application_1604366546952_0002
2020-11-03 01:24:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604366546952_0002/
2020-11-03 01:24:53 INFO  Job:1619 - Running job: job_1604366546952_0002
2020-11-03 01:25:02 INFO  Job:1640 - Job job_1604366546952_0002 running in uber mode : false
2020-11-03 01:25:02 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 01:25:09 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 01:25:15 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 01:25:20 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 01:25:26 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 01:25:27 INFO  Job:1658 - Job job_1604366546952_0002 completed successfully
2020-11-03 01:25:27 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45368
		Total time spent by all reduces in occupied slots (ms)=16700
		Total time spent by all map tasks (ms)=11342
		Total time spent by all reduce tasks (ms)=4175
		Total vcore-milliseconds taken by all map tasks=11342
		Total vcore-milliseconds taken by all reduce tasks=4175
		Total megabyte-milliseconds taken by all map tasks=46456832
		Total megabyte-milliseconds taken by all reduce tasks=17100800
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=657
		CPU time spent (ms)=8590
		Physical memory (bytes) snapshot=1478381568
		Virtual memory (bytes) snapshot=16088662016
		Total committed heap usage (bytes)=1700265984
		Peak Map Physical memory (bytes)=370565120
		Peak Map Virtual memory (bytes)=4017860608
		Peak Reduce Physical memory (bytes)=370352128
		Peak Reduce Virtual memory (bytes)=4037844992
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 01:25:27.827" starttime="20201103 01:25:27.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:25:27.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:25:27.828" starttime="20201103 01:25:27.827"></status>
</kw>
<status status="PASS" endtime="20201103 01:25:27.828" starttime="20201103 01:24:48.760"></status>
</kw>
<msg timestamp="20201103 01:25:27.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:25:27.828" starttime="20201103 01:24:48.760"></status>
</kw>
<msg timestamp="20201103 01:25:27.829" level="INFO">${output} = 2020-11-03 01:24:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-03 01:24:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 01:25:27.829" starttime="20201103 01:24:48.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 01:25:27.829" starttime="20201103 01:25:27.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 01:25:27.830" starttime="20201103 01:25:27.830"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 01:25:27.830" critical="yes" starttime="20201103 01:24:48.730"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 01:25:27.831" starttime="20201103 01:23:55.202"></status>
</suite>
<status status="PASS" elapsedtime="235990" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="653083" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
