<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201103 02:00:41.541" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:55:42.892" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:55:57.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:55:57.086" level="INFO">${output} = 2020-11-03 01:55:44,983 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:55:45,236 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 01:55:57.086" starttime="20201103 01:55:42.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:55:57.087" level="INFO">2020-11-03 01:55:44,983 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:55:45,236 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:55:45,236 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 01:55:49,725 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-03 01:55:49,726 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-03 01:55:49,726 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-03 01:55:49,726 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-03 01:55:49,726 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-03 01:55:49,726 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-03 01:55:49,728 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-03 01:55:49,731 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-03 01:55:49,747 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:55:49,823 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-37651, with testuser/scm@EXAMPLE.COM as owner.
2020-11-03 01:55:50,751 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:55:50,805 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-37651/bucket-0-95513, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:55:51,757 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:55:52,759 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:55:53,760 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:55:54,108 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-03 01:55:54,760 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,975
Average Time spent in bucket creation: 00:00:00,276
Average Time spent in key creation: 00:00:01,577
Average Time spent in key write: 00:00:02,073
Total bytes written: 10240
Total Execution time: 00:00:11,212
***************************************************</msg>
<status status="PASS" endtime="20201103 01:55:57.087" starttime="20201103 01:55:57.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:55:57.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:55:57.088" starttime="20201103 01:55:57.087"></status>
</kw>
<status status="PASS" endtime="20201103 01:55:57.088" starttime="20201103 01:55:42.886"></status>
</kw>
<msg timestamp="20201103 01:55:57.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:55:57.088" starttime="20201103 01:55:42.885"></status>
</kw>
<msg timestamp="20201103 01:55:57.089" level="INFO">${result} = 2020-11-03 01:55:44,983 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:55:45,236 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 01:55:57.089" starttime="20201103 01:55:42.884"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 01:55:57.091" starttime="20201103 01:55:57.090"></status>
</kw>
<status status="PASS" endtime="20201103 01:55:57.091" starttime="20201103 01:55:57.089"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:55:57.091" critical="yes" starttime="20201103 01:55:42.883"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:55:57.100" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:56:07.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:56:07.059" level="INFO">${output} = 2020-11-03 01:55:59,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:55:59,272 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 01:56:07.059" starttime="20201103 01:55:57.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:56:07.061" level="INFO">2020-11-03 01:55:59,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:55:59,272 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:55:59,275 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 01:55:59,485 [main] INFO freon.BaseFreonGenerator: Executing test with prefix i4ljjh2e60
2020-11-03 01:55:59,503 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 01:56:00,509 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:56:01,512 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:56:01,549 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-03 01:56:01,645 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 01:56:02,512 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:56:02,616 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-03 01:56:03,004 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 01:56:03,005 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-78D115103BBF-&gt;65746372-3de1-43fd-aa26-48f7d44c1561
2020-11-03 01:56:03,006 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 01:56:03,513 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:56:04,514 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:56:05,515 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:56:06,515 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-03 01:56:06,664 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3947.341878, max=3947.341878, mean=3947.341878, stddev=0.0, median=3947.341878, p75=3947.341878, p95=3947.341878, p98=3947.341878, p99=3947.341878, p999=3947.341878, mean_rate=0.20321311563914812, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-03 01:56:06,667 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2020-11-03 01:56:06,670 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-03 01:56:06,670 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201103 01:56:07.062" starttime="20201103 01:56:07.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:56:07.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:56:07.062" starttime="20201103 01:56:07.062"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:07.062" starttime="20201103 01:55:57.096"></status>
</kw>
<msg timestamp="20201103 01:56:07.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:56:07.063" starttime="20201103 01:55:57.096"></status>
</kw>
<msg timestamp="20201103 01:56:07.063" level="INFO">${result} = 2020-11-03 01:55:59,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:55:59,272 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 01:56:07.063" starttime="20201103 01:55:57.095"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 01:56:07.064" starttime="20201103 01:56:07.064"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:07.064" starttime="20201103 01:56:07.063"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:56:07.065" critical="yes" starttime="20201103 01:55:57.092"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:56:07.072" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:56:12.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:56:12.790" level="INFO">${output} = 2020-11-03 01:56:09,142 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:56:09,396 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 01:56:12.790" starttime="20201103 01:56:07.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:56:12.791" level="INFO">2020-11-03 01:56:09,142 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:56:09,396 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:56:09,396 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 01:56:09,582 [main] INFO freon.BaseFreonGenerator: Executing test with prefix q134a9c8vc
2020-11-03 01:56:09,608 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 01:56:10,614 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:56:11,615 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:56:12,615 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-03 01:56:12,734 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=277.157342, max=277.157342, mean=277.157342, stddev=0.0, median=277.157342, p75=277.157342, p95=277.157342, p98=277.157342, p99=277.157342, p999=277.157342, mean_rate=0.7233697225412639, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-03 01:56:12,736 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-03 01:56:12,738 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-03 01:56:12,738 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201103 01:56:12.791" starttime="20201103 01:56:12.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:56:12.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:56:12.792" starttime="20201103 01:56:12.791"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:12.792" starttime="20201103 01:56:07.068"></status>
</kw>
<msg timestamp="20201103 01:56:12.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:56:12.792" starttime="20201103 01:56:07.067"></status>
</kw>
<msg timestamp="20201103 01:56:12.793" level="INFO">${result} = 2020-11-03 01:56:09,142 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:56:09,396 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 01:56:12.793" starttime="20201103 01:56:07.067"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 01:56:12.794" starttime="20201103 01:56:12.794"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:12.794" starttime="20201103 01:56:12.793"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:56:12.794" critical="yes" starttime="20201103 01:56:07.066"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:56:12.801" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:56:18.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:56:18.393" level="INFO">${output} = 2020-11-03 01:56:14,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:56:14,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 01:56:18.393" starttime="20201103 01:56:12.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:56:18.394" level="INFO">2020-11-03 01:56:14,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:56:14,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 01:56:14,985 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 01:56:15,175 [main] INFO freon.BaseFreonGenerator: Executing test with prefix klof0ytmw8
2020-11-03 01:56:15,189 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 01:56:16,208 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:56:17,209 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 01:56:18,209 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-03 01:56:18,354 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=117.584126, max=117.584126, mean=117.584126, stddev=0.0, median=117.584126, p75=117.584126, p95=117.584126, p98=117.584126, p99=117.584126, p999=117.584126, mean_rate=0.804034680115892, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-03 01:56:18,355 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-03 01:56:18,355 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-03 01:56:18,355 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201103 01:56:18.394" starttime="20201103 01:56:18.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:56:18.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:56:18.395" starttime="20201103 01:56:18.395"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:18.396" starttime="20201103 01:56:12.797"></status>
</kw>
<msg timestamp="20201103 01:56:18.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:56:18.396" starttime="20201103 01:56:12.797"></status>
</kw>
<msg timestamp="20201103 01:56:18.396" level="INFO">${result} = 2020-11-03 01:56:14,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 01:56:14,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 01:56:18.396" starttime="20201103 01:56:12.796"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 01:56:18.397" starttime="20201103 01:56:18.397"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:18.398" starttime="20201103 01:56:18.397"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 01:56:18.398" critical="yes" starttime="20201103 01:56:12.796"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 01:56:18.400" starttime="20201103 01:55:42.850"></status>
</suite>
<status status="PASS" endtime="20201103 01:56:18.409" starttime="20201103 01:55:42.817"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:55:34.385" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:55:34.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:55:34.392" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:55:34.392" starttime="20201103 01:55:34.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:55:34.395" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:55:34.395" starttime="20201103 01:55:34.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:55:34.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:55:34.396" starttime="20201103 01:55:34.395"></status>
</kw>
<status status="PASS" endtime="20201103 01:55:34.396" starttime="20201103 01:55:34.374"></status>
</kw>
<msg timestamp="20201103 01:55:34.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:55:34.397" starttime="20201103 01:55:34.373"></status>
</kw>
<msg timestamp="20201103 01:55:34.397" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:55:34.397" starttime="20201103 01:55:34.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:55:34.398" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:55:34.398" starttime="20201103 01:55:34.397"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:55:34.411" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:55:34.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:55:34.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:55:34.444" starttime="20201103 01:55:34.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:55:34.450" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:55:34.452" starttime="20201103 01:55:34.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:55:34.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:55:34.453" starttime="20201103 01:55:34.452"></status>
</kw>
<status status="PASS" endtime="20201103 01:55:34.453" starttime="20201103 01:55:34.404"></status>
</kw>
<msg timestamp="20201103 01:55:34.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:55:34.453" starttime="20201103 01:55:34.404"></status>
</kw>
<status status="PASS" endtime="20201103 01:55:34.454" starttime="20201103 01:55:34.398"></status>
</kw>
<status status="PASS" endtime="20201103 01:55:34.454" starttime="20201103 01:55:34.398"></status>
</kw>
<status status="PASS" endtime="20201103 01:55:34.456" starttime="20201103 01:55:34.364"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:55:34.456" critical="yes" starttime="20201103 01:55:34.363"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201103 01:55:34.461" starttime="20201103 01:55:34.194"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 01:56:25.741" level="INFO">${random} = 61089</msg>
<status status="PASS" endtime="20201103 01:56:25.741" starttime="20201103 01:56:25.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201103 01:56:25.742" level="INFO">${source} = 61089-source</msg>
<status status="PASS" endtime="20201103 01:56:25.743" starttime="20201103 01:56:25.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201103 01:56:25.744" level="INFO">${target} = 61089-target</msg>
<status status="PASS" endtime="20201103 01:56:25.744" starttime="20201103 01:56:25.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:56:25.751" level="INFO">Running command 'ozone sh volume create 61089-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:56:29.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:56:29.847" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:56:29.847" starttime="20201103 01:56:25.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:56:29.848" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:56:29.848" starttime="20201103 01:56:29.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:56:29.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:56:29.849" starttime="20201103 01:56:29.848"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:29.849" starttime="20201103 01:56:25.745"></status>
</kw>
<msg timestamp="20201103 01:56:29.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:56:29.850" starttime="20201103 01:56:25.744"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:29.850" starttime="20201103 01:56:25.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:56:29.854" level="INFO">Running command 'ozone sh volume create 61089-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:56:34.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:56:34.518" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:56:34.518" starttime="20201103 01:56:29.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:56:34.520" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:56:34.520" starttime="20201103 01:56:34.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:56:34.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:56:34.521" starttime="20201103 01:56:34.520"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:34.521" starttime="20201103 01:56:29.851"></status>
</kw>
<msg timestamp="20201103 01:56:34.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:56:34.521" starttime="20201103 01:56:29.851"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:34.522" starttime="20201103 01:56:29.850"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:56:34.527" level="INFO">Running command 'ozone sh bucket create 61089-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:56:38.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:56:38.811" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:56:38.811" starttime="20201103 01:56:34.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:56:38.812" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:56:38.812" starttime="20201103 01:56:38.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:56:38.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:56:38.813" starttime="20201103 01:56:38.812"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:38.813" starttime="20201103 01:56:34.524"></status>
</kw>
<msg timestamp="20201103 01:56:38.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:56:38.814" starttime="20201103 01:56:34.523"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:38.814" starttime="20201103 01:56:34.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:56:38.819" level="INFO">Running command 'ozone sh key put 61089-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:56:45.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:56:45.471" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:56:45.471" starttime="20201103 01:56:38.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:56:45.473" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:56:45.473" starttime="20201103 01:56:45.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:56:45.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:56:45.474" starttime="20201103 01:56:45.473"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:45.474" starttime="20201103 01:56:38.815"></status>
</kw>
<msg timestamp="20201103 01:56:45.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:56:45.475" starttime="20201103 01:56:38.815"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:45.475" starttime="20201103 01:56:38.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:56:45.490" level="INFO">Running command 'ozone sh bucket create 61089-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:56:49.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:56:49.700" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:56:49.700" starttime="20201103 01:56:45.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:56:49.701" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:56:49.701" starttime="20201103 01:56:49.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:56:49.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:56:49.702" starttime="20201103 01:56:49.701"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:49.702" starttime="20201103 01:56:45.476"></status>
</kw>
<msg timestamp="20201103 01:56:49.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:56:49.702" starttime="20201103 01:56:45.476"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:49.703" starttime="20201103 01:56:45.475"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:56:49.708" level="INFO">Running command 'ozone sh bucket link 61089-source/readable-bucket 61089-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:56:53.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:56:53.735" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:56:53.735" starttime="20201103 01:56:49.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:56:53.738" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:56:53.738" starttime="20201103 01:56:53.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:56:53.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:56:53.739" starttime="20201103 01:56:53.738"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:53.739" starttime="20201103 01:56:49.704"></status>
</kw>
<msg timestamp="20201103 01:56:53.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:56:53.739" starttime="20201103 01:56:49.704"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:53.740" starttime="20201103 01:56:49.703"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:56:53.743" level="INFO">Running command 'ozone sh bucket link 61089-source/readable-bucket 61089-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:56:58.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:56:58.104" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:56:58.104" starttime="20201103 01:56:53.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:56:58.105" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:56:58.105" starttime="20201103 01:56:58.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:56:58.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:56:58.106" starttime="20201103 01:56:58.105"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:58.106" starttime="20201103 01:56:53.741"></status>
</kw>
<msg timestamp="20201103 01:56:58.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:56:58.106" starttime="20201103 01:56:53.740"></status>
</kw>
<status status="PASS" endtime="20201103 01:56:58.107" starttime="20201103 01:56:53.740"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:56:58.113" level="INFO">Running command 'ozone sh bucket link 61089-source/unreadable-bucket 61089-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:02.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:02.522" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:02.522" starttime="20201103 01:56:58.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:02.523" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:57:02.523" starttime="20201103 01:57:02.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:02.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:02.524" starttime="20201103 01:57:02.524"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:02.524" starttime="20201103 01:56:58.108"></status>
</kw>
<msg timestamp="20201103 01:57:02.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:02.525" starttime="20201103 01:56:58.107"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:02.525" starttime="20201103 01:56:58.107"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:02.529" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 61089-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:07.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:07.451" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:07.451" starttime="20201103 01:57:02.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:07.452" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 01:57:07.453" starttime="20201103 01:57:07.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:07.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:07.453" starttime="20201103 01:57:07.453"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:07.454" starttime="20201103 01:57:02.526"></status>
</kw>
<msg timestamp="20201103 01:57:07.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:07.454" starttime="20201103 01:57:02.526"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:07.454" starttime="20201103 01:57:02.525"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:07.468" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 61089-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:12.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:12.406" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:12.406" starttime="20201103 01:57:07.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:12.407" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 01:57:12.407" starttime="20201103 01:57:12.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:12.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:12.407" starttime="20201103 01:57:12.407"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:12.408" starttime="20201103 01:57:07.456"></status>
</kw>
<msg timestamp="20201103 01:57:12.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:12.408" starttime="20201103 01:57:07.455"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:12.408" starttime="20201103 01:57:07.455"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:12.413" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 61089-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:16.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:16.966" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:16.966" starttime="20201103 01:57:12.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:16.967" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 01:57:16.967" starttime="20201103 01:57:16.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:16.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:16.968" starttime="20201103 01:57:16.967"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:16.968" starttime="20201103 01:57:12.410"></status>
</kw>
<msg timestamp="20201103 01:57:16.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:16.969" starttime="20201103 01:57:12.409"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:16.969" starttime="20201103 01:57:12.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:16.974" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 61089-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:21.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:21.562" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:21.562" starttime="20201103 01:57:16.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:21.563" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 01:57:21.563" starttime="20201103 01:57:21.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:21.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:21.564" starttime="20201103 01:57:21.563"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:21.564" starttime="20201103 01:57:16.970"></status>
</kw>
<msg timestamp="20201103 01:57:21.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:21.564" starttime="20201103 01:57:16.969"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:21.565" starttime="20201103 01:57:16.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:21.569" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 61089-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:26.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:26.488" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:26.488" starttime="20201103 01:57:21.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:26.490" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 01:57:26.490" starttime="20201103 01:57:26.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:26.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:26.490" starttime="20201103 01:57:26.490"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.491" starttime="20201103 01:57:21.566"></status>
</kw>
<msg timestamp="20201103 01:57:26.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:26.491" starttime="20201103 01:57:21.565"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.491" starttime="20201103 01:57:21.565"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.492" starttime="20201103 01:56:34.522"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.492" starttime="20201103 01:56:34.522"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.492" starttime="20201103 01:56:25.740"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:26.499" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:26.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:26.503" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:57:26.503" starttime="20201103 01:57:26.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:26.505" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:57:26.505" starttime="20201103 01:57:26.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:26.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:26.506" starttime="20201103 01:57:26.505"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.507" starttime="20201103 01:57:26.496"></status>
</kw>
<msg timestamp="20201103 01:57:26.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:26.507" starttime="20201103 01:57:26.496"></status>
</kw>
<msg timestamp="20201103 01:57:26.507" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:57:26.507" starttime="20201103 01:57:26.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:57:26.510" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:57:26.510" starttime="20201103 01:57:26.508"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:26.517" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:26.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:26.540" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:57:26.540" starttime="20201103 01:57:26.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:26.541" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:57:26.542" starttime="20201103 01:57:26.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:26.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:26.542" starttime="20201103 01:57:26.542"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.543" starttime="20201103 01:57:26.513"></status>
</kw>
<msg timestamp="20201103 01:57:26.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:26.543" starttime="20201103 01:57:26.512"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.543" starttime="20201103 01:57:26.511"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.543" starttime="20201103 01:57:26.511"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.544" starttime="20201103 01:57:26.494"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:26.544" starttime="20201103 01:57:26.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:26.551" level="INFO">Running command 'ozone sh bucket link 61089-source/no-such-bucket 61089-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:31.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:31.165" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:31.165" starttime="20201103 01:57:26.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:31.166" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:57:31.166" starttime="20201103 01:57:31.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:31.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:31.170" starttime="20201103 01:57:31.169"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:31.170" starttime="20201103 01:57:26.546"></status>
</kw>
<msg timestamp="20201103 01:57:31.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:31.170" starttime="20201103 01:57:26.545"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:31.171" starttime="20201103 01:57:26.544"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:31.177" level="INFO">Running command 'ozone sh key list 61089-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:35.783" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 01:57:35.783" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:35.783" starttime="20201103 01:57:31.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:35.785" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201103 01:57:35.785" starttime="20201103 01:57:35.784"></status>
</kw>
<msg timestamp="20201103 01:57:35.785" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:35.785" starttime="20201103 01:57:31.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 01:57:35.786" starttime="20201103 01:57:35.785"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:57:35.787" critical="yes" starttime="20201103 01:57:26.492"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:35.794" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:35.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:35.796" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:57:35.797" starttime="20201103 01:57:35.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:35.798" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:57:35.798" starttime="20201103 01:57:35.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:35.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:35.799" starttime="20201103 01:57:35.798"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:35.799" starttime="20201103 01:57:35.791"></status>
</kw>
<msg timestamp="20201103 01:57:35.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:35.799" starttime="20201103 01:57:35.790"></status>
</kw>
<msg timestamp="20201103 01:57:35.800" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:57:35.800" starttime="20201103 01:57:35.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:57:35.801" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:57:35.801" starttime="20201103 01:57:35.800"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:35.806" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:35.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:35.819" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:57:35.819" starttime="20201103 01:57:35.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:35.820" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:57:35.820" starttime="20201103 01:57:35.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:35.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:35.821" starttime="20201103 01:57:35.820"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:35.821" starttime="20201103 01:57:35.803"></status>
</kw>
<msg timestamp="20201103 01:57:35.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:35.822" starttime="20201103 01:57:35.802"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:35.822" starttime="20201103 01:57:35.802"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:35.822" starttime="20201103 01:57:35.801"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:35.822" starttime="20201103 01:57:35.789"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:35.822" starttime="20201103 01:57:35.789"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:35.826" level="INFO">Running command 'ozone sh bucket link 61089-source/bucket1 61089-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:40.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:40.763" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:40.763" starttime="20201103 01:57:35.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:40.765" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:57:40.765" starttime="20201103 01:57:40.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:40.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:40.765" starttime="20201103 01:57:40.765"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:40.766" starttime="20201103 01:57:35.823"></status>
</kw>
<msg timestamp="20201103 01:57:40.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:40.766" starttime="20201103 01:57:35.823"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:40.766" starttime="20201103 01:57:35.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:40.771" level="INFO">Running command 'ozone sh bucket create 61089-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:45.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:45.579" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:45.579" starttime="20201103 01:57:40.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:45.580" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:57:45.580" starttime="20201103 01:57:45.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:45.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:45.581" starttime="20201103 01:57:45.580"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:45.581" starttime="20201103 01:57:40.768"></status>
</kw>
<msg timestamp="20201103 01:57:45.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:45.582" starttime="20201103 01:57:40.767"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:45.582" starttime="20201103 01:57:40.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:45.589" level="INFO">Running command 'ozone sh key put 61089-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:57:53.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:57:53.156" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:57:53.156" starttime="20201103 01:57:45.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:57:53.158" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:57:53.158" starttime="20201103 01:57:53.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:57:53.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:57:53.158" starttime="20201103 01:57:53.158"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:53.159" starttime="20201103 01:57:45.583"></status>
</kw>
<msg timestamp="20201103 01:57:53.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:57:53.159" starttime="20201103 01:57:45.583"></status>
</kw>
<status status="PASS" endtime="20201103 01:57:53.159" starttime="20201103 01:57:45.582"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201103 01:57:53.161" level="INFO">${postfix} = 52377</msg>
<status status="PASS" endtime="20201103 01:57:53.161" starttime="20201103 01:57:53.161"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201103 01:57:53.162" level="INFO">${tmpfile} = /tmp/tempkey-52377</msg>
<status status="PASS" endtime="20201103 01:57:53.162" starttime="20201103 01:57:53.162"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:57:53.168" level="INFO">Running command 'ozone sh key get -f 61089-target/link1/key1 /tmp/tempkey-52377 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:00.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:00.266" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:58:00.266" starttime="20201103 01:57:53.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:00.267" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:58:00.268" starttime="20201103 01:58:00.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:00.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:00.269" starttime="20201103 01:58:00.268"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.269" starttime="20201103 01:57:53.163"></status>
</kw>
<msg timestamp="20201103 01:58:00.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:00.269" starttime="20201103 01:57:53.163"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.269" starttime="20201103 01:57:53.162"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201103 01:58:00.272" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-52377 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:00.274" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201103 01:58:00.275" starttime="20201103 01:58:00.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:00.280" level="INFO">Running command 'rm -f /tmp/tempkey-52377 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:00.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:00.282" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:58:00.282" starttime="20201103 01:58:00.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:00.284" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:58:00.284" starttime="20201103 01:58:00.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:00.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:00.285" starttime="20201103 01:58:00.284"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.285" starttime="20201103 01:58:00.276"></status>
</kw>
<msg timestamp="20201103 01:58:00.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:00.285" starttime="20201103 01:58:00.276"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.285" starttime="20201103 01:58:00.275"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:58:00.286" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201103 01:58:00.286" starttime="20201103 01:58:00.286"></status>
</kw>
<msg timestamp="20201103 01:58:00.287" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201103 01:58:00.287" starttime="20201103 01:57:53.160"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:00.287" starttime="20201103 01:58:00.287"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.287" starttime="20201103 01:57:53.159"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:58:00.288" critical="yes" starttime="20201103 01:57:35.788"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:00.296" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:00.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:00.297" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:58:00.297" starttime="20201103 01:58:00.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:00.298" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:58:00.298" starttime="20201103 01:58:00.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:00.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:00.299" starttime="20201103 01:58:00.298"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.299" starttime="20201103 01:58:00.292"></status>
</kw>
<msg timestamp="20201103 01:58:00.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:00.299" starttime="20201103 01:58:00.292"></status>
</kw>
<msg timestamp="20201103 01:58:00.300" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:58:00.300" starttime="20201103 01:58:00.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:58:00.301" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:58:00.301" starttime="20201103 01:58:00.300"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:00.306" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:00.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:00.323" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:58:00.323" starttime="20201103 01:58:00.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:00.324" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:58:00.324" starttime="20201103 01:58:00.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:00.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:00.325" starttime="20201103 01:58:00.325"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.326" starttime="20201103 01:58:00.302"></status>
</kw>
<msg timestamp="20201103 01:58:00.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:00.326" starttime="20201103 01:58:00.302"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.326" starttime="20201103 01:58:00.301"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.326" starttime="20201103 01:58:00.301"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.326" starttime="20201103 01:58:00.291"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:00.327" starttime="20201103 01:58:00.290"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:00.332" level="INFO">Running command 'ozone sh key put 61089-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:07.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:07.359" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:58:07.359" starttime="20201103 01:58:00.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:07.361" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:58:07.361" starttime="20201103 01:58:07.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:07.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:07.361" starttime="20201103 01:58:07.361"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:07.362" starttime="20201103 01:58:00.328"></status>
</kw>
<msg timestamp="20201103 01:58:07.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:07.362" starttime="20201103 01:58:00.328"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:07.362" starttime="20201103 01:58:00.327"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201103 01:58:07.364" level="INFO">${postfix} = 83142</msg>
<status status="PASS" endtime="20201103 01:58:07.364" starttime="20201103 01:58:07.364"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201103 01:58:07.365" level="INFO">${tmpfile} = /tmp/tempkey-83142</msg>
<status status="PASS" endtime="20201103 01:58:07.365" starttime="20201103 01:58:07.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:07.370" level="INFO">Running command 'ozone sh key get -f 61089-source/bucket1/key2 /tmp/tempkey-83142 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:13.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:13.705" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:58:13.705" starttime="20201103 01:58:07.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:13.706" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:58:13.706" starttime="20201103 01:58:13.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:13.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:13.707" starttime="20201103 01:58:13.707"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.708" starttime="20201103 01:58:07.366"></status>
</kw>
<msg timestamp="20201103 01:58:13.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:13.708" starttime="20201103 01:58:07.366"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.708" starttime="20201103 01:58:07.365"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201103 01:58:13.712" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-83142 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:13.715" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201103 01:58:13.715" starttime="20201103 01:58:13.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:13.720" level="INFO">Running command 'rm -f /tmp/tempkey-83142 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:13.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:13.723" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:58:13.723" starttime="20201103 01:58:13.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:13.725" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:58:13.725" starttime="20201103 01:58:13.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:13.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:13.725" starttime="20201103 01:58:13.725"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.726" starttime="20201103 01:58:13.717"></status>
</kw>
<msg timestamp="20201103 01:58:13.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:13.726" starttime="20201103 01:58:13.716"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.726" starttime="20201103 01:58:13.715"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 01:58:13.727" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201103 01:58:13.727" starttime="20201103 01:58:13.727"></status>
</kw>
<msg timestamp="20201103 01:58:13.727" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201103 01:58:13.727" starttime="20201103 01:58:07.363"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:13.728" starttime="20201103 01:58:13.728"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.728" starttime="20201103 01:58:07.362"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:58:13.729" critical="yes" starttime="20201103 01:58:00.289"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:13.735" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:13.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:13.738" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:58:13.738" starttime="20201103 01:58:13.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:13.739" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:58:13.739" starttime="20201103 01:58:13.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:13.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:13.740" starttime="20201103 01:58:13.740"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.741" starttime="20201103 01:58:13.733"></status>
</kw>
<msg timestamp="20201103 01:58:13.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:13.741" starttime="20201103 01:58:13.732"></status>
</kw>
<msg timestamp="20201103 01:58:13.741" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:58:13.741" starttime="20201103 01:58:13.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:58:13.742" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:58:13.742" starttime="20201103 01:58:13.741"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:13.748" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:13.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:13.760" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:58:13.760" starttime="20201103 01:58:13.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:13.761" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:58:13.761" starttime="20201103 01:58:13.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:13.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:13.762" starttime="20201103 01:58:13.761"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.762" starttime="20201103 01:58:13.744"></status>
</kw>
<msg timestamp="20201103 01:58:13.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:13.762" starttime="20201103 01:58:13.743"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.763" starttime="20201103 01:58:13.743"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.763" starttime="20201103 01:58:13.742"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.763" starttime="20201103 01:58:13.731"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:13.763" starttime="20201103 01:58:13.730"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:13.770" level="INFO">Running command 'ozone sh key list 61089-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:18.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:18.377" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201103 01:58:18.378" starttime="20201103 01:58:13.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:18.379" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201103 01:58:18.379" starttime="20201103 01:58:18.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:18.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:18.380" starttime="20201103 01:58:18.379"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:18.380" starttime="20201103 01:58:13.764"></status>
</kw>
<msg timestamp="20201103 01:58:18.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:18.380" starttime="20201103 01:58:13.764"></status>
</kw>
<msg timestamp="20201103 01:58:18.381" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201103 01:58:18.381" starttime="20201103 01:58:13.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:18.386" level="INFO">Running command 'ozone sh key list 61089-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:22.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:22.623" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201103 01:58:22.623" starttime="20201103 01:58:18.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:22.624" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201103 01:58:22.624" starttime="20201103 01:58:22.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:22.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:22.625" starttime="20201103 01:58:22.624"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:22.626" starttime="20201103 01:58:18.382"></status>
</kw>
<msg timestamp="20201103 01:58:22.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:22.626" starttime="20201103 01:58:18.381"></status>
</kw>
<msg timestamp="20201103 01:58:22.626" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201103 01:58:22.626" starttime="20201103 01:58:18.381"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:22.627" starttime="20201103 01:58:22.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:22.627" starttime="20201103 01:58:22.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:22.628" starttime="20201103 01:58:22.628"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:58:22.628" critical="yes" starttime="20201103 01:58:13.729"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:22.637" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:22.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:22.640" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:58:22.640" starttime="20201103 01:58:22.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:22.641" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:58:22.641" starttime="20201103 01:58:22.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:22.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:22.642" starttime="20201103 01:58:22.641"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:22.642" starttime="20201103 01:58:22.633"></status>
</kw>
<msg timestamp="20201103 01:58:22.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:22.643" starttime="20201103 01:58:22.633"></status>
</kw>
<msg timestamp="20201103 01:58:22.643" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:58:22.643" starttime="20201103 01:58:22.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:58:22.644" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:58:22.644" starttime="20201103 01:58:22.643"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:22.650" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:22.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:22.697" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:58:22.697" starttime="20201103 01:58:22.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:22.698" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:58:22.698" starttime="20201103 01:58:22.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:22.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:22.699" starttime="20201103 01:58:22.699"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:22.699" starttime="20201103 01:58:22.646"></status>
</kw>
<msg timestamp="20201103 01:58:22.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:22.700" starttime="20201103 01:58:22.645"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:22.700" starttime="20201103 01:58:22.645"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:22.700" starttime="20201103 01:58:22.644"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:22.700" starttime="20201103 01:58:22.632"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:22.700" starttime="20201103 01:58:22.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:22.711" level="INFO">Running command 'ozone sh key delete 61089-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:27.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:27.050" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:58:27.051" starttime="20201103 01:58:22.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:27.054" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:58:27.054" starttime="20201103 01:58:27.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:27.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:27.064" starttime="20201103 01:58:27.054"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:27.065" starttime="20201103 01:58:22.702"></status>
</kw>
<msg timestamp="20201103 01:58:27.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:27.067" starttime="20201103 01:58:22.702"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:27.068" starttime="20201103 01:58:22.701"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:27.080" level="INFO">Running command 'ozone sh key list 61089-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:31.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:31.878" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201103 01:58:31.878" starttime="20201103 01:58:27.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:31.879" level="INFO">key1</msg>
<status status="PASS" endtime="20201103 01:58:31.879" starttime="20201103 01:58:31.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:31.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:31.880" starttime="20201103 01:58:31.880"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:31.881" starttime="20201103 01:58:27.069"></status>
</kw>
<msg timestamp="20201103 01:58:31.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:31.881" starttime="20201103 01:58:27.069"></status>
</kw>
<msg timestamp="20201103 01:58:31.881" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201103 01:58:31.881" starttime="20201103 01:58:27.068"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:31.882" starttime="20201103 01:58:31.881"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:58:31.882" critical="yes" starttime="20201103 01:58:22.630"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:31.892" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:31.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:31.894" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:58:31.894" starttime="20201103 01:58:31.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:31.895" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:58:31.895" starttime="20201103 01:58:31.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:31.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:31.896" starttime="20201103 01:58:31.895"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:31.896" starttime="20201103 01:58:31.888"></status>
</kw>
<msg timestamp="20201103 01:58:31.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:31.897" starttime="20201103 01:58:31.887"></status>
</kw>
<msg timestamp="20201103 01:58:31.897" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:58:31.897" starttime="20201103 01:58:31.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:58:31.898" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:58:31.898" starttime="20201103 01:58:31.897"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:31.904" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:31.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:31.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:58:31.926" starttime="20201103 01:58:31.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:31.927" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:58:31.927" starttime="20201103 01:58:31.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:31.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:31.928" starttime="20201103 01:58:31.927"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:31.928" starttime="20201103 01:58:31.899"></status>
</kw>
<msg timestamp="20201103 01:58:31.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:31.929" starttime="20201103 01:58:31.899"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:31.929" starttime="20201103 01:58:31.899"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:31.929" starttime="20201103 01:58:31.898"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:31.929" starttime="20201103 01:58:31.885"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:31.929" starttime="20201103 01:58:31.884"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:31.937" level="INFO">Running command 'ozone sh bucket list 61089-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:37.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:37.634" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:58:37.634" starttime="20201103 01:58:31.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:37.635" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:57:31.048Z",
  "modificationTime" : "2020-11-03T01:57:31.048Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:57:02.255Z",
  "modificationTime" : "2020-11-03T01:57:26.245Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:57:40.592Z",
  "modificationTime" : "2020-11-03T01:57:40.592Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:56:53.633Z",
  "modificationTime" : "2020-11-03T01:57:21.325Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:56:57.803Z",
  "modificationTime" : "2020-11-03T01:56:57.803Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 01:58:37.635" starttime="20201103 01:58:37.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:37.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:37.636" starttime="20201103 01:58:37.635"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:37.636" starttime="20201103 01:58:31.930"></status>
</kw>
<msg timestamp="20201103 01:58:37.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:37.636" starttime="20201103 01:58:31.930"></status>
</kw>
<msg timestamp="20201103 01:58:37.637" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:58:37.637" starttime="20201103 01:58:31.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:37.637" starttime="20201103 01:58:37.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:37.638" starttime="20201103 01:58:37.638"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:58:37.638" critical="yes" starttime="20201103 01:58:31.883"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:37.645" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:37.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:37.648" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:58:37.648" starttime="20201103 01:58:37.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:37.650" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:58:37.651" starttime="20201103 01:58:37.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:37.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:37.652" starttime="20201103 01:58:37.651"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:37.652" starttime="20201103 01:58:37.642"></status>
</kw>
<msg timestamp="20201103 01:58:37.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:37.652" starttime="20201103 01:58:37.642"></status>
</kw>
<msg timestamp="20201103 01:58:37.653" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:58:37.653" starttime="20201103 01:58:37.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:58:37.657" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:58:37.657" starttime="20201103 01:58:37.655"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:37.663" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:37.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:37.682" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:58:37.682" starttime="20201103 01:58:37.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:37.683" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:58:37.684" starttime="20201103 01:58:37.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:37.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:37.684" starttime="20201103 01:58:37.684"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:37.685" starttime="20201103 01:58:37.658"></status>
</kw>
<msg timestamp="20201103 01:58:37.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:37.685" starttime="20201103 01:58:37.658"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:37.685" starttime="20201103 01:58:37.657"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:37.685" starttime="20201103 01:58:37.657"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:37.686" starttime="20201103 01:58:37.641"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:37.686" starttime="20201103 01:58:37.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:37.692" level="INFO">Running command 'ozone sh bucket info 61089-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:42.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:42.202" level="INFO">${output} = 61089-source bucket1</msg>
<status status="PASS" endtime="20201103 01:58:42.202" starttime="20201103 01:58:37.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:42.203" level="INFO">61089-source bucket1</msg>
<status status="PASS" endtime="20201103 01:58:42.204" starttime="20201103 01:58:42.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:42.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:42.204" starttime="20201103 01:58:42.204"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:42.205" starttime="20201103 01:58:37.687"></status>
</kw>
<msg timestamp="20201103 01:58:42.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:42.205" starttime="20201103 01:58:37.687"></status>
</kw>
<msg timestamp="20201103 01:58:42.205" level="INFO">${result} = 61089-source bucket1</msg>
<status status="PASS" endtime="20201103 01:58:42.205" starttime="20201103 01:58:37.686"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:42.206" starttime="20201103 01:58:42.205"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:58:42.206" critical="yes" starttime="20201103 01:58:37.639"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:42.212" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:42.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:42.216" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:58:42.216" starttime="20201103 01:58:42.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:42.217" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:58:42.217" starttime="20201103 01:58:42.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:42.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:42.218" starttime="20201103 01:58:42.218"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:42.219" starttime="20201103 01:58:42.210"></status>
</kw>
<msg timestamp="20201103 01:58:42.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:42.219" starttime="20201103 01:58:42.209"></status>
</kw>
<msg timestamp="20201103 01:58:42.219" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:58:42.219" starttime="20201103 01:58:42.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:58:42.220" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:58:42.220" starttime="20201103 01:58:42.219"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:42.225" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:42.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:42.236" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:58:42.237" starttime="20201103 01:58:42.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:42.238" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:58:42.238" starttime="20201103 01:58:42.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:42.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:42.239" starttime="20201103 01:58:42.238"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:42.239" starttime="20201103 01:58:42.222"></status>
</kw>
<msg timestamp="20201103 01:58:42.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:42.239" starttime="20201103 01:58:42.221"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:42.240" starttime="20201103 01:58:42.221"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:42.240" starttime="20201103 01:58:42.220"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:42.240" starttime="20201103 01:58:42.208"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:42.240" starttime="20201103 01:58:42.208"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:42.245" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 61089-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:46.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:46.901" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:58:46.901" starttime="20201103 01:58:42.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:46.903" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 01:58:46.903" starttime="20201103 01:58:46.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:46.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:46.903" starttime="20201103 01:58:46.903"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:46.904" starttime="20201103 01:58:42.241"></status>
</kw>
<msg timestamp="20201103 01:58:46.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:46.904" starttime="20201103 01:58:42.241"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:46.904" starttime="20201103 01:58:42.240"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:46.911" level="INFO">Running command 'ozone sh bucket getacl 61089-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:51.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:51.693" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201103 01:58:51.693" starttime="20201103 01:58:46.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:51.694" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201103 01:58:51.694" starttime="20201103 01:58:51.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:51.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:51.695" starttime="20201103 01:58:51.694"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:51.695" starttime="20201103 01:58:46.907"></status>
</kw>
<msg timestamp="20201103 01:58:51.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:51.695" starttime="20201103 01:58:46.907"></status>
</kw>
<msg timestamp="20201103 01:58:51.696" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201103 01:58:51.696" starttime="20201103 01:58:46.905"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:51.696" starttime="20201103 01:58:51.696"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:51.697" starttime="20201103 01:58:46.905"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:51.705" level="INFO">Running command 'ozone sh bucket getacl 61089-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:58:56.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:58:56.485" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:58:56.486" starttime="20201103 01:58:51.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:58:56.487" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:58:56.487" starttime="20201103 01:58:56.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:58:56.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:58:56.488" starttime="20201103 01:58:56.487"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:56.488" starttime="20201103 01:58:51.700"></status>
</kw>
<msg timestamp="20201103 01:58:56.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:58:56.488" starttime="20201103 01:58:51.699"></status>
</kw>
<msg timestamp="20201103 01:58:56.488" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201103 01:58:56.497" starttime="20201103 01:58:51.698"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:58:56.497" starttime="20201103 01:58:56.497"></status>
</kw>
<status status="PASS" endtime="20201103 01:58:56.498" starttime="20201103 01:58:51.697"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:58:56.504" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 61089-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:00.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:00.538" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:00.538" starttime="20201103 01:58:56.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:00.539" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 01:59:00.539" starttime="20201103 01:59:00.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:00.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:00.540" starttime="20201103 01:59:00.539"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:00.540" starttime="20201103 01:58:56.499"></status>
</kw>
<msg timestamp="20201103 01:59:00.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:00.540" starttime="20201103 01:58:56.499"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:00.541" starttime="20201103 01:58:56.498"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:00.549" level="INFO">Running command 'ozone sh bucket getacl 61089-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:05.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:05.441" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:05.441" starttime="20201103 01:59:00.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:05.443" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:05.443" starttime="20201103 01:59:05.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:05.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:05.444" starttime="20201103 01:59:05.444"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:05.445" starttime="20201103 01:59:00.546"></status>
</kw>
<msg timestamp="20201103 01:59:05.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:05.445" starttime="20201103 01:59:00.546"></status>
</kw>
<msg timestamp="20201103 01:59:05.445" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201103 01:59:05.445" starttime="20201103 01:59:00.544"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:59:05.446" starttime="20201103 01:59:05.445"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:05.446" starttime="20201103 01:59:00.541"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:05.452" level="INFO">Running command 'ozone sh bucket getacl 61089-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:09.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:09.932" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201103 01:59:09.932" starttime="20201103 01:59:05.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:09.934" level="INFO">READ</msg>
<status status="PASS" endtime="20201103 01:59:09.934" starttime="20201103 01:59:09.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:09.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:09.935" starttime="20201103 01:59:09.934"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:09.936" starttime="20201103 01:59:05.448"></status>
</kw>
<msg timestamp="20201103 01:59:09.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:09.936" starttime="20201103 01:59:05.448"></status>
</kw>
<msg timestamp="20201103 01:59:09.936" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201103 01:59:09.936" starttime="20201103 01:59:05.447"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 01:59:09.937" starttime="20201103 01:59:09.936"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:09.937" starttime="20201103 01:59:05.446"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:59:09.937" critical="yes" starttime="20201103 01:58:42.207"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:09.945" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:09.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:09.947" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:59:09.947" starttime="20201103 01:59:09.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:09.949" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:59:09.949" starttime="20201103 01:59:09.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:09.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:09.953" starttime="20201103 01:59:09.949"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:09.954" starttime="20201103 01:59:09.941"></status>
</kw>
<msg timestamp="20201103 01:59:09.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:09.954" starttime="20201103 01:59:09.941"></status>
</kw>
<msg timestamp="20201103 01:59:09.954" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:59:09.954" starttime="20201103 01:59:09.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:59:09.955" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:59:09.955" starttime="20201103 01:59:09.954"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:09.961" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:09.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:09.984" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:09.984" starttime="20201103 01:59:09.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:09.985" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:09.986" starttime="20201103 01:59:09.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:09.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:09.990" starttime="20201103 01:59:09.986"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:09.990" starttime="20201103 01:59:09.957"></status>
</kw>
<msg timestamp="20201103 01:59:09.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:09.990" starttime="20201103 01:59:09.957"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:09.991" starttime="20201103 01:59:09.956"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:09.991" starttime="20201103 01:59:09.956"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:09.991" starttime="20201103 01:59:09.940"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:09.991" starttime="20201103 01:59:09.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:09.995" level="INFO">Running command 'ozone sh bucket link 61089-source/bucket2 61089-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:14.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:14.173" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:14.173" starttime="20201103 01:59:09.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:14.174" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:59:14.174" starttime="20201103 01:59:14.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:14.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:14.175" starttime="20201103 01:59:14.174"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:14.175" starttime="20201103 01:59:09.992"></status>
</kw>
<msg timestamp="20201103 01:59:14.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:14.175" starttime="20201103 01:59:09.992"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:14.176" starttime="20201103 01:59:09.991"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:14.180" level="INFO">Running command 'ozone sh bucket create 61089-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:18.194" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 01:59:18.194" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:18.194" starttime="20201103 01:59:14.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:18.195" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201103 01:59:18.196" starttime="20201103 01:59:18.195"></status>
</kw>
<msg timestamp="20201103 01:59:18.196" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:18.196" starttime="20201103 01:59:14.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201103 01:59:18.197" starttime="20201103 01:59:18.196"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:18.202" level="INFO">Running command 'ozone sh bucket create 61089-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:22.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:22.539" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:22.540" starttime="20201103 01:59:18.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:22.541" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:59:22.541" starttime="20201103 01:59:22.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:22.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:22.542" starttime="20201103 01:59:22.541"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:22.542" starttime="20201103 01:59:18.198"></status>
</kw>
<msg timestamp="20201103 01:59:22.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:22.542" starttime="20201103 01:59:18.198"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:22.542" starttime="20201103 01:59:18.197"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:22.546" level="INFO">Running command 'ozone sh bucket link 61089-source/bucket1 61089-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:26.429" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 01:59:26.429" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:26.429" starttime="20201103 01:59:22.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.431" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201103 01:59:26.431" starttime="20201103 01:59:26.430"></status>
</kw>
<msg timestamp="20201103 01:59:26.431" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:26.431" starttime="20201103 01:59:22.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201103 01:59:26.432" starttime="20201103 01:59:26.431"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:59:26.432" critical="yes" starttime="20201103 01:59:09.938"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:26.439" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:26.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:26.442" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:59:26.442" starttime="20201103 01:59:26.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.443" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:59:26.443" starttime="20201103 01:59:26.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:26.444" starttime="20201103 01:59:26.443"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.444" starttime="20201103 01:59:26.436"></status>
</kw>
<msg timestamp="20201103 01:59:26.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:26.444" starttime="20201103 01:59:26.436"></status>
</kw>
<msg timestamp="20201103 01:59:26.445" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:59:26.445" starttime="20201103 01:59:26.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:59:26.446" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:59:26.446" starttime="20201103 01:59:26.445"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:26.451" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:26.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:26.475" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:26.475" starttime="20201103 01:59:26.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.476" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:26.476" starttime="20201103 01:59:26.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:26.477" starttime="20201103 01:59:26.476"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.477" starttime="20201103 01:59:26.447"></status>
</kw>
<msg timestamp="20201103 01:59:26.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:26.478" starttime="20201103 01:59:26.447"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.478" starttime="20201103 01:59:26.446"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.478" starttime="20201103 01:59:26.446"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.478" starttime="20201103 01:59:26.434"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.478" starttime="20201103 01:59:26.434"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:26.485" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:26.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:26.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:26.488" starttime="20201103 01:59:26.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.489" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:26.489" starttime="20201103 01:59:26.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:26.490" starttime="20201103 01:59:26.489"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.490" starttime="20201103 01:59:26.481"></status>
</kw>
<msg timestamp="20201103 01:59:26.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:26.491" starttime="20201103 01:59:26.480"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.491" starttime="20201103 01:59:26.480"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:26.497" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:26.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:26.498" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:59:26.498" starttime="20201103 01:59:26.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.500" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:59:26.500" starttime="20201103 01:59:26.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:26.501" starttime="20201103 01:59:26.500"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.501" starttime="20201103 01:59:26.493"></status>
</kw>
<msg timestamp="20201103 01:59:26.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:26.501" starttime="20201103 01:59:26.492"></status>
</kw>
<msg timestamp="20201103 01:59:26.501" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:59:26.501" starttime="20201103 01:59:26.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:59:26.502" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:59:26.502" starttime="20201103 01:59:26.502"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:26.507" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:26.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:26.519" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:26.519" starttime="20201103 01:59:26.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.520" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:26.520" starttime="20201103 01:59:26.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:26.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:26.521" starttime="20201103 01:59:26.520"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.522" starttime="20201103 01:59:26.504"></status>
</kw>
<msg timestamp="20201103 01:59:26.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:26.522" starttime="20201103 01:59:26.504"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.522" starttime="20201103 01:59:26.503"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.522" starttime="20201103 01:59:26.503"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.522" starttime="20201103 01:59:26.491"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:26.522" starttime="20201103 01:59:26.491"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:26.526" level="INFO">Running command 'ozone sh key list 61089-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:30.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:30.862" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:30.862" starttime="20201103 01:59:26.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.864" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "61089-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-03T01:56:42.762Z",
  "modificationTime" : "2020-11-03T01:56:44.942Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201103 01:59:30.864" starttime="20201103 01:59:30.863"></status>
</kw>
<msg timestamp="20201103 01:59:30.864" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:30.864" starttime="20201103 01:59:26.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 01:59:30.865" starttime="20201103 01:59:30.864"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.865" starttime="20201103 01:59:26.479"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.865" starttime="20201103 01:59:26.478"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:59:30.866" critical="yes" starttime="20201103 01:59:26.433"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:30.873" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:30.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:30.877" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:59:30.877" starttime="20201103 01:59:30.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.878" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:59:30.878" starttime="20201103 01:59:30.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:30.879" starttime="20201103 01:59:30.878"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.879" starttime="20201103 01:59:30.870"></status>
</kw>
<msg timestamp="20201103 01:59:30.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:30.879" starttime="20201103 01:59:30.869"></status>
</kw>
<msg timestamp="20201103 01:59:30.880" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:59:30.880" starttime="20201103 01:59:30.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:59:30.881" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:59:30.881" starttime="20201103 01:59:30.880"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:30.885" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:30.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:30.909" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:30.909" starttime="20201103 01:59:30.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.910" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:30.910" starttime="20201103 01:59:30.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:30.911" starttime="20201103 01:59:30.910"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.911" starttime="20201103 01:59:30.883"></status>
</kw>
<msg timestamp="20201103 01:59:30.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:30.912" starttime="20201103 01:59:30.882"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.912" starttime="20201103 01:59:30.882"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.912" starttime="20201103 01:59:30.881"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.912" starttime="20201103 01:59:30.868"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.912" starttime="20201103 01:59:30.868"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:30.917" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:30.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:30.921" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:30.921" starttime="20201103 01:59:30.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.922" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:30.922" starttime="20201103 01:59:30.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:30.923" starttime="20201103 01:59:30.923"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.924" starttime="20201103 01:59:30.914"></status>
</kw>
<msg timestamp="20201103 01:59:30.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:30.924" starttime="20201103 01:59:30.914"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.924" starttime="20201103 01:59:30.913"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:30.930" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:30.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:30.931" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:59:30.931" starttime="20201103 01:59:30.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.932" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:59:30.932" starttime="20201103 01:59:30.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:30.933" starttime="20201103 01:59:30.933"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.933" starttime="20201103 01:59:30.926"></status>
</kw>
<msg timestamp="20201103 01:59:30.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:30.934" starttime="20201103 01:59:30.926"></status>
</kw>
<msg timestamp="20201103 01:59:30.934" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:59:30.934" starttime="20201103 01:59:30.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:59:30.935" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:59:30.935" starttime="20201103 01:59:30.934"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:30.941" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:30.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:30.962" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:30.962" starttime="20201103 01:59:30.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.964" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:30.964" starttime="20201103 01:59:30.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:30.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:30.964" starttime="20201103 01:59:30.964"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.965" starttime="20201103 01:59:30.937"></status>
</kw>
<msg timestamp="20201103 01:59:30.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:30.965" starttime="20201103 01:59:30.937"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.965" starttime="20201103 01:59:30.936"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.965" starttime="20201103 01:59:30.935"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.966" starttime="20201103 01:59:30.925"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:30.966" starttime="20201103 01:59:30.924"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:30.970" level="INFO">Running command 'ozone sh key list 61089-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:34.990" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 01:59:34.990" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:34.990" starttime="20201103 01:59:30.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:34.991" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201103 01:59:34.991" starttime="20201103 01:59:34.990"></status>
</kw>
<msg timestamp="20201103 01:59:34.992" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:34.992" starttime="20201103 01:59:30.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201103 01:59:34.993" starttime="20201103 01:59:34.992"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:34.993" starttime="20201103 01:59:30.913"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:34.993" starttime="20201103 01:59:30.912"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:59:34.993" critical="yes" starttime="20201103 01:59:30.866"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:35.004" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:35.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:35.007" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:59:35.007" starttime="20201103 01:59:34.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:35.009" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:59:35.009" starttime="20201103 01:59:35.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:35.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:35.010" starttime="20201103 01:59:35.009"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.010" starttime="20201103 01:59:34.997"></status>
</kw>
<msg timestamp="20201103 01:59:35.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:35.010" starttime="20201103 01:59:34.996"></status>
</kw>
<msg timestamp="20201103 01:59:35.011" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:59:35.011" starttime="20201103 01:59:34.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:59:35.011" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:59:35.012" starttime="20201103 01:59:35.011"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:35.018" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:35.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:35.037" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:35.037" starttime="20201103 01:59:35.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:35.038" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:35.038" starttime="20201103 01:59:35.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:35.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:35.039" starttime="20201103 01:59:35.038"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.039" starttime="20201103 01:59:35.013"></status>
</kw>
<msg timestamp="20201103 01:59:35.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:35.039" starttime="20201103 01:59:35.013"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.040" starttime="20201103 01:59:35.012"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.040" starttime="20201103 01:59:35.012"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.040" starttime="20201103 01:59:34.995"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.040" starttime="20201103 01:59:34.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:35.047" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:35.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:35.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:35.050" starttime="20201103 01:59:35.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:35.051" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:35.051" starttime="20201103 01:59:35.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:35.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:35.052" starttime="20201103 01:59:35.051"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.052" starttime="20201103 01:59:35.042"></status>
</kw>
<msg timestamp="20201103 01:59:35.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:35.052" starttime="20201103 01:59:35.042"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.053" starttime="20201103 01:59:35.041"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:35.059" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:35.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:35.060" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:59:35.060" starttime="20201103 01:59:35.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:35.062" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:59:35.062" starttime="20201103 01:59:35.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:35.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:35.063" starttime="20201103 01:59:35.062"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.064" starttime="20201103 01:59:35.055"></status>
</kw>
<msg timestamp="20201103 01:59:35.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:35.064" starttime="20201103 01:59:35.054"></status>
</kw>
<msg timestamp="20201103 01:59:35.064" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:59:35.064" starttime="20201103 01:59:35.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:59:35.065" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:59:35.065" starttime="20201103 01:59:35.065"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:35.071" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:35.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:35.084" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:35.084" starttime="20201103 01:59:35.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:35.085" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:35.085" starttime="20201103 01:59:35.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:35.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:35.086" starttime="20201103 01:59:35.086"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.087" starttime="20201103 01:59:35.067"></status>
</kw>
<msg timestamp="20201103 01:59:35.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:35.087" starttime="20201103 01:59:35.067"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.087" starttime="20201103 01:59:35.066"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.087" starttime="20201103 01:59:35.065"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.087" starttime="20201103 01:59:35.053"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:35.087" starttime="20201103 01:59:35.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:35.094" level="INFO">Running command 'ozone sh bucket info 61089-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:39.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:39.473" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:39.473" starttime="20201103 01:59:35.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:39.474" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:57:02.255Z",
  "modificationTime" : "2020-11-03T01:57:26.245Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 01:59:39.474" starttime="20201103 01:59:39.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:39.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:39.475" starttime="20201103 01:59:39.474"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:39.475" starttime="20201103 01:59:35.089"></status>
</kw>
<msg timestamp="20201103 01:59:39.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:39.475" starttime="20201103 01:59:35.088"></status>
</kw>
<msg timestamp="20201103 01:59:39.476" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:39.476" starttime="20201103 01:59:35.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 01:59:39.476" starttime="20201103 01:59:39.476"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201103 01:59:39.477" starttime="20201103 01:59:39.476"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:39.480" level="INFO">Running command 'ozone sh key list 61089-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:43.439" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 01:59:43.439" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:43.439" starttime="20201103 01:59:39.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:43.441" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201103 01:59:43.441" starttime="20201103 01:59:43.440"></status>
</kw>
<msg timestamp="20201103 01:59:43.441" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:43.441" starttime="20201103 01:59:39.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201103 01:59:43.442" starttime="20201103 01:59:43.441"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:43.442" starttime="20201103 01:59:35.041"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:43.442" starttime="20201103 01:59:35.040"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:59:43.443" critical="yes" starttime="20201103 01:59:34.994"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:43.451" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:43.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:43.453" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:59:43.453" starttime="20201103 01:59:43.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:43.454" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:59:43.454" starttime="20201103 01:59:43.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:43.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:43.455" starttime="20201103 01:59:43.454"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:43.455" starttime="20201103 01:59:43.447"></status>
</kw>
<msg timestamp="20201103 01:59:43.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:43.455" starttime="20201103 01:59:43.446"></status>
</kw>
<msg timestamp="20201103 01:59:43.456" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:59:43.456" starttime="20201103 01:59:43.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:59:43.457" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:59:43.457" starttime="20201103 01:59:43.456"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:43.462" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:43.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:43.473" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:43.473" starttime="20201103 01:59:43.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:43.474" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:43.474" starttime="20201103 01:59:43.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:43.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:43.475" starttime="20201103 01:59:43.474"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:43.475" starttime="20201103 01:59:43.459"></status>
</kw>
<msg timestamp="20201103 01:59:43.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:43.476" starttime="20201103 01:59:43.458"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:43.476" starttime="20201103 01:59:43.458"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:43.476" starttime="20201103 01:59:43.457"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:43.476" starttime="20201103 01:59:43.445"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:43.476" starttime="20201103 01:59:43.444"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:43.480" level="INFO">Running command 'ozone sh bucket link 61089-target/loop1 61089-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:47.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:47.829" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:47.829" starttime="20201103 01:59:43.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:47.830" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:59:47.830" starttime="20201103 01:59:47.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:47.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:47.831" starttime="20201103 01:59:47.830"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:47.831" starttime="20201103 01:59:43.477"></status>
</kw>
<msg timestamp="20201103 01:59:47.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:47.832" starttime="20201103 01:59:43.477"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:47.832" starttime="20201103 01:59:43.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:47.836" level="INFO">Running command 'ozone sh bucket link 61089-target/loop2 61089-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:51.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:51.792" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:51.792" starttime="20201103 01:59:47.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:51.794" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:59:51.794" starttime="20201103 01:59:51.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:51.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:51.795" starttime="20201103 01:59:51.794"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:51.795" starttime="20201103 01:59:47.833"></status>
</kw>
<msg timestamp="20201103 01:59:51.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:51.795" starttime="20201103 01:59:47.833"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:51.795" starttime="20201103 01:59:47.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:51.802" level="INFO">Running command 'ozone sh bucket link 61089-target/loop3 61089-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:55.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:55.904" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:55.904" starttime="20201103 01:59:51.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:55.906" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 01:59:55.906" starttime="20201103 01:59:55.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:55.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:55.907" starttime="20201103 01:59:55.907"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:55.908" starttime="20201103 01:59:51.797"></status>
</kw>
<msg timestamp="20201103 01:59:55.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:55.908" starttime="20201103 01:59:51.797"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:55.908" starttime="20201103 01:59:51.796"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:55.912" level="INFO">Running command 'ozone sh key list 61089-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:59.957" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 01:59:59.957" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:59.957" starttime="20201103 01:59:55.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:59.958" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201103 01:59:59.958" starttime="20201103 01:59:59.957"></status>
</kw>
<msg timestamp="20201103 01:59:59.959" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 01:59:59.959" starttime="20201103 01:59:55.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201103 01:59:59.959" starttime="20201103 01:59:59.959"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 01:59:59.960" critical="yes" starttime="20201103 01:59:43.443"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:59.967" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:59.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:59.970" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 01:59:59.970" starttime="20201103 01:59:59.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:59.971" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 01:59:59.971" starttime="20201103 01:59:59.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:59.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:59.972" starttime="20201103 01:59:59.972"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:59.972" starttime="20201103 01:59:59.963"></status>
</kw>
<msg timestamp="20201103 01:59:59.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:59.973" starttime="20201103 01:59:59.963"></status>
</kw>
<msg timestamp="20201103 01:59:59.973" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 01:59:59.973" starttime="20201103 01:59:59.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 01:59:59.974" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 01:59:59.974" starttime="20201103 01:59:59.973"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 01:59:59.978" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 01:59:59.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 01:59:59.996" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 01:59:59.996" starttime="20201103 01:59:59.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 01:59:59.997" level="INFO"></msg>
<status status="PASS" endtime="20201103 01:59:59.997" starttime="20201103 01:59:59.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 01:59:59.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 01:59:59.998" starttime="20201103 01:59:59.997"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:59.998" starttime="20201103 01:59:59.975"></status>
</kw>
<msg timestamp="20201103 01:59:59.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 01:59:59.999" starttime="20201103 01:59:59.975"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:59.999" starttime="20201103 01:59:59.974"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:59.999" starttime="20201103 01:59:59.974"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:59.999" starttime="20201103 01:59:59.962"></status>
</kw>
<status status="PASS" endtime="20201103 01:59:59.999" starttime="20201103 01:59:59.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 02:00:00.004" level="INFO">Running command 'ozone sh bucket link 61089-source/bucket1 61089-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 02:00:04.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 02:00:04.138" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 02:00:04.138" starttime="20201103 02:00:00.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 02:00:04.147" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 02:00:04.147" starttime="20201103 02:00:04.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 02:00:04.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 02:00:04.148" starttime="20201103 02:00:04.147"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:04.149" starttime="20201103 02:00:00.001"></status>
</kw>
<msg timestamp="20201103 02:00:04.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 02:00:04.149" starttime="20201103 02:00:00.001"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:04.149" starttime="20201103 02:00:00.000"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 02:00:04.160" level="INFO">Running command 'ozone sh key put 61089-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 02:00:10.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 02:00:10.560" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 02:00:10.560" starttime="20201103 02:00:04.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 02:00:10.561" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 02:00:10.561" starttime="20201103 02:00:10.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 02:00:10.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 02:00:10.562" starttime="20201103 02:00:10.561"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:10.562" starttime="20201103 02:00:04.153"></status>
</kw>
<msg timestamp="20201103 02:00:10.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 02:00:10.562" starttime="20201103 02:00:04.150"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:10.563" starttime="20201103 02:00:04.149"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201103 02:00:10.566" level="INFO">${postfix} = 66863</msg>
<status status="PASS" endtime="20201103 02:00:10.566" starttime="20201103 02:00:10.565"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201103 02:00:10.567" level="INFO">${tmpfile} = /tmp/tempkey-66863</msg>
<status status="PASS" endtime="20201103 02:00:10.567" starttime="20201103 02:00:10.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 02:00:10.571" level="INFO">Running command 'ozone sh key get -f 61089-target/link1/key3 /tmp/tempkey-66863 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 02:00:16.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 02:00:16.472" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 02:00:16.472" starttime="20201103 02:00:10.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 02:00:16.473" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 02:00:16.473" starttime="20201103 02:00:16.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 02:00:16.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 02:00:16.474" starttime="20201103 02:00:16.474"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.474" starttime="20201103 02:00:10.568"></status>
</kw>
<msg timestamp="20201103 02:00:16.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 02:00:16.475" starttime="20201103 02:00:10.567"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.475" starttime="20201103 02:00:10.567"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201103 02:00:16.478" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-66863 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 02:00:16.480" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201103 02:00:16.480" starttime="20201103 02:00:16.475"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 02:00:16.485" level="INFO">Running command 'rm -f /tmp/tempkey-66863 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 02:00:16.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 02:00:16.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 02:00:16.488" starttime="20201103 02:00:16.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 02:00:16.489" level="INFO"></msg>
<status status="PASS" endtime="20201103 02:00:16.489" starttime="20201103 02:00:16.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 02:00:16.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 02:00:16.490" starttime="20201103 02:00:16.489"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.490" starttime="20201103 02:00:16.482"></status>
</kw>
<msg timestamp="20201103 02:00:16.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 02:00:16.491" starttime="20201103 02:00:16.482"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.491" starttime="20201103 02:00:16.481"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 02:00:16.491" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201103 02:00:16.491" starttime="20201103 02:00:16.491"></status>
</kw>
<msg timestamp="20201103 02:00:16.492" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201103 02:00:16.492" starttime="20201103 02:00:10.564"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201103 02:00:16.492" starttime="20201103 02:00:16.492"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.493" starttime="20201103 02:00:10.563"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 02:00:16.493" critical="yes" starttime="20201103 01:59:59.960"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 02:00:16.501" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 02:00:16.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 02:00:16.503" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 02:00:16.503" starttime="20201103 02:00:16.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 02:00:16.504" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 02:00:16.504" starttime="20201103 02:00:16.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 02:00:16.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 02:00:16.505" starttime="20201103 02:00:16.504"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.506" starttime="20201103 02:00:16.497"></status>
</kw>
<msg timestamp="20201103 02:00:16.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 02:00:16.506" starttime="20201103 02:00:16.496"></status>
</kw>
<msg timestamp="20201103 02:00:16.506" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 02:00:16.506" starttime="20201103 02:00:16.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 02:00:16.507" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 02:00:16.507" starttime="20201103 02:00:16.506"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 02:00:16.511" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 02:00:16.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 02:00:16.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 02:00:16.551" starttime="20201103 02:00:16.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 02:00:16.552" level="INFO"></msg>
<status status="PASS" endtime="20201103 02:00:16.552" starttime="20201103 02:00:16.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 02:00:16.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 02:00:16.553" starttime="20201103 02:00:16.552"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.554" starttime="20201103 02:00:16.509"></status>
</kw>
<msg timestamp="20201103 02:00:16.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 02:00:16.554" starttime="20201103 02:00:16.508"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.554" starttime="20201103 02:00:16.508"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.554" starttime="20201103 02:00:16.507"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.554" starttime="20201103 02:00:16.495"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:16.555" starttime="20201103 02:00:16.495"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 02:00:16.559" level="INFO">Running command 'ozone sh bucket delete 61089-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 02:00:20.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 02:00:20.710" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 02:00:20.711" starttime="20201103 02:00:16.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 02:00:20.712" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 02:00:20.712" starttime="20201103 02:00:20.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 02:00:20.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 02:00:20.713" starttime="20201103 02:00:20.712"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:20.713" starttime="20201103 02:00:16.556"></status>
</kw>
<msg timestamp="20201103 02:00:20.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 02:00:20.713" starttime="20201103 02:00:16.556"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:20.714" starttime="20201103 02:00:16.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 02:00:20.720" level="INFO">Running command 'ozone sh bucket list 61089-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 02:00:25.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 02:00:25.450" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 02:00:25.450" starttime="20201103 02:00:20.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 02:00:25.451" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:59:22.135Z",
  "modificationTime" : "2020-11-03T01:59:22.135Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:57:31.048Z",
  "modificationTime" : "2020-11-03T01:57:31.048Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:57:02.255Z",
  "modificationTime" : "2020-11-03T01:57:26.245Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:59:14.001Z",
  "modificationTime" : "2020-11-03T01:59:14.001Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T02:00:03.982Z",
  "modificationTime" : "2020-11-03T02:00:03.982Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:59:55.722Z",
  "modificationTime" : "2020-11-03T01:59:55.722Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:59:47.658Z",
  "modificationTime" : "2020-11-03T01:59:47.658Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:59:51.489Z",
  "modificationTime" : "2020-11-03T01:59:51.489Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:56:53.633Z",
  "modificationTime" : "2020-11-03T01:57:21.325Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61089-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T01:56:57.803Z",
  "modificationTime" : "2020-11-03T01:56:57.803Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61089-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 02:00:25.452" starttime="20201103 02:00:25.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 02:00:25.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 02:00:25.452" starttime="20201103 02:00:25.452"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:25.453" starttime="20201103 02:00:20.715"></status>
</kw>
<msg timestamp="20201103 02:00:25.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 02:00:25.453" starttime="20201103 02:00:20.715"></status>
</kw>
<msg timestamp="20201103 02:00:25.453" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 02:00:25.454" starttime="20201103 02:00:20.714"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201103 02:00:25.454" starttime="20201103 02:00:25.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 02:00:25.459" level="INFO">Running command 'ozone sh key list 61089-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 02:00:29.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 02:00:29.818" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201103 02:00:29.818" starttime="20201103 02:00:25.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 02:00:29.820" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201103 02:00:29.820" starttime="20201103 02:00:29.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 02:00:29.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 02:00:29.821" starttime="20201103 02:00:29.820"></status>
</kw>
<status status="PASS" endtime="20201103 02:00:29.821" starttime="20201103 02:00:25.455"></status>
</kw>
<msg timestamp="20201103 02:00:29.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 02:00:29.821" starttime="20201103 02:00:25.455"></status>
</kw>
<msg timestamp="20201103 02:00:29.821" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201103 02:00:29.822" starttime="20201103 02:00:25.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201103 02:00:29.822" starttime="20201103 02:00:29.822"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 02:00:29.822" critical="yes" starttime="20201103 02:00:16.494"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201103 02:00:29.828" starttime="20201103 01:56:25.669"></status>
</suite>
<status status="PASS" elapsedtime="280018" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
