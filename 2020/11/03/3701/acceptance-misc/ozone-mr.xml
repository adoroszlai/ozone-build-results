<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201103 16:42:20.136" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:23.401" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:29:25.632" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 16:29:25.632" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 16:29:25.632" starttime="20201103 16:29:23.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:29:25.633" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 16:29:25.633" starttime="20201103 16:29:25.633"></status>
</kw>
<msg timestamp="20201103 16:29:25.634" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 16:29:25.634" starttime="20201103 16:29:23.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:25.639" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:29:27.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:29:27.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:29:27.605" starttime="20201103 16:29:25.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:29:27.606" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:29:27.607" starttime="20201103 16:29:27.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:29:27.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:29:27.607" starttime="20201103 16:29:27.607"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:27.608" starttime="20201103 16:29:25.635"></status>
</kw>
<msg timestamp="20201103 16:29:27.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:29:27.608" starttime="20201103 16:29:25.635"></status>
</kw>
<msg timestamp="20201103 16:29:27.608" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201103 16:29:27.608" starttime="20201103 16:29:25.634"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 16:29:27.609" starttime="20201103 16:29:27.608"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:27.609" starttime="20201103 16:29:25.634"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:27.609" starttime="20201103 16:29:25.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:27.613" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:29:29.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:29:29.697" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:29:29.698" starttime="20201103 16:29:27.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:29:29.699" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:29:29.699" starttime="20201103 16:29:29.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:29:29.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:29:29.699" starttime="20201103 16:29:29.699"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:29.700" starttime="20201103 16:29:27.611"></status>
</kw>
<msg timestamp="20201103 16:29:29.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:29:29.701" starttime="20201103 16:29:27.611"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:29.701" starttime="20201103 16:29:27.610"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:29.702" starttime="20201103 16:29:27.610"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:29.702" starttime="20201103 16:29:27.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 16:29:29.703" starttime="20201103 16:29:29.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:29.710" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:29:32.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:29:32.135" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T16:29:29.570Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 16:29:32.135" starttime="20201103 16:29:29.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:29:32.137" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T16:29:29.570Z",
  "modificationTime" : "2020-11-03T16:29:29.570Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 16:29:32.137" starttime="20201103 16:29:32.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:29:32.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:29:32.137" starttime="20201103 16:29:32.137"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:32.138" starttime="20201103 16:29:29.705"></status>
</kw>
<msg timestamp="20201103 16:29:32.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:29:32.138" starttime="20201103 16:29:29.704"></status>
</kw>
<msg timestamp="20201103 16:29:32.138" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T16:29:29.570Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 16:29:32.138" starttime="20201103 16:29:29.703"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 16:29:32.139" starttime="20201103 16:29:32.138"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:29:32.143" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:29:32.143" starttime="20201103 16:29:32.143"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:29:32.144" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:29:32.144" starttime="20201103 16:29:32.143"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:32.144" starttime="20201103 16:29:32.142"></status>
</kw>
<msg timestamp="20201103 16:29:32.144" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:29:32.144" starttime="20201103 16:29:32.142"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:32.145" starttime="20201103 16:29:32.141"></status>
</kw>
<msg timestamp="20201103 16:29:32.145" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 16:29:32.145" starttime="20201103 16:29:32.140"></status>
</kw>
<msg timestamp="20201103 16:29:32.145" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 16:29:32.145" starttime="20201103 16:29:32.139"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:32.151" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:29:34.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:29:34.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:29:34.240" starttime="20201103 16:29:32.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:29:34.241" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:29:34.242" starttime="20201103 16:29:34.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:29:34.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:29:34.242" starttime="20201103 16:29:34.242"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:34.243" starttime="20201103 16:29:32.146"></status>
</kw>
<msg timestamp="20201103 16:29:34.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:29:34.243" starttime="20201103 16:29:32.146"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:34.243" starttime="20201103 16:29:32.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:34.247" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:29:39.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:29:39.429" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:29:39.429" starttime="20201103 16:29:34.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:29:39.430" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:29:39.430" starttime="20201103 16:29:39.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:29:39.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:29:39.431" starttime="20201103 16:29:39.430"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:39.431" starttime="20201103 16:29:34.244"></status>
</kw>
<msg timestamp="20201103 16:29:39.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:29:39.431" starttime="20201103 16:29:34.244"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:39.431" starttime="20201103 16:29:34.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:39.436" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:29:43.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:29:43.532" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:29:43.532" starttime="20201103 16:29:39.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:29:43.533" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:29:43.533" starttime="20201103 16:29:43.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:29:43.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:29:43.534" starttime="20201103 16:29:43.533"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:43.534" starttime="20201103 16:29:39.432"></status>
</kw>
<msg timestamp="20201103 16:29:43.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:29:43.534" starttime="20201103 16:29:39.432"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:43.534" starttime="20201103 16:29:39.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:43.539" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:29:47.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:29:47.502" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:29:47.502" starttime="20201103 16:29:43.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:29:47.503" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:29:47.503" starttime="20201103 16:29:47.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:29:47.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:29:47.504" starttime="20201103 16:29:47.504"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:47.504" starttime="20201103 16:29:43.535"></status>
</kw>
<msg timestamp="20201103 16:29:47.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:29:47.505" starttime="20201103 16:29:43.535"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:47.505" starttime="20201103 16:29:43.535"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 16:29:47.505" critical="yes" starttime="20201103 16:29:23.394"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:29:47.511" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:29:47.511" starttime="20201103 16:29:47.511"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:29:47.512" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:29:47.512" starttime="20201103 16:29:47.511"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:47.512" starttime="20201103 16:29:47.510"></status>
</kw>
<msg timestamp="20201103 16:29:47.512" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:29:47.512" starttime="20201103 16:29:47.510"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:47.513" starttime="20201103 16:29:47.509"></status>
</kw>
<msg timestamp="20201103 16:29:47.513" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 16:29:47.513" starttime="20201103 16:29:47.508"></status>
</kw>
<msg timestamp="20201103 16:29:47.513" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 16:29:47.513" starttime="20201103 16:29:47.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:47.518" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:29:49.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:29:49.557" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:29:49.557" starttime="20201103 16:29:47.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:29:49.559" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:29:49.559" starttime="20201103 16:29:49.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:29:49.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:29:49.559" starttime="20201103 16:29:49.559"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:49.560" starttime="20201103 16:29:47.514"></status>
</kw>
<msg timestamp="20201103 16:29:49.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:29:49.560" starttime="20201103 16:29:47.514"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:49.560" starttime="20201103 16:29:47.513"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:49.565" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:29:51.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:29:51.550" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:29:51.550" starttime="20201103 16:29:49.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:29:51.552" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:29:51.552" starttime="20201103 16:29:51.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:29:51.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:29:51.552" starttime="20201103 16:29:51.552"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:51.553" starttime="20201103 16:29:49.562"></status>
</kw>
<msg timestamp="20201103 16:29:51.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:29:51.553" starttime="20201103 16:29:49.561"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:51.553" starttime="20201103 16:29:49.560"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 16:29:51.553" critical="yes" starttime="20201103 16:29:47.507"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201103 16:29:51.555" starttime="20201103 16:29:23.341"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:31:22.855" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:31:22.855" starttime="20201103 16:31:22.854"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:31:22.855" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:31:22.855" starttime="20201103 16:31:22.855"></status>
</kw>
<status status="PASS" endtime="20201103 16:31:22.856" starttime="20201103 16:31:22.854"></status>
</kw>
<msg timestamp="20201103 16:31:22.856" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:31:22.856" starttime="20201103 16:31:22.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:31:22.857" starttime="20201103 16:31:22.856"></status>
</kw>
<msg timestamp="20201103 16:31:22.857" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 16:31:22.857" starttime="20201103 16:31:22.856"></status>
</kw>
<status status="PASS" endtime="20201103 16:31:22.857" starttime="20201103 16:31:22.853"></status>
</kw>
<msg timestamp="20201103 16:31:22.857" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:31:22.857" starttime="20201103 16:31:22.852"></status>
</kw>
<msg timestamp="20201103 16:31:22.857" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:31:22.857" starttime="20201103 16:31:22.851"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:31:22.858" level="INFO">${random} = 44404</msg>
<status status="PASS" endtime="20201103 16:31:22.858" starttime="20201103 16:31:22.858"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:31:22.864" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-44404 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:31:26.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:31:26.092" level="INFO">${output} = 2020-11-03 16:31:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:31:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 16:31:26.092" starttime="20201103 16:31:22.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:31:26.093" level="INFO">2020-11-03 16:31:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:31:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 16:31:24 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 16:31:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:31:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D9A49FE494E7-&gt;0ffa3e35-230f-4dd7-9faf-69b771e4f68f
2020-11-03 16:31:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 16:31:26.093" starttime="20201103 16:31:26.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:31:26.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:31:26.094" starttime="20201103 16:31:26.093"></status>
</kw>
<status status="PASS" endtime="20201103 16:31:26.094" starttime="20201103 16:31:22.859"></status>
</kw>
<msg timestamp="20201103 16:31:26.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:31:26.094" starttime="20201103 16:31:22.859"></status>
</kw>
<msg timestamp="20201103 16:31:26.094" level="INFO">${result} = 2020-11-03 16:31:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:31:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 16:31:26.094" starttime="20201103 16:31:22.858"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:31:26.100" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:31:27.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:31:27.773" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 16:29 ofs://om/volume1/bucket1/ozone-40927
-rw-...</msg>
<status status="PASS" endtime="20201103 16:31:27.773" starttime="20201103 16:31:26.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:31:27.774" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 16:29 ofs://om/volume1/bucket1/ozone-40927
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 16:31 ofs://om/volume1/bucket1/ozone-44404
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:29 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:30 ofs://om/volume1/bucket1/wordcount-69.txt</msg>
<status status="PASS" endtime="20201103 16:31:27.774" starttime="20201103 16:31:27.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:31:27.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:31:27.775" starttime="20201103 16:31:27.775"></status>
</kw>
<status status="PASS" endtime="20201103 16:31:27.775" starttime="20201103 16:31:26.096"></status>
</kw>
<msg timestamp="20201103 16:31:27.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:31:27.775" starttime="20201103 16:31:26.096"></status>
</kw>
<msg timestamp="20201103 16:31:27.776" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 16:29 ofs://om/volume1/bucket1/ozone-40927
-rw-...</msg>
<status status="PASS" endtime="20201103 16:31:27.776" starttime="20201103 16:31:26.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:31:27.776" starttime="20201103 16:31:27.776"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 16:31:27.776" critical="yes" starttime="20201103 16:31:22.850"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 16:31:27.777" starttime="20201103 16:31:22.799"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:29:56.337" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:29:56.337" starttime="20201103 16:29:56.337"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:29:56.338" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:29:56.338" starttime="20201103 16:29:56.337"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:56.338" starttime="20201103 16:29:56.336"></status>
</kw>
<msg timestamp="20201103 16:29:56.338" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:29:56.338" starttime="20201103 16:29:56.336"></status>
</kw>
<status status="PASS" endtime="20201103 16:29:56.338" starttime="20201103 16:29:56.335"></status>
</kw>
<msg timestamp="20201103 16:29:56.338" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:29:56.338" starttime="20201103 16:29:56.334"></status>
</kw>
<msg timestamp="20201103 16:29:56.339" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:29:56.339" starttime="20201103 16:29:56.334"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:29:56.339" level="INFO">${random} = 40927</msg>
<status status="PASS" endtime="20201103 16:29:56.339" starttime="20201103 16:29:56.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:29:56.344" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-40927 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:30:00.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:30:00.185" level="INFO">${output} = 2020-11-03 16:29:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:29:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 16:30:00.185" starttime="20201103 16:29:56.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:30:00.186" level="INFO">2020-11-03 16:29:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:29:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 16:29:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 16:29:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:29:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-62B498EA10DA-&gt;0ffa3e35-230f-4dd7-9faf-69b771e4f68f
2020-11-03 16:29:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 16:30:00.186" starttime="20201103 16:30:00.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:30:00.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:30:00.187" starttime="20201103 16:30:00.186"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:00.187" starttime="20201103 16:29:56.340"></status>
</kw>
<msg timestamp="20201103 16:30:00.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:30:00.187" starttime="20201103 16:29:56.340"></status>
</kw>
<msg timestamp="20201103 16:30:00.188" level="INFO">${result} = 2020-11-03 16:29:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:29:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 16:30:00.188" starttime="20201103 16:29:56.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:30:00.194" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:30:01.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:30:01.950" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 16:29 o3fs://bucket1.volume1.om/ozone-40927
dr...</msg>
<status status="PASS" endtime="20201103 16:30:01.950" starttime="20201103 16:30:00.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:30:01.951" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 16:29 o3fs://bucket1.volume1.om/ozone-40927
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:29 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 16:30:01.951" starttime="20201103 16:30:01.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:30:01.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:30:01.954" starttime="20201103 16:30:01.951"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:01.954" starttime="20201103 16:30:00.190"></status>
</kw>
<msg timestamp="20201103 16:30:01.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:30:01.954" starttime="20201103 16:30:00.188"></status>
</kw>
<msg timestamp="20201103 16:30:01.955" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 16:29 o3fs://bucket1.volume1.om/ozone-40927
dr...</msg>
<status status="PASS" endtime="20201103 16:30:01.955" starttime="20201103 16:30:00.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:30:01.955" starttime="20201103 16:30:01.955"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 16:30:01.956" critical="yes" starttime="20201103 16:29:56.333"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 16:30:01.957" starttime="20201103 16:29:56.272"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:31:32.519" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:31:32.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:31:32.525" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:31:32.525" starttime="20201103 16:31:32.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:31:32.526" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:31:32.526" starttime="20201103 16:31:32.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:31:32.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:31:32.526" starttime="20201103 16:31:32.526"></status>
</kw>
<status status="PASS" endtime="20201103 16:31:32.527" starttime="20201103 16:31:32.515"></status>
</kw>
<msg timestamp="20201103 16:31:32.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:31:32.527" starttime="20201103 16:31:32.514"></status>
</kw>
<msg timestamp="20201103 16:31:32.527" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:31:32.527" starttime="20201103 16:31:32.514"></status>
</kw>
<msg timestamp="20201103 16:31:32.527" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:31:32.527" starttime="20201103 16:31:32.514"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:31:32.531" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:31:32.531" starttime="20201103 16:31:32.531"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:31:32.532" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:31:32.532" starttime="20201103 16:31:32.531"></status>
</kw>
<status status="PASS" endtime="20201103 16:31:32.532" starttime="20201103 16:31:32.529"></status>
</kw>
<msg timestamp="20201103 16:31:32.532" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:31:32.532" starttime="20201103 16:31:32.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:31:32.534" starttime="20201103 16:31:32.533"></status>
</kw>
<msg timestamp="20201103 16:31:32.534" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 16:31:32.534" starttime="20201103 16:31:32.533"></status>
</kw>
<status status="PASS" endtime="20201103 16:31:32.535" starttime="20201103 16:31:32.528"></status>
</kw>
<msg timestamp="20201103 16:31:32.535" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:31:32.535" starttime="20201103 16:31:32.528"></status>
</kw>
<msg timestamp="20201103 16:31:32.535" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:31:32.535" starttime="20201103 16:31:32.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:31:32.540" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:32:14.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:32:14.143" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:31:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:31:34 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 16:32:14.143" starttime="20201103 16:31:32.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:32:14.144" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:31:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:31:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 16:31:34 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 16:31:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:31:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7367D65547D4-&gt;0ffa3e35-230f-4dd7-9faf-69b771e4f68f
2020-11-03 16:31:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 16:31:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-03 16:31:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 16:31:38 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 16:31:38 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 16:31:38 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604420928470_0003
2020-11-03 16:31:39 INFO  YarnClientImpl:273 - Submitted application application_1604420928470_0003
2020-11-03 16:31:39 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604420928470_0003/
2020-11-03 16:31:39 INFO  Job:1339 - Running job: job_1604420928470_0003
2020-11-03 16:31:46 INFO  Job:1360 - Job job_1604420928470_0003 running in uber mode : false
2020-11-03 16:31:46 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 16:31:52 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 16:31:57 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 16:32:02 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 16:32:10 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 16:32:13 INFO  Job:1378 - Job job_1604420928470_0003 completed successfully
2020-11-03 16:32:13 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38524
		Total time spent by all reduces in occupied slots (ms)=27784
		Total time spent by all map tasks (ms)=9631
		Total time spent by all reduce tasks (ms)=6946
		Total vcore-milliseconds taken by all map tasks=9631
		Total vcore-milliseconds taken by all reduce tasks=6946
		Total megabyte-milliseconds taken by all map tasks=39448576
		Total megabyte-milliseconds taken by all reduce tasks=28450816
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=565
		CPU time spent (ms)=7260
		Physical memory (bytes) snapshot=1152372736
		Virtual memory (bytes) snapshot=15787835392
		Total committed heap usage (bytes)=1050673152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.434 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 16:32:14.144" starttime="20201103 16:32:14.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:32:14.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:32:14.145" starttime="20201103 16:32:14.145"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:14.145" starttime="20201103 16:31:32.536"></status>
</kw>
<msg timestamp="20201103 16:32:14.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:32:14.145" starttime="20201103 16:31:32.536"></status>
</kw>
<msg timestamp="20201103 16:32:14.146" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:31:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:31:34 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 16:32:14.146" starttime="20201103 16:31:32.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:32:14.146" starttime="20201103 16:32:14.146"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:32:14.147" critical="yes" starttime="20201103 16:31:32.513"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:32:14.152" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:32:14.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:32:14.160" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:32:14.160" starttime="20201103 16:32:14.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:32:14.161" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:32:14.161" starttime="20201103 16:32:14.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:32:14.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:32:14.161" starttime="20201103 16:32:14.161"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:14.162" starttime="20201103 16:32:14.149"></status>
</kw>
<msg timestamp="20201103 16:32:14.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:32:14.162" starttime="20201103 16:32:14.149"></status>
</kw>
<msg timestamp="20201103 16:32:14.162" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:32:14.162" starttime="20201103 16:32:14.148"></status>
</kw>
<msg timestamp="20201103 16:32:14.162" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:32:14.162" starttime="20201103 16:32:14.148"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:32:14.163" level="INFO">${random} = 30</msg>
<status status="PASS" endtime="20201103 16:32:14.163" starttime="20201103 16:32:14.162"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:32:14.167" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:32:14.167" starttime="20201103 16:32:14.166"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:32:14.167" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:32:14.167" starttime="20201103 16:32:14.167"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:14.168" starttime="20201103 16:32:14.166"></status>
</kw>
<msg timestamp="20201103 16:32:14.168" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:32:14.168" starttime="20201103 16:32:14.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:32:14.169" starttime="20201103 16:32:14.168"></status>
</kw>
<msg timestamp="20201103 16:32:14.169" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 16:32:14.169" starttime="20201103 16:32:14.168"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:14.169" starttime="20201103 16:32:14.164"></status>
</kw>
<msg timestamp="20201103 16:32:14.169" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:32:14.169" starttime="20201103 16:32:14.164"></status>
</kw>
<msg timestamp="20201103 16:32:14.169" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:32:14.169" starttime="20201103 16:32:14.163"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:32:14.174" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:32:14.174" starttime="20201103 16:32:14.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:32:14.175" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:32:14.175" starttime="20201103 16:32:14.174"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:14.175" starttime="20201103 16:32:14.173"></status>
</kw>
<msg timestamp="20201103 16:32:14.175" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:32:14.175" starttime="20201103 16:32:14.171"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:32:14.176" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201103 16:32:14.176" starttime="20201103 16:32:14.176"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:32:14.177" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201103 16:32:14.177" starttime="20201103 16:32:14.176"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:14.177" starttime="20201103 16:32:14.175"></status>
</kw>
<msg timestamp="20201103 16:32:14.177" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201103 16:32:14.177" starttime="20201103 16:32:14.175"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:14.178" starttime="20201103 16:32:14.171"></status>
</kw>
<msg timestamp="20201103 16:32:14.178" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 16:32:14.178" starttime="20201103 16:32:14.170"></status>
</kw>
<msg timestamp="20201103 16:32:14.178" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 16:32:14.178" starttime="20201103 16:32:14.169"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:32:14.181" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:32:14.181" starttime="20201103 16:32:14.181"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:32:14.182" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:32:14.182" starttime="20201103 16:32:14.181"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:14.182" starttime="20201103 16:32:14.180"></status>
</kw>
<msg timestamp="20201103 16:32:14.182" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:32:14.182" starttime="20201103 16:32:14.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:32:14.183" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201103 16:32:14.183" starttime="20201103 16:32:14.183"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:32:14.184" level="INFO">${result} = /wordcount-30.txt</msg>
<status status="PASS" endtime="20201103 16:32:14.184" starttime="20201103 16:32:14.183"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:14.184" starttime="20201103 16:32:14.183"></status>
</kw>
<msg timestamp="20201103 16:32:14.184" level="INFO">${path_with_leading} = /wordcount-30.txt</msg>
<status status="PASS" endtime="20201103 16:32:14.184" starttime="20201103 16:32:14.182"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:14.184" starttime="20201103 16:32:14.179"></status>
</kw>
<msg timestamp="20201103 16:32:14.185" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-30.txt</msg>
<status status="PASS" endtime="20201103 16:32:14.185" starttime="20201103 16:32:14.179"></status>
</kw>
<msg timestamp="20201103 16:32:14.185" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-30.txt</msg>
<status status="PASS" endtime="20201103 16:32:14.185" starttime="20201103 16:32:14.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:32:14.189" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-30.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:32:47.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:32:47.720" level="INFO">${output} = 2020-11-03 16:32:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-03 16:32:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 16:32:47.720" starttime="20201103 16:32:14.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:32:47.722" level="INFO">2020-11-03 16:32:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-03 16:32:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 16:32:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:32:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 16:32:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 16:32:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:32:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6D51972FDC4F-&gt;0ffa3e35-230f-4dd7-9faf-69b771e4f68f
2020-11-03 16:32:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 16:32:17 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 16:32:17 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 16:32:17 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604420928470_0004
2020-11-03 16:32:17 INFO  YarnClientImpl:273 - Submitted application application_1604420928470_0004
2020-11-03 16:32:17 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604420928470_0004/
2020-11-03 16:32:17 INFO  Job:1339 - Running job: job_1604420928470_0004
2020-11-03 16:32:26 INFO  Job:1360 - Job job_1604420928470_0004 running in uber mode : false
2020-11-03 16:32:26 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 16:32:32 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 16:32:37 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 16:32:42 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 16:32:46 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 16:32:47 INFO  Job:1378 - Job job_1604420928470_0004 completed successfully
2020-11-03 16:32:47 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39300
		Total time spent by all reduces in occupied slots (ms)=13904
		Total time spent by all map tasks (ms)=9825
		Total time spent by all reduce tasks (ms)=3476
		Total vcore-milliseconds taken by all map tasks=9825
		Total vcore-milliseconds taken by all reduce tasks=3476
		Total megabyte-milliseconds taken by all map tasks=40243200
		Total megabyte-milliseconds taken by all reduce tasks=14237696
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=578
		CPU time spent (ms)=7090
		Physical memory (bytes) snapshot=1146269696
		Virtual memory (bytes) snapshot=15777935360
		Total committed heap usage (bytes)=1157627904
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 16:32:47.722" starttime="20201103 16:32:47.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:32:47.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:32:47.723" starttime="20201103 16:32:47.722"></status>
</kw>
<status status="PASS" endtime="20201103 16:32:47.723" starttime="20201103 16:32:14.186"></status>
</kw>
<msg timestamp="20201103 16:32:47.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:32:47.723" starttime="20201103 16:32:14.185"></status>
</kw>
<msg timestamp="20201103 16:32:47.724" level="INFO">${output} = 2020-11-03 16:32:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-03 16:32:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 16:32:47.724" starttime="20201103 16:32:14.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 16:32:47.724" starttime="20201103 16:32:47.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:32:47.725" starttime="20201103 16:32:47.724"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:32:47.725" critical="yes" starttime="20201103 16:32:14.147"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 16:32:47.726" starttime="20201103 16:31:32.463"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:30:06.559" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:30:06.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:30:06.564" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:30:06.564" starttime="20201103 16:30:06.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:30:06.565" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:30:06.565" starttime="20201103 16:30:06.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:30:06.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:30:06.566" starttime="20201103 16:30:06.565"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:06.566" starttime="20201103 16:30:06.555"></status>
</kw>
<msg timestamp="20201103 16:30:06.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:30:06.566" starttime="20201103 16:30:06.554"></status>
</kw>
<msg timestamp="20201103 16:30:06.566" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:30:06.566" starttime="20201103 16:30:06.554"></status>
</kw>
<msg timestamp="20201103 16:30:06.567" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:30:06.567" starttime="20201103 16:30:06.554"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:30:06.571" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:30:06.571" starttime="20201103 16:30:06.570"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:30:06.571" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:30:06.571" starttime="20201103 16:30:06.571"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:06.572" starttime="20201103 16:30:06.569"></status>
</kw>
<msg timestamp="20201103 16:30:06.572" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:30:06.572" starttime="20201103 16:30:06.569"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:06.572" starttime="20201103 16:30:06.568"></status>
</kw>
<msg timestamp="20201103 16:30:06.572" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:30:06.572" starttime="20201103 16:30:06.567"></status>
</kw>
<msg timestamp="20201103 16:30:06.572" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:30:06.572" starttime="20201103 16:30:06.567"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:30:06.576" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:30:44.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:30:44.114" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:30:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:30:08 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 16:30:44.114" starttime="20201103 16:30:06.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:30:44.115" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:30:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:30:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 16:30:08 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 16:30:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:30:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B45F9E12B1F3-&gt;0ffa3e35-230f-4dd7-9faf-69b771e4f68f
2020-11-03 16:30:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 16:30:09 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-03 16:30:10 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 16:30:10 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 16:30:10 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604420928470_0001
2020-11-03 16:30:11 INFO  YarnClientImpl:273 - Submitted application application_1604420928470_0001
2020-11-03 16:30:11 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604420928470_0001/
2020-11-03 16:30:11 INFO  Job:1339 - Running job: job_1604420928470_0001
2020-11-03 16:30:21 INFO  Job:1360 - Job job_1604420928470_0001 running in uber mode : false
2020-11-03 16:30:21 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 16:30:27 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 16:30:32 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 16:30:37 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 16:30:42 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 16:30:43 INFO  Job:1378 - Job job_1604420928470_0001 completed successfully
2020-11-03 16:30:43 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37824
		Total time spent by all reduces in occupied slots (ms)=18696
		Total time spent by all map tasks (ms)=9456
		Total time spent by all reduce tasks (ms)=4674
		Total vcore-milliseconds taken by all map tasks=9456
		Total vcore-milliseconds taken by all reduce tasks=4674
		Total megabyte-milliseconds taken by all map tasks=38731776
		Total megabyte-milliseconds taken by all reduce tasks=19144704
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=577
		CPU time spent (ms)=6440
		Physical memory (bytes) snapshot=1147318272
		Virtual memory (bytes) snapshot=15780003840
		Total committed heap usage (bytes)=1049100288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.847 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 16:30:44.116" starttime="20201103 16:30:44.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:30:44.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:30:44.117" starttime="20201103 16:30:44.116"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:44.117" starttime="20201103 16:30:06.573"></status>
</kw>
<msg timestamp="20201103 16:30:44.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:30:44.117" starttime="20201103 16:30:06.573"></status>
</kw>
<msg timestamp="20201103 16:30:44.118" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:30:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:30:08 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 16:30:44.118" starttime="20201103 16:30:06.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:30:44.118" starttime="20201103 16:30:44.118"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:30:44.118" critical="yes" starttime="20201103 16:30:06.553"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:30:44.124" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:30:44.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:30:44.131" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:30:44.131" starttime="20201103 16:30:44.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:30:44.132" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:30:44.132" starttime="20201103 16:30:44.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:30:44.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:30:44.133" starttime="20201103 16:30:44.133"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:44.133" starttime="20201103 16:30:44.121"></status>
</kw>
<msg timestamp="20201103 16:30:44.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:30:44.134" starttime="20201103 16:30:44.121"></status>
</kw>
<msg timestamp="20201103 16:30:44.134" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:30:44.134" starttime="20201103 16:30:44.120"></status>
</kw>
<msg timestamp="20201103 16:30:44.135" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 16:30:44.135" starttime="20201103 16:30:44.120"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:30:44.136" level="INFO">${random} = 69</msg>
<status status="PASS" endtime="20201103 16:30:44.136" starttime="20201103 16:30:44.135"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:30:44.139" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:30:44.139" starttime="20201103 16:30:44.139"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:30:44.140" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:30:44.140" starttime="20201103 16:30:44.140"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:44.140" starttime="20201103 16:30:44.139"></status>
</kw>
<msg timestamp="20201103 16:30:44.140" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:30:44.141" starttime="20201103 16:30:44.138"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:44.141" starttime="20201103 16:30:44.137"></status>
</kw>
<msg timestamp="20201103 16:30:44.141" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:30:44.141" starttime="20201103 16:30:44.137"></status>
</kw>
<msg timestamp="20201103 16:30:44.141" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:30:44.141" starttime="20201103 16:30:44.136"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:30:44.145" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:30:44.145" starttime="20201103 16:30:44.145"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:30:44.146" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:30:44.146" starttime="20201103 16:30:44.145"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:44.146" starttime="20201103 16:30:44.144"></status>
</kw>
<msg timestamp="20201103 16:30:44.146" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:30:44.146" starttime="20201103 16:30:44.144"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:44.146" starttime="20201103 16:30:44.143"></status>
</kw>
<msg timestamp="20201103 16:30:44.147" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 16:30:44.147" starttime="20201103 16:30:44.142"></status>
</kw>
<msg timestamp="20201103 16:30:44.147" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 16:30:44.147" starttime="20201103 16:30:44.141"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:30:44.150" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:30:44.150" starttime="20201103 16:30:44.150"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:30:44.151" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:30:44.151" starttime="20201103 16:30:44.151"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:44.151" starttime="20201103 16:30:44.149"></status>
</kw>
<msg timestamp="20201103 16:30:44.151" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:30:44.151" starttime="20201103 16:30:44.149"></status>
</kw>
<status status="PASS" endtime="20201103 16:30:44.152" starttime="20201103 16:30:44.148"></status>
</kw>
<msg timestamp="20201103 16:30:44.152" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-69.txt</msg>
<status status="PASS" endtime="20201103 16:30:44.152" starttime="20201103 16:30:44.148"></status>
</kw>
<msg timestamp="20201103 16:30:44.152" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-69.txt</msg>
<status status="PASS" endtime="20201103 16:30:44.152" starttime="20201103 16:30:44.147"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:30:44.157" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-69.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:31:18.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:31:18.073" level="INFO">${output} = 2020-11-03 16:30:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-03 16:30:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 16:31:18.073" starttime="20201103 16:30:44.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:31:18.074" level="INFO">2020-11-03 16:30:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-03 16:30:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 16:30:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:30:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 16:30:46 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 16:30:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:30:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-711C3A675756-&gt;0ffa3e35-230f-4dd7-9faf-69b771e4f68f
2020-11-03 16:30:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 16:30:47 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 16:30:47 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 16:30:47 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604420928470_0002
2020-11-03 16:30:48 INFO  YarnClientImpl:273 - Submitted application application_1604420928470_0002
2020-11-03 16:30:48 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604420928470_0002/
2020-11-03 16:30:48 INFO  Job:1339 - Running job: job_1604420928470_0002
2020-11-03 16:30:56 INFO  Job:1360 - Job job_1604420928470_0002 running in uber mode : false
2020-11-03 16:30:56 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 16:31:02 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 16:31:07 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 16:31:12 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 16:31:16 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 16:31:17 INFO  Job:1378 - Job job_1604420928470_0002 completed successfully
2020-11-03 16:31:17 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38396
		Total time spent by all reduces in occupied slots (ms)=13688
		Total time spent by all map tasks (ms)=9599
		Total time spent by all reduce tasks (ms)=3422
		Total vcore-milliseconds taken by all map tasks=9599
		Total vcore-milliseconds taken by all reduce tasks=3422
		Total megabyte-milliseconds taken by all map tasks=39317504
		Total megabyte-milliseconds taken by all reduce tasks=14016512
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=605
		CPU time spent (ms)=6780
		Physical memory (bytes) snapshot=1157050368
		Virtual memory (bytes) snapshot=15791308800
		Total committed heap usage (bytes)=1054343168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 16:31:18.074" starttime="20201103 16:31:18.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:31:18.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:31:18.075" starttime="20201103 16:31:18.074"></status>
</kw>
<status status="PASS" endtime="20201103 16:31:18.075" starttime="20201103 16:30:44.153"></status>
</kw>
<msg timestamp="20201103 16:31:18.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:31:18.075" starttime="20201103 16:30:44.153"></status>
</kw>
<msg timestamp="20201103 16:31:18.076" level="INFO">${output} = 2020-11-03 16:30:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-03 16:30:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 16:31:18.076" starttime="20201103 16:30:44.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 16:31:18.076" starttime="20201103 16:31:18.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:31:18.077" starttime="20201103 16:31:18.076"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:31:18.077" critical="yes" starttime="20201103 16:30:44.119"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 16:31:18.078" starttime="20201103 16:30:06.505"></status>
</suite>
<status status="PASS" elapsedtime="185713" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:33:54.161" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:33:56.312" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 16:33:56.312" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 16:33:56.312" starttime="20201103 16:33:54.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:33:56.314" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 16:33:56.314" starttime="20201103 16:33:56.313"></status>
</kw>
<msg timestamp="20201103 16:33:56.314" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 16:33:56.314" starttime="20201103 16:33:54.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:33:56.320" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:33:58.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:33:58.290" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:33:58.290" starttime="20201103 16:33:56.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:33:58.291" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:33:58.291" starttime="20201103 16:33:58.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:33:58.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:33:58.291" starttime="20201103 16:33:58.291"></status>
</kw>
<status status="PASS" endtime="20201103 16:33:58.291" starttime="20201103 16:33:56.316"></status>
</kw>
<msg timestamp="20201103 16:33:58.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:33:58.292" starttime="20201103 16:33:56.316"></status>
</kw>
<msg timestamp="20201103 16:33:58.292" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201103 16:33:58.292" starttime="20201103 16:33:56.315"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 16:33:58.293" starttime="20201103 16:33:58.292"></status>
</kw>
<status status="PASS" endtime="20201103 16:33:58.293" starttime="20201103 16:33:56.315"></status>
</kw>
<status status="PASS" endtime="20201103 16:33:58.293" starttime="20201103 16:33:56.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:33:58.297" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:00.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:00.204" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:34:00.204" starttime="20201103 16:33:58.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:00.205" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:34:00.205" starttime="20201103 16:34:00.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:00.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:00.206" starttime="20201103 16:34:00.205"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:00.206" starttime="20201103 16:33:58.294"></status>
</kw>
<msg timestamp="20201103 16:34:00.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:00.206" starttime="20201103 16:33:58.294"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:00.206" starttime="20201103 16:33:58.294"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:00.207" starttime="20201103 16:33:58.293"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:00.207" starttime="20201103 16:33:58.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 16:34:00.207" starttime="20201103 16:34:00.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:00.211" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:02.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:02.496" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T16:34:00.167Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 16:34:02.496" starttime="20201103 16:34:00.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:02.497" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T16:34:00.167Z",
  "modificationTime" : "2020-11-03T16:34:00.167Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 16:34:02.497" starttime="20201103 16:34:02.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:02.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:02.498" starttime="20201103 16:34:02.498"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:02.498" starttime="20201103 16:34:00.208"></status>
</kw>
<msg timestamp="20201103 16:34:02.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:02.499" starttime="20201103 16:34:00.208"></status>
</kw>
<msg timestamp="20201103 16:34:02.499" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T16:34:00.167Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 16:34:02.499" starttime="20201103 16:34:00.207"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 16:34:02.499" starttime="20201103 16:34:02.499"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:34:02.503" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:34:02.503" starttime="20201103 16:34:02.503"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:34:02.504" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:34:02.504" starttime="20201103 16:34:02.503"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:02.504" starttime="20201103 16:34:02.502"></status>
</kw>
<msg timestamp="20201103 16:34:02.504" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:34:02.504" starttime="20201103 16:34:02.502"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:02.505" starttime="20201103 16:34:02.501"></status>
</kw>
<msg timestamp="20201103 16:34:02.505" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 16:34:02.505" starttime="20201103 16:34:02.500"></status>
</kw>
<msg timestamp="20201103 16:34:02.505" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 16:34:02.505" starttime="20201103 16:34:02.499"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:02.508" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:04.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:04.581" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:34:04.581" starttime="20201103 16:34:02.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:04.582" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:34:04.583" starttime="20201103 16:34:04.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:04.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:04.583" starttime="20201103 16:34:04.583"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:04.584" starttime="20201103 16:34:02.506"></status>
</kw>
<msg timestamp="20201103 16:34:04.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:04.584" starttime="20201103 16:34:02.505"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:04.584" starttime="20201103 16:34:02.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:04.588" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:09.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:09.633" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:34:09.633" starttime="20201103 16:34:04.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:09.635" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:34:09.635" starttime="20201103 16:34:09.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:09.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:09.635" starttime="20201103 16:34:09.635"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:09.636" starttime="20201103 16:34:04.585"></status>
</kw>
<msg timestamp="20201103 16:34:09.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:09.636" starttime="20201103 16:34:04.585"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:09.636" starttime="20201103 16:34:04.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:09.640" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:13.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:13.436" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:34:13.436" starttime="20201103 16:34:09.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:13.437" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:34:13.437" starttime="20201103 16:34:13.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:13.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:13.438" starttime="20201103 16:34:13.437"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:13.438" starttime="20201103 16:34:09.637"></status>
</kw>
<msg timestamp="20201103 16:34:13.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:13.438" starttime="20201103 16:34:09.637"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:13.439" starttime="20201103 16:34:09.636"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:13.442" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:17.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:17.260" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:34:17.260" starttime="20201103 16:34:13.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:17.261" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:34:17.261" starttime="20201103 16:34:17.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:17.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:17.261" starttime="20201103 16:34:17.261"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:17.262" starttime="20201103 16:34:13.440"></status>
</kw>
<msg timestamp="20201103 16:34:17.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:17.262" starttime="20201103 16:34:13.439"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:17.262" starttime="20201103 16:34:13.439"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 16:34:17.262" critical="yes" starttime="20201103 16:33:54.155"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:34:17.267" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:34:17.267" starttime="20201103 16:34:17.266"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:34:17.267" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:34:17.268" starttime="20201103 16:34:17.267"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:17.268" starttime="20201103 16:34:17.266"></status>
</kw>
<msg timestamp="20201103 16:34:17.268" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:34:17.268" starttime="20201103 16:34:17.265"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:17.268" starttime="20201103 16:34:17.265"></status>
</kw>
<msg timestamp="20201103 16:34:17.268" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 16:34:17.268" starttime="20201103 16:34:17.264"></status>
</kw>
<msg timestamp="20201103 16:34:17.269" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 16:34:17.269" starttime="20201103 16:34:17.264"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:17.271" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:19.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:19.349" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:34:19.349" starttime="20201103 16:34:17.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:19.350" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:34:19.350" starttime="20201103 16:34:19.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:19.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:19.351" starttime="20201103 16:34:19.350"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:19.351" starttime="20201103 16:34:17.269"></status>
</kw>
<msg timestamp="20201103 16:34:19.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:19.351" starttime="20201103 16:34:17.269"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:19.351" starttime="20201103 16:34:17.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:19.358" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:21.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:21.481" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:34:21.481" starttime="20201103 16:34:19.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:21.482" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:34:21.482" starttime="20201103 16:34:21.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:21.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:21.483" starttime="20201103 16:34:21.483"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:21.483" starttime="20201103 16:34:19.352"></status>
</kw>
<msg timestamp="20201103 16:34:21.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:21.483" starttime="20201103 16:34:19.352"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:21.484" starttime="20201103 16:34:19.351"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 16:34:21.484" critical="yes" starttime="20201103 16:34:17.263"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201103 16:34:21.486" starttime="20201103 16:33:54.100"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:35:55.423" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:35:55.423" starttime="20201103 16:35:55.422"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:35:55.423" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:35:55.423" starttime="20201103 16:35:55.423"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:55.424" starttime="20201103 16:35:55.422"></status>
</kw>
<msg timestamp="20201103 16:35:55.424" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:35:55.424" starttime="20201103 16:35:55.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:35:55.425" starttime="20201103 16:35:55.424"></status>
</kw>
<msg timestamp="20201103 16:35:55.425" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 16:35:55.425" starttime="20201103 16:35:55.424"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:55.425" starttime="20201103 16:35:55.420"></status>
</kw>
<msg timestamp="20201103 16:35:55.425" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:35:55.425" starttime="20201103 16:35:55.420"></status>
</kw>
<msg timestamp="20201103 16:35:55.425" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:35:55.425" starttime="20201103 16:35:55.419"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:35:55.426" level="INFO">${random} = 38927</msg>
<status status="PASS" endtime="20201103 16:35:55.426" starttime="20201103 16:35:55.426"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:35:55.430" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-38927 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:35:58.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:35:58.809" level="INFO">${output} = 2020-11-03 16:35:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:35:58.809" starttime="20201103 16:35:55.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:35:58.812" level="INFO">2020-11-03 16:35:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 16:35:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:35:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:35:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:35:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:35:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D11015706E8A-&gt;2c2a008a-720f-4b85-b4de-4299ba4e6c5a
2020-11-03 16:35:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 16:35:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 16:35:58.812" starttime="20201103 16:35:58.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:35:58.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:35:58.813" starttime="20201103 16:35:58.813"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:58.813" starttime="20201103 16:35:55.427"></status>
</kw>
<msg timestamp="20201103 16:35:58.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:35:58.814" starttime="20201103 16:35:55.427"></status>
</kw>
<msg timestamp="20201103 16:35:58.815" level="INFO">${result} = 2020-11-03 16:35:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:35:58.815" starttime="20201103 16:35:55.426"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:35:58.821" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:36:00.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:36:00.488" level="INFO">${output} = 2020-11-03 16:35:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:36:00.488" starttime="20201103 16:35:58.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:36:00.489" level="INFO">2020-11-03 16:35:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:00 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-03 16:34 ofs://om/volume1/bucket1/ozone-38416
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-03 16:35 ofs://om/volume1/bucket1/ozone-38927
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:34 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:35 ofs://om/volume1/bucket1/wordcount-65.txt
2020-11-03 16:36:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 16:36:00.489" starttime="20201103 16:36:00.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:36:00.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:36:00.490" starttime="20201103 16:36:00.489"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:00.490" starttime="20201103 16:35:58.817"></status>
</kw>
<msg timestamp="20201103 16:36:00.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:36:00.490" starttime="20201103 16:35:58.817"></status>
</kw>
<msg timestamp="20201103 16:36:00.491" level="INFO">${result} = 2020-11-03 16:35:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:36:00.491" starttime="20201103 16:35:58.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:36:00.491" starttime="20201103 16:36:00.491"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 16:36:00.491" critical="yes" starttime="20201103 16:35:55.418"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 16:36:00.492" starttime="20201103 16:35:55.369"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:34:26.110" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:34:26.110" starttime="20201103 16:34:26.109"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:34:26.111" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:34:26.111" starttime="20201103 16:34:26.110"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:26.111" starttime="20201103 16:34:26.109"></status>
</kw>
<msg timestamp="20201103 16:34:26.111" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:34:26.111" starttime="20201103 16:34:26.108"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:26.111" starttime="20201103 16:34:26.108"></status>
</kw>
<msg timestamp="20201103 16:34:26.111" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:34:26.111" starttime="20201103 16:34:26.107"></status>
</kw>
<msg timestamp="20201103 16:34:26.112" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:34:26.112" starttime="20201103 16:34:26.106"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:34:26.112" level="INFO">${random} = 38416</msg>
<status status="PASS" endtime="20201103 16:34:26.112" starttime="20201103 16:34:26.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:26.118" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-38416 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:29.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:29.564" level="INFO">${output} = 2020-11-03 16:34:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:34:29.564" starttime="20201103 16:34:26.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:29.565" level="INFO">2020-11-03 16:34:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:28 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 16:34:28 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:34:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:34:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:34:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:34:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EC76F24E20D6-&gt;2c2a008a-720f-4b85-b4de-4299ba4e6c5a
2020-11-03 16:34:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 16:34:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 16:34:29.565" starttime="20201103 16:34:29.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:29.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:29.566" starttime="20201103 16:34:29.566"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:29.566" starttime="20201103 16:34:26.113"></status>
</kw>
<msg timestamp="20201103 16:34:29.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:29.567" starttime="20201103 16:34:26.113"></status>
</kw>
<msg timestamp="20201103 16:34:29.567" level="INFO">${result} = 2020-11-03 16:34:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:34:29.567" starttime="20201103 16:34:26.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:29.572" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:31.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:31.311" level="INFO">${output} = 2020-11-03 16:34:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:34:31.311" starttime="20201103 16:34:29.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:31.312" level="INFO">2020-11-03 16:34:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:31 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-03 16:34 o3fs://bucket1.volume1.om/ozone-38416
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:34 o3fs://bucket1.volume1.om/user
2020-11-03 16:34:31 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 16:34:31.312" starttime="20201103 16:34:31.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:31.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:31.312" starttime="20201103 16:34:31.312"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:31.313" starttime="20201103 16:34:29.569"></status>
</kw>
<msg timestamp="20201103 16:34:31.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:31.313" starttime="20201103 16:34:29.568"></status>
</kw>
<msg timestamp="20201103 16:34:31.313" level="INFO">${result} = 2020-11-03 16:34:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:34:31.313" starttime="20201103 16:34:29.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:34:31.314" starttime="20201103 16:34:31.313"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 16:34:31.314" critical="yes" starttime="20201103 16:34:26.105"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 16:34:31.316" starttime="20201103 16:34:26.050"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:36:05.089" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:36:05.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:36:05.094" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:36:05.094" starttime="20201103 16:36:05.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:36:05.095" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:36:05.095" starttime="20201103 16:36:05.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:36:05.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:36:05.096" starttime="20201103 16:36:05.096"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:05.097" starttime="20201103 16:36:05.085"></status>
</kw>
<msg timestamp="20201103 16:36:05.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:36:05.097" starttime="20201103 16:36:05.085"></status>
</kw>
<msg timestamp="20201103 16:36:05.097" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:36:05.097" starttime="20201103 16:36:05.084"></status>
</kw>
<msg timestamp="20201103 16:36:05.097" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:36:05.097" starttime="20201103 16:36:05.084"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:36:05.101" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:36:05.102" starttime="20201103 16:36:05.101"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:36:05.102" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:36:05.102" starttime="20201103 16:36:05.102"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:05.103" starttime="20201103 16:36:05.100"></status>
</kw>
<msg timestamp="20201103 16:36:05.103" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:36:05.103" starttime="20201103 16:36:05.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:36:05.104" starttime="20201103 16:36:05.103"></status>
</kw>
<msg timestamp="20201103 16:36:05.104" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 16:36:05.104" starttime="20201103 16:36:05.103"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:05.104" starttime="20201103 16:36:05.099"></status>
</kw>
<msg timestamp="20201103 16:36:05.104" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:36:05.104" starttime="20201103 16:36:05.098"></status>
</kw>
<msg timestamp="20201103 16:36:05.105" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:36:05.105" starttime="20201103 16:36:05.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:36:05.109" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:36:39.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:36:39.259" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36...</msg>
<status status="PASS" endtime="20201103 16:36:39.259" starttime="20201103 16:36:05.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:36:39.260" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:06 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 16:36:06 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:36:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:36:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:36:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:36:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BB43D019DAE8-&gt;2c2a008a-720f-4b85-b4de-4299ba4e6c5a
2020-11-03 16:36:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 16:36:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-03 16:36:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 16:36:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:08 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 16:36:08 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 16:36:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604421210505_0003
2020-11-03 16:36:08 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 16:36:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:09 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 16:36:09 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 16:36:09 INFO  YarnClientImpl:324 - Submitted application application_1604421210505_0003
2020-11-03 16:36:09 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604421210505_0003/
2020-11-03 16:36:09 INFO  Job:1619 - Running job: job_1604421210505_0003
2020-11-03 16:36:16 INFO  Job:1640 - Job job_1604421210505_0003 running in uber mode : false
2020-11-03 16:36:16 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 16:36:23 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 16:36:29 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 16:36:33 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 16:36:38 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 16:36:38 INFO  Job:1658 - Job job_1604421210505_0003 completed successfully
2020-11-03 16:36:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:38 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40440
		Total time spent by all reduces in occupied slots (ms)=14148
		Total time spent by all map tasks (ms)=10110
		Total time spent by all reduce tasks (ms)=3537
		Total vcore-milliseconds taken by all map tasks=10110
		Total vcore-milliseconds taken by all reduce tasks=3537
		Total megabyte-milliseconds taken by all map tasks=41410560
		Total megabyte-milliseconds taken by all reduce tasks=14487552
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=631
		CPU time spent (ms)=6690
		Physical memory (bytes) snapshot=1197142016
		Virtual memory (bytes) snapshot=15800172544
		Total committed heap usage (bytes)=1024983040
		Peak Map Physical memory (bytes)=304390144
		Peak Map Virtual memory (bytes)=3945213952
		Peak Reduce Physical memory (bytes)=291225600
		Peak Reduce Virtual memory (bytes)=3972206592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.643 seconds
2020-11-03 16:36:38 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-03 16:36:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 16:36:39.261" starttime="20201103 16:36:39.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:36:39.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:36:39.261" starttime="20201103 16:36:39.261"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:39.261" starttime="20201103 16:36:05.106"></status>
</kw>
<msg timestamp="20201103 16:36:39.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:36:39.262" starttime="20201103 16:36:05.105"></status>
</kw>
<msg timestamp="20201103 16:36:39.262" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36...</msg>
<status status="PASS" endtime="20201103 16:36:39.262" starttime="20201103 16:36:05.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:36:39.263" starttime="20201103 16:36:39.262"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:36:39.263" critical="yes" starttime="20201103 16:36:05.083"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:36:39.268" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:36:39.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:36:39.273" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:36:39.273" starttime="20201103 16:36:39.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:36:39.274" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:36:39.274" starttime="20201103 16:36:39.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:36:39.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:36:39.275" starttime="20201103 16:36:39.274"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:39.275" starttime="20201103 16:36:39.266"></status>
</kw>
<msg timestamp="20201103 16:36:39.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:36:39.275" starttime="20201103 16:36:39.265"></status>
</kw>
<msg timestamp="20201103 16:36:39.275" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:36:39.275" starttime="20201103 16:36:39.265"></status>
</kw>
<msg timestamp="20201103 16:36:39.276" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:36:39.276" starttime="20201103 16:36:39.265"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:36:39.276" level="INFO">${random} = 90</msg>
<status status="PASS" endtime="20201103 16:36:39.276" starttime="20201103 16:36:39.276"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:36:39.280" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:36:39.280" starttime="20201103 16:36:39.279"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:36:39.280" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:36:39.280" starttime="20201103 16:36:39.280"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:39.280" starttime="20201103 16:36:39.279"></status>
</kw>
<msg timestamp="20201103 16:36:39.280" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:36:39.281" starttime="20201103 16:36:39.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:36:39.281" starttime="20201103 16:36:39.281"></status>
</kw>
<msg timestamp="20201103 16:36:39.281" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 16:36:39.281" starttime="20201103 16:36:39.281"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:39.282" starttime="20201103 16:36:39.278"></status>
</kw>
<msg timestamp="20201103 16:36:39.282" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:36:39.282" starttime="20201103 16:36:39.277"></status>
</kw>
<msg timestamp="20201103 16:36:39.282" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:36:39.282" starttime="20201103 16:36:39.276"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:36:39.285" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:36:39.285" starttime="20201103 16:36:39.285"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:36:39.286" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:36:39.286" starttime="20201103 16:36:39.286"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:39.286" starttime="20201103 16:36:39.284"></status>
</kw>
<msg timestamp="20201103 16:36:39.286" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:36:39.286" starttime="20201103 16:36:39.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:36:39.288" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201103 16:36:39.288" starttime="20201103 16:36:39.288"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:36:39.289" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201103 16:36:39.289" starttime="20201103 16:36:39.288"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:39.289" starttime="20201103 16:36:39.287"></status>
</kw>
<msg timestamp="20201103 16:36:39.289" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201103 16:36:39.289" starttime="20201103 16:36:39.286"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:39.289" starttime="20201103 16:36:39.283"></status>
</kw>
<msg timestamp="20201103 16:36:39.289" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 16:36:39.289" starttime="20201103 16:36:39.283"></status>
</kw>
<msg timestamp="20201103 16:36:39.290" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 16:36:39.290" starttime="20201103 16:36:39.282"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:36:39.293" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:36:39.293" starttime="20201103 16:36:39.293"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:36:39.294" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:36:39.294" starttime="20201103 16:36:39.293"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:39.294" starttime="20201103 16:36:39.292"></status>
</kw>
<msg timestamp="20201103 16:36:39.294" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:36:39.294" starttime="20201103 16:36:39.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:36:39.295" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201103 16:36:39.295" starttime="20201103 16:36:39.295"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:36:39.296" level="INFO">${result} = /wordcount-90.txt</msg>
<status status="PASS" endtime="20201103 16:36:39.296" starttime="20201103 16:36:39.295"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:39.296" starttime="20201103 16:36:39.295"></status>
</kw>
<msg timestamp="20201103 16:36:39.296" level="INFO">${path_with_leading} = /wordcount-90.txt</msg>
<status status="PASS" endtime="20201103 16:36:39.296" starttime="20201103 16:36:39.294"></status>
</kw>
<status status="PASS" endtime="20201103 16:36:39.297" starttime="20201103 16:36:39.291"></status>
</kw>
<msg timestamp="20201103 16:36:39.297" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-90.txt</msg>
<status status="PASS" endtime="20201103 16:36:39.297" starttime="20201103 16:36:39.290"></status>
</kw>
<msg timestamp="20201103 16:36:39.297" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-90.txt</msg>
<status status="PASS" endtime="20201103 16:36:39.297" starttime="20201103 16:36:39.290"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:36:39.302" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-90.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:37:15.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:37:15.382" level="INFO">${output} = 2020-11-03 16:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:37:15.382" starttime="20201103 16:36:39.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:37:15.383" level="INFO">2020-11-03 16:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-03 16:36:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 16:36:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:41 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 16:36:41 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:36:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:36:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:36:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:36:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-442F10F558FB-&gt;2c2a008a-720f-4b85-b4de-4299ba4e6c5a
2020-11-03 16:36:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 16:36:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 16:36:42 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 16:36:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604421210505_0004
2020-11-03 16:36:43 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 16:36:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:43 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 16:36:43 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 16:36:43 INFO  YarnClientImpl:324 - Submitted application application_1604421210505_0004
2020-11-03 16:36:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604421210505_0004/
2020-11-03 16:36:43 INFO  Job:1619 - Running job: job_1604421210505_0004
2020-11-03 16:36:51 INFO  Job:1640 - Job job_1604421210505_0004 running in uber mode : false
2020-11-03 16:36:51 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 16:36:58 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 16:37:04 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 16:37:09 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 16:37:13 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 16:37:14 INFO  Job:1658 - Job job_1604421210505_0004 completed successfully
2020-11-03 16:37:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:37:14 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39252
		Total time spent by all reduces in occupied slots (ms)=14624
		Total time spent by all map tasks (ms)=9813
		Total time spent by all reduce tasks (ms)=3656
		Total vcore-milliseconds taken by all map tasks=9813
		Total vcore-milliseconds taken by all reduce tasks=3656
		Total megabyte-milliseconds taken by all map tasks=40194048
		Total megabyte-milliseconds taken by all reduce tasks=14974976
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=7270
		Physical memory (bytes) snapshot=1230774272
		Virtual memory (bytes) snapshot=15815016448
		Total committed heap usage (bytes)=1071644672
		Peak Map Physical memory (bytes)=312328192
		Peak Map Virtual memory (bytes)=3956092928
		Peak Reduce Physical memory (bytes)=298127360
		Peak Reduce Virtual memory (bytes)=3969773568
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-03 16:37:15 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 16:37:15.384" starttime="20201103 16:37:15.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:37:15.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:37:15.384" starttime="20201103 16:37:15.384"></status>
</kw>
<status status="PASS" endtime="20201103 16:37:15.385" starttime="20201103 16:36:39.298"></status>
</kw>
<msg timestamp="20201103 16:37:15.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:37:15.385" starttime="20201103 16:36:39.298"></status>
</kw>
<msg timestamp="20201103 16:37:15.386" level="INFO">${output} = 2020-11-03 16:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:36:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:37:15.386" starttime="20201103 16:36:39.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 16:37:15.386" starttime="20201103 16:37:15.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:37:15.387" starttime="20201103 16:37:15.386"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:37:15.387" critical="yes" starttime="20201103 16:36:39.264"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 16:37:15.389" starttime="20201103 16:36:05.031"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:35.832" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:34:35.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:34:35.837" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:34:35.837" starttime="20201103 16:34:35.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:34:35.838" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:34:35.838" starttime="20201103 16:34:35.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:34:35.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:34:35.839" starttime="20201103 16:34:35.838"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:35.839" starttime="20201103 16:34:35.827"></status>
</kw>
<msg timestamp="20201103 16:34:35.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:34:35.839" starttime="20201103 16:34:35.827"></status>
</kw>
<msg timestamp="20201103 16:34:35.839" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:34:35.839" starttime="20201103 16:34:35.827"></status>
</kw>
<msg timestamp="20201103 16:34:35.840" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:34:35.840" starttime="20201103 16:34:35.826"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:34:35.843" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:34:35.843" starttime="20201103 16:34:35.843"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:34:35.844" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:34:35.844" starttime="20201103 16:34:35.844"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:35.844" starttime="20201103 16:34:35.842"></status>
</kw>
<msg timestamp="20201103 16:34:35.844" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:34:35.844" starttime="20201103 16:34:35.842"></status>
</kw>
<status status="PASS" endtime="20201103 16:34:35.845" starttime="20201103 16:34:35.841"></status>
</kw>
<msg timestamp="20201103 16:34:35.845" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:34:35.845" starttime="20201103 16:34:35.841"></status>
</kw>
<msg timestamp="20201103 16:34:35.845" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:34:35.845" starttime="20201103 16:34:35.840"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:34:35.849" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:35:15.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:35:15.171" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:34:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34...</msg>
<status status="PASS" endtime="20201103 16:35:15.171" starttime="20201103 16:34:35.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:35:15.172" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:34:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:37 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 16:34:37 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:34:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:34:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:34:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:34:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7D2BE25B0234-&gt;2c2a008a-720f-4b85-b4de-4299ba4e6c5a
2020-11-03 16:34:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 16:34:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-03 16:34:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 16:34:42 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 16:34:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604421210505_0001
2020-11-03 16:34:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 16:34:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:42 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 16:34:42 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 16:34:43 INFO  YarnClientImpl:324 - Submitted application application_1604421210505_0001
2020-11-03 16:34:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604421210505_0001/
2020-11-03 16:34:43 INFO  Job:1619 - Running job: job_1604421210505_0001
2020-11-03 16:34:53 INFO  Job:1640 - Job job_1604421210505_0001 running in uber mode : false
2020-11-03 16:34:53 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 16:35:00 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 16:35:04 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 16:35:09 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 16:35:14 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 16:35:14 INFO  Job:1658 - Job job_1604421210505_0001 completed successfully
2020-11-03 16:35:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:14 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021529
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38112
		Total time spent by all reduces in occupied slots (ms)=13904
		Total time spent by all map tasks (ms)=9528
		Total time spent by all reduce tasks (ms)=3476
		Total vcore-milliseconds taken by all map tasks=9528
		Total vcore-milliseconds taken by all reduce tasks=3476
		Total megabyte-milliseconds taken by all map tasks=39026688
		Total megabyte-milliseconds taken by all reduce tasks=14237696
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=598
		CPU time spent (ms)=6220
		Physical memory (bytes) snapshot=1316728832
		Virtual memory (bytes) snapshot=15797903360
		Total committed heap usage (bytes)=1085800448
		Peak Map Physical memory (bytes)=396779520
		Peak Map Virtual memory (bytes)=3944681472
		Peak Reduce Physical memory (bytes)=297869312
		Peak Reduce Virtual memory (bytes)=3970265088
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.026 seconds
2020-11-03 16:35:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:14 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-03 16:35:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 16:35:15.172" starttime="20201103 16:35:15.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:35:15.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:35:15.173" starttime="20201103 16:35:15.172"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:15.173" starttime="20201103 16:34:35.846"></status>
</kw>
<msg timestamp="20201103 16:35:15.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:35:15.174" starttime="20201103 16:34:35.846"></status>
</kw>
<msg timestamp="20201103 16:35:15.174" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:34:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:34...</msg>
<status status="PASS" endtime="20201103 16:35:15.174" starttime="20201103 16:34:35.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:35:15.175" starttime="20201103 16:35:15.174"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:35:15.175" critical="yes" starttime="20201103 16:34:35.826"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:35:15.180" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:35:15.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:35:15.185" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:35:15.185" starttime="20201103 16:35:15.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:35:15.186" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:35:15.186" starttime="20201103 16:35:15.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:35:15.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:35:15.186" starttime="20201103 16:35:15.186"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:15.187" starttime="20201103 16:35:15.177"></status>
</kw>
<msg timestamp="20201103 16:35:15.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:35:15.187" starttime="20201103 16:35:15.177"></status>
</kw>
<msg timestamp="20201103 16:35:15.187" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:35:15.187" starttime="20201103 16:35:15.177"></status>
</kw>
<msg timestamp="20201103 16:35:15.187" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 16:35:15.187" starttime="20201103 16:35:15.176"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:35:15.188" level="INFO">${random} = 65</msg>
<status status="PASS" endtime="20201103 16:35:15.188" starttime="20201103 16:35:15.187"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:35:15.192" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:35:15.192" starttime="20201103 16:35:15.191"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:35:15.192" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:35:15.192" starttime="20201103 16:35:15.192"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:15.192" starttime="20201103 16:35:15.191"></status>
</kw>
<msg timestamp="20201103 16:35:15.192" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:35:15.193" starttime="20201103 16:35:15.190"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:15.193" starttime="20201103 16:35:15.189"></status>
</kw>
<msg timestamp="20201103 16:35:15.193" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:35:15.193" starttime="20201103 16:35:15.189"></status>
</kw>
<msg timestamp="20201103 16:35:15.193" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:35:15.193" starttime="20201103 16:35:15.188"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:35:15.196" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:35:15.196" starttime="20201103 16:35:15.196"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:35:15.197" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:35:15.197" starttime="20201103 16:35:15.196"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:15.197" starttime="20201103 16:35:15.195"></status>
</kw>
<msg timestamp="20201103 16:35:15.197" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:35:15.197" starttime="20201103 16:35:15.195"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:15.197" starttime="20201103 16:35:15.194"></status>
</kw>
<msg timestamp="20201103 16:35:15.198" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 16:35:15.198" starttime="20201103 16:35:15.194"></status>
</kw>
<msg timestamp="20201103 16:35:15.198" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 16:35:15.198" starttime="20201103 16:35:15.193"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:35:15.201" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:35:15.201" starttime="20201103 16:35:15.200"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:35:15.201" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:35:15.201" starttime="20201103 16:35:15.201"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:15.201" starttime="20201103 16:35:15.200"></status>
</kw>
<msg timestamp="20201103 16:35:15.201" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:35:15.202" starttime="20201103 16:35:15.199"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:15.202" starttime="20201103 16:35:15.199"></status>
</kw>
<msg timestamp="20201103 16:35:15.202" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-65.txt</msg>
<status status="PASS" endtime="20201103 16:35:15.202" starttime="20201103 16:35:15.198"></status>
</kw>
<msg timestamp="20201103 16:35:15.202" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-65.txt</msg>
<status status="PASS" endtime="20201103 16:35:15.202" starttime="20201103 16:35:15.198"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:35:15.205" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-65.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:35:50.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:35:50.712" level="INFO">${output} = 2020-11-03 16:35:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:35:50.712" starttime="20201103 16:35:15.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:35:50.713" level="INFO">2020-11-03 16:35:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-11-03 16:35:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 16:35:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:17 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 16:35:17 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 16:35:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:35:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:35:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:35:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-826483D36715-&gt;2c2a008a-720f-4b85-b4de-4299ba4e6c5a
2020-11-03 16:35:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 16:35:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 16:35:21 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 16:35:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604421210505_0002
2020-11-03 16:35:21 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 16:35:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:21 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 16:35:21 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 16:35:21 INFO  YarnClientImpl:324 - Submitted application application_1604421210505_0002
2020-11-03 16:35:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604421210505_0002/
2020-11-03 16:35:21 INFO  Job:1619 - Running job: job_1604421210505_0002
2020-11-03 16:35:29 INFO  Job:1640 - Job job_1604421210505_0002 running in uber mode : false
2020-11-03 16:35:29 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 16:35:35 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 16:35:40 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 16:35:45 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 16:35:49 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 16:35:50 INFO  Job:1658 - Job job_1604421210505_0002 completed successfully
2020-11-03 16:35:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39524
		Total time spent by all reduces in occupied slots (ms)=14336
		Total time spent by all map tasks (ms)=9881
		Total time spent by all reduce tasks (ms)=3584
		Total vcore-milliseconds taken by all map tasks=9881
		Total vcore-milliseconds taken by all reduce tasks=3584
		Total megabyte-milliseconds taken by all map tasks=40472576
		Total megabyte-milliseconds taken by all reduce tasks=14680064
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=609
		CPU time spent (ms)=7020
		Physical memory (bytes) snapshot=1234386944
		Virtual memory (bytes) snapshot=15809568768
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=315305984
		Peak Map Virtual memory (bytes)=3947651072
		Peak Reduce Physical memory (bytes)=295170048
		Peak Reduce Virtual memory (bytes)=3967774720
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-03 16:35:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 16:35:50.713" starttime="20201103 16:35:50.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:35:50.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:35:50.714" starttime="20201103 16:35:50.713"></status>
</kw>
<status status="PASS" endtime="20201103 16:35:50.714" starttime="20201103 16:35:15.203"></status>
</kw>
<msg timestamp="20201103 16:35:50.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:35:50.714" starttime="20201103 16:35:15.203"></status>
</kw>
<msg timestamp="20201103 16:35:50.715" level="INFO">${output} = 2020-11-03 16:35:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 16:35:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 16:35:50.715" starttime="20201103 16:35:15.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 16:35:50.715" starttime="20201103 16:35:50.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:35:50.716" starttime="20201103 16:35:50.715"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:35:50.716" critical="yes" starttime="20201103 16:35:15.176"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 16:35:50.717" starttime="20201103 16:34:35.781"></status>
</suite>
<status status="PASS" elapsedtime="183069" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:38:21.314" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:38:25.134" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 16:38:25.134" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 16:38:25.134" starttime="20201103 16:38:21.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:38:25.135" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 16:38:25.135" starttime="20201103 16:38:25.135"></status>
</kw>
<msg timestamp="20201103 16:38:25.136" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 16:38:25.136" starttime="20201103 16:38:21.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:38:25.143" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:38:28.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:38:28.196" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:38:28.196" starttime="20201103 16:38:25.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:38:28.197" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:38:28.197" starttime="20201103 16:38:28.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:38:28.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:38:28.198" starttime="20201103 16:38:28.197"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:28.198" starttime="20201103 16:38:25.138"></status>
</kw>
<msg timestamp="20201103 16:38:28.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:38:28.198" starttime="20201103 16:38:25.137"></status>
</kw>
<msg timestamp="20201103 16:38:28.198" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201103 16:38:28.198" starttime="20201103 16:38:25.137"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 16:38:28.199" starttime="20201103 16:38:28.198"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:28.199" starttime="20201103 16:38:25.136"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:28.199" starttime="20201103 16:38:25.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:38:28.203" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:38:30.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:38:30.978" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:38:30.978" starttime="20201103 16:38:28.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:38:30.979" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:38:30.979" starttime="20201103 16:38:30.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:38:30.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:38:30.980" starttime="20201103 16:38:30.979"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:30.980" starttime="20201103 16:38:28.201"></status>
</kw>
<msg timestamp="20201103 16:38:30.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:38:30.980" starttime="20201103 16:38:28.200"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:30.980" starttime="20201103 16:38:28.200"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:30.980" starttime="20201103 16:38:28.199"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:30.981" starttime="20201103 16:38:28.199"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 16:38:30.981" starttime="20201103 16:38:30.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:38:30.985" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:38:34.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:38:34.196" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T16:38:30.865Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 16:38:34.196" starttime="20201103 16:38:30.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:38:34.197" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T16:38:30.865Z",
  "modificationTime" : "2020-11-03T16:38:30.865Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 16:38:34.197" starttime="20201103 16:38:34.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:38:34.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:38:34.198" starttime="20201103 16:38:34.198"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:34.198" starttime="20201103 16:38:30.982"></status>
</kw>
<msg timestamp="20201103 16:38:34.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:38:34.199" starttime="20201103 16:38:30.982"></status>
</kw>
<msg timestamp="20201103 16:38:34.199" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T16:38:30.865Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 16:38:34.199" starttime="20201103 16:38:30.981"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 16:38:34.199" starttime="20201103 16:38:34.199"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:38:34.203" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:38:34.203" starttime="20201103 16:38:34.203"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:38:34.204" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:38:34.204" starttime="20201103 16:38:34.203"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:34.204" starttime="20201103 16:38:34.202"></status>
</kw>
<msg timestamp="20201103 16:38:34.204" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:38:34.204" starttime="20201103 16:38:34.202"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:34.204" starttime="20201103 16:38:34.201"></status>
</kw>
<msg timestamp="20201103 16:38:34.204" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 16:38:34.204" starttime="20201103 16:38:34.200"></status>
</kw>
<msg timestamp="20201103 16:38:34.204" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 16:38:34.204" starttime="20201103 16:38:34.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:38:34.209" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:38:37.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:38:37.364" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:38:37.364" starttime="20201103 16:38:34.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:38:37.365" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:38:37.365" starttime="20201103 16:38:37.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:38:37.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:38:37.366" starttime="20201103 16:38:37.365"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:37.366" starttime="20201103 16:38:34.205"></status>
</kw>
<msg timestamp="20201103 16:38:37.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:38:37.366" starttime="20201103 16:38:34.205"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:37.367" starttime="20201103 16:38:34.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:38:37.371" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:38:44.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:38:44.011" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:38:44.011" starttime="20201103 16:38:37.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:38:44.013" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:38:44.013" starttime="20201103 16:38:44.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:38:44.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:38:44.013" starttime="20201103 16:38:44.013"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:44.014" starttime="20201103 16:38:37.368"></status>
</kw>
<msg timestamp="20201103 16:38:44.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:38:44.014" starttime="20201103 16:38:37.367"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:44.014" starttime="20201103 16:38:37.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:38:44.020" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:38:49.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:38:49.451" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:38:49.451" starttime="20201103 16:38:44.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:38:49.452" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:38:49.452" starttime="20201103 16:38:49.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:38:49.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:38:49.453" starttime="20201103 16:38:49.452"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:49.453" starttime="20201103 16:38:44.015"></status>
</kw>
<msg timestamp="20201103 16:38:49.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:38:49.453" starttime="20201103 16:38:44.015"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:49.453" starttime="20201103 16:38:44.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:38:49.459" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:38:54.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:38:54.683" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:38:54.683" starttime="20201103 16:38:49.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:38:54.685" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:38:54.685" starttime="20201103 16:38:54.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:38:54.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:38:54.686" starttime="20201103 16:38:54.685"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:54.686" starttime="20201103 16:38:49.455"></status>
</kw>
<msg timestamp="20201103 16:38:54.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:38:54.686" starttime="20201103 16:38:49.454"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:54.687" starttime="20201103 16:38:49.454"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 16:38:54.687" critical="yes" starttime="20201103 16:38:21.308"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:38:54.693" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:38:54.693" starttime="20201103 16:38:54.693"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:38:54.694" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:38:54.694" starttime="20201103 16:38:54.694"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:54.694" starttime="20201103 16:38:54.692"></status>
</kw>
<msg timestamp="20201103 16:38:54.694" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:38:54.694" starttime="20201103 16:38:54.692"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:54.695" starttime="20201103 16:38:54.691"></status>
</kw>
<msg timestamp="20201103 16:38:54.695" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 16:38:54.695" starttime="20201103 16:38:54.690"></status>
</kw>
<msg timestamp="20201103 16:38:54.695" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 16:38:54.695" starttime="20201103 16:38:54.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:38:54.699" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:38:57.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:38:57.641" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:38:57.641" starttime="20201103 16:38:54.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:38:57.642" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:38:57.642" starttime="20201103 16:38:57.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:38:57.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:38:57.643" starttime="20201103 16:38:57.642"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:57.643" starttime="20201103 16:38:54.696"></status>
</kw>
<msg timestamp="20201103 16:38:57.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:38:57.643" starttime="20201103 16:38:54.695"></status>
</kw>
<status status="PASS" endtime="20201103 16:38:57.644" starttime="20201103 16:38:54.695"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:38:57.648" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:39:00.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:39:00.723" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 16:39:00.723" starttime="20201103 16:38:57.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:39:00.724" level="INFO"></msg>
<status status="PASS" endtime="20201103 16:39:00.724" starttime="20201103 16:39:00.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:39:00.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:39:00.725" starttime="20201103 16:39:00.724"></status>
</kw>
<status status="PASS" endtime="20201103 16:39:00.725" starttime="20201103 16:38:57.645"></status>
</kw>
<msg timestamp="20201103 16:39:00.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:39:00.725" starttime="20201103 16:38:57.644"></status>
</kw>
<status status="PASS" endtime="20201103 16:39:00.725" starttime="20201103 16:38:57.644"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 16:39:00.725" critical="yes" starttime="20201103 16:38:54.688"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201103 16:39:00.727" starttime="20201103 16:38:21.254"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:40:47.444" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:40:47.444" starttime="20201103 16:40:47.443"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:40:47.444" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:40:47.444" starttime="20201103 16:40:47.444"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:47.445" starttime="20201103 16:40:47.443"></status>
</kw>
<msg timestamp="20201103 16:40:47.445" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:40:47.445" starttime="20201103 16:40:47.442"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:40:47.446" starttime="20201103 16:40:47.445"></status>
</kw>
<msg timestamp="20201103 16:40:47.446" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 16:40:47.446" starttime="20201103 16:40:47.445"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:47.446" starttime="20201103 16:40:47.441"></status>
</kw>
<msg timestamp="20201103 16:40:47.446" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:40:47.446" starttime="20201103 16:40:47.441"></status>
</kw>
<msg timestamp="20201103 16:40:47.447" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:40:47.447" starttime="20201103 16:40:47.440"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:40:47.447" level="INFO">${random} = 11614</msg>
<status status="PASS" endtime="20201103 16:40:47.447" starttime="20201103 16:40:47.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:40:47.452" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-11614 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:40:50.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:40:50.868" level="INFO">${output} = 2020-11-03 16:40:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:40:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 16:40:50.868" starttime="20201103 16:40:47.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:40:50.869" level="INFO">2020-11-03 16:40:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:40:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:40:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:40:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:40:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2AAB73458B87-&gt;b12e0a36-c88f-4c1a-8adb-a029529f71b7
2020-11-03 16:40:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 16:40:50.869" starttime="20201103 16:40:50.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:40:50.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:40:50.870" starttime="20201103 16:40:50.869"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:50.870" starttime="20201103 16:40:47.448"></status>
</kw>
<msg timestamp="20201103 16:40:50.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:40:50.870" starttime="20201103 16:40:47.448"></status>
</kw>
<msg timestamp="20201103 16:40:50.871" level="INFO">${result} = 2020-11-03 16:40:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:40:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 16:40:50.871" starttime="20201103 16:40:47.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:40:50.875" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:40:52.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:40:52.750" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:38 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 16:40 ofs://om/volume1/bucket1/ozone-11614
-rw-...</msg>
<status status="PASS" endtime="20201103 16:40:52.750" starttime="20201103 16:40:50.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:40:52.751" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:38 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 16:40 ofs://om/volume1/bucket1/ozone-11614
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 16:39 ofs://om/volume1/bucket1/ozone-49299
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:38 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:40 ofs://om/volume1/bucket1/wordcount-22.txt</msg>
<status status="PASS" endtime="20201103 16:40:52.751" starttime="20201103 16:40:52.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:40:52.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:40:52.751" starttime="20201103 16:40:52.751"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:52.752" starttime="20201103 16:40:50.873"></status>
</kw>
<msg timestamp="20201103 16:40:52.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:40:52.752" starttime="20201103 16:40:50.872"></status>
</kw>
<msg timestamp="20201103 16:40:52.752" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:38 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 16:40 ofs://om/volume1/bucket1/ozone-11614
-rw-...</msg>
<status status="PASS" endtime="20201103 16:40:52.752" starttime="20201103 16:40:50.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:40:52.753" starttime="20201103 16:40:52.752"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 16:40:52.753" critical="yes" starttime="20201103 16:40:47.439"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 16:40:52.754" starttime="20201103 16:40:47.389"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:39:05.603" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:39:05.603" starttime="20201103 16:39:05.602"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:39:05.603" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:39:05.603" starttime="20201103 16:39:05.603"></status>
</kw>
<status status="PASS" endtime="20201103 16:39:05.603" starttime="20201103 16:39:05.602"></status>
</kw>
<msg timestamp="20201103 16:39:05.604" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:39:05.604" starttime="20201103 16:39:05.601"></status>
</kw>
<status status="PASS" endtime="20201103 16:39:05.604" starttime="20201103 16:39:05.601"></status>
</kw>
<msg timestamp="20201103 16:39:05.604" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:39:05.604" starttime="20201103 16:39:05.600"></status>
</kw>
<msg timestamp="20201103 16:39:05.604" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:39:05.604" starttime="20201103 16:39:05.599"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:39:05.605" level="INFO">${random} = 49299</msg>
<status status="PASS" endtime="20201103 16:39:05.605" starttime="20201103 16:39:05.604"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:39:05.610" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-49299 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:39:09.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:39:09.321" level="INFO">${output} = 2020-11-03 16:39:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:39:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 16:39:09.321" starttime="20201103 16:39:05.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:39:09.323" level="INFO">2020-11-03 16:39:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:39:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:39:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:39:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:39:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CD20B7625741-&gt;b12e0a36-c88f-4c1a-8adb-a029529f71b7
2020-11-03 16:39:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 16:39:09.323" starttime="20201103 16:39:09.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:39:09.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:39:09.323" starttime="20201103 16:39:09.323"></status>
</kw>
<status status="PASS" endtime="20201103 16:39:09.324" starttime="20201103 16:39:05.606"></status>
</kw>
<msg timestamp="20201103 16:39:09.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:39:09.324" starttime="20201103 16:39:05.605"></status>
</kw>
<msg timestamp="20201103 16:39:09.324" level="INFO">${result} = 2020-11-03 16:39:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:39:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 16:39:09.324" starttime="20201103 16:39:05.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:39:09.329" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:39:11.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:39:11.090" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 16:39 o3fs://bucket1.volume1.om/ozone-49299
dr...</msg>
<status status="PASS" endtime="20201103 16:39:11.090" starttime="20201103 16:39:09.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:39:11.091" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 16:39 o3fs://bucket1.volume1.om/ozone-49299
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:38 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 16:39:11.091" starttime="20201103 16:39:11.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:39:11.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:39:11.092" starttime="20201103 16:39:11.091"></status>
</kw>
<status status="PASS" endtime="20201103 16:39:11.092" starttime="20201103 16:39:09.326"></status>
</kw>
<msg timestamp="20201103 16:39:11.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:39:11.092" starttime="20201103 16:39:09.325"></status>
</kw>
<msg timestamp="20201103 16:39:11.092" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 16:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 16:39 o3fs://bucket1.volume1.om/ozone-49299
dr...</msg>
<status status="PASS" endtime="20201103 16:39:11.092" starttime="20201103 16:39:09.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:39:11.093" starttime="20201103 16:39:11.092"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 16:39:11.093" critical="yes" starttime="20201103 16:39:05.599"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 16:39:11.094" starttime="20201103 16:39:05.549"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:40:57.367" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:40:57.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:40:57.371" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:40:57.371" starttime="20201103 16:40:57.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:40:57.372" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:40:57.372" starttime="20201103 16:40:57.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:40:57.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:40:57.373" starttime="20201103 16:40:57.372"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:57.373" starttime="20201103 16:40:57.362"></status>
</kw>
<msg timestamp="20201103 16:40:57.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:40:57.373" starttime="20201103 16:40:57.362"></status>
</kw>
<msg timestamp="20201103 16:40:57.373" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:40:57.374" starttime="20201103 16:40:57.362"></status>
</kw>
<msg timestamp="20201103 16:40:57.374" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:40:57.374" starttime="20201103 16:40:57.362"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:40:57.377" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:40:57.377" starttime="20201103 16:40:57.377"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:40:57.378" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:40:57.378" starttime="20201103 16:40:57.378"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:57.378" starttime="20201103 16:40:57.376"></status>
</kw>
<msg timestamp="20201103 16:40:57.378" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:40:57.378" starttime="20201103 16:40:57.375"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:40:57.379" starttime="20201103 16:40:57.379"></status>
</kw>
<msg timestamp="20201103 16:40:57.380" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 16:40:57.380" starttime="20201103 16:40:57.379"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:57.380" starttime="20201103 16:40:57.375"></status>
</kw>
<msg timestamp="20201103 16:40:57.380" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:40:57.380" starttime="20201103 16:40:57.374"></status>
</kw>
<msg timestamp="20201103 16:40:57.380" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:40:57.380" starttime="20201103 16:40:57.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:40:57.384" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:41:35.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:41:35.358" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:40:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:40:59 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 16:41:35.359" starttime="20201103 16:40:57.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:41:35.360" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:40:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:40:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:40:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:40:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:40:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-81B1A1E8AF83-&gt;b12e0a36-c88f-4c1a-8adb-a029529f71b7
2020-11-03 16:40:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 16:41:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-03 16:41:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 16:41:03 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 16:41:03 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 16:41:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604421479997_0003
2020-11-03 16:41:03 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 16:41:04 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 16:41:04 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 16:41:04 INFO  YarnClientImpl:329 - Submitted application application_1604421479997_0003
2020-11-03 16:41:04 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604421479997_0003/
2020-11-03 16:41:04 INFO  Job:1619 - Running job: job_1604421479997_0003
2020-11-03 16:41:12 INFO  Job:1640 - Job job_1604421479997_0003 running in uber mode : false
2020-11-03 16:41:12 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 16:41:18 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 16:41:23 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 16:41:28 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 16:41:33 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 16:41:34 INFO  Job:1658 - Job job_1604421479997_0003 completed successfully
2020-11-03 16:41:34 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38132
		Total time spent by all reduces in occupied slots (ms)=18524
		Total time spent by all map tasks (ms)=9533
		Total time spent by all reduce tasks (ms)=4631
		Total vcore-milliseconds taken by all map tasks=9533
		Total vcore-milliseconds taken by all reduce tasks=4631
		Total megabyte-milliseconds taken by all map tasks=39047168
		Total megabyte-milliseconds taken by all reduce tasks=18968576
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=649
		CPU time spent (ms)=6460
		Physical memory (bytes) snapshot=1219371008
		Virtual memory (bytes) snapshot=15768616960
		Total committed heap usage (bytes)=1244135424
		Peak Map Physical memory (bytes)=295067648
		Peak Map Virtual memory (bytes)=3945353216
		Peak Reduce Physical memory (bytes)=377851904
		Peak Reduce Virtual memory (bytes)=3961548800
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.723 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 16:41:35.360" starttime="20201103 16:41:35.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:41:35.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:41:35.361" starttime="20201103 16:41:35.360"></status>
</kw>
<status status="PASS" endtime="20201103 16:41:35.361" starttime="20201103 16:40:57.381"></status>
</kw>
<msg timestamp="20201103 16:41:35.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:41:35.361" starttime="20201103 16:40:57.381"></status>
</kw>
<msg timestamp="20201103 16:41:35.361" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:40:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:40:59 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 16:41:35.361" starttime="20201103 16:40:57.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:41:35.362" starttime="20201103 16:41:35.361"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:41:35.362" critical="yes" starttime="20201103 16:40:57.361"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:41:35.368" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:41:35.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:41:35.377" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:41:35.377" starttime="20201103 16:41:35.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:41:35.377" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:41:35.378" starttime="20201103 16:41:35.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:41:35.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:41:35.378" starttime="20201103 16:41:35.378"></status>
</kw>
<status status="PASS" endtime="20201103 16:41:35.379" starttime="20201103 16:41:35.365"></status>
</kw>
<msg timestamp="20201103 16:41:35.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:41:35.379" starttime="20201103 16:41:35.365"></status>
</kw>
<msg timestamp="20201103 16:41:35.379" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:41:35.379" starttime="20201103 16:41:35.364"></status>
</kw>
<msg timestamp="20201103 16:41:35.379" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:41:35.379" starttime="20201103 16:41:35.364"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:41:35.380" level="INFO">${random} = 12</msg>
<status status="PASS" endtime="20201103 16:41:35.380" starttime="20201103 16:41:35.379"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:41:35.383" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:41:35.383" starttime="20201103 16:41:35.383"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:41:35.384" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:41:35.384" starttime="20201103 16:41:35.384"></status>
</kw>
<status status="PASS" endtime="20201103 16:41:35.384" starttime="20201103 16:41:35.383"></status>
</kw>
<msg timestamp="20201103 16:41:35.384" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:41:35.384" starttime="20201103 16:41:35.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 16:41:35.385" starttime="20201103 16:41:35.385"></status>
</kw>
<msg timestamp="20201103 16:41:35.385" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 16:41:35.385" starttime="20201103 16:41:35.384"></status>
</kw>
<status status="PASS" endtime="20201103 16:41:35.386" starttime="20201103 16:41:35.381"></status>
</kw>
<msg timestamp="20201103 16:41:35.386" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:41:35.386" starttime="20201103 16:41:35.381"></status>
</kw>
<msg timestamp="20201103 16:41:35.386" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 16:41:35.386" starttime="20201103 16:41:35.380"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:41:35.389" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:41:35.389" starttime="20201103 16:41:35.389"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:41:35.390" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:41:35.390" starttime="20201103 16:41:35.389"></status>
</kw>
<status status="PASS" endtime="20201103 16:41:35.390" starttime="20201103 16:41:35.388"></status>
</kw>
<msg timestamp="20201103 16:41:35.390" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:41:35.390" starttime="20201103 16:41:35.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:41:35.391" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201103 16:41:35.391" starttime="20201103 16:41:35.391"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:41:35.392" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201103 16:41:35.392" starttime="20201103 16:41:35.392"></status>
</kw>
<status status="PASS" endtime="20201103 16:41:35.392" starttime="20201103 16:41:35.391"></status>
</kw>
<msg timestamp="20201103 16:41:35.392" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201103 16:41:35.392" starttime="20201103 16:41:35.390"></status>
</kw>
<status status="PASS" endtime="20201103 16:41:35.393" starttime="20201103 16:41:35.387"></status>
</kw>
<msg timestamp="20201103 16:41:35.393" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 16:41:35.393" starttime="20201103 16:41:35.387"></status>
</kw>
<msg timestamp="20201103 16:41:35.393" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 16:41:35.393" starttime="20201103 16:41:35.386"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 16:41:35.397" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 16:41:35.397" starttime="20201103 16:41:35.396"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:41:35.397" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 16:41:35.397" starttime="20201103 16:41:35.397"></status>
</kw>
<status status="PASS" endtime="20201103 16:41:35.397" starttime="20201103 16:41:35.395"></status>
</kw>
<msg timestamp="20201103 16:41:35.398" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 16:41:35.398" starttime="20201103 16:41:35.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:41:35.399" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201103 16:41:35.399" starttime="20201103 16:41:35.399"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:41:35.400" level="INFO">${result} = /wordcount-12.txt</msg>
<status status="PASS" endtime="20201103 16:41:35.400" starttime="20201103 16:41:35.399"></status>
</kw>
<status status="PASS" endtime="20201103 16:41:35.400" starttime="20201103 16:41:35.398"></status>
</kw>
<msg timestamp="20201103 16:41:35.400" level="INFO">${path_with_leading} = /wordcount-12.txt</msg>
<status status="PASS" endtime="20201103 16:41:35.400" starttime="20201103 16:41:35.398"></status>
</kw>
<status status="PASS" endtime="20201103 16:41:35.400" starttime="20201103 16:41:35.394"></status>
</kw>
<msg timestamp="20201103 16:41:35.400" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-12.txt</msg>
<status status="PASS" endtime="20201103 16:41:35.400" starttime="20201103 16:41:35.394"></status>
</kw>
<msg timestamp="20201103 16:41:35.401" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-12.txt</msg>
<status status="PASS" endtime="20201103 16:41:35.401" starttime="20201103 16:41:35.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:41:35.404" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-12.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:42:13.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:42:13.086" level="INFO">${output} = 2020-11-03 16:41:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-03 16:41:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 16:42:13.086" starttime="20201103 16:41:35.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:42:13.087" level="INFO">2020-11-03 16:41:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-03 16:41:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 16:41:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:41:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:41:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:41:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:41:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1AB8B4F57BBC-&gt;b12e0a36-c88f-4c1a-8adb-a029529f71b7
2020-11-03 16:41:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 16:41:38 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 16:41:41 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 16:41:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604421479997_0004
2020-11-03 16:41:41 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 16:41:42 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 16:41:42 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 16:41:42 INFO  YarnClientImpl:329 - Submitted application application_1604421479997_0004
2020-11-03 16:41:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604421479997_0004/
2020-11-03 16:41:42 INFO  Job:1619 - Running job: job_1604421479997_0004
2020-11-03 16:41:50 INFO  Job:1640 - Job job_1604421479997_0004 running in uber mode : false
2020-11-03 16:41:50 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 16:41:56 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 16:42:02 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 16:42:07 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 16:42:11 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 16:42:12 INFO  Job:1658 - Job job_1604421479997_0004 completed successfully
2020-11-03 16:42:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39680
		Total time spent by all reduces in occupied slots (ms)=15060
		Total time spent by all map tasks (ms)=9920
		Total time spent by all reduce tasks (ms)=3765
		Total vcore-milliseconds taken by all map tasks=9920
		Total vcore-milliseconds taken by all reduce tasks=3765
		Total megabyte-milliseconds taken by all map tasks=40632320
		Total megabyte-milliseconds taken by all reduce tasks=15421440
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=700
		CPU time spent (ms)=7290
		Physical memory (bytes) snapshot=1174384640
		Virtual memory (bytes) snapshot=15807062016
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=299413504
		Peak Map Virtual memory (bytes)=3955052544
		Peak Reduce Physical memory (bytes)=295067648
		Peak Reduce Virtual memory (bytes)=3969794048
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 16:42:13.087" starttime="20201103 16:42:13.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:42:13.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:42:13.088" starttime="20201103 16:42:13.088"></status>
</kw>
<status status="PASS" endtime="20201103 16:42:13.088" starttime="20201103 16:41:35.402"></status>
</kw>
<msg timestamp="20201103 16:42:13.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:42:13.089" starttime="20201103 16:41:35.401"></status>
</kw>
<msg timestamp="20201103 16:42:13.089" level="INFO">${output} = 2020-11-03 16:41:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-03 16:41:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 16:42:13.089" starttime="20201103 16:41:35.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 16:42:13.089" starttime="20201103 16:42:13.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:42:13.090" starttime="20201103 16:42:13.090"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:42:13.090" critical="yes" starttime="20201103 16:41:35.363"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 16:42:13.091" starttime="20201103 16:40:57.313"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:39:15.935" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:39:15.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:39:15.946" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:39:15.946" starttime="20201103 16:39:15.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:39:15.947" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:39:15.947" starttime="20201103 16:39:15.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:39:15.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:39:15.947" starttime="20201103 16:39:15.947"></status>
</kw>
<status status="PASS" endtime="20201103 16:39:15.948" starttime="20201103 16:39:15.931"></status>
</kw>
<msg timestamp="20201103 16:39:15.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:39:15.948" starttime="20201103 16:39:15.931"></status>
</kw>
<msg timestamp="20201103 16:39:15.948" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:39:15.948" starttime="20201103 16:39:15.930"></status>
</kw>
<msg timestamp="20201103 16:39:15.948" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:39:15.948" starttime="20201103 16:39:15.930"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:39:15.953" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:39:15.953" starttime="20201103 16:39:15.953"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:39:15.954" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:39:15.954" starttime="20201103 16:39:15.953"></status>
</kw>
<status status="PASS" endtime="20201103 16:39:15.954" starttime="20201103 16:39:15.951"></status>
</kw>
<msg timestamp="20201103 16:39:15.954" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:39:15.954" starttime="20201103 16:39:15.951"></status>
</kw>
<status status="PASS" endtime="20201103 16:39:15.954" starttime="20201103 16:39:15.950"></status>
</kw>
<msg timestamp="20201103 16:39:15.954" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:39:15.954" starttime="20201103 16:39:15.949"></status>
</kw>
<msg timestamp="20201103 16:39:15.955" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:39:15.955" starttime="20201103 16:39:15.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:39:15.960" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:40:02.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:40:02.178" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:39:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:39:18 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 16:40:02.179" starttime="20201103 16:39:15.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:40:02.180" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:39:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:39:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:39:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:39:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:39:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-39F3994ABF69-&gt;b12e0a36-c88f-4c1a-8adb-a029529f71b7
2020-11-03 16:39:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 16:39:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-03 16:39:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 16:39:24 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 16:39:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604421479997_0001
2020-11-03 16:39:25 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 16:39:25 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 16:39:25 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 16:39:25 INFO  YarnClientImpl:329 - Submitted application application_1604421479997_0001
2020-11-03 16:39:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604421479997_0001/
2020-11-03 16:39:25 INFO  Job:1619 - Running job: job_1604421479997_0001
2020-11-03 16:39:36 INFO  Job:1640 - Job job_1604421479997_0001 running in uber mode : false
2020-11-03 16:39:36 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 16:39:42 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 16:39:47 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 16:39:53 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 16:39:57 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 16:40:01 INFO  Job:1658 - Job job_1604421479997_0001 completed successfully
2020-11-03 16:40:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061649
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39608
		Total time spent by all reduces in occupied slots (ms)=15672
		Total time spent by all map tasks (ms)=9902
		Total time spent by all reduce tasks (ms)=3918
		Total vcore-milliseconds taken by all map tasks=9902
		Total vcore-milliseconds taken by all reduce tasks=3918
		Total megabyte-milliseconds taken by all map tasks=40558592
		Total megabyte-milliseconds taken by all reduce tasks=16048128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=657
		CPU time spent (ms)=6620
		Physical memory (bytes) snapshot=1246715904
		Virtual memory (bytes) snapshot=15791382528
		Total committed heap usage (bytes)=1246232576
		Peak Map Physical memory (bytes)=297603072
		Peak Map Virtual memory (bytes)=3948179456
		Peak Reduce Physical memory (bytes)=387354624
		Peak Reduce Virtual memory (bytes)=3972702208
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.414 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 16:40:02.180" starttime="20201103 16:40:02.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:40:02.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:40:02.181" starttime="20201103 16:40:02.180"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:02.181" starttime="20201103 16:39:15.956"></status>
</kw>
<msg timestamp="20201103 16:40:02.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:40:02.182" starttime="20201103 16:39:15.955"></status>
</kw>
<msg timestamp="20201103 16:40:02.182" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 16:39:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:39:18 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 16:40:02.182" starttime="20201103 16:39:15.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:40:02.183" starttime="20201103 16:40:02.182"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:40:02.183" critical="yes" starttime="20201103 16:39:15.929"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:40:02.189" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:40:02.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:40:02.195" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:40:02.196" starttime="20201103 16:40:02.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:40:02.197" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:40:02.197" starttime="20201103 16:40:02.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:40:02.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:40:02.197" starttime="20201103 16:40:02.197"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:02.197" starttime="20201103 16:40:02.186"></status>
</kw>
<msg timestamp="20201103 16:40:02.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:40:02.198" starttime="20201103 16:40:02.186"></status>
</kw>
<msg timestamp="20201103 16:40:02.198" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:40:02.198" starttime="20201103 16:40:02.186"></status>
</kw>
<msg timestamp="20201103 16:40:02.198" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 16:40:02.198" starttime="20201103 16:40:02.185"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 16:40:02.199" level="INFO">${random} = 22</msg>
<status status="PASS" endtime="20201103 16:40:02.199" starttime="20201103 16:40:02.198"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:40:02.202" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:40:02.202" starttime="20201103 16:40:02.202"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:40:02.203" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:40:02.203" starttime="20201103 16:40:02.202"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:02.203" starttime="20201103 16:40:02.201"></status>
</kw>
<msg timestamp="20201103 16:40:02.203" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:40:02.203" starttime="20201103 16:40:02.201"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:02.203" starttime="20201103 16:40:02.200"></status>
</kw>
<msg timestamp="20201103 16:40:02.204" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:40:02.204" starttime="20201103 16:40:02.200"></status>
</kw>
<msg timestamp="20201103 16:40:02.204" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 16:40:02.204" starttime="20201103 16:40:02.199"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:40:02.207" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:40:02.207" starttime="20201103 16:40:02.206"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:40:02.208" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:40:02.208" starttime="20201103 16:40:02.207"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:02.208" starttime="20201103 16:40:02.206"></status>
</kw>
<msg timestamp="20201103 16:40:02.208" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:40:02.208" starttime="20201103 16:40:02.206"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:02.208" starttime="20201103 16:40:02.205"></status>
</kw>
<msg timestamp="20201103 16:40:02.209" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 16:40:02.209" starttime="20201103 16:40:02.205"></status>
</kw>
<msg timestamp="20201103 16:40:02.209" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 16:40:02.209" starttime="20201103 16:40:02.204"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 16:40:02.212" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 16:40:02.212" starttime="20201103 16:40:02.212"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 16:40:02.213" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 16:40:02.213" starttime="20201103 16:40:02.213"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:02.213" starttime="20201103 16:40:02.211"></status>
</kw>
<msg timestamp="20201103 16:40:02.213" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 16:40:02.213" starttime="20201103 16:40:02.211"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:02.214" starttime="20201103 16:40:02.210"></status>
</kw>
<msg timestamp="20201103 16:40:02.214" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-22.txt</msg>
<status status="PASS" endtime="20201103 16:40:02.214" starttime="20201103 16:40:02.210"></status>
</kw>
<msg timestamp="20201103 16:40:02.214" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-22.txt</msg>
<status status="PASS" endtime="20201103 16:40:02.214" starttime="20201103 16:40:02.209"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 16:40:02.219" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-22.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 16:40:42.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 16:40:42.655" level="INFO">${output} = 2020-11-03 16:40:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-03 16:40:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 16:40:42.655" starttime="20201103 16:40:02.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 16:40:42.656" level="INFO">2020-11-03 16:40:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-03 16:40:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 16:40:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 16:40:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 16:40:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 16:40:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 16:40:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E50BFA8BF3AB-&gt;b12e0a36-c88f-4c1a-8adb-a029529f71b7
2020-11-03 16:40:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 16:40:05 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 16:40:05 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 16:40:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604421479997_0002
2020-11-03 16:40:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 16:40:06 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 16:40:06 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 16:40:06 INFO  YarnClientImpl:329 - Submitted application application_1604421479997_0002
2020-11-03 16:40:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604421479997_0002/
2020-11-03 16:40:06 INFO  Job:1619 - Running job: job_1604421479997_0002
2020-11-03 16:40:14 INFO  Job:1640 - Job job_1604421479997_0002 running in uber mode : false
2020-11-03 16:40:14 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 16:40:21 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 16:40:27 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 16:40:32 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 16:40:36 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 16:40:42 INFO  Job:1658 - Job job_1604421479997_0002 completed successfully
2020-11-03 16:40:42 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39664
		Total time spent by all reduces in occupied slots (ms)=15216
		Total time spent by all map tasks (ms)=9916
		Total time spent by all reduce tasks (ms)=3804
		Total vcore-milliseconds taken by all map tasks=9916
		Total vcore-milliseconds taken by all reduce tasks=3804
		Total megabyte-milliseconds taken by all map tasks=40615936
		Total megabyte-milliseconds taken by all reduce tasks=15581184
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=623
		CPU time spent (ms)=7150
		Physical memory (bytes) snapshot=1272385536
		Virtual memory (bytes) snapshot=15808593920
		Total committed heap usage (bytes)=1088421888
		Peak Map Physical memory (bytes)=298389504
		Peak Map Virtual memory (bytes)=3949117440
		Peak Reduce Physical memory (bytes)=389963776
		Peak Reduce Virtual memory (bytes)=3971899392
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 16:40:42.656" starttime="20201103 16:40:42.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 16:40:42.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 16:40:42.657" starttime="20201103 16:40:42.656"></status>
</kw>
<status status="PASS" endtime="20201103 16:40:42.657" starttime="20201103 16:40:02.215"></status>
</kw>
<msg timestamp="20201103 16:40:42.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 16:40:42.657" starttime="20201103 16:40:02.215"></status>
</kw>
<msg timestamp="20201103 16:40:42.658" level="INFO">${output} = 2020-11-03 16:40:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-11-03 16:40:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 16:40:42.658" starttime="20201103 16:40:02.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 16:40:42.658" starttime="20201103 16:40:42.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 16:40:42.659" starttime="20201103 16:40:42.659"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 16:40:42.659" critical="yes" starttime="20201103 16:40:02.184"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 16:40:42.660" starttime="20201103 16:39:15.876"></status>
</suite>
<status status="PASS" elapsedtime="212945" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="581727" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
