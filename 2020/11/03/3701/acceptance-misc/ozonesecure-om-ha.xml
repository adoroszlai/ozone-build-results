<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201103 17:12:18.002" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:07:55.056" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:08:06.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:08:06.889" level="INFO">${output} = 2020-11-03 17:07:57,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:07:57,278 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 17:08:06.889" starttime="20201103 17:07:55.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:08:06.892" level="INFO">2020-11-03 17:07:57,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:07:57,278 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 17:07:57,278 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 17:07:59,565 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-03 17:08:00,829 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-03 17:08:00,830 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-03 17:08:00,830 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-03 17:08:00,830 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-03 17:08:00,831 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-03 17:08:00,831 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-03 17:08:00,831 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-03 17:08:00,833 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-03 17:08:00,840 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:00,887 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-09590, with testuser/scm@EXAMPLE.COM as owner.
2020-11-03 17:08:01,535 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09590/bucket-0-90338, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 17:08:01,852 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:02,853 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:03,854 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:04,340 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-03 17:08:04,854 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,632
Average Time spent in bucket creation: 00:00:00,355
Average Time spent in key creation: 00:00:01,065
Average Time spent in key write: 00:00:01,744
Total bytes written: 10240
Total Execution time: 00:00:09,053
***************************************************</msg>
<status status="PASS" endtime="20201103 17:08:06.892" starttime="20201103 17:08:06.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:08:06.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:08:06.893" starttime="20201103 17:08:06.892"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:06.893" starttime="20201103 17:07:55.051"></status>
</kw>
<msg timestamp="20201103 17:08:06.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:08:06.893" starttime="20201103 17:07:55.050"></status>
</kw>
<msg timestamp="20201103 17:08:06.894" level="INFO">${result} = 2020-11-03 17:07:57,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:07:57,278 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 17:08:06.894" starttime="20201103 17:07:55.050"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 17:08:06.895" starttime="20201103 17:08:06.895"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:06.895" starttime="20201103 17:08:06.894"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 17:08:06.895" critical="yes" starttime="20201103 17:07:55.049"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:08:06.901" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:08:17.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:08:17.652" level="INFO">${output} = 2020-11-03 17:08:08,619 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:08:08,823 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 17:08:17.652" starttime="20201103 17:08:06.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:08:17.654" level="INFO">2020-11-03 17:08:08,619 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:08:08,823 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 17:08:08,823 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 17:08:09,028 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wx0misbrwj
2020-11-03 17:08:09,052 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 17:08:10,056 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:10,077 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-03 17:08:10,648 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-03 17:08:10,724 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 17:08:11,057 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:11,514 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-03 17:08:11,888 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 17:08:11,888 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-D7595A83336E-&gt;c4e76527-4ba3-4ef1-9c8d-17c3b46a560d
2020-11-03 17:08:11,891 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 17:08:12,057 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:13,058 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:14,058 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:15,059 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:16,059 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:17,059 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-03 17:08:17,200 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5764.428572, max=5764.428572, mean=5764.428572, stddev=0.0, median=5764.428572, p75=5764.428572, p95=5764.428572, p98=5764.428572, p99=5764.428572, p999=5764.428572, mean_rate=0.15581523211758824, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-03 17:08:17,201 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2020-11-03 17:08:17,204 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-03 17:08:17,204 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201103 17:08:17.654" starttime="20201103 17:08:17.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:08:17.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:08:17.655" starttime="20201103 17:08:17.654"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:17.655" starttime="20201103 17:08:06.899"></status>
</kw>
<msg timestamp="20201103 17:08:17.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:08:17.655" starttime="20201103 17:08:06.898"></status>
</kw>
<msg timestamp="20201103 17:08:17.656" level="INFO">${result} = 2020-11-03 17:08:08,619 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:08:08,823 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 17:08:17.656" starttime="20201103 17:08:06.898"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 17:08:17.657" starttime="20201103 17:08:17.657"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:17.657" starttime="20201103 17:08:17.656"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 17:08:17.657" critical="yes" starttime="20201103 17:08:06.897"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:08:17.662" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:08:23.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:08:23.039" level="INFO">${output} = 2020-11-03 17:08:19,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:08:19,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 17:08:23.039" starttime="20201103 17:08:17.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:08:23.040" level="INFO">2020-11-03 17:08:19,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:08:19,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 17:08:19,666 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 17:08:19,841 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lrx6lsgefu
2020-11-03 17:08:19,858 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 17:08:20,863 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:20,994 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-03 17:08:21,583 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-03 17:08:21,875 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:22,876 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-03 17:08:22,994 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=396.445133, max=396.445133, mean=396.445133, stddev=0.0, median=396.445133, p75=396.445133, p95=396.445133, p98=396.445133, p99=396.445133, p999=396.445133, mean_rate=0.648152591894321, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-03 17:08:23,004 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-03 17:08:23,007 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-03 17:08:23,007 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201103 17:08:23.041" starttime="20201103 17:08:23.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:08:23.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:08:23.041" starttime="20201103 17:08:23.041"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:23.042" starttime="20201103 17:08:17.660"></status>
</kw>
<msg timestamp="20201103 17:08:23.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:08:23.042" starttime="20201103 17:08:17.659"></status>
</kw>
<msg timestamp="20201103 17:08:23.042" level="INFO">${result} = 2020-11-03 17:08:19,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:08:19,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 17:08:23.042" starttime="20201103 17:08:17.659"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 17:08:23.043" starttime="20201103 17:08:23.043"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:23.043" starttime="20201103 17:08:23.042"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 17:08:23.044" critical="yes" starttime="20201103 17:08:17.658"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:08:23.049" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:08:27.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:08:27.667" level="INFO">${output} = 2020-11-03 17:08:24,667 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:08:24,845 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 17:08:27.667" starttime="20201103 17:08:23.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:08:27.668" level="INFO">2020-11-03 17:08:24,667 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:08:24,845 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 17:08:24,845 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 17:08:25,033 [main] INFO freon.BaseFreonGenerator: Executing test with prefix q8cx0ireqo
2020-11-03 17:08:25,042 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 17:08:26,067 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 17:08:26,084 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-03 17:08:26,573 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-03 17:08:27,068 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-03 17:08:27,624 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=127.735684, max=127.735684, mean=127.735684, stddev=0.0, median=127.735684, p75=127.735684, p95=127.735684, p98=127.735684, p99=127.735684, p999=127.735684, mean_rate=0.8797166325049386, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-03 17:08:27,632 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-03 17:08:27,641 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-03 17:08:27,641 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201103 17:08:27.668" starttime="20201103 17:08:27.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:08:27.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:08:27.669" starttime="20201103 17:08:27.669"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:27.669" starttime="20201103 17:08:23.046"></status>
</kw>
<msg timestamp="20201103 17:08:27.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:08:27.670" starttime="20201103 17:08:23.046"></status>
</kw>
<msg timestamp="20201103 17:08:27.670" level="INFO">${result} = 2020-11-03 17:08:24,667 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 17:08:24,845 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 17:08:27.670" starttime="20201103 17:08:23.045"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 17:08:27.671" starttime="20201103 17:08:27.671"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:27.671" starttime="20201103 17:08:27.670"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 17:08:27.671" critical="yes" starttime="20201103 17:08:23.044"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 17:08:27.673" starttime="20201103 17:07:55.019"></status>
</suite>
<status status="PASS" endtime="20201103 17:08:27.677" starttime="20201103 17:07:54.992"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:07:47.678" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:07:47.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:07:47.681" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:07:47.681" starttime="20201103 17:07:47.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:07:47.682" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:07:47.682" starttime="20201103 17:07:47.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:07:47.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:07:47.683" starttime="20201103 17:07:47.682"></status>
</kw>
<status status="PASS" endtime="20201103 17:07:47.683" starttime="20201103 17:07:47.667"></status>
</kw>
<msg timestamp="20201103 17:07:47.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:07:47.683" starttime="20201103 17:07:47.667"></status>
</kw>
<msg timestamp="20201103 17:07:47.683" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:07:47.683" starttime="20201103 17:07:47.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:07:47.684" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:07:47.684" starttime="20201103 17:07:47.684"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:07:47.701" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:07:47.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:07:47.717" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:07:47.718" starttime="20201103 17:07:47.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:07:47.719" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:07:47.719" starttime="20201103 17:07:47.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:07:47.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:07:47.720" starttime="20201103 17:07:47.719"></status>
</kw>
<status status="PASS" endtime="20201103 17:07:47.721" starttime="20201103 17:07:47.685"></status>
</kw>
<msg timestamp="20201103 17:07:47.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:07:47.724" starttime="20201103 17:07:47.685"></status>
</kw>
<status status="PASS" endtime="20201103 17:07:47.724" starttime="20201103 17:07:47.685"></status>
</kw>
<status status="PASS" endtime="20201103 17:07:47.724" starttime="20201103 17:07:47.684"></status>
</kw>
<status status="PASS" endtime="20201103 17:07:47.724" starttime="20201103 17:07:47.665"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:07:47.725" critical="yes" starttime="20201103 17:07:47.665"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201103 17:07:47.729" starttime="20201103 17:07:47.535"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 17:08:33.176" level="INFO">${random} = 55238</msg>
<status status="PASS" endtime="20201103 17:08:33.176" starttime="20201103 17:08:33.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201103 17:08:33.178" level="INFO">${source} = 55238-source</msg>
<status status="PASS" endtime="20201103 17:08:33.178" starttime="20201103 17:08:33.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201103 17:08:33.179" level="INFO">${target} = 55238-target</msg>
<status status="PASS" endtime="20201103 17:08:33.179" starttime="20201103 17:08:33.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:08:33.184" level="INFO">Running command 'ozone sh volume create 55238-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:08:36.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:08:36.581" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:08:36.581" starttime="20201103 17:08:33.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:08:36.582" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:08:36.582" starttime="20201103 17:08:36.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:08:36.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:08:36.583" starttime="20201103 17:08:36.582"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:36.583" starttime="20201103 17:08:33.179"></status>
</kw>
<msg timestamp="20201103 17:08:36.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:08:36.583" starttime="20201103 17:08:33.179"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:36.583" starttime="20201103 17:08:33.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:08:36.587" level="INFO">Running command 'ozone sh volume create 55238-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:08:41.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:08:41.243" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:08:41.243" starttime="20201103 17:08:36.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:08:41.244" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:08:41.244" starttime="20201103 17:08:41.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:08:41.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:08:41.245" starttime="20201103 17:08:41.244"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:41.245" starttime="20201103 17:08:36.584"></status>
</kw>
<msg timestamp="20201103 17:08:41.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:08:41.245" starttime="20201103 17:08:36.584"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:41.245" starttime="20201103 17:08:36.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:08:41.250" level="INFO">Running command 'ozone sh bucket create 55238-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:08:44.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:08:44.944" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:08:44.944" starttime="20201103 17:08:41.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:08:44.945" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:08:44.945" starttime="20201103 17:08:44.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:08:44.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:08:44.946" starttime="20201103 17:08:44.945"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:44.946" starttime="20201103 17:08:41.247"></status>
</kw>
<msg timestamp="20201103 17:08:44.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:08:44.946" starttime="20201103 17:08:41.247"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:44.947" starttime="20201103 17:08:41.246"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:08:44.950" level="INFO">Running command 'ozone sh key put 55238-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:08:53.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:08:53.212" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:08:53.212" starttime="20201103 17:08:44.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:08:53.213" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:08:53.213" starttime="20201103 17:08:53.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:08:53.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:08:53.214" starttime="20201103 17:08:53.213"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:53.214" starttime="20201103 17:08:44.947"></status>
</kw>
<msg timestamp="20201103 17:08:53.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:08:53.214" starttime="20201103 17:08:44.947"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:53.215" starttime="20201103 17:08:44.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:08:53.219" level="INFO">Running command 'ozone sh bucket create 55238-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:08:56.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:08:56.640" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:08:56.640" starttime="20201103 17:08:53.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:08:56.641" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:08:56.641" starttime="20201103 17:08:56.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:08:56.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:08:56.642" starttime="20201103 17:08:56.642"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:56.642" starttime="20201103 17:08:53.216"></status>
</kw>
<msg timestamp="20201103 17:08:56.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:08:56.643" starttime="20201103 17:08:53.215"></status>
</kw>
<status status="PASS" endtime="20201103 17:08:56.643" starttime="20201103 17:08:53.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:08:56.646" level="INFO">Running command 'ozone sh bucket link 55238-source/readable-bucket 55238-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:00.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:00.120" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:00.120" starttime="20201103 17:08:56.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:00.121" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:09:00.121" starttime="20201103 17:09:00.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:00.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:00.121" starttime="20201103 17:09:00.121"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:00.122" starttime="20201103 17:08:56.644"></status>
</kw>
<msg timestamp="20201103 17:09:00.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:00.122" starttime="20201103 17:08:56.644"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:00.122" starttime="20201103 17:08:56.643"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:00.127" level="INFO">Running command 'ozone sh bucket link 55238-source/readable-bucket 55238-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:03.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:03.591" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:03.591" starttime="20201103 17:09:00.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:03.592" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:09:03.592" starttime="20201103 17:09:03.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:03.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:03.592" starttime="20201103 17:09:03.592"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:03.593" starttime="20201103 17:09:00.123"></status>
</kw>
<msg timestamp="20201103 17:09:03.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:03.593" starttime="20201103 17:09:00.123"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:03.593" starttime="20201103 17:09:00.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:03.599" level="INFO">Running command 'ozone sh bucket link 55238-source/unreadable-bucket 55238-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:07.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:07.232" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:07.232" starttime="20201103 17:09:03.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:07.233" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:09:07.233" starttime="20201103 17:09:07.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:07.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:07.234" starttime="20201103 17:09:07.233"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:07.235" starttime="20201103 17:09:03.595"></status>
</kw>
<msg timestamp="20201103 17:09:07.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:07.235" starttime="20201103 17:09:03.595"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:07.235" starttime="20201103 17:09:03.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:07.239" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 55238-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:11.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:11.438" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:11.438" starttime="20201103 17:09:07.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:11.439" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 17:09:11.440" starttime="20201103 17:09:11.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:11.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:11.440" starttime="20201103 17:09:11.440"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:11.441" starttime="20201103 17:09:07.236"></status>
</kw>
<msg timestamp="20201103 17:09:11.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:11.441" starttime="20201103 17:09:07.236"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:11.441" starttime="20201103 17:09:07.235"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:11.446" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 55238-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:15.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:15.029" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:15.029" starttime="20201103 17:09:11.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:15.030" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 17:09:15.030" starttime="20201103 17:09:15.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:15.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:15.031" starttime="20201103 17:09:15.030"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:15.031" starttime="20201103 17:09:11.442"></status>
</kw>
<msg timestamp="20201103 17:09:15.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:15.032" starttime="20201103 17:09:11.442"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:15.032" starttime="20201103 17:09:11.441"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:15.036" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 55238-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:18.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:18.791" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:18.791" starttime="20201103 17:09:15.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:18.792" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 17:09:18.792" starttime="20201103 17:09:18.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:18.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:18.792" starttime="20201103 17:09:18.792"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:18.793" starttime="20201103 17:09:15.033"></status>
</kw>
<msg timestamp="20201103 17:09:18.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:18.793" starttime="20201103 17:09:15.033"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:18.793" starttime="20201103 17:09:15.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:18.800" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 55238-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:22.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:22.293" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:22.294" starttime="20201103 17:09:18.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:22.294" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 17:09:22.295" starttime="20201103 17:09:22.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:22.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:22.295" starttime="20201103 17:09:22.295"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:22.295" starttime="20201103 17:09:18.794"></status>
</kw>
<msg timestamp="20201103 17:09:22.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:22.296" starttime="20201103 17:09:18.794"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:22.296" starttime="20201103 17:09:18.793"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:22.301" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 55238-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:25.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:25.850" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:25.850" starttime="20201103 17:09:22.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:25.851" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 17:09:25.852" starttime="20201103 17:09:25.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:25.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:25.852" starttime="20201103 17:09:25.852"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.852" starttime="20201103 17:09:22.298"></status>
</kw>
<msg timestamp="20201103 17:09:25.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:25.853" starttime="20201103 17:09:22.297"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.853" starttime="20201103 17:09:22.297"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.853" starttime="20201103 17:08:41.246"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.853" starttime="20201103 17:08:41.246"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.853" starttime="20201103 17:08:33.176"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:25.860" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:25.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:25.862" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:09:25.862" starttime="20201103 17:09:25.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:25.863" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:09:25.863" starttime="20201103 17:09:25.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:25.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:25.864" starttime="20201103 17:09:25.864"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.864" starttime="20201103 17:09:25.857"></status>
</kw>
<msg timestamp="20201103 17:09:25.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:25.864" starttime="20201103 17:09:25.856"></status>
</kw>
<msg timestamp="20201103 17:09:25.865" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:09:25.865" starttime="20201103 17:09:25.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:09:25.866" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:09:25.866" starttime="20201103 17:09:25.865"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:25.871" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:25.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:25.880" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:09:25.880" starttime="20201103 17:09:25.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:25.881" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:09:25.881" starttime="20201103 17:09:25.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:25.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:25.882" starttime="20201103 17:09:25.881"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.882" starttime="20201103 17:09:25.867"></status>
</kw>
<msg timestamp="20201103 17:09:25.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:25.882" starttime="20201103 17:09:25.867"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.882" starttime="20201103 17:09:25.867"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.882" starttime="20201103 17:09:25.866"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.882" starttime="20201103 17:09:25.855"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:25.882" starttime="20201103 17:09:25.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:25.887" level="INFO">Running command 'ozone sh bucket link 55238-source/no-such-bucket 55238-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:29.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:29.475" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:29.475" starttime="20201103 17:09:25.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:29.476" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:09:29.477" starttime="20201103 17:09:29.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:29.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:29.478" starttime="20201103 17:09:29.477"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:29.478" starttime="20201103 17:09:25.883"></status>
</kw>
<msg timestamp="20201103 17:09:29.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:29.478" starttime="20201103 17:09:25.883"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:29.479" starttime="20201103 17:09:25.883"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:29.482" level="INFO">Running command 'ozone sh key list 55238-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:33.168" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 17:09:33.168" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:33.168" starttime="20201103 17:09:29.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:33.169" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201103 17:09:33.169" starttime="20201103 17:09:33.168"></status>
</kw>
<msg timestamp="20201103 17:09:33.169" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:33.169" starttime="20201103 17:09:29.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 17:09:33.170" starttime="20201103 17:09:33.170"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:09:33.170" critical="yes" starttime="20201103 17:09:25.853"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:33.178" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:33.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:33.180" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:09:33.181" starttime="20201103 17:09:33.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:33.181" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:09:33.181" starttime="20201103 17:09:33.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:33.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:33.182" starttime="20201103 17:09:33.182"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:33.182" starttime="20201103 17:09:33.174"></status>
</kw>
<msg timestamp="20201103 17:09:33.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:33.182" starttime="20201103 17:09:33.174"></status>
</kw>
<msg timestamp="20201103 17:09:33.183" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:09:33.183" starttime="20201103 17:09:33.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:09:33.183" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:09:33.183" starttime="20201103 17:09:33.183"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:33.188" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:33.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:33.198" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:09:33.198" starttime="20201103 17:09:33.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:33.199" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:09:33.199" starttime="20201103 17:09:33.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:33.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:33.200" starttime="20201103 17:09:33.199"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:33.200" starttime="20201103 17:09:33.185"></status>
</kw>
<msg timestamp="20201103 17:09:33.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:33.200" starttime="20201103 17:09:33.184"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:33.201" starttime="20201103 17:09:33.184"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:33.201" starttime="20201103 17:09:33.183"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:33.201" starttime="20201103 17:09:33.173"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:33.201" starttime="20201103 17:09:33.171"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:33.204" level="INFO">Running command 'ozone sh bucket link 55238-source/bucket1 55238-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:36.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:36.835" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:36.835" starttime="20201103 17:09:33.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:36.836" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:09:36.836" starttime="20201103 17:09:36.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:36.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:36.837" starttime="20201103 17:09:36.836"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:36.837" starttime="20201103 17:09:33.202"></status>
</kw>
<msg timestamp="20201103 17:09:36.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:36.837" starttime="20201103 17:09:33.201"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:36.838" starttime="20201103 17:09:33.201"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:36.842" level="INFO">Running command 'ozone sh bucket create 55238-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:40.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:40.883" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:40.883" starttime="20201103 17:09:36.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:40.884" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:09:40.884" starttime="20201103 17:09:40.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:40.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:40.885" starttime="20201103 17:09:40.885"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:40.885" starttime="20201103 17:09:36.839"></status>
</kw>
<msg timestamp="20201103 17:09:40.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:40.885" starttime="20201103 17:09:36.838"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:40.886" starttime="20201103 17:09:36.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:40.891" level="INFO">Running command 'ozone sh key put 55238-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:49.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:49.579" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:49.579" starttime="20201103 17:09:40.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:49.580" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:09:49.581" starttime="20201103 17:09:49.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:49.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:49.581" starttime="20201103 17:09:49.581"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:49.581" starttime="20201103 17:09:40.887"></status>
</kw>
<msg timestamp="20201103 17:09:49.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:49.582" starttime="20201103 17:09:40.886"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:49.582" starttime="20201103 17:09:40.886"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201103 17:09:49.584" level="INFO">${postfix} = 32022</msg>
<status status="PASS" endtime="20201103 17:09:49.584" starttime="20201103 17:09:49.583"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201103 17:09:49.584" level="INFO">${tmpfile} = /tmp/tempkey-32022</msg>
<status status="PASS" endtime="20201103 17:09:49.584" starttime="20201103 17:09:49.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:49.588" level="INFO">Running command 'ozone sh key get -f 55238-target/link1/key1 /tmp/tempkey-32022 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:55.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:55.649" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:09:55.649" starttime="20201103 17:09:49.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:55.650" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:09:55.650" starttime="20201103 17:09:55.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:55.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:55.651" starttime="20201103 17:09:55.650"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.651" starttime="20201103 17:09:49.585"></status>
</kw>
<msg timestamp="20201103 17:09:55.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:55.651" starttime="20201103 17:09:49.585"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.651" starttime="20201103 17:09:49.584"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201103 17:09:55.655" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-32022 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:55.656" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201103 17:09:55.656" starttime="20201103 17:09:55.652"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:55.662" level="INFO">Running command 'rm -f /tmp/tempkey-32022 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:55.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:55.663" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:09:55.663" starttime="20201103 17:09:55.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:55.664" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:09:55.664" starttime="20201103 17:09:55.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:55.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:55.665" starttime="20201103 17:09:55.664"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.665" starttime="20201103 17:09:55.657"></status>
</kw>
<msg timestamp="20201103 17:09:55.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:55.665" starttime="20201103 17:09:55.657"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.665" starttime="20201103 17:09:55.656"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 17:09:55.666" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201103 17:09:55.666" starttime="20201103 17:09:55.666"></status>
</kw>
<msg timestamp="20201103 17:09:55.666" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201103 17:09:55.666" starttime="20201103 17:09:49.583"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201103 17:09:55.667" starttime="20201103 17:09:55.666"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.667" starttime="20201103 17:09:49.582"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:09:55.667" critical="yes" starttime="20201103 17:09:33.171"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:55.672" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:55.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:55.681" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:09:55.681" starttime="20201103 17:09:55.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:55.682" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:09:55.682" starttime="20201103 17:09:55.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:55.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:55.683" starttime="20201103 17:09:55.682"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.683" starttime="20201103 17:09:55.670"></status>
</kw>
<msg timestamp="20201103 17:09:55.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:55.683" starttime="20201103 17:09:55.669"></status>
</kw>
<msg timestamp="20201103 17:09:55.683" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:09:55.683" starttime="20201103 17:09:55.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:09:55.684" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:09:55.684" starttime="20201103 17:09:55.684"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:55.688" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:09:55.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:09:55.700" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:09:55.700" starttime="20201103 17:09:55.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:09:55.701" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:09:55.701" starttime="20201103 17:09:55.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:09:55.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:09:55.701" starttime="20201103 17:09:55.701"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.702" starttime="20201103 17:09:55.686"></status>
</kw>
<msg timestamp="20201103 17:09:55.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:09:55.702" starttime="20201103 17:09:55.685"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.702" starttime="20201103 17:09:55.685"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.702" starttime="20201103 17:09:55.684"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.702" starttime="20201103 17:09:55.669"></status>
</kw>
<status status="PASS" endtime="20201103 17:09:55.702" starttime="20201103 17:09:55.668"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:09:55.708" level="INFO">Running command 'ozone sh key put 55238-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:03.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:03.811" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:10:03.811" starttime="20201103 17:09:55.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:03.812" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:10:03.813" starttime="20201103 17:10:03.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:03.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:03.813" starttime="20201103 17:10:03.813"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:03.814" starttime="20201103 17:09:55.704"></status>
</kw>
<msg timestamp="20201103 17:10:03.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:03.814" starttime="20201103 17:09:55.704"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:03.814" starttime="20201103 17:09:55.703"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201103 17:10:03.816" level="INFO">${postfix} = 70086</msg>
<status status="PASS" endtime="20201103 17:10:03.816" starttime="20201103 17:10:03.815"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201103 17:10:03.816" level="INFO">${tmpfile} = /tmp/tempkey-70086</msg>
<status status="PASS" endtime="20201103 17:10:03.816" starttime="20201103 17:10:03.816"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:03.820" level="INFO">Running command 'ozone sh key get -f 55238-source/bucket1/key2 /tmp/tempkey-70086 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:09.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:09.308" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:10:09.308" starttime="20201103 17:10:03.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:09.309" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:10:09.309" starttime="20201103 17:10:09.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:09.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:09.310" starttime="20201103 17:10:09.310"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.310" starttime="20201103 17:10:03.817"></status>
</kw>
<msg timestamp="20201103 17:10:09.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:09.311" starttime="20201103 17:10:03.817"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.311" starttime="20201103 17:10:03.816"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201103 17:10:09.314" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-70086 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:09.316" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201103 17:10:09.316" starttime="20201103 17:10:09.311"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:09.321" level="INFO">Running command 'rm -f /tmp/tempkey-70086 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:09.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:09.367" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:10:09.367" starttime="20201103 17:10:09.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:09.368" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:10:09.368" starttime="20201103 17:10:09.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:09.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:09.369" starttime="20201103 17:10:09.368"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.369" starttime="20201103 17:10:09.317"></status>
</kw>
<msg timestamp="20201103 17:10:09.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:09.369" starttime="20201103 17:10:09.317"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.370" starttime="20201103 17:10:09.316"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 17:10:09.370" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201103 17:10:09.370" starttime="20201103 17:10:09.370"></status>
</kw>
<msg timestamp="20201103 17:10:09.370" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201103 17:10:09.370" starttime="20201103 17:10:03.815"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:09.371" starttime="20201103 17:10:09.371"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.371" starttime="20201103 17:10:03.814"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:10:09.371" critical="yes" starttime="20201103 17:09:55.668"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:09.379" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:09.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:09.382" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:10:09.382" starttime="20201103 17:10:09.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:09.383" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:10:09.383" starttime="20201103 17:10:09.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:09.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:09.384" starttime="20201103 17:10:09.383"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.384" starttime="20201103 17:10:09.376"></status>
</kw>
<msg timestamp="20201103 17:10:09.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:09.384" starttime="20201103 17:10:09.375"></status>
</kw>
<msg timestamp="20201103 17:10:09.384" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:10:09.384" starttime="20201103 17:10:09.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:10:09.385" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:10:09.385" starttime="20201103 17:10:09.385"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:09.391" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:09.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:09.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:10:09.401" starttime="20201103 17:10:09.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:09.402" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:10:09.402" starttime="20201103 17:10:09.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:09.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:09.403" starttime="20201103 17:10:09.403"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.403" starttime="20201103 17:10:09.387"></status>
</kw>
<msg timestamp="20201103 17:10:09.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:09.404" starttime="20201103 17:10:09.387"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.404" starttime="20201103 17:10:09.386"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.404" starttime="20201103 17:10:09.386"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.404" starttime="20201103 17:10:09.374"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:09.404" starttime="20201103 17:10:09.373"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:09.408" level="INFO">Running command 'ozone sh key list 55238-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:13.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:13.438" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201103 17:10:13.438" starttime="20201103 17:10:09.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:13.439" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201103 17:10:13.439" starttime="20201103 17:10:13.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:13.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:13.440" starttime="20201103 17:10:13.439"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:13.440" starttime="20201103 17:10:09.406"></status>
</kw>
<msg timestamp="20201103 17:10:13.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:13.440" starttime="20201103 17:10:09.405"></status>
</kw>
<msg timestamp="20201103 17:10:13.441" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201103 17:10:13.441" starttime="20201103 17:10:09.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:13.446" level="INFO">Running command 'ozone sh key list 55238-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:17.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:17.611" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201103 17:10:17.611" starttime="20201103 17:10:13.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:17.613" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201103 17:10:17.613" starttime="20201103 17:10:17.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:17.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:17.613" starttime="20201103 17:10:17.613"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:17.614" starttime="20201103 17:10:13.441"></status>
</kw>
<msg timestamp="20201103 17:10:17.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:17.614" starttime="20201103 17:10:13.441"></status>
</kw>
<msg timestamp="20201103 17:10:17.614" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201103 17:10:17.614" starttime="20201103 17:10:13.441"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:17.615" starttime="20201103 17:10:17.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:17.615" starttime="20201103 17:10:17.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:17.616" starttime="20201103 17:10:17.615"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:10:17.616" critical="yes" starttime="20201103 17:10:09.373"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:17.622" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:17.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:17.624" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:10:17.624" starttime="20201103 17:10:17.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:17.625" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:10:17.625" starttime="20201103 17:10:17.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:17.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:17.627" starttime="20201103 17:10:17.625"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:17.627" starttime="20201103 17:10:17.619"></status>
</kw>
<msg timestamp="20201103 17:10:17.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:17.627" starttime="20201103 17:10:17.619"></status>
</kw>
<msg timestamp="20201103 17:10:17.628" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:10:17.628" starttime="20201103 17:10:17.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:10:17.628" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:10:17.629" starttime="20201103 17:10:17.628"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:17.634" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:17.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:17.645" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:10:17.645" starttime="20201103 17:10:17.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:17.646" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:10:17.646" starttime="20201103 17:10:17.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:17.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:17.646" starttime="20201103 17:10:17.646"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:17.647" starttime="20201103 17:10:17.630"></status>
</kw>
<msg timestamp="20201103 17:10:17.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:17.647" starttime="20201103 17:10:17.630"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:17.647" starttime="20201103 17:10:17.629"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:17.647" starttime="20201103 17:10:17.629"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:17.647" starttime="20201103 17:10:17.618"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:17.647" starttime="20201103 17:10:17.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:17.652" level="INFO">Running command 'ozone sh key delete 55238-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:21.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:21.444" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:10:21.444" starttime="20201103 17:10:17.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:21.445" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:10:21.445" starttime="20201103 17:10:21.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:21.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:21.446" starttime="20201103 17:10:21.446"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:21.446" starttime="20201103 17:10:17.648"></status>
</kw>
<msg timestamp="20201103 17:10:21.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:21.447" starttime="20201103 17:10:17.648"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:21.447" starttime="20201103 17:10:17.648"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:21.452" level="INFO">Running command 'ozone sh key list 55238-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:25.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:25.330" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201103 17:10:25.330" starttime="20201103 17:10:21.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:25.332" level="INFO">key1</msg>
<status status="PASS" endtime="20201103 17:10:25.332" starttime="20201103 17:10:25.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:25.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:25.333" starttime="20201103 17:10:25.332"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:25.333" starttime="20201103 17:10:21.448"></status>
</kw>
<msg timestamp="20201103 17:10:25.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:25.333" starttime="20201103 17:10:21.448"></status>
</kw>
<msg timestamp="20201103 17:10:25.333" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201103 17:10:25.333" starttime="20201103 17:10:21.447"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:25.334" starttime="20201103 17:10:25.333"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:10:25.334" critical="yes" starttime="20201103 17:10:17.617"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:25.340" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:25.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:25.342" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:10:25.342" starttime="20201103 17:10:25.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:25.343" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:10:25.343" starttime="20201103 17:10:25.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:25.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:25.344" starttime="20201103 17:10:25.343"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:25.344" starttime="20201103 17:10:25.337"></status>
</kw>
<msg timestamp="20201103 17:10:25.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:25.344" starttime="20201103 17:10:25.337"></status>
</kw>
<msg timestamp="20201103 17:10:25.344" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:10:25.344" starttime="20201103 17:10:25.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:10:25.345" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:10:25.345" starttime="20201103 17:10:25.345"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:25.350" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:25.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:25.361" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:10:25.361" starttime="20201103 17:10:25.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:25.362" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:10:25.362" starttime="20201103 17:10:25.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:25.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:25.362" starttime="20201103 17:10:25.362"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:25.362" starttime="20201103 17:10:25.347"></status>
</kw>
<msg timestamp="20201103 17:10:25.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:25.363" starttime="20201103 17:10:25.346"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:25.363" starttime="20201103 17:10:25.346"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:25.363" starttime="20201103 17:10:25.345"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:25.363" starttime="20201103 17:10:25.336"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:25.363" starttime="20201103 17:10:25.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:25.367" level="INFO">Running command 'ozone sh bucket list 55238-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:29.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:29.557" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:10:29.557" starttime="20201103 17:10:25.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:29.558" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:09:29.387Z",
  "modificationTime" : "2020-11-03T17:09:29.387Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:09:07.078Z",
  "modificationTime" : "2020-11-03T17:09:25.730Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:09:36.664Z",
  "modificationTime" : "2020-11-03T17:09:36.664Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:08:59.948Z",
  "modificationTime" : "2020-11-03T17:09:22.215Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:09:03.418Z",
  "modificationTime" : "2020-11-03T17:09:03.418Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 17:10:29.558" starttime="20201103 17:10:29.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:29.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:29.559" starttime="20201103 17:10:29.558"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:29.559" starttime="20201103 17:10:25.364"></status>
</kw>
<msg timestamp="20201103 17:10:29.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:29.559" starttime="20201103 17:10:25.364"></status>
</kw>
<msg timestamp="20201103 17:10:29.560" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:10:29.560" starttime="20201103 17:10:25.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:29.560" starttime="20201103 17:10:29.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:29.561" starttime="20201103 17:10:29.560"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:10:29.561" critical="yes" starttime="20201103 17:10:25.335"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:29.567" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:29.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:29.569" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:10:29.570" starttime="20201103 17:10:29.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:29.570" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:10:29.570" starttime="20201103 17:10:29.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:29.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:29.571" starttime="20201103 17:10:29.571"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:29.571" starttime="20201103 17:10:29.564"></status>
</kw>
<msg timestamp="20201103 17:10:29.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:29.571" starttime="20201103 17:10:29.564"></status>
</kw>
<msg timestamp="20201103 17:10:29.572" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:10:29.572" starttime="20201103 17:10:29.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:10:29.572" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:10:29.572" starttime="20201103 17:10:29.572"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:29.577" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:29.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:29.591" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:10:29.591" starttime="20201103 17:10:29.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:29.592" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:10:29.592" starttime="20201103 17:10:29.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:29.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:29.592" starttime="20201103 17:10:29.592"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:29.593" starttime="20201103 17:10:29.574"></status>
</kw>
<msg timestamp="20201103 17:10:29.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:29.593" starttime="20201103 17:10:29.573"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:29.593" starttime="20201103 17:10:29.573"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:29.593" starttime="20201103 17:10:29.573"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:29.593" starttime="20201103 17:10:29.563"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:29.593" starttime="20201103 17:10:29.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:29.600" level="INFO">Running command 'ozone sh bucket info 55238-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:33.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:33.418" level="INFO">${output} = 55238-source bucket1</msg>
<status status="PASS" endtime="20201103 17:10:33.418" starttime="20201103 17:10:29.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:33.419" level="INFO">55238-source bucket1</msg>
<status status="PASS" endtime="20201103 17:10:33.419" starttime="20201103 17:10:33.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:33.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:33.420" starttime="20201103 17:10:33.419"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:33.421" starttime="20201103 17:10:29.595"></status>
</kw>
<msg timestamp="20201103 17:10:33.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:33.421" starttime="20201103 17:10:29.595"></status>
</kw>
<msg timestamp="20201103 17:10:33.421" level="INFO">${result} = 55238-source bucket1</msg>
<status status="PASS" endtime="20201103 17:10:33.421" starttime="20201103 17:10:29.594"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:33.422" starttime="20201103 17:10:33.421"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:10:33.422" critical="yes" starttime="20201103 17:10:29.562"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:33.432" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:33.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:33.434" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:10:33.434" starttime="20201103 17:10:33.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:33.435" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:10:33.435" starttime="20201103 17:10:33.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:33.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:33.436" starttime="20201103 17:10:33.435"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:33.436" starttime="20201103 17:10:33.428"></status>
</kw>
<msg timestamp="20201103 17:10:33.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:33.436" starttime="20201103 17:10:33.427"></status>
</kw>
<msg timestamp="20201103 17:10:33.437" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:10:33.437" starttime="20201103 17:10:33.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:10:33.437" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:10:33.437" starttime="20201103 17:10:33.437"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:33.443" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:33.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:33.458" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:10:33.458" starttime="20201103 17:10:33.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:33.459" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:10:33.459" starttime="20201103 17:10:33.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:33.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:33.460" starttime="20201103 17:10:33.459"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:33.460" starttime="20201103 17:10:33.439"></status>
</kw>
<msg timestamp="20201103 17:10:33.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:33.460" starttime="20201103 17:10:33.439"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:33.460" starttime="20201103 17:10:33.438"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:33.460" starttime="20201103 17:10:33.438"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:33.461" starttime="20201103 17:10:33.426"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:33.461" starttime="20201103 17:10:33.426"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:33.465" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 55238-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:37.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:37.276" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:10:37.276" starttime="20201103 17:10:33.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:37.277" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 17:10:37.277" starttime="20201103 17:10:37.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:37.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:37.278" starttime="20201103 17:10:37.277"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:37.278" starttime="20201103 17:10:33.462"></status>
</kw>
<msg timestamp="20201103 17:10:37.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:37.278" starttime="20201103 17:10:33.461"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:37.279" starttime="20201103 17:10:33.461"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:37.284" level="INFO">Running command 'ozone sh bucket getacl 55238-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:41.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:41.067" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201103 17:10:41.067" starttime="20201103 17:10:37.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:41.068" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201103 17:10:41.068" starttime="20201103 17:10:41.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:41.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:41.069" starttime="20201103 17:10:41.068"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:41.069" starttime="20201103 17:10:37.280"></status>
</kw>
<msg timestamp="20201103 17:10:41.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:41.070" starttime="20201103 17:10:37.280"></status>
</kw>
<msg timestamp="20201103 17:10:41.070" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201103 17:10:41.070" starttime="20201103 17:10:37.279"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:41.072" starttime="20201103 17:10:41.072"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:41.073" starttime="20201103 17:10:37.279"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:41.078" level="INFO">Running command 'ozone sh bucket getacl 55238-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:45.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:45.089" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:10:45.090" starttime="20201103 17:10:41.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:45.091" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:10:45.091" starttime="20201103 17:10:45.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:45.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:45.092" starttime="20201103 17:10:45.091"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:45.092" starttime="20201103 17:10:41.075"></status>
</kw>
<msg timestamp="20201103 17:10:45.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:45.092" starttime="20201103 17:10:41.074"></status>
</kw>
<msg timestamp="20201103 17:10:45.092" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201103 17:10:45.092" starttime="20201103 17:10:41.074"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:45.093" starttime="20201103 17:10:45.092"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:45.093" starttime="20201103 17:10:41.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:45.097" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 55238-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:48.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:48.995" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:10:48.995" starttime="20201103 17:10:45.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:48.996" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 17:10:48.996" starttime="20201103 17:10:48.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:48.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:48.997" starttime="20201103 17:10:48.997"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:48.997" starttime="20201103 17:10:45.095"></status>
</kw>
<msg timestamp="20201103 17:10:48.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:48.998" starttime="20201103 17:10:45.094"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:48.998" starttime="20201103 17:10:45.093"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:49.010" level="INFO">Running command 'ozone sh bucket getacl 55238-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:53.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:53.007" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:10:53.007" starttime="20201103 17:10:49.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:53.008" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:10:53.008" starttime="20201103 17:10:53.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:53.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:53.009" starttime="20201103 17:10:53.009"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:53.010" starttime="20201103 17:10:49.000"></status>
</kw>
<msg timestamp="20201103 17:10:53.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:53.010" starttime="20201103 17:10:49.000"></status>
</kw>
<msg timestamp="20201103 17:10:53.010" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201103 17:10:53.010" starttime="20201103 17:10:48.999"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:53.011" starttime="20201103 17:10:53.010"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:53.011" starttime="20201103 17:10:48.998"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:53.019" level="INFO">Running command 'ozone sh bucket getacl 55238-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:56.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:56.943" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201103 17:10:56.943" starttime="20201103 17:10:53.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:56.945" level="INFO">READ</msg>
<status status="PASS" endtime="20201103 17:10:56.945" starttime="20201103 17:10:56.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:56.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:56.945" starttime="20201103 17:10:56.945"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:56.946" starttime="20201103 17:10:53.015"></status>
</kw>
<msg timestamp="20201103 17:10:56.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:56.946" starttime="20201103 17:10:53.014"></status>
</kw>
<msg timestamp="20201103 17:10:56.946" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201103 17:10:56.946" starttime="20201103 17:10:53.012"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 17:10:56.947" starttime="20201103 17:10:56.946"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:56.947" starttime="20201103 17:10:53.011"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:10:56.947" critical="yes" starttime="20201103 17:10:33.425"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:56.955" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:56.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:56.958" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:10:56.958" starttime="20201103 17:10:56.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:56.959" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:10:56.959" starttime="20201103 17:10:56.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:56.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:56.960" starttime="20201103 17:10:56.960"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:56.960" starttime="20201103 17:10:56.952"></status>
</kw>
<msg timestamp="20201103 17:10:56.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:56.961" starttime="20201103 17:10:56.951"></status>
</kw>
<msg timestamp="20201103 17:10:56.961" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:10:56.961" starttime="20201103 17:10:56.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:10:56.962" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:10:56.962" starttime="20201103 17:10:56.961"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:56.966" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:10:56.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:10:56.977" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:10:56.977" starttime="20201103 17:10:56.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:10:56.978" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:10:56.979" starttime="20201103 17:10:56.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:10:56.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:10:56.979" starttime="20201103 17:10:56.979"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:56.980" starttime="20201103 17:10:56.963"></status>
</kw>
<msg timestamp="20201103 17:10:56.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:10:56.980" starttime="20201103 17:10:56.963"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:56.980" starttime="20201103 17:10:56.962"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:56.980" starttime="20201103 17:10:56.962"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:56.980" starttime="20201103 17:10:56.950"></status>
</kw>
<status status="PASS" endtime="20201103 17:10:56.980" starttime="20201103 17:10:56.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:10:56.984" level="INFO">Running command 'ozone sh bucket link 55238-source/bucket2 55238-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:00.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:00.961" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:00.961" starttime="20201103 17:10:56.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:00.962" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:11:00.962" starttime="20201103 17:11:00.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:00.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:00.963" starttime="20201103 17:11:00.962"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:00.963" starttime="20201103 17:10:56.981"></status>
</kw>
<msg timestamp="20201103 17:11:00.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:00.963" starttime="20201103 17:10:56.981"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:00.964" starttime="20201103 17:10:56.981"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:00.968" level="INFO">Running command 'ozone sh bucket create 55238-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:04.725" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 17:11:04.725" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:04.725" starttime="20201103 17:11:00.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:04.726" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201103 17:11:04.726" starttime="20201103 17:11:04.725"></status>
</kw>
<msg timestamp="20201103 17:11:04.727" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:04.727" starttime="20201103 17:11:00.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201103 17:11:04.727" starttime="20201103 17:11:04.727"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:04.731" level="INFO">Running command 'ozone sh bucket create 55238-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:08.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:08.834" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:08.834" starttime="20201103 17:11:04.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:08.835" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:11:08.835" starttime="20201103 17:11:08.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:08.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:08.836" starttime="20201103 17:11:08.835"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:08.836" starttime="20201103 17:11:04.728"></status>
</kw>
<msg timestamp="20201103 17:11:08.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:08.836" starttime="20201103 17:11:04.728"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:08.837" starttime="20201103 17:11:04.727"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:08.839" level="INFO">Running command 'ozone sh bucket link 55238-source/bucket1 55238-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:12.740" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 17:11:12.740" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:12.740" starttime="20201103 17:11:08.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.741" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201103 17:11:12.741" starttime="20201103 17:11:12.740"></status>
</kw>
<msg timestamp="20201103 17:11:12.742" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:12.742" starttime="20201103 17:11:08.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201103 17:11:12.742" starttime="20201103 17:11:12.742"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:11:12.743" critical="yes" starttime="20201103 17:10:56.949"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:12.752" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:12.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:12.755" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:11:12.755" starttime="20201103 17:11:12.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.759" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:11:12.759" starttime="20201103 17:11:12.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:12.766" starttime="20201103 17:11:12.759"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.766" starttime="20201103 17:11:12.746"></status>
</kw>
<msg timestamp="20201103 17:11:12.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:12.766" starttime="20201103 17:11:12.745"></status>
</kw>
<msg timestamp="20201103 17:11:12.767" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:11:12.767" starttime="20201103 17:11:12.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:11:12.767" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:11:12.767" starttime="20201103 17:11:12.767"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:12.773" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:12.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:12.789" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:12.789" starttime="20201103 17:11:12.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.790" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:12.790" starttime="20201103 17:11:12.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:12.791" starttime="20201103 17:11:12.790"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.791" starttime="20201103 17:11:12.769"></status>
</kw>
<msg timestamp="20201103 17:11:12.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:12.791" starttime="20201103 17:11:12.769"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.791" starttime="20201103 17:11:12.768"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.792" starttime="20201103 17:11:12.768"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.792" starttime="20201103 17:11:12.744"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.792" starttime="20201103 17:11:12.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:12.797" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:12.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:12.801" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:12.801" starttime="20201103 17:11:12.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.802" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:12.802" starttime="20201103 17:11:12.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:12.803" starttime="20201103 17:11:12.803"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.803" starttime="20201103 17:11:12.794"></status>
</kw>
<msg timestamp="20201103 17:11:12.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:12.804" starttime="20201103 17:11:12.794"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.804" starttime="20201103 17:11:12.793"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:12.808" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:12.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:12.812" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:11:12.812" starttime="20201103 17:11:12.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.813" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:11:12.813" starttime="20201103 17:11:12.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:12.814" starttime="20201103 17:11:12.814"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.815" starttime="20201103 17:11:12.805"></status>
</kw>
<msg timestamp="20201103 17:11:12.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:12.815" starttime="20201103 17:11:12.805"></status>
</kw>
<msg timestamp="20201103 17:11:12.815" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:11:12.815" starttime="20201103 17:11:12.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:11:12.816" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:11:12.816" starttime="20201103 17:11:12.815"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:12.820" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:12.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:12.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:12.830" starttime="20201103 17:11:12.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.831" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:12.831" starttime="20201103 17:11:12.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:12.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:12.833" starttime="20201103 17:11:12.831"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.833" starttime="20201103 17:11:12.817"></status>
</kw>
<msg timestamp="20201103 17:11:12.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:12.833" starttime="20201103 17:11:12.817"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.833" starttime="20201103 17:11:12.816"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.834" starttime="20201103 17:11:12.816"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.834" starttime="20201103 17:11:12.804"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:12.834" starttime="20201103 17:11:12.804"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:12.837" level="INFO">Running command 'ozone sh key list 55238-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:16.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:16.615" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:16.615" starttime="20201103 17:11:12.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.616" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "55238-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-03T17:08:48.337Z",
  "modificationTime" : "2020-11-03T17:08:52.582Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201103 17:11:16.616" starttime="20201103 17:11:16.615"></status>
</kw>
<msg timestamp="20201103 17:11:16.616" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:16.616" starttime="20201103 17:11:12.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 17:11:16.617" starttime="20201103 17:11:16.616"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.617" starttime="20201103 17:11:12.792"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.617" starttime="20201103 17:11:12.792"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:11:16.617" critical="yes" starttime="20201103 17:11:12.743"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:16.624" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:16.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:16.629" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:11:16.629" starttime="20201103 17:11:16.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.629" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:11:16.630" starttime="20201103 17:11:16.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:16.630" starttime="20201103 17:11:16.630"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.630" starttime="20201103 17:11:16.621"></status>
</kw>
<msg timestamp="20201103 17:11:16.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:16.631" starttime="20201103 17:11:16.621"></status>
</kw>
<msg timestamp="20201103 17:11:16.631" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:11:16.631" starttime="20201103 17:11:16.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:11:16.632" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:11:16.632" starttime="20201103 17:11:16.631"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:16.636" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:16.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:16.648" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:16.648" starttime="20201103 17:11:16.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.649" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:16.650" starttime="20201103 17:11:16.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:16.650" starttime="20201103 17:11:16.650"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.650" starttime="20201103 17:11:16.633"></status>
</kw>
<msg timestamp="20201103 17:11:16.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:16.651" starttime="20201103 17:11:16.633"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.651" starttime="20201103 17:11:16.632"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.651" starttime="20201103 17:11:16.632"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.651" starttime="20201103 17:11:16.619"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.651" starttime="20201103 17:11:16.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:16.656" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:16.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:16.660" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:16.660" starttime="20201103 17:11:16.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.661" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:16.661" starttime="20201103 17:11:16.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:16.661" starttime="20201103 17:11:16.661"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.662" starttime="20201103 17:11:16.653"></status>
</kw>
<msg timestamp="20201103 17:11:16.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:16.662" starttime="20201103 17:11:16.653"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.663" starttime="20201103 17:11:16.652"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:16.668" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:16.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:16.669" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:11:16.669" starttime="20201103 17:11:16.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.670" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:11:16.670" starttime="20201103 17:11:16.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:16.671" starttime="20201103 17:11:16.670"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.671" starttime="20201103 17:11:16.664"></status>
</kw>
<msg timestamp="20201103 17:11:16.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:16.671" starttime="20201103 17:11:16.664"></status>
</kw>
<msg timestamp="20201103 17:11:16.671" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:11:16.671" starttime="20201103 17:11:16.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:11:16.672" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:11:16.672" starttime="20201103 17:11:16.671"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:16.677" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:16.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:16.686" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:16.687" starttime="20201103 17:11:16.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.687" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:16.688" starttime="20201103 17:11:16.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:16.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:16.688" starttime="20201103 17:11:16.688"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.689" starttime="20201103 17:11:16.674"></status>
</kw>
<msg timestamp="20201103 17:11:16.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:16.689" starttime="20201103 17:11:16.673"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.689" starttime="20201103 17:11:16.673"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.689" starttime="20201103 17:11:16.672"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.689" starttime="20201103 17:11:16.663"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:16.689" starttime="20201103 17:11:16.663"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:16.693" level="INFO">Running command 'ozone sh key list 55238-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:20.174" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 17:11:20.174" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:20.175" starttime="20201103 17:11:16.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.176" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201103 17:11:20.176" starttime="20201103 17:11:20.175"></status>
</kw>
<msg timestamp="20201103 17:11:20.176" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:20.176" starttime="20201103 17:11:16.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201103 17:11:20.177" starttime="20201103 17:11:20.176"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.177" starttime="20201103 17:11:16.652"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.177" starttime="20201103 17:11:16.651"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:11:20.177" critical="yes" starttime="20201103 17:11:16.618"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:20.184" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:20.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:20.189" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:11:20.190" starttime="20201103 17:11:20.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.191" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:11:20.191" starttime="20201103 17:11:20.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:20.192" starttime="20201103 17:11:20.191"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.193" starttime="20201103 17:11:20.180"></status>
</kw>
<msg timestamp="20201103 17:11:20.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:20.193" starttime="20201103 17:11:20.180"></status>
</kw>
<msg timestamp="20201103 17:11:20.193" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:11:20.194" starttime="20201103 17:11:20.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:11:20.195" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:11:20.195" starttime="20201103 17:11:20.194"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:20.202" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:20.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:20.213" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:20.213" starttime="20201103 17:11:20.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.214" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:20.214" starttime="20201103 17:11:20.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:20.215" starttime="20201103 17:11:20.215"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.215" starttime="20201103 17:11:20.197"></status>
</kw>
<msg timestamp="20201103 17:11:20.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:20.216" starttime="20201103 17:11:20.197"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.216" starttime="20201103 17:11:20.196"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.216" starttime="20201103 17:11:20.195"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.216" starttime="20201103 17:11:20.179"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.216" starttime="20201103 17:11:20.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:20.221" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:20.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:20.226" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:20.226" starttime="20201103 17:11:20.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.227" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:20.227" starttime="20201103 17:11:20.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:20.227" starttime="20201103 17:11:20.227"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.227" starttime="20201103 17:11:20.218"></status>
</kw>
<msg timestamp="20201103 17:11:20.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:20.228" starttime="20201103 17:11:20.218"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.228" starttime="20201103 17:11:20.217"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:20.232" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:20.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:20.235" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:11:20.235" starttime="20201103 17:11:20.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.236" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:11:20.236" starttime="20201103 17:11:20.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:20.237" starttime="20201103 17:11:20.236"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.237" starttime="20201103 17:11:20.230"></status>
</kw>
<msg timestamp="20201103 17:11:20.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:20.237" starttime="20201103 17:11:20.229"></status>
</kw>
<msg timestamp="20201103 17:11:20.238" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:11:20.238" starttime="20201103 17:11:20.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:11:20.238" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:11:20.238" starttime="20201103 17:11:20.238"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:20.243" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:20.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:20.252" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:20.252" starttime="20201103 17:11:20.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.253" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:20.253" starttime="20201103 17:11:20.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:20.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:20.254" starttime="20201103 17:11:20.253"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.254" starttime="20201103 17:11:20.240"></status>
</kw>
<msg timestamp="20201103 17:11:20.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:20.254" starttime="20201103 17:11:20.239"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.255" starttime="20201103 17:11:20.239"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.255" starttime="20201103 17:11:20.238"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.255" starttime="20201103 17:11:20.228"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:20.255" starttime="20201103 17:11:20.228"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:20.261" level="INFO">Running command 'ozone sh bucket info 55238-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:24.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:24.080" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:24.080" starttime="20201103 17:11:20.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:24.081" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:09:07.078Z",
  "modificationTime" : "2020-11-03T17:09:25.730Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 17:11:24.081" starttime="20201103 17:11:24.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:24.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:24.082" starttime="20201103 17:11:24.081"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:24.082" starttime="20201103 17:11:20.256"></status>
</kw>
<msg timestamp="20201103 17:11:24.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:24.082" starttime="20201103 17:11:20.256"></status>
</kw>
<msg timestamp="20201103 17:11:24.083" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:24.083" starttime="20201103 17:11:20.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 17:11:24.083" starttime="20201103 17:11:24.083"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201103 17:11:24.084" starttime="20201103 17:11:24.083"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:24.087" level="INFO">Running command 'ozone sh key list 55238-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:27.549" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 17:11:27.549" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:27.549" starttime="20201103 17:11:24.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:27.550" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201103 17:11:27.550" starttime="20201103 17:11:27.549"></status>
</kw>
<msg timestamp="20201103 17:11:27.551" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:27.551" starttime="20201103 17:11:24.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201103 17:11:27.551" starttime="20201103 17:11:27.551"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:27.551" starttime="20201103 17:11:20.217"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:27.551" starttime="20201103 17:11:20.216"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:11:27.552" critical="yes" starttime="20201103 17:11:20.178"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:27.558" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:27.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:27.560" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:11:27.560" starttime="20201103 17:11:27.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:27.561" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:11:27.562" starttime="20201103 17:11:27.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:27.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:27.562" starttime="20201103 17:11:27.562"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:27.562" starttime="20201103 17:11:27.555"></status>
</kw>
<msg timestamp="20201103 17:11:27.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:27.562" starttime="20201103 17:11:27.555"></status>
</kw>
<msg timestamp="20201103 17:11:27.563" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:11:27.563" starttime="20201103 17:11:27.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:11:27.563" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:11:27.563" starttime="20201103 17:11:27.563"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:27.568" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:27.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:27.578" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:27.578" starttime="20201103 17:11:27.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:27.579" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:27.579" starttime="20201103 17:11:27.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:27.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:27.579" starttime="20201103 17:11:27.579"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:27.580" starttime="20201103 17:11:27.565"></status>
</kw>
<msg timestamp="20201103 17:11:27.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:27.580" starttime="20201103 17:11:27.565"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:27.580" starttime="20201103 17:11:27.564"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:27.581" starttime="20201103 17:11:27.564"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:27.581" starttime="20201103 17:11:27.554"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:27.581" starttime="20201103 17:11:27.553"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:27.585" level="INFO">Running command 'ozone sh bucket link 55238-target/loop1 55238-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:30.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:30.889" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:30.889" starttime="20201103 17:11:27.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:30.891" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:11:30.891" starttime="20201103 17:11:30.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:30.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:30.893" starttime="20201103 17:11:30.891"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:30.894" starttime="20201103 17:11:27.582"></status>
</kw>
<msg timestamp="20201103 17:11:30.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:30.895" starttime="20201103 17:11:27.582"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:30.895" starttime="20201103 17:11:27.581"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:30.903" level="INFO">Running command 'ozone sh bucket link 55238-target/loop2 55238-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:34.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:34.199" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:34.199" starttime="20201103 17:11:30.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:34.200" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:11:34.200" starttime="20201103 17:11:34.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:34.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:34.201" starttime="20201103 17:11:34.200"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:34.201" starttime="20201103 17:11:30.897"></status>
</kw>
<msg timestamp="20201103 17:11:34.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:34.201" starttime="20201103 17:11:30.896"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:34.202" starttime="20201103 17:11:30.895"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:34.207" level="INFO">Running command 'ozone sh bucket link 55238-target/loop3 55238-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:37.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:37.737" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:37.737" starttime="20201103 17:11:34.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:37.738" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:11:37.738" starttime="20201103 17:11:37.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:37.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:37.739" starttime="20201103 17:11:37.738"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:37.739" starttime="20201103 17:11:34.203"></status>
</kw>
<msg timestamp="20201103 17:11:37.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:37.739" starttime="20201103 17:11:34.203"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:37.739" starttime="20201103 17:11:34.202"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:37.743" level="INFO">Running command 'ozone sh key list 55238-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:41.287" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 17:11:41.287" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:41.287" starttime="20201103 17:11:37.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:41.288" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201103 17:11:41.288" starttime="20201103 17:11:41.288"></status>
</kw>
<msg timestamp="20201103 17:11:41.289" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:41.289" starttime="20201103 17:11:37.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201103 17:11:41.290" starttime="20201103 17:11:41.289"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:11:41.290" critical="yes" starttime="20201103 17:11:27.553"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:41.297" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:41.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:41.299" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:11:41.299" starttime="20201103 17:11:41.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:41.300" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:11:41.300" starttime="20201103 17:11:41.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:41.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:41.301" starttime="20201103 17:11:41.301"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:41.301" starttime="20201103 17:11:41.293"></status>
</kw>
<msg timestamp="20201103 17:11:41.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:41.302" starttime="20201103 17:11:41.293"></status>
</kw>
<msg timestamp="20201103 17:11:41.302" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:11:41.302" starttime="20201103 17:11:41.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:11:41.303" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:11:41.303" starttime="20201103 17:11:41.302"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:41.308" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:41.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:41.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:41.337" starttime="20201103 17:11:41.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:41.337" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:41.337" starttime="20201103 17:11:41.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:41.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:41.338" starttime="20201103 17:11:41.338"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:41.338" starttime="20201103 17:11:41.304"></status>
</kw>
<msg timestamp="20201103 17:11:41.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:41.339" starttime="20201103 17:11:41.304"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:41.339" starttime="20201103 17:11:41.303"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:41.339" starttime="20201103 17:11:41.303"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:41.339" starttime="20201103 17:11:41.292"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:41.339" starttime="20201103 17:11:41.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:41.345" level="INFO">Running command 'ozone sh bucket link 55238-source/bucket1 55238-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:45.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:45.035" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:45.035" starttime="20201103 17:11:41.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:45.036" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:11:45.036" starttime="20201103 17:11:45.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:45.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:45.037" starttime="20201103 17:11:45.036"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:45.037" starttime="20201103 17:11:41.340"></status>
</kw>
<msg timestamp="20201103 17:11:45.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:45.037" starttime="20201103 17:11:41.340"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:45.038" starttime="20201103 17:11:41.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:45.042" level="INFO">Running command 'ozone sh key put 55238-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:53.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:53.327" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:53.327" starttime="20201103 17:11:45.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:53.328" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:11:53.328" starttime="20201103 17:11:53.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:53.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:53.330" starttime="20201103 17:11:53.329"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:53.330" starttime="20201103 17:11:45.039"></status>
</kw>
<msg timestamp="20201103 17:11:53.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:53.330" starttime="20201103 17:11:45.039"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:53.330" starttime="20201103 17:11:45.038"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201103 17:11:53.333" level="INFO">${postfix} = 62586</msg>
<status status="PASS" endtime="20201103 17:11:53.333" starttime="20201103 17:11:53.332"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201103 17:11:53.333" level="INFO">${tmpfile} = /tmp/tempkey-62586</msg>
<status status="PASS" endtime="20201103 17:11:53.333" starttime="20201103 17:11:53.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:53.338" level="INFO">Running command 'ozone sh key get -f 55238-target/link1/key3 /tmp/tempkey-62586 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:58.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:58.439" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:11:58.439" starttime="20201103 17:11:53.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:58.441" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:11:58.441" starttime="20201103 17:11:58.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:58.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:58.441" starttime="20201103 17:11:58.441"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.441" starttime="20201103 17:11:53.334"></status>
</kw>
<msg timestamp="20201103 17:11:58.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:58.442" starttime="20201103 17:11:53.334"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.442" starttime="20201103 17:11:53.333"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201103 17:11:58.445" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-62586 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:58.447" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201103 17:11:58.447" starttime="20201103 17:11:58.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:58.451" level="INFO">Running command 'rm -f /tmp/tempkey-62586 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:58.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:58.453" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:58.453" starttime="20201103 17:11:58.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:58.454" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:58.454" starttime="20201103 17:11:58.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:58.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:58.454" starttime="20201103 17:11:58.454"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.454" starttime="20201103 17:11:58.448"></status>
</kw>
<msg timestamp="20201103 17:11:58.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:58.455" starttime="20201103 17:11:58.448"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.455" starttime="20201103 17:11:58.447"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 17:11:58.455" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201103 17:11:58.455" starttime="20201103 17:11:58.455"></status>
</kw>
<msg timestamp="20201103 17:11:58.456" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201103 17:11:58.456" starttime="20201103 17:11:53.331"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201103 17:11:58.456" starttime="20201103 17:11:58.456"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.457" starttime="20201103 17:11:53.331"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:11:58.457" critical="yes" starttime="20201103 17:11:41.291"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:58.463" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:58.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:58.464" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 17:11:58.464" starttime="20201103 17:11:58.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:58.465" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 17:11:58.465" starttime="20201103 17:11:58.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:58.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:58.466" starttime="20201103 17:11:58.465"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.466" starttime="20201103 17:11:58.460"></status>
</kw>
<msg timestamp="20201103 17:11:58.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:58.467" starttime="20201103 17:11:58.459"></status>
</kw>
<msg timestamp="20201103 17:11:58.467" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 17:11:58.467" starttime="20201103 17:11:58.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 17:11:58.467" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 17:11:58.467" starttime="20201103 17:11:58.467"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:58.472" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:11:58.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:11:58.483" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 17:11:58.483" starttime="20201103 17:11:58.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:11:58.484" level="INFO"></msg>
<status status="PASS" endtime="20201103 17:11:58.484" starttime="20201103 17:11:58.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:11:58.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:11:58.485" starttime="20201103 17:11:58.485"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.487" starttime="20201103 17:11:58.469"></status>
</kw>
<msg timestamp="20201103 17:11:58.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:11:58.487" starttime="20201103 17:11:58.468"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.487" starttime="20201103 17:11:58.468"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.487" starttime="20201103 17:11:58.468"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.487" starttime="20201103 17:11:58.459"></status>
</kw>
<status status="PASS" endtime="20201103 17:11:58.487" starttime="20201103 17:11:58.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:11:58.492" level="INFO">Running command 'ozone sh bucket delete 55238-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:12:02.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:12:02.156" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:12:02.156" starttime="20201103 17:11:58.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:12:02.157" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 17:12:02.157" starttime="20201103 17:12:02.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:12:02.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:12:02.158" starttime="20201103 17:12:02.157"></status>
</kw>
<status status="PASS" endtime="20201103 17:12:02.158" starttime="20201103 17:11:58.488"></status>
</kw>
<msg timestamp="20201103 17:12:02.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:12:02.158" starttime="20201103 17:11:58.488"></status>
</kw>
<status status="PASS" endtime="20201103 17:12:02.159" starttime="20201103 17:11:58.488"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:12:02.163" level="INFO">Running command 'ozone sh bucket list 55238-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:12:05.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:12:05.733" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:12:05.733" starttime="20201103 17:12:02.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:12:05.734" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:11:08.622Z",
  "modificationTime" : "2020-11-03T17:11:08.622Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:09:29.387Z",
  "modificationTime" : "2020-11-03T17:09:29.387Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:09:07.078Z",
  "modificationTime" : "2020-11-03T17:09:25.730Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:11:00.729Z",
  "modificationTime" : "2020-11-03T17:11:00.729Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:11:44.905Z",
  "modificationTime" : "2020-11-03T17:11:44.905Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:11:37.551Z",
  "modificationTime" : "2020-11-03T17:11:37.551Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:11:30.818Z",
  "modificationTime" : "2020-11-03T17:11:30.818Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:11:34.117Z",
  "modificationTime" : "2020-11-03T17:11:34.117Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:08:59.948Z",
  "modificationTime" : "2020-11-03T17:09:22.215Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "55238-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T17:09:03.418Z",
  "modificationTime" : "2020-11-03T17:09:03.418Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "55238-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 17:12:05.734" starttime="20201103 17:12:05.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:12:05.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:12:05.735" starttime="20201103 17:12:05.734"></status>
</kw>
<status status="PASS" endtime="20201103 17:12:05.735" starttime="20201103 17:12:02.160"></status>
</kw>
<msg timestamp="20201103 17:12:05.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:12:05.735" starttime="20201103 17:12:02.159"></status>
</kw>
<msg timestamp="20201103 17:12:05.736" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 17:12:05.736" starttime="20201103 17:12:02.159"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201103 17:12:05.737" starttime="20201103 17:12:05.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 17:12:05.742" level="INFO">Running command 'ozone sh key list 55238-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 17:12:09.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 17:12:09.366" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201103 17:12:09.366" starttime="20201103 17:12:05.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 17:12:09.367" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201103 17:12:09.367" starttime="20201103 17:12:09.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 17:12:09.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 17:12:09.368" starttime="20201103 17:12:09.367"></status>
</kw>
<status status="PASS" endtime="20201103 17:12:09.368" starttime="20201103 17:12:05.738"></status>
</kw>
<msg timestamp="20201103 17:12:09.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 17:12:09.368" starttime="20201103 17:12:05.737"></status>
</kw>
<msg timestamp="20201103 17:12:09.369" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201103 17:12:09.369" starttime="20201103 17:12:05.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201103 17:12:09.369" starttime="20201103 17:12:09.369"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 17:12:09.369" critical="yes" starttime="20201103 17:11:58.457"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201103 17:12:09.372" starttime="20201103 17:08:33.123"></status>
</suite>
<status status="PASS" elapsedtime="249128" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
