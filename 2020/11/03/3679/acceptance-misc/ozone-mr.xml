<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201103 05:23:38.990" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:08:30.504" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:08:33.710" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 05:08:33.710" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 05:08:33.710" starttime="20201103 05:08:30.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:08:33.711" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 05:08:33.711" starttime="20201103 05:08:33.711"></status>
</kw>
<msg timestamp="20201103 05:08:33.712" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 05:08:33.712" starttime="20201103 05:08:30.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:08:33.719" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:08:36.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:08:36.201" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:08:36.202" starttime="20201103 05:08:33.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:08:36.203" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:08:36.203" starttime="20201103 05:08:36.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:08:36.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:08:36.204" starttime="20201103 05:08:36.203"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:36.204" starttime="20201103 05:08:33.715"></status>
</kw>
<msg timestamp="20201103 05:08:36.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:08:36.204" starttime="20201103 05:08:33.714"></status>
</kw>
<msg timestamp="20201103 05:08:36.204" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201103 05:08:36.204" starttime="20201103 05:08:33.713"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 05:08:36.205" starttime="20201103 05:08:36.205"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:36.205" starttime="20201103 05:08:33.713"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:36.205" starttime="20201103 05:08:33.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:08:36.212" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:08:38.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:08:38.396" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:08:38.397" starttime="20201103 05:08:36.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:08:38.398" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:08:38.398" starttime="20201103 05:08:38.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:08:38.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:08:38.399" starttime="20201103 05:08:38.398"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:38.399" starttime="20201103 05:08:36.209"></status>
</kw>
<msg timestamp="20201103 05:08:38.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:08:38.399" starttime="20201103 05:08:36.208"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:38.399" starttime="20201103 05:08:36.208"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:38.400" starttime="20201103 05:08:36.207"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:38.400" starttime="20201103 05:08:36.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 05:08:38.400" starttime="20201103 05:08:38.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:08:38.405" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:08:40.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:08:40.948" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:08:38.361Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 05:08:40.948" starttime="20201103 05:08:38.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:08:40.949" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:08:38.361Z",
  "modificationTime" : "2020-11-03T05:08:38.361Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 05:08:40.950" starttime="20201103 05:08:40.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:08:40.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:08:40.951" starttime="20201103 05:08:40.950"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:40.951" starttime="20201103 05:08:38.402"></status>
</kw>
<msg timestamp="20201103 05:08:40.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:08:40.951" starttime="20201103 05:08:38.401"></status>
</kw>
<msg timestamp="20201103 05:08:40.952" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:08:38.361Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 05:08:40.952" starttime="20201103 05:08:38.400"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 05:08:40.952" starttime="20201103 05:08:40.952"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:08:40.957" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:08:40.957" starttime="20201103 05:08:40.956"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:08:40.958" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:08:40.958" starttime="20201103 05:08:40.957"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:40.958" starttime="20201103 05:08:40.956"></status>
</kw>
<msg timestamp="20201103 05:08:40.958" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:08:40.958" starttime="20201103 05:08:40.955"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:40.958" starttime="20201103 05:08:40.954"></status>
</kw>
<msg timestamp="20201103 05:08:40.959" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 05:08:40.959" starttime="20201103 05:08:40.953"></status>
</kw>
<msg timestamp="20201103 05:08:40.959" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 05:08:40.959" starttime="20201103 05:08:40.952"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:08:40.965" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:08:43.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:08:43.195" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:08:43.195" starttime="20201103 05:08:40.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:08:43.197" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:08:43.197" starttime="20201103 05:08:43.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:08:43.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:08:43.197" starttime="20201103 05:08:43.197"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:43.198" starttime="20201103 05:08:40.960"></status>
</kw>
<msg timestamp="20201103 05:08:43.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:08:43.198" starttime="20201103 05:08:40.960"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:43.198" starttime="20201103 05:08:40.959"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:08:43.202" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:08:49.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:08:49.054" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:08:49.054" starttime="20201103 05:08:43.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:08:49.055" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:08:49.055" starttime="20201103 05:08:49.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:08:49.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:08:49.056" starttime="20201103 05:08:49.055"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:49.056" starttime="20201103 05:08:43.200"></status>
</kw>
<msg timestamp="20201103 05:08:49.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:08:49.057" starttime="20201103 05:08:43.199"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:49.057" starttime="20201103 05:08:43.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:08:49.061" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:08:53.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:08:53.380" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:08:53.380" starttime="20201103 05:08:49.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:08:53.381" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:08:53.381" starttime="20201103 05:08:53.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:08:53.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:08:53.382" starttime="20201103 05:08:53.382"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:53.382" starttime="20201103 05:08:49.058"></status>
</kw>
<msg timestamp="20201103 05:08:53.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:08:53.383" starttime="20201103 05:08:49.058"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:53.383" starttime="20201103 05:08:49.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:08:53.389" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:08:58.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:08:58.003" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:08:58.003" starttime="20201103 05:08:53.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:08:58.005" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:08:58.005" starttime="20201103 05:08:58.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:08:58.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:08:58.006" starttime="20201103 05:08:58.005"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:58.006" starttime="20201103 05:08:53.384"></status>
</kw>
<msg timestamp="20201103 05:08:58.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:08:58.007" starttime="20201103 05:08:53.384"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:58.007" starttime="20201103 05:08:53.383"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:08:58.007" critical="yes" starttime="20201103 05:08:30.497"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:08:58.016" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:08:58.016" starttime="20201103 05:08:58.015"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:08:58.017" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:08:58.017" starttime="20201103 05:08:58.016"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:58.017" starttime="20201103 05:08:58.014"></status>
</kw>
<msg timestamp="20201103 05:08:58.017" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:08:58.017" starttime="20201103 05:08:58.014"></status>
</kw>
<status status="PASS" endtime="20201103 05:08:58.018" starttime="20201103 05:08:58.013"></status>
</kw>
<msg timestamp="20201103 05:08:58.018" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:08:58.018" starttime="20201103 05:08:58.012"></status>
</kw>
<msg timestamp="20201103 05:08:58.018" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:08:58.018" starttime="20201103 05:08:58.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:08:58.023" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:09:00.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:09:00.385" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:09:00.385" starttime="20201103 05:08:58.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:09:00.386" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:09:00.386" starttime="20201103 05:09:00.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:09:00.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:09:00.387" starttime="20201103 05:09:00.386"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:00.387" starttime="20201103 05:08:58.020"></status>
</kw>
<msg timestamp="20201103 05:09:00.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:09:00.388" starttime="20201103 05:08:58.019"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:00.388" starttime="20201103 05:08:58.019"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:09:00.392" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:09:02.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:09:02.960" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:09:02.960" starttime="20201103 05:09:00.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:09:02.961" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:09:02.962" starttime="20201103 05:09:02.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:09:02.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:09:02.962" starttime="20201103 05:09:02.962"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:02.963" starttime="20201103 05:09:00.389"></status>
</kw>
<msg timestamp="20201103 05:09:02.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:09:02.963" starttime="20201103 05:09:00.389"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:02.963" starttime="20201103 05:09:00.388"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:09:02.963" critical="yes" starttime="20201103 05:08:58.008"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201103 05:09:02.966" starttime="20201103 05:08:30.430"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:10:46.698" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:10:46.698" starttime="20201103 05:10:46.698"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:10:46.699" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:10:46.699" starttime="20201103 05:10:46.698"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:46.699" starttime="20201103 05:10:46.697"></status>
</kw>
<msg timestamp="20201103 05:10:46.699" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:10:46.699" starttime="20201103 05:10:46.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:10:46.701" starttime="20201103 05:10:46.700"></status>
</kw>
<msg timestamp="20201103 05:10:46.701" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 05:10:46.701" starttime="20201103 05:10:46.700"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:46.701" starttime="20201103 05:10:46.696"></status>
</kw>
<msg timestamp="20201103 05:10:46.701" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:10:46.701" starttime="20201103 05:10:46.695"></status>
</kw>
<msg timestamp="20201103 05:10:46.702" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:10:46.702" starttime="20201103 05:10:46.694"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:10:46.702" level="INFO">${random} = 56447</msg>
<status status="PASS" endtime="20201103 05:10:46.702" starttime="20201103 05:10:46.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:10:46.709" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-56447 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:10:50.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:10:50.576" level="INFO">${output} = 2020-11-03 05:10:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:10:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 05:10:50.576" starttime="20201103 05:10:46.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:10:50.577" level="INFO">2020-11-03 05:10:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:10:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 05:10:48 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 05:10:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:10:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-30B59282BB2D-&gt;a6addf77-5936-4002-9a79-d23186d70bc9
2020-11-03 05:10:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 05:10:50.577" starttime="20201103 05:10:50.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:10:50.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:10:50.578" starttime="20201103 05:10:50.577"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:50.578" starttime="20201103 05:10:46.703"></status>
</kw>
<msg timestamp="20201103 05:10:50.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:10:50.578" starttime="20201103 05:10:46.703"></status>
</kw>
<msg timestamp="20201103 05:10:50.579" level="INFO">${result} = 2020-11-03 05:10:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:10:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 05:10:50.579" starttime="20201103 05:10:46.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:10:50.584" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:10:52.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:10:52.544" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 05:09 ofs://om/volume1/bucket1/ozone-16464
-rw-...</msg>
<status status="PASS" endtime="20201103 05:10:52.544" starttime="20201103 05:10:50.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:10:52.545" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 05:09 ofs://om/volume1/bucket1/ozone-16464
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 05:10 ofs://om/volume1/bucket1/ozone-56447
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:09 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:10 ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201103 05:10:52.545" starttime="20201103 05:10:52.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:10:52.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:10:52.546" starttime="20201103 05:10:52.545"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:52.546" starttime="20201103 05:10:50.580"></status>
</kw>
<msg timestamp="20201103 05:10:52.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:10:52.547" starttime="20201103 05:10:50.579"></status>
</kw>
<msg timestamp="20201103 05:10:52.547" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 05:09 ofs://om/volume1/bucket1/ozone-16464
-rw-...</msg>
<status status="PASS" endtime="20201103 05:10:52.547" starttime="20201103 05:10:50.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:10:52.548" starttime="20201103 05:10:52.547"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:10:52.548" critical="yes" starttime="20201103 05:10:46.693"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 05:10:52.549" starttime="20201103 05:10:46.631"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:09:08.291" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:09:08.292" starttime="20201103 05:09:08.291"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:09:08.292" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:09:08.292" starttime="20201103 05:09:08.292"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:08.293" starttime="20201103 05:09:08.291"></status>
</kw>
<msg timestamp="20201103 05:09:08.293" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:09:08.293" starttime="20201103 05:09:08.290"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:08.293" starttime="20201103 05:09:08.290"></status>
</kw>
<msg timestamp="20201103 05:09:08.293" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:09:08.293" starttime="20201103 05:09:08.289"></status>
</kw>
<msg timestamp="20201103 05:09:08.293" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:09:08.293" starttime="20201103 05:09:08.288"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:09:08.294" level="INFO">${random} = 16464</msg>
<status status="PASS" endtime="20201103 05:09:08.294" starttime="20201103 05:09:08.294"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:09:08.301" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-16464 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:09:12.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:09:12.248" level="INFO">${output} = 2020-11-03 05:09:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:09:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 05:09:12.248" starttime="20201103 05:09:08.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:09:12.249" level="INFO">2020-11-03 05:09:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:09:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 05:09:10 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 05:09:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:09:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CA9EA920E8BE-&gt;a6addf77-5936-4002-9a79-d23186d70bc9
2020-11-03 05:09:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 05:09:12.250" starttime="20201103 05:09:12.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:09:12.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:09:12.250" starttime="20201103 05:09:12.250"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:12.250" starttime="20201103 05:09:08.295"></status>
</kw>
<msg timestamp="20201103 05:09:12.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:09:12.251" starttime="20201103 05:09:08.295"></status>
</kw>
<msg timestamp="20201103 05:09:12.251" level="INFO">${result} = 2020-11-03 05:09:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:09:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 ...</msg>
<status status="PASS" endtime="20201103 05:09:12.251" starttime="20201103 05:09:08.294"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:09:12.254" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:09:14.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:09:14.225" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 05:09 o3fs://bucket1.volume1.om/ozone-16464
dr...</msg>
<status status="PASS" endtime="20201103 05:09:14.226" starttime="20201103 05:09:12.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:09:14.227" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 05:09 o3fs://bucket1.volume1.om/ozone-16464
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:09 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:09:14.227" starttime="20201103 05:09:14.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:09:14.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:09:14.227" starttime="20201103 05:09:14.227"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:14.228" starttime="20201103 05:09:12.252"></status>
</kw>
<msg timestamp="20201103 05:09:14.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:09:14.228" starttime="20201103 05:09:12.252"></status>
</kw>
<msg timestamp="20201103 05:09:14.228" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-03 05:09 o3fs://bucket1.volume1.om/ozone-16464
dr...</msg>
<status status="PASS" endtime="20201103 05:09:14.228" starttime="20201103 05:09:12.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:09:14.229" starttime="20201103 05:09:14.228"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:09:14.229" critical="yes" starttime="20201103 05:09:08.287"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 05:09:14.230" starttime="20201103 05:09:08.227"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:10:57.615" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:10:57.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:10:57.620" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:10:57.620" starttime="20201103 05:10:57.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:10:57.621" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:10:57.621" starttime="20201103 05:10:57.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:10:57.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:10:57.622" starttime="20201103 05:10:57.622"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:57.623" starttime="20201103 05:10:57.610"></status>
</kw>
<msg timestamp="20201103 05:10:57.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:10:57.623" starttime="20201103 05:10:57.609"></status>
</kw>
<msg timestamp="20201103 05:10:57.623" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:10:57.623" starttime="20201103 05:10:57.609"></status>
</kw>
<msg timestamp="20201103 05:10:57.623" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:10:57.623" starttime="20201103 05:10:57.609"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:10:57.627" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:10:57.627" starttime="20201103 05:10:57.626"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:10:57.628" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:10:57.628" starttime="20201103 05:10:57.627"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:57.628" starttime="20201103 05:10:57.626"></status>
</kw>
<msg timestamp="20201103 05:10:57.628" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:10:57.628" starttime="20201103 05:10:57.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:10:57.630" starttime="20201103 05:10:57.629"></status>
</kw>
<msg timestamp="20201103 05:10:57.630" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 05:10:57.630" starttime="20201103 05:10:57.629"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:57.630" starttime="20201103 05:10:57.625"></status>
</kw>
<msg timestamp="20201103 05:10:57.630" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:10:57.630" starttime="20201103 05:10:57.624"></status>
</kw>
<msg timestamp="20201103 05:10:57.630" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:10:57.630" starttime="20201103 05:10:57.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:10:57.635" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:11:36.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:11:36.061" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:10:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:10:59 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 05:11:36.061" starttime="20201103 05:10:57.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:11:36.062" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:10:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:10:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 05:10:59 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 05:11:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:11:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E54406828407-&gt;a6addf77-5936-4002-9a79-d23186d70bc9
2020-11-03 05:11:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 05:11:01 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-03 05:11:01 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 05:11:01 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 05:11:01 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 05:11:01 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604380076673_0003
2020-11-03 05:11:02 INFO  YarnClientImpl:273 - Submitted application application_1604380076673_0003
2020-11-03 05:11:02 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604380076673_0003/
2020-11-03 05:11:02 INFO  Job:1339 - Running job: job_1604380076673_0003
2020-11-03 05:11:11 INFO  Job:1360 - Job job_1604380076673_0003 running in uber mode : false
2020-11-03 05:11:11 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 05:11:18 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 05:11:23 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 05:11:27 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 05:11:34 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 05:11:35 INFO  Job:1378 - Job job_1604380076673_0003 completed successfully
2020-11-03 05:11:35 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44240
		Total time spent by all reduces in occupied slots (ms)=26152
		Total time spent by all map tasks (ms)=11060
		Total time spent by all reduce tasks (ms)=6538
		Total vcore-milliseconds taken by all map tasks=11060
		Total vcore-milliseconds taken by all reduce tasks=6538
		Total megabyte-milliseconds taken by all map tasks=45301760
		Total megabyte-milliseconds taken by all reduce tasks=26779648
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=666
		CPU time spent (ms)=7570
		Physical memory (bytes) snapshot=1123450880
		Virtual memory (bytes) snapshot=16055181312
		Total committed heap usage (bytes)=1010302976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.487 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 05:11:36.062" starttime="20201103 05:11:36.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:11:36.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:11:36.063" starttime="20201103 05:11:36.062"></status>
</kw>
<status status="PASS" endtime="20201103 05:11:36.063" starttime="20201103 05:10:57.631"></status>
</kw>
<msg timestamp="20201103 05:11:36.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:11:36.063" starttime="20201103 05:10:57.631"></status>
</kw>
<msg timestamp="20201103 05:11:36.064" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:10:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:10:59 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 05:11:36.064" starttime="20201103 05:10:57.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:11:36.065" starttime="20201103 05:11:36.064"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:11:36.065" critical="yes" starttime="20201103 05:10:57.608"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:11:36.069" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:11:36.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:11:36.074" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:11:36.075" starttime="20201103 05:11:36.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:11:36.076" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:11:36.076" starttime="20201103 05:11:36.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:11:36.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:11:36.077" starttime="20201103 05:11:36.076"></status>
</kw>
<status status="PASS" endtime="20201103 05:11:36.077" starttime="20201103 05:11:36.067"></status>
</kw>
<msg timestamp="20201103 05:11:36.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:11:36.077" starttime="20201103 05:11:36.067"></status>
</kw>
<msg timestamp="20201103 05:11:36.077" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:11:36.077" starttime="20201103 05:11:36.066"></status>
</kw>
<msg timestamp="20201103 05:11:36.078" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:11:36.078" starttime="20201103 05:11:36.066"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:11:36.078" level="INFO">${random} = 26</msg>
<status status="PASS" endtime="20201103 05:11:36.078" starttime="20201103 05:11:36.078"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:11:36.082" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:11:36.082" starttime="20201103 05:11:36.082"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:11:36.083" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:11:36.083" starttime="20201103 05:11:36.083"></status>
</kw>
<status status="PASS" endtime="20201103 05:11:36.083" starttime="20201103 05:11:36.081"></status>
</kw>
<msg timestamp="20201103 05:11:36.083" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:11:36.083" starttime="20201103 05:11:36.081"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:11:36.085" starttime="20201103 05:11:36.085"></status>
</kw>
<msg timestamp="20201103 05:11:36.085" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 05:11:36.085" starttime="20201103 05:11:36.084"></status>
</kw>
<status status="PASS" endtime="20201103 05:11:36.085" starttime="20201103 05:11:36.080"></status>
</kw>
<msg timestamp="20201103 05:11:36.086" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:11:36.086" starttime="20201103 05:11:36.079"></status>
</kw>
<msg timestamp="20201103 05:11:36.086" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:11:36.086" starttime="20201103 05:11:36.079"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:11:36.089" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:11:36.089" starttime="20201103 05:11:36.089"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:11:36.090" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:11:36.090" starttime="20201103 05:11:36.089"></status>
</kw>
<status status="PASS" endtime="20201103 05:11:36.091" starttime="20201103 05:11:36.088"></status>
</kw>
<msg timestamp="20201103 05:11:36.091" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:11:36.091" starttime="20201103 05:11:36.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:11:36.093" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201103 05:11:36.093" starttime="20201103 05:11:36.092"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:11:36.093" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201103 05:11:36.093" starttime="20201103 05:11:36.093"></status>
</kw>
<status status="PASS" endtime="20201103 05:11:36.093" starttime="20201103 05:11:36.092"></status>
</kw>
<msg timestamp="20201103 05:11:36.094" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201103 05:11:36.094" starttime="20201103 05:11:36.091"></status>
</kw>
<status status="PASS" endtime="20201103 05:11:36.094" starttime="20201103 05:11:36.087"></status>
</kw>
<msg timestamp="20201103 05:11:36.094" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 05:11:36.094" starttime="20201103 05:11:36.087"></status>
</kw>
<msg timestamp="20201103 05:11:36.094" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 05:11:36.094" starttime="20201103 05:11:36.086"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:11:36.097" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:11:36.097" starttime="20201103 05:11:36.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:11:36.098" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:11:36.098" starttime="20201103 05:11:36.098"></status>
</kw>
<status status="PASS" endtime="20201103 05:11:36.098" starttime="20201103 05:11:36.096"></status>
</kw>
<msg timestamp="20201103 05:11:36.098" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:11:36.098" starttime="20201103 05:11:36.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:11:36.100" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201103 05:11:36.100" starttime="20201103 05:11:36.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:11:36.100" level="INFO">${result} = /wordcount-26.txt</msg>
<status status="PASS" endtime="20201103 05:11:36.100" starttime="20201103 05:11:36.100"></status>
</kw>
<status status="PASS" endtime="20201103 05:11:36.100" starttime="20201103 05:11:36.099"></status>
</kw>
<msg timestamp="20201103 05:11:36.100" level="INFO">${path_with_leading} = /wordcount-26.txt</msg>
<status status="PASS" endtime="20201103 05:11:36.101" starttime="20201103 05:11:36.098"></status>
</kw>
<status status="PASS" endtime="20201103 05:11:36.101" starttime="20201103 05:11:36.095"></status>
</kw>
<msg timestamp="20201103 05:11:36.101" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-26.txt</msg>
<status status="PASS" endtime="20201103 05:11:36.101" starttime="20201103 05:11:36.095"></status>
</kw>
<msg timestamp="20201103 05:11:36.101" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-26.txt</msg>
<status status="PASS" endtime="20201103 05:11:36.101" starttime="20201103 05:11:36.094"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:11:36.105" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-26.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:12:13.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:12:13.506" level="INFO">${output} = 2020-11-03 05:11:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-03 05:11:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 05:12:13.506" starttime="20201103 05:11:36.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:12:13.508" level="INFO">2020-11-03 05:11:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-03 05:11:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 05:11:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:11:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 05:11:38 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 05:11:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:11:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2C9EB15D83AD-&gt;a6addf77-5936-4002-9a79-d23186d70bc9
2020-11-03 05:11:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:11:39 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 05:11:40 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 05:11:40 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604380076673_0004
2020-11-03 05:11:40 INFO  YarnClientImpl:273 - Submitted application application_1604380076673_0004
2020-11-03 05:11:40 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604380076673_0004/
2020-11-03 05:11:40 INFO  Job:1339 - Running job: job_1604380076673_0004
2020-11-03 05:11:48 INFO  Job:1360 - Job job_1604380076673_0004 running in uber mode : false
2020-11-03 05:11:48 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 05:11:55 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 05:12:00 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 05:12:05 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 05:12:12 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 05:12:13 INFO  Job:1378 - Job job_1604380076673_0004 completed successfully
2020-11-03 05:12:13 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43544
		Total time spent by all reduces in occupied slots (ms)=25804
		Total time spent by all map tasks (ms)=10886
		Total time spent by all reduce tasks (ms)=6451
		Total vcore-milliseconds taken by all map tasks=10886
		Total vcore-milliseconds taken by all reduce tasks=6451
		Total megabyte-milliseconds taken by all map tasks=44589056
		Total megabyte-milliseconds taken by all reduce tasks=26423296
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=564
		CPU time spent (ms)=7930
		Physical memory (bytes) snapshot=1123803136
		Virtual memory (bytes) snapshot=16064331776
		Total committed heap usage (bytes)=1024458752
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 05:12:13.508" starttime="20201103 05:12:13.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:12:13.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:12:13.509" starttime="20201103 05:12:13.508"></status>
</kw>
<status status="PASS" endtime="20201103 05:12:13.509" starttime="20201103 05:11:36.102"></status>
</kw>
<msg timestamp="20201103 05:12:13.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:12:13.509" starttime="20201103 05:11:36.102"></status>
</kw>
<msg timestamp="20201103 05:12:13.510" level="INFO">${output} = 2020-11-03 05:11:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-03 05:11:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 05:12:13.510" starttime="20201103 05:11:36.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 05:12:13.511" starttime="20201103 05:12:13.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:12:13.511" starttime="20201103 05:12:13.511"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:12:13.511" critical="yes" starttime="20201103 05:11:36.065"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 05:12:13.513" starttime="20201103 05:10:57.542"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:09:19.313" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:09:19.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:09:19.319" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:09:19.320" starttime="20201103 05:09:19.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:09:19.320" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:09:19.321" starttime="20201103 05:09:19.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:09:19.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:09:19.321" starttime="20201103 05:09:19.321"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:19.321" starttime="20201103 05:09:19.308"></status>
</kw>
<msg timestamp="20201103 05:09:19.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:09:19.322" starttime="20201103 05:09:19.308"></status>
</kw>
<msg timestamp="20201103 05:09:19.322" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:09:19.322" starttime="20201103 05:09:19.307"></status>
</kw>
<msg timestamp="20201103 05:09:19.322" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:09:19.322" starttime="20201103 05:09:19.307"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:09:19.326" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:09:19.326" starttime="20201103 05:09:19.325"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:09:19.327" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:09:19.327" starttime="20201103 05:09:19.326"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:19.327" starttime="20201103 05:09:19.325"></status>
</kw>
<msg timestamp="20201103 05:09:19.327" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:09:19.327" starttime="20201103 05:09:19.324"></status>
</kw>
<status status="PASS" endtime="20201103 05:09:19.327" starttime="20201103 05:09:19.324"></status>
</kw>
<msg timestamp="20201103 05:09:19.327" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:09:19.327" starttime="20201103 05:09:19.323"></status>
</kw>
<msg timestamp="20201103 05:09:19.328" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:09:19.328" starttime="20201103 05:09:19.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:09:19.332" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:10:02.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:10:02.235" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:09:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:09:21 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 05:10:02.235" starttime="20201103 05:09:19.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:10:02.237" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:09:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:09:21 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 05:09:21 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 05:09:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:09:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EDAB4C7DB4FC-&gt;a6addf77-5936-4002-9a79-d23186d70bc9
2020-11-03 05:09:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 05:09:22 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-03 05:09:23 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 05:09:23 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 05:09:23 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604380076673_0001
2020-11-03 05:09:24 INFO  YarnClientImpl:273 - Submitted application application_1604380076673_0001
2020-11-03 05:09:24 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604380076673_0001/
2020-11-03 05:09:24 INFO  Job:1339 - Running job: job_1604380076673_0001
2020-11-03 05:09:36 INFO  Job:1360 - Job job_1604380076673_0001 running in uber mode : false
2020-11-03 05:09:36 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 05:09:43 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 05:09:48 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 05:09:53 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 05:09:58 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 05:10:01 INFO  Job:1378 - Job job_1604380076673_0001 completed successfully
2020-11-03 05:10:01 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45128
		Total time spent by all reduces in occupied slots (ms)=16744
		Total time spent by all map tasks (ms)=11282
		Total time spent by all reduce tasks (ms)=4186
		Total vcore-milliseconds taken by all map tasks=11282
		Total vcore-milliseconds taken by all reduce tasks=4186
		Total megabyte-milliseconds taken by all map tasks=46211072
		Total megabyte-milliseconds taken by all reduce tasks=17145856
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=629
		CPU time spent (ms)=7950
		Physical memory (bytes) snapshot=1153732608
		Virtual memory (bytes) snapshot=16076812288
		Total committed heap usage (bytes)=1008205824
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.9 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 05:10:02.237" starttime="20201103 05:10:02.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:10:02.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:10:02.238" starttime="20201103 05:10:02.237"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:02.238" starttime="20201103 05:09:19.329"></status>
</kw>
<msg timestamp="20201103 05:10:02.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:10:02.238" starttime="20201103 05:09:19.328"></status>
</kw>
<msg timestamp="20201103 05:10:02.239" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:09:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:09:21 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201103 05:10:02.239" starttime="20201103 05:09:19.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:10:02.239" starttime="20201103 05:10:02.239"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:10:02.239" critical="yes" starttime="20201103 05:09:19.306"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:10:02.244" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:10:02.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:10:02.249" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:10:02.249" starttime="20201103 05:10:02.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:10:02.250" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:10:02.250" starttime="20201103 05:10:02.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:10:02.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:10:02.251" starttime="20201103 05:10:02.250"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:02.251" starttime="20201103 05:10:02.242"></status>
</kw>
<msg timestamp="20201103 05:10:02.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:10:02.251" starttime="20201103 05:10:02.241"></status>
</kw>
<msg timestamp="20201103 05:10:02.251" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:10:02.252" starttime="20201103 05:10:02.241"></status>
</kw>
<msg timestamp="20201103 05:10:02.252" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201103 05:10:02.252" starttime="20201103 05:10:02.241"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:10:02.253" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20201103 05:10:02.253" starttime="20201103 05:10:02.252"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:10:02.256" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:10:02.256" starttime="20201103 05:10:02.256"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:10:02.257" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:10:02.257" starttime="20201103 05:10:02.256"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:02.257" starttime="20201103 05:10:02.255"></status>
</kw>
<msg timestamp="20201103 05:10:02.257" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:10:02.257" starttime="20201103 05:10:02.255"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:02.257" starttime="20201103 05:10:02.254"></status>
</kw>
<msg timestamp="20201103 05:10:02.257" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:10:02.257" starttime="20201103 05:10:02.253"></status>
</kw>
<msg timestamp="20201103 05:10:02.257" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:10:02.257" starttime="20201103 05:10:02.253"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:10:02.261" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:10:02.261" starttime="20201103 05:10:02.260"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:10:02.261" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:10:02.261" starttime="20201103 05:10:02.261"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:02.262" starttime="20201103 05:10:02.260"></status>
</kw>
<msg timestamp="20201103 05:10:02.262" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:10:02.262" starttime="20201103 05:10:02.259"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:02.262" starttime="20201103 05:10:02.259"></status>
</kw>
<msg timestamp="20201103 05:10:02.262" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 05:10:02.262" starttime="20201103 05:10:02.258"></status>
</kw>
<msg timestamp="20201103 05:10:02.262" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 05:10:02.262" starttime="20201103 05:10:02.258"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:10:02.265" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:10:02.265" starttime="20201103 05:10:02.265"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:10:02.266" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:10:02.266" starttime="20201103 05:10:02.265"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:02.266" starttime="20201103 05:10:02.264"></status>
</kw>
<msg timestamp="20201103 05:10:02.266" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:10:02.266" starttime="20201103 05:10:02.264"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:02.266" starttime="20201103 05:10:02.263"></status>
</kw>
<msg timestamp="20201103 05:10:02.266" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-55.txt</msg>
<status status="PASS" endtime="20201103 05:10:02.266" starttime="20201103 05:10:02.263"></status>
</kw>
<msg timestamp="20201103 05:10:02.267" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-55.txt</msg>
<status status="PASS" endtime="20201103 05:10:02.267" starttime="20201103 05:10:02.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:10:02.271" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:10:41.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:10:41.611" level="INFO">${output} = 2020-11-03 05:10:04 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-03 05:10:04 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 05:10:41.611" starttime="20201103 05:10:02.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:10:41.612" level="INFO">2020-11-03 05:10:04 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-03 05:10:04 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 05:10:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:10:04 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-03 05:10:04 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-03 05:10:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:10:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EC0829ACAF9B-&gt;a6addf77-5936-4002-9a79-d23186d70bc9
2020-11-03 05:10:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:10:06 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-03 05:10:06 INFO  JobSubmitter:198 - number of splits:3
2020-11-03 05:10:06 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604380076673_0002
2020-11-03 05:10:06 INFO  YarnClientImpl:273 - Submitted application application_1604380076673_0002
2020-11-03 05:10:06 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604380076673_0002/
2020-11-03 05:10:06 INFO  Job:1339 - Running job: job_1604380076673_0002
2020-11-03 05:10:15 INFO  Job:1360 - Job job_1604380076673_0002 running in uber mode : false
2020-11-03 05:10:15 INFO  Job:1367 -  map 0% reduce 0%
2020-11-03 05:10:22 INFO  Job:1367 -  map 33% reduce 0%
2020-11-03 05:10:27 INFO  Job:1367 -  map 67% reduce 0%
2020-11-03 05:10:33 INFO  Job:1367 -  map 100% reduce 0%
2020-11-03 05:10:40 INFO  Job:1367 -  map 100% reduce 100%
2020-11-03 05:10:41 INFO  Job:1378 - Job job_1604380076673_0002 completed successfully
2020-11-03 05:10:41 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44788
		Total time spent by all reduces in occupied slots (ms)=25920
		Total time spent by all map tasks (ms)=11197
		Total time spent by all reduce tasks (ms)=6480
		Total vcore-milliseconds taken by all map tasks=11197
		Total vcore-milliseconds taken by all reduce tasks=6480
		Total megabyte-milliseconds taken by all map tasks=45862912
		Total megabyte-milliseconds taken by all reduce tasks=26542080
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=564
		CPU time spent (ms)=7700
		Physical memory (bytes) snapshot=1135394816
		Virtual memory (bytes) snapshot=16060239872
		Total committed heap usage (bytes)=1050148864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 05:10:41.612" starttime="20201103 05:10:41.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:10:41.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:10:41.613" starttime="20201103 05:10:41.613"></status>
</kw>
<status status="PASS" endtime="20201103 05:10:41.613" starttime="20201103 05:10:02.268"></status>
</kw>
<msg timestamp="20201103 05:10:41.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:10:41.614" starttime="20201103 05:10:02.267"></status>
</kw>
<msg timestamp="20201103 05:10:41.614" level="INFO">${output} = 2020-11-03 05:10:04 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-11-03 05:10:04 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201103 05:10:41.614" starttime="20201103 05:10:02.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 05:10:41.615" starttime="20201103 05:10:41.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:10:41.615" starttime="20201103 05:10:41.615"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:10:41.615" critical="yes" starttime="20201103 05:10:02.240"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 05:10:41.617" starttime="20201103 05:09:19.246"></status>
</suite>
<status status="PASS" elapsedtime="202799" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:13:58.149" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:00.465" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 05:14:00.465" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 05:14:00.465" starttime="20201103 05:13:58.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:00.466" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 05:14:00.466" starttime="20201103 05:14:00.465"></status>
</kw>
<msg timestamp="20201103 05:14:00.467" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 05:14:00.467" starttime="20201103 05:13:58.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:00.472" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:02.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:02.775" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:14:02.775" starttime="20201103 05:14:00.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:02.776" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:14:02.776" starttime="20201103 05:14:02.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:02.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:02.777" starttime="20201103 05:14:02.776"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:02.777" starttime="20201103 05:14:00.469"></status>
</kw>
<msg timestamp="20201103 05:14:02.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:02.778" starttime="20201103 05:14:00.468"></status>
</kw>
<msg timestamp="20201103 05:14:02.778" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201103 05:14:02.778" starttime="20201103 05:14:00.468"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 05:14:02.779" starttime="20201103 05:14:02.779"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:02.779" starttime="20201103 05:14:00.467"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:02.779" starttime="20201103 05:14:00.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:02.788" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:05.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:05.155" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:14:05.155" starttime="20201103 05:14:02.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:05.156" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:14:05.156" starttime="20201103 05:14:05.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:05.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:05.157" starttime="20201103 05:14:05.156"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:05.157" starttime="20201103 05:14:02.785"></status>
</kw>
<msg timestamp="20201103 05:14:05.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:05.157" starttime="20201103 05:14:02.785"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:05.158" starttime="20201103 05:14:02.780"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:05.158" starttime="20201103 05:14:02.780"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:05.158" starttime="20201103 05:14:02.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 05:14:05.158" starttime="20201103 05:14:05.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:05.162" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:07.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:07.665" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:14:05.113Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 05:14:07.665" starttime="20201103 05:14:05.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:07.666" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:14:05.113Z",
  "modificationTime" : "2020-11-03T05:14:05.113Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 05:14:07.666" starttime="20201103 05:14:07.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:07.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:07.667" starttime="20201103 05:14:07.667"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:07.668" starttime="20201103 05:14:05.160"></status>
</kw>
<msg timestamp="20201103 05:14:07.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:07.668" starttime="20201103 05:14:05.159"></status>
</kw>
<msg timestamp="20201103 05:14:07.668" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:14:05.113Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 05:14:07.668" starttime="20201103 05:14:05.159"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 05:14:07.671" starttime="20201103 05:14:07.668"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:14:07.675" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:14:07.675" starttime="20201103 05:14:07.675"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:14:07.676" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:14:07.676" starttime="20201103 05:14:07.675"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:07.676" starttime="20201103 05:14:07.674"></status>
</kw>
<msg timestamp="20201103 05:14:07.677" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:14:07.677" starttime="20201103 05:14:07.674"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:07.677" starttime="20201103 05:14:07.673"></status>
</kw>
<msg timestamp="20201103 05:14:07.677" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 05:14:07.677" starttime="20201103 05:14:07.672"></status>
</kw>
<msg timestamp="20201103 05:14:07.678" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 05:14:07.678" starttime="20201103 05:14:07.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:07.683" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:10.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:10.198" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:14:10.198" starttime="20201103 05:14:07.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:10.199" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:14:10.199" starttime="20201103 05:14:10.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:10.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:10.200" starttime="20201103 05:14:10.200"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:10.201" starttime="20201103 05:14:07.679"></status>
</kw>
<msg timestamp="20201103 05:14:10.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:10.201" starttime="20201103 05:14:07.678"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:10.201" starttime="20201103 05:14:07.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:10.206" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:15.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:15.755" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:14:15.755" starttime="20201103 05:14:10.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:15.756" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:14:15.756" starttime="20201103 05:14:15.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:15.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:15.757" starttime="20201103 05:14:15.756"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:15.757" starttime="20201103 05:14:10.202"></status>
</kw>
<msg timestamp="20201103 05:14:15.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:15.758" starttime="20201103 05:14:10.202"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:15.758" starttime="20201103 05:14:10.201"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:15.764" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:20.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:20.069" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:14:20.069" starttime="20201103 05:14:15.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:20.070" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:14:20.070" starttime="20201103 05:14:20.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:20.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:20.071" starttime="20201103 05:14:20.071"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:20.072" starttime="20201103 05:14:15.759"></status>
</kw>
<msg timestamp="20201103 05:14:20.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:20.072" starttime="20201103 05:14:15.759"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:20.072" starttime="20201103 05:14:15.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:20.077" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:24.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:24.258" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:14:24.258" starttime="20201103 05:14:20.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:24.260" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:14:24.260" starttime="20201103 05:14:24.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:24.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:24.261" starttime="20201103 05:14:24.260"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:24.261" starttime="20201103 05:14:20.073"></status>
</kw>
<msg timestamp="20201103 05:14:24.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:24.261" starttime="20201103 05:14:20.073"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:24.261" starttime="20201103 05:14:20.072"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:14:24.262" critical="yes" starttime="20201103 05:13:58.142"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:14:24.268" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:14:24.268" starttime="20201103 05:14:24.267"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:14:24.269" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:14:24.269" starttime="20201103 05:14:24.268"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:24.269" starttime="20201103 05:14:24.267"></status>
</kw>
<msg timestamp="20201103 05:14:24.269" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:14:24.269" starttime="20201103 05:14:24.266"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:24.270" starttime="20201103 05:14:24.265"></status>
</kw>
<msg timestamp="20201103 05:14:24.270" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:14:24.270" starttime="20201103 05:14:24.265"></status>
</kw>
<msg timestamp="20201103 05:14:24.270" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:14:24.270" starttime="20201103 05:14:24.264"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:24.274" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:26.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:26.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:14:26.724" starttime="20201103 05:14:24.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:26.725" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:14:26.725" starttime="20201103 05:14:26.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:26.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:26.726" starttime="20201103 05:14:26.725"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:26.726" starttime="20201103 05:14:24.271"></status>
</kw>
<msg timestamp="20201103 05:14:26.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:26.726" starttime="20201103 05:14:24.271"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:26.726" starttime="20201103 05:14:24.270"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:26.731" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:29.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:29.051" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:14:29.051" starttime="20201103 05:14:26.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:29.052" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:14:29.052" starttime="20201103 05:14:29.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:29.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:29.053" starttime="20201103 05:14:29.052"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:29.053" starttime="20201103 05:14:26.728"></status>
</kw>
<msg timestamp="20201103 05:14:29.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:29.054" starttime="20201103 05:14:26.727"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:29.054" starttime="20201103 05:14:26.727"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:14:29.054" critical="yes" starttime="20201103 05:14:24.263"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201103 05:14:29.056" starttime="20201103 05:13:58.076"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:16:22.458" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:16:22.458" starttime="20201103 05:16:22.457"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:16:22.458" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:16:22.458" starttime="20201103 05:16:22.458"></status>
</kw>
<status status="PASS" endtime="20201103 05:16:22.459" starttime="20201103 05:16:22.457"></status>
</kw>
<msg timestamp="20201103 05:16:22.459" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:16:22.459" starttime="20201103 05:16:22.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:16:22.460" starttime="20201103 05:16:22.459"></status>
</kw>
<msg timestamp="20201103 05:16:22.460" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 05:16:22.460" starttime="20201103 05:16:22.459"></status>
</kw>
<status status="PASS" endtime="20201103 05:16:22.460" starttime="20201103 05:16:22.456"></status>
</kw>
<msg timestamp="20201103 05:16:22.460" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:16:22.460" starttime="20201103 05:16:22.455"></status>
</kw>
<msg timestamp="20201103 05:16:22.460" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:16:22.461" starttime="20201103 05:16:22.454"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:16:22.461" level="INFO">${random} = 94563</msg>
<status status="PASS" endtime="20201103 05:16:22.461" starttime="20201103 05:16:22.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:16:22.467" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-94563 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:16:28.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:16:28.633" level="INFO">${output} = 2020-11-03 05:16:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:24 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:16:28.633" starttime="20201103 05:16:22.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:16:28.634" level="INFO">2020-11-03 05:16:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:24 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 05:16:24 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:16:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:16:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:16:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:16:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-528E5159037D-&gt;32a80ef6-a07c-4ee6-953d-23d1e8135bdd
2020-11-03 05:16:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:16:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 05:16:28.634" starttime="20201103 05:16:28.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:16:28.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:16:28.635" starttime="20201103 05:16:28.634"></status>
</kw>
<status status="PASS" endtime="20201103 05:16:28.635" starttime="20201103 05:16:22.462"></status>
</kw>
<msg timestamp="20201103 05:16:28.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:16:28.636" starttime="20201103 05:16:22.462"></status>
</kw>
<msg timestamp="20201103 05:16:28.636" level="INFO">${result} = 2020-11-03 05:16:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:24 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:16:28.636" starttime="20201103 05:16:22.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:16:28.640" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:16:30.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:16:30.647" level="INFO">${output} = 2020-11-03 05:16:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:16:30.647" starttime="20201103 05:16:28.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:16:30.648" level="INFO">2020-11-03 05:16:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:30 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:14 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-03 05:14 ofs://om/volume1/bucket1/ozone-29357
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-03 05:16 ofs://om/volume1/bucket1/ozone-94563
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:14 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:15 ofs://om/volume1/bucket1/wordcount-74.txt
2020-11-03 05:16:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 05:16:30.649" starttime="20201103 05:16:30.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:16:30.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:16:30.650" starttime="20201103 05:16:30.649"></status>
</kw>
<status status="PASS" endtime="20201103 05:16:30.650" starttime="20201103 05:16:28.637"></status>
</kw>
<msg timestamp="20201103 05:16:30.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:16:30.651" starttime="20201103 05:16:28.637"></status>
</kw>
<msg timestamp="20201103 05:16:30.651" level="INFO">${result} = 2020-11-03 05:16:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:16:30.651" starttime="20201103 05:16:28.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:16:30.652" starttime="20201103 05:16:30.651"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:16:30.652" critical="yes" starttime="20201103 05:16:22.453"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 05:16:30.653" starttime="20201103 05:16:22.387"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:14:34.061" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:14:34.061" starttime="20201103 05:14:34.061"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:14:34.062" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:14:34.062" starttime="20201103 05:14:34.061"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:34.062" starttime="20201103 05:14:34.060"></status>
</kw>
<msg timestamp="20201103 05:14:34.062" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:14:34.062" starttime="20201103 05:14:34.060"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:34.062" starttime="20201103 05:14:34.059"></status>
</kw>
<msg timestamp="20201103 05:14:34.063" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:14:34.063" starttime="20201103 05:14:34.058"></status>
</kw>
<msg timestamp="20201103 05:14:34.063" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:14:34.063" starttime="20201103 05:14:34.057"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:14:34.063" level="INFO">${random} = 29357</msg>
<status status="PASS" endtime="20201103 05:14:34.063" starttime="20201103 05:14:34.063"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:34.069" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-29357 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:38.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:38.003" level="INFO">${output} = 2020-11-03 05:14:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:14:38.003" starttime="20201103 05:14:34.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:38.004" level="INFO">2020-11-03 05:14:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:36 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 05:14:36 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:14:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:14:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:14:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:14:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6BA69DFE3B77-&gt;32a80ef6-a07c-4ee6-953d-23d1e8135bdd
2020-11-03 05:14:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:14:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 05:14:38.005" starttime="20201103 05:14:38.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:38.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:38.005" starttime="20201103 05:14:38.005"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:38.005" starttime="20201103 05:14:34.064"></status>
</kw>
<msg timestamp="20201103 05:14:38.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:38.006" starttime="20201103 05:14:34.064"></status>
</kw>
<msg timestamp="20201103 05:14:38.006" level="INFO">${result} = 2020-11-03 05:14:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:14:38.006" starttime="20201103 05:14:34.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:38.010" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:39.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:39.879" level="INFO">${output} = 2020-11-03 05:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:14:39.879" starttime="20201103 05:14:38.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:39.880" level="INFO">2020-11-03 05:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:39 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:14 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-03 05:14 o3fs://bucket1.volume1.om/ozone-29357
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:14 o3fs://bucket1.volume1.om/user
2020-11-03 05:14:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 05:14:39.880" starttime="20201103 05:14:39.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:39.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:39.881" starttime="20201103 05:14:39.880"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:39.881" starttime="20201103 05:14:38.007"></status>
</kw>
<msg timestamp="20201103 05:14:39.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:39.882" starttime="20201103 05:14:38.007"></status>
</kw>
<msg timestamp="20201103 05:14:39.882" level="INFO">${result} = 2020-11-03 05:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:14:39.882" starttime="20201103 05:14:38.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:14:39.883" starttime="20201103 05:14:39.882"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:14:39.883" critical="yes" starttime="20201103 05:14:34.056"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 05:14:39.884" starttime="20201103 05:14:33.995"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:16:35.714" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:16:35.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:16:35.722" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:16:35.722" starttime="20201103 05:16:35.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:16:35.723" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:16:35.723" starttime="20201103 05:16:35.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:16:35.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:16:35.724" starttime="20201103 05:16:35.723"></status>
</kw>
<status status="PASS" endtime="20201103 05:16:35.724" starttime="20201103 05:16:35.707"></status>
</kw>
<msg timestamp="20201103 05:16:35.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:16:35.724" starttime="20201103 05:16:35.706"></status>
</kw>
<msg timestamp="20201103 05:16:35.725" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:16:35.725" starttime="20201103 05:16:35.706"></status>
</kw>
<msg timestamp="20201103 05:16:35.725" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:16:35.725" starttime="20201103 05:16:35.706"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:16:35.729" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:16:35.729" starttime="20201103 05:16:35.729"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:16:35.730" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:16:35.730" starttime="20201103 05:16:35.729"></status>
</kw>
<status status="PASS" endtime="20201103 05:16:35.730" starttime="20201103 05:16:35.728"></status>
</kw>
<msg timestamp="20201103 05:16:35.730" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:16:35.730" starttime="20201103 05:16:35.727"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:16:35.732" starttime="20201103 05:16:35.731"></status>
</kw>
<msg timestamp="20201103 05:16:35.732" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 05:16:35.732" starttime="20201103 05:16:35.731"></status>
</kw>
<status status="PASS" endtime="20201103 05:16:35.732" starttime="20201103 05:16:35.727"></status>
</kw>
<msg timestamp="20201103 05:16:35.732" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:16:35.732" starttime="20201103 05:16:35.726"></status>
</kw>
<msg timestamp="20201103 05:16:35.733" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:16:35.733" starttime="20201103 05:16:35.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:16:35.737" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:17:16.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:17:16.641" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:16:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16...</msg>
<status status="PASS" endtime="20201103 05:17:16.641" starttime="20201103 05:16:35.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:17:16.642" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:16:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:37 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 05:16:37 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:16:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:16:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:16:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:16:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5EF3622C15D3-&gt;32a80ef6-a07c-4ee6-953d-23d1e8135bdd
2020-11-03 05:16:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 05:16:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-11-03 05:16:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 05:16:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 05:16:40 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 05:16:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604380381729_0003
2020-11-03 05:16:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 05:16:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:40 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 05:16:40 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 05:16:40 INFO  YarnClientImpl:324 - Submitted application application_1604380381729_0003
2020-11-03 05:16:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604380381729_0003/
2020-11-03 05:16:40 INFO  Job:1619 - Running job: job_1604380381729_0003
2020-11-03 05:16:48 INFO  Job:1640 - Job job_1604380381729_0003 running in uber mode : false
2020-11-03 05:16:48 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 05:16:55 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 05:17:00 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 05:17:06 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 05:17:12 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 05:17:15 INFO  Job:1658 - Job job_1604380381729_0003 completed successfully
2020-11-03 05:17:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021301
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=750
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43464
		Total time spent by all reduces in occupied slots (ms)=17184
		Total time spent by all map tasks (ms)=10866
		Total time spent by all reduce tasks (ms)=4296
		Total vcore-milliseconds taken by all map tasks=10866
		Total vcore-milliseconds taken by all reduce tasks=4296
		Total megabyte-milliseconds taken by all map tasks=44507136
		Total megabyte-milliseconds taken by all reduce tasks=17596416
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=396
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=640
		CPU time spent (ms)=7650
		Physical memory (bytes) snapshot=1152045056
		Virtual memory (bytes) snapshot=16060891136
		Total committed heap usage (bytes)=1019215872
		Peak Map Physical memory (bytes)=295084032
		Peak Map Virtual memory (bytes)=4014551040
		Peak Reduce Physical memory (bytes)=291667968
		Peak Reduce Virtual memory (bytes)=4034965504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.795 seconds
2020-11-03 05:17:16 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-03 05:17:16 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 05:17:16.642" starttime="20201103 05:17:16.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:17:16.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:17:16.643" starttime="20201103 05:17:16.643"></status>
</kw>
<status status="PASS" endtime="20201103 05:17:16.643" starttime="20201103 05:16:35.734"></status>
</kw>
<msg timestamp="20201103 05:17:16.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:17:16.644" starttime="20201103 05:16:35.733"></status>
</kw>
<msg timestamp="20201103 05:17:16.644" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:16:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16...</msg>
<status status="PASS" endtime="20201103 05:17:16.644" starttime="20201103 05:16:35.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:17:16.645" starttime="20201103 05:17:16.644"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:17:16.645" critical="yes" starttime="20201103 05:16:35.705"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:17:16.650" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:17:16.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:17:16.656" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:17:16.656" starttime="20201103 05:17:16.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:17:16.657" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:17:16.657" starttime="20201103 05:17:16.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:17:16.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:17:16.658" starttime="20201103 05:17:16.657"></status>
</kw>
<status status="PASS" endtime="20201103 05:17:16.658" starttime="20201103 05:17:16.648"></status>
</kw>
<msg timestamp="20201103 05:17:16.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:17:16.658" starttime="20201103 05:17:16.647"></status>
</kw>
<msg timestamp="20201103 05:17:16.658" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:17:16.658" starttime="20201103 05:17:16.647"></status>
</kw>
<msg timestamp="20201103 05:17:16.659" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:17:16.659" starttime="20201103 05:17:16.646"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:17:16.659" level="INFO">${random} = 58</msg>
<status status="PASS" endtime="20201103 05:17:16.659" starttime="20201103 05:17:16.659"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:17:16.663" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:17:16.663" starttime="20201103 05:17:16.663"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:17:16.664" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:17:16.664" starttime="20201103 05:17:16.663"></status>
</kw>
<status status="PASS" endtime="20201103 05:17:16.664" starttime="20201103 05:17:16.662"></status>
</kw>
<msg timestamp="20201103 05:17:16.664" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:17:16.664" starttime="20201103 05:17:16.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:17:16.665" starttime="20201103 05:17:16.665"></status>
</kw>
<msg timestamp="20201103 05:17:16.665" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 05:17:16.665" starttime="20201103 05:17:16.664"></status>
</kw>
<status status="PASS" endtime="20201103 05:17:16.666" starttime="20201103 05:17:16.661"></status>
</kw>
<msg timestamp="20201103 05:17:16.666" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:17:16.666" starttime="20201103 05:17:16.660"></status>
</kw>
<msg timestamp="20201103 05:17:16.666" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:17:16.666" starttime="20201103 05:17:16.659"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:17:16.669" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:17:16.669" starttime="20201103 05:17:16.669"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:17:16.670" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:17:16.670" starttime="20201103 05:17:16.669"></status>
</kw>
<status status="PASS" endtime="20201103 05:17:16.670" starttime="20201103 05:17:16.668"></status>
</kw>
<msg timestamp="20201103 05:17:16.670" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:17:16.670" starttime="20201103 05:17:16.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:17:16.672" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201103 05:17:16.672" starttime="20201103 05:17:16.671"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:17:16.673" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201103 05:17:16.673" starttime="20201103 05:17:16.672"></status>
</kw>
<status status="PASS" endtime="20201103 05:17:16.673" starttime="20201103 05:17:16.671"></status>
</kw>
<msg timestamp="20201103 05:17:16.673" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201103 05:17:16.673" starttime="20201103 05:17:16.670"></status>
</kw>
<status status="PASS" endtime="20201103 05:17:16.673" starttime="20201103 05:17:16.667"></status>
</kw>
<msg timestamp="20201103 05:17:16.673" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 05:17:16.673" starttime="20201103 05:17:16.667"></status>
</kw>
<msg timestamp="20201103 05:17:16.673" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 05:17:16.673" starttime="20201103 05:17:16.666"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:17:16.677" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:17:16.677" starttime="20201103 05:17:16.676"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:17:16.677" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:17:16.677" starttime="20201103 05:17:16.677"></status>
</kw>
<status status="PASS" endtime="20201103 05:17:16.678" starttime="20201103 05:17:16.676"></status>
</kw>
<msg timestamp="20201103 05:17:16.678" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:17:16.678" starttime="20201103 05:17:16.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:17:16.679" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201103 05:17:16.679" starttime="20201103 05:17:16.679"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:17:16.680" level="INFO">${result} = /wordcount-58.txt</msg>
<status status="PASS" endtime="20201103 05:17:16.680" starttime="20201103 05:17:16.679"></status>
</kw>
<status status="PASS" endtime="20201103 05:17:16.680" starttime="20201103 05:17:16.678"></status>
</kw>
<msg timestamp="20201103 05:17:16.680" level="INFO">${path_with_leading} = /wordcount-58.txt</msg>
<status status="PASS" endtime="20201103 05:17:16.680" starttime="20201103 05:17:16.678"></status>
</kw>
<status status="PASS" endtime="20201103 05:17:16.681" starttime="20201103 05:17:16.675"></status>
</kw>
<msg timestamp="20201103 05:17:16.681" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-58.txt</msg>
<status status="PASS" endtime="20201103 05:17:16.681" starttime="20201103 05:17:16.674"></status>
</kw>
<msg timestamp="20201103 05:17:16.681" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-58.txt</msg>
<status status="PASS" endtime="20201103 05:17:16.681" starttime="20201103 05:17:16.674"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:17:16.685" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-58.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:18:00.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:18:00.229" level="INFO">${output} = 2020-11-03 05:17:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:18 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:18:00.229" starttime="20201103 05:17:16.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:18:00.231" level="INFO">2020-11-03 05:17:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-11-03 05:17:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 05:17:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:19 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 05:17:19 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:17:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:17:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:17:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:17:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5C8D014E8485-&gt;32a80ef6-a07c-4ee6-953d-23d1e8135bdd
2020-11-03 05:17:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:17:23 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 05:17:23 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 05:17:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604380381729_0004
2020-11-03 05:17:25 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 05:17:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:26 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 05:17:26 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 05:17:26 INFO  YarnClientImpl:324 - Submitted application application_1604380381729_0004
2020-11-03 05:17:26 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604380381729_0004/
2020-11-03 05:17:26 INFO  Job:1619 - Running job: job_1604380381729_0004
2020-11-03 05:17:34 INFO  Job:1640 - Job job_1604380381729_0004 running in uber mode : false
2020-11-03 05:17:34 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 05:17:41 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 05:17:47 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 05:17:53 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 05:17:58 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 05:17:59 INFO  Job:1658 - Job job_1604380381729_0004 completed successfully
2020-11-03 05:17:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42660
		Total time spent by all reduces in occupied slots (ms)=14848
		Total time spent by all map tasks (ms)=10665
		Total time spent by all reduce tasks (ms)=3712
		Total vcore-milliseconds taken by all map tasks=10665
		Total vcore-milliseconds taken by all reduce tasks=3712
		Total megabyte-milliseconds taken by all map tasks=43683840
		Total megabyte-milliseconds taken by all reduce tasks=15204352
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=619
		CPU time spent (ms)=7660
		Physical memory (bytes) snapshot=1181810688
		Virtual memory (bytes) snapshot=16082563072
		Total committed heap usage (bytes)=1136132096
		Peak Map Physical memory (bytes)=295120896
		Peak Map Virtual memory (bytes)=4021256192
		Peak Reduce Physical memory (bytes)=299958272
		Peak Reduce Virtual memory (bytes)=4037115904
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-03 05:17:59 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 05:18:00.231" starttime="20201103 05:18:00.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:18:00.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:18:00.231" starttime="20201103 05:18:00.231"></status>
</kw>
<status status="PASS" endtime="20201103 05:18:00.232" starttime="20201103 05:17:16.682"></status>
</kw>
<msg timestamp="20201103 05:18:00.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:18:00.232" starttime="20201103 05:17:16.682"></status>
</kw>
<msg timestamp="20201103 05:18:00.233" level="INFO">${output} = 2020-11-03 05:17:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:17:18 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:18:00.233" starttime="20201103 05:17:16.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 05:18:00.233" starttime="20201103 05:18:00.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:18:00.234" starttime="20201103 05:18:00.233"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:18:00.234" critical="yes" starttime="20201103 05:17:16.646"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 05:18:00.236" starttime="20201103 05:16:35.634"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:45.010" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:14:45.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:14:45.016" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:14:45.016" starttime="20201103 05:14:45.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:14:45.017" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:14:45.017" starttime="20201103 05:14:45.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:14:45.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:14:45.018" starttime="20201103 05:14:45.017"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:45.018" starttime="20201103 05:14:45.006"></status>
</kw>
<msg timestamp="20201103 05:14:45.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:14:45.018" starttime="20201103 05:14:45.006"></status>
</kw>
<msg timestamp="20201103 05:14:45.019" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:14:45.019" starttime="20201103 05:14:45.005"></status>
</kw>
<msg timestamp="20201103 05:14:45.019" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:14:45.019" starttime="20201103 05:14:45.005"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:14:45.022" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:14:45.022" starttime="20201103 05:14:45.022"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:14:45.023" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:14:45.023" starttime="20201103 05:14:45.023"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:45.023" starttime="20201103 05:14:45.021"></status>
</kw>
<msg timestamp="20201103 05:14:45.024" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:14:45.024" starttime="20201103 05:14:45.021"></status>
</kw>
<status status="PASS" endtime="20201103 05:14:45.024" starttime="20201103 05:14:45.020"></status>
</kw>
<msg timestamp="20201103 05:14:45.024" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:14:45.024" starttime="20201103 05:14:45.020"></status>
</kw>
<msg timestamp="20201103 05:14:45.024" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:14:45.024" starttime="20201103 05:14:45.019"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:14:45.027" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:15:33.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:15:33.454" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:14:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14...</msg>
<status status="PASS" endtime="20201103 05:15:33.454" starttime="20201103 05:14:45.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:15:33.455" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:14:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:47 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 05:14:47 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:14:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:14:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:14:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:14:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0555641764BB-&gt;32a80ef6-a07c-4ee6-953d-23d1e8135bdd
2020-11-03 05:14:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 05:14:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-11-03 05:14:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 05:14:52 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 05:14:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604380381729_0001
2020-11-03 05:14:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 05:14:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:52 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 05:14:52 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 05:14:53 INFO  YarnClientImpl:324 - Submitted application application_1604380381729_0001
2020-11-03 05:14:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604380381729_0001/
2020-11-03 05:14:53 INFO  Job:1619 - Running job: job_1604380381729_0001
2020-11-03 05:15:04 INFO  Job:1640 - Job job_1604380381729_0001 running in uber mode : false
2020-11-03 05:15:04 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 05:15:11 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 05:15:17 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 05:15:23 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 05:15:29 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 05:15:32 INFO  Job:1658 - Job job_1604380381729_0001 completed successfully
2020-11-03 05:15:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021529
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44992
		Total time spent by all reduces in occupied slots (ms)=17244
		Total time spent by all map tasks (ms)=11248
		Total time spent by all reduce tasks (ms)=4311
		Total vcore-milliseconds taken by all map tasks=11248
		Total vcore-milliseconds taken by all reduce tasks=4311
		Total megabyte-milliseconds taken by all map tasks=46071808
		Total megabyte-milliseconds taken by all reduce tasks=17657856
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=593
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1181147136
		Virtual memory (bytes) snapshot=16078110720
		Total committed heap usage (bytes)=1059061760
		Peak Map Physical memory (bytes)=297562112
		Peak Map Virtual memory (bytes)=4017967104
		Peak Reduce Physical memory (bytes)=298602496
		Peak Reduce Virtual memory (bytes)=4036878336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 44.056 seconds
2020-11-03 05:15:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:32 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-03 05:15:33 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 05:15:33.456" starttime="20201103 05:15:33.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:15:33.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:15:33.456" starttime="20201103 05:15:33.456"></status>
</kw>
<status status="PASS" endtime="20201103 05:15:33.457" starttime="20201103 05:14:45.025"></status>
</kw>
<msg timestamp="20201103 05:15:33.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:15:33.457" starttime="20201103 05:14:45.025"></status>
</kw>
<msg timestamp="20201103 05:15:33.457" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:14:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:14...</msg>
<status status="PASS" endtime="20201103 05:15:33.457" starttime="20201103 05:14:45.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:15:33.458" starttime="20201103 05:15:33.458"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:15:33.458" critical="yes" starttime="20201103 05:14:45.004"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:15:33.463" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:15:33.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:15:33.469" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:15:33.469" starttime="20201103 05:15:33.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:15:33.470" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:15:33.471" starttime="20201103 05:15:33.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:15:33.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:15:33.471" starttime="20201103 05:15:33.471"></status>
</kw>
<status status="PASS" endtime="20201103 05:15:33.471" starttime="20201103 05:15:33.461"></status>
</kw>
<msg timestamp="20201103 05:15:33.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:15:33.472" starttime="20201103 05:15:33.460"></status>
</kw>
<msg timestamp="20201103 05:15:33.472" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:15:33.472" starttime="20201103 05:15:33.460"></status>
</kw>
<msg timestamp="20201103 05:15:33.472" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201103 05:15:33.472" starttime="20201103 05:15:33.459"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:15:33.473" level="INFO">${random} = 74</msg>
<status status="PASS" endtime="20201103 05:15:33.473" starttime="20201103 05:15:33.472"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:15:33.477" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:15:33.477" starttime="20201103 05:15:33.476"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:15:33.478" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:15:33.478" starttime="20201103 05:15:33.477"></status>
</kw>
<status status="PASS" endtime="20201103 05:15:33.478" starttime="20201103 05:15:33.476"></status>
</kw>
<msg timestamp="20201103 05:15:33.478" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:15:33.478" starttime="20201103 05:15:33.475"></status>
</kw>
<status status="PASS" endtime="20201103 05:15:33.478" starttime="20201103 05:15:33.474"></status>
</kw>
<msg timestamp="20201103 05:15:33.478" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:15:33.478" starttime="20201103 05:15:33.474"></status>
</kw>
<msg timestamp="20201103 05:15:33.478" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:15:33.479" starttime="20201103 05:15:33.473"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:15:33.482" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:15:33.482" starttime="20201103 05:15:33.481"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:15:33.483" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:15:33.483" starttime="20201103 05:15:33.482"></status>
</kw>
<status status="PASS" endtime="20201103 05:15:33.483" starttime="20201103 05:15:33.481"></status>
</kw>
<msg timestamp="20201103 05:15:33.483" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:15:33.483" starttime="20201103 05:15:33.480"></status>
</kw>
<status status="PASS" endtime="20201103 05:15:33.483" starttime="20201103 05:15:33.480"></status>
</kw>
<msg timestamp="20201103 05:15:33.483" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 05:15:33.483" starttime="20201103 05:15:33.479"></status>
</kw>
<msg timestamp="20201103 05:15:33.484" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 05:15:33.484" starttime="20201103 05:15:33.479"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:15:33.487" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:15:33.487" starttime="20201103 05:15:33.487"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:15:33.488" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:15:33.488" starttime="20201103 05:15:33.487"></status>
</kw>
<status status="PASS" endtime="20201103 05:15:33.488" starttime="20201103 05:15:33.486"></status>
</kw>
<msg timestamp="20201103 05:15:33.488" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:15:33.488" starttime="20201103 05:15:33.486"></status>
</kw>
<status status="PASS" endtime="20201103 05:15:33.489" starttime="20201103 05:15:33.485"></status>
</kw>
<msg timestamp="20201103 05:15:33.489" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-74.txt</msg>
<status status="PASS" endtime="20201103 05:15:33.489" starttime="20201103 05:15:33.485"></status>
</kw>
<msg timestamp="20201103 05:15:33.489" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-74.txt</msg>
<status status="PASS" endtime="20201103 05:15:33.489" starttime="20201103 05:15:33.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:15:33.495" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-74.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:16:17.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:16:17.210" level="INFO">${output} = 2020-11-03 05:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:16:17.210" starttime="20201103 05:15:33.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:16:17.211" level="INFO">2020-11-03 05:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-11-03 05:15:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 05:15:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:36 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-03 05:15:36 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-03 05:15:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:15:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:15:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:15:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0F72CEEEB9B5-&gt;32a80ef6-a07c-4ee6-953d-23d1e8135bdd
2020-11-03 05:15:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:15:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 05:15:42 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 05:15:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604380381729_0002
2020-11-03 05:15:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 05:15:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:43 INFO  Configuration:2752 - resource-types.xml not found
2020-11-03 05:15:43 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-03 05:15:43 INFO  YarnClientImpl:324 - Submitted application application_1604380381729_0002
2020-11-03 05:15:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604380381729_0002/
2020-11-03 05:15:43 INFO  Job:1619 - Running job: job_1604380381729_0002
2020-11-03 05:15:51 INFO  Job:1640 - Job job_1604380381729_0002 running in uber mode : false
2020-11-03 05:15:51 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 05:15:58 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 05:16:04 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 05:16:10 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 05:16:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 05:16:16 INFO  Job:1658 - Job job_1604380381729_0002 completed successfully
2020-11-03 05:16:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:16:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45012
		Total time spent by all reduces in occupied slots (ms)=16268
		Total time spent by all map tasks (ms)=11253
		Total time spent by all reduce tasks (ms)=4067
		Total vcore-milliseconds taken by all map tasks=11253
		Total vcore-milliseconds taken by all reduce tasks=4067
		Total megabyte-milliseconds taken by all map tasks=46092288
		Total megabyte-milliseconds taken by all reduce tasks=16658432
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=636
		CPU time spent (ms)=8140
		Physical memory (bytes) snapshot=1182539776
		Virtual memory (bytes) snapshot=16073158656
		Total committed heap usage (bytes)=1030750208
		Peak Map Physical memory (bytes)=299429888
		Peak Map Virtual memory (bytes)=4021673984
		Peak Reduce Physical memory (bytes)=292352000
		Peak Reduce Virtual memory (bytes)=4029296640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-03 05:16:16 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201103 05:16:17.211" starttime="20201103 05:16:17.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:16:17.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:16:17.212" starttime="20201103 05:16:17.211"></status>
</kw>
<status status="PASS" endtime="20201103 05:16:17.212" starttime="20201103 05:15:33.490"></status>
</kw>
<msg timestamp="20201103 05:16:17.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:16:17.212" starttime="20201103 05:15:33.490"></status>
</kw>
<msg timestamp="20201103 05:16:17.213" level="INFO">${output} = 2020-11-03 05:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-03 05:15:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201103 05:16:17.213" starttime="20201103 05:15:33.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 05:16:17.214" starttime="20201103 05:16:17.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:16:17.214" starttime="20201103 05:16:17.214"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:16:17.214" critical="yes" starttime="20201103 05:15:33.459"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 05:16:17.216" starttime="20201103 05:14:44.946"></status>
</suite>
<status status="PASS" elapsedtime="222007" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:19:43.912" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:19:47.855" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 05:19:47.856" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 05:19:47.856" starttime="20201103 05:19:43.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:19:47.857" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 05:19:47.857" starttime="20201103 05:19:47.856"></status>
</kw>
<msg timestamp="20201103 05:19:47.858" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 05:19:47.858" starttime="20201103 05:19:43.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:19:47.866" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:19:51.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:19:51.433" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:19:51.433" starttime="20201103 05:19:47.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:19:51.434" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:19:51.434" starttime="20201103 05:19:51.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:19:51.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:19:51.435" starttime="20201103 05:19:51.434"></status>
</kw>
<status status="PASS" endtime="20201103 05:19:51.435" starttime="20201103 05:19:47.860"></status>
</kw>
<msg timestamp="20201103 05:19:51.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:19:51.436" starttime="20201103 05:19:47.860"></status>
</kw>
<msg timestamp="20201103 05:19:51.436" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201103 05:19:51.436" starttime="20201103 05:19:47.859"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 05:19:51.437" starttime="20201103 05:19:51.436"></status>
</kw>
<status status="PASS" endtime="20201103 05:19:51.437" starttime="20201103 05:19:47.859"></status>
</kw>
<status status="PASS" endtime="20201103 05:19:51.437" starttime="20201103 05:19:47.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:19:51.443" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:19:54.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:19:54.808" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:19:54.808" starttime="20201103 05:19:51.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:19:54.809" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:19:54.809" starttime="20201103 05:19:54.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:19:54.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:19:54.810" starttime="20201103 05:19:54.809"></status>
</kw>
<status status="PASS" endtime="20201103 05:19:54.810" starttime="20201103 05:19:51.439"></status>
</kw>
<msg timestamp="20201103 05:19:54.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:19:54.810" starttime="20201103 05:19:51.439"></status>
</kw>
<status status="PASS" endtime="20201103 05:19:54.811" starttime="20201103 05:19:51.438"></status>
</kw>
<status status="PASS" endtime="20201103 05:19:54.811" starttime="20201103 05:19:51.438"></status>
</kw>
<status status="PASS" endtime="20201103 05:19:54.811" starttime="20201103 05:19:51.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 05:19:54.812" starttime="20201103 05:19:54.811"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:19:54.816" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:19:58.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:19:58.202" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:19:54.551Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 05:19:58.203" starttime="20201103 05:19:54.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:19:58.204" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:19:54.551Z",
  "modificationTime" : "2020-11-03T05:19:54.551Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 05:19:58.204" starttime="20201103 05:19:58.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:19:58.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:19:58.205" starttime="20201103 05:19:58.204"></status>
</kw>
<status status="PASS" endtime="20201103 05:19:58.205" starttime="20201103 05:19:54.813"></status>
</kw>
<msg timestamp="20201103 05:19:58.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:19:58.205" starttime="20201103 05:19:54.812"></status>
</kw>
<msg timestamp="20201103 05:19:58.206" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:19:54.551Z",
  "modificat...</msg>
<status status="PASS" endtime="20201103 05:19:58.206" starttime="20201103 05:19:54.812"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 05:19:58.207" starttime="20201103 05:19:58.206"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:19:58.211" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:19:58.211" starttime="20201103 05:19:58.211"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:19:58.212" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:19:58.212" starttime="20201103 05:19:58.211"></status>
</kw>
<status status="PASS" endtime="20201103 05:19:58.212" starttime="20201103 05:19:58.210"></status>
</kw>
<msg timestamp="20201103 05:19:58.212" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:19:58.212" starttime="20201103 05:19:58.210"></status>
</kw>
<status status="PASS" endtime="20201103 05:19:58.213" starttime="20201103 05:19:58.209"></status>
</kw>
<msg timestamp="20201103 05:19:58.213" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 05:19:58.213" starttime="20201103 05:19:58.208"></status>
</kw>
<msg timestamp="20201103 05:19:58.213" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 05:19:58.213" starttime="20201103 05:19:58.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:19:58.218" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:20:01.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:20:01.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:20:01.551" starttime="20201103 05:19:58.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:20:01.552" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:20:01.552" starttime="20201103 05:20:01.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:20:01.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:20:01.553" starttime="20201103 05:20:01.552"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:01.553" starttime="20201103 05:19:58.214"></status>
</kw>
<msg timestamp="20201103 05:20:01.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:20:01.554" starttime="20201103 05:19:58.214"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:01.554" starttime="20201103 05:19:58.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:20:01.558" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:20:08.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:20:08.411" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:20:08.411" starttime="20201103 05:20:01.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:20:08.412" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:20:08.412" starttime="20201103 05:20:08.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:20:08.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:20:08.413" starttime="20201103 05:20:08.413"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:08.414" starttime="20201103 05:20:01.555"></status>
</kw>
<msg timestamp="20201103 05:20:08.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:20:08.414" starttime="20201103 05:20:01.555"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:08.414" starttime="20201103 05:20:01.554"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:20:08.419" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:20:13.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:20:13.821" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:20:13.821" starttime="20201103 05:20:08.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:20:13.822" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:20:13.822" starttime="20201103 05:20:13.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:20:13.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:20:13.823" starttime="20201103 05:20:13.822"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:13.823" starttime="20201103 05:20:08.416"></status>
</kw>
<msg timestamp="20201103 05:20:13.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:20:13.823" starttime="20201103 05:20:08.415"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:13.824" starttime="20201103 05:20:08.414"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:20:13.828" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:20:19.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:20:19.247" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:20:19.247" starttime="20201103 05:20:13.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:20:19.248" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:20:19.248" starttime="20201103 05:20:19.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:20:19.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:20:19.249" starttime="20201103 05:20:19.248"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:19.249" starttime="20201103 05:20:13.825"></status>
</kw>
<msg timestamp="20201103 05:20:19.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:20:19.249" starttime="20201103 05:20:13.825"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:19.250" starttime="20201103 05:20:13.824"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:20:19.250" critical="yes" starttime="20201103 05:19:43.905"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:20:19.256" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:20:19.256" starttime="20201103 05:20:19.256"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:20:19.257" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:20:19.257" starttime="20201103 05:20:19.256"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:19.257" starttime="20201103 05:20:19.255"></status>
</kw>
<msg timestamp="20201103 05:20:19.257" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:20:19.257" starttime="20201103 05:20:19.255"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:19.258" starttime="20201103 05:20:19.254"></status>
</kw>
<msg timestamp="20201103 05:20:19.258" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:20:19.258" starttime="20201103 05:20:19.253"></status>
</kw>
<msg timestamp="20201103 05:20:19.258" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:20:19.258" starttime="20201103 05:20:19.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:20:19.262" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:20:22.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:20:22.567" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:20:22.567" starttime="20201103 05:20:19.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:20:22.568" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:20:22.568" starttime="20201103 05:20:22.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:20:22.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:20:22.569" starttime="20201103 05:20:22.568"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:22.569" starttime="20201103 05:20:19.259"></status>
</kw>
<msg timestamp="20201103 05:20:22.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:20:22.570" starttime="20201103 05:20:19.259"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:22.570" starttime="20201103 05:20:19.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:20:22.574" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:20:25.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:20:25.827" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:20:25.827" starttime="20201103 05:20:22.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:20:25.829" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:20:25.829" starttime="20201103 05:20:25.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:20:25.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:20:25.830" starttime="20201103 05:20:25.829"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:25.830" starttime="20201103 05:20:22.572"></status>
</kw>
<msg timestamp="20201103 05:20:25.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:20:25.830" starttime="20201103 05:20:22.571"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:25.830" starttime="20201103 05:20:22.570"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:20:25.831" critical="yes" starttime="20201103 05:20:19.251"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201103 05:20:25.832" starttime="20201103 05:19:43.842"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:22:08.071" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:22:08.071" starttime="20201103 05:22:08.070"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:22:08.071" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:22:08.071" starttime="20201103 05:22:08.071"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:08.072" starttime="20201103 05:22:08.070"></status>
</kw>
<msg timestamp="20201103 05:22:08.072" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:22:08.072" starttime="20201103 05:22:08.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:22:08.073" starttime="20201103 05:22:08.072"></status>
</kw>
<msg timestamp="20201103 05:22:08.073" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 05:22:08.073" starttime="20201103 05:22:08.072"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:08.073" starttime="20201103 05:22:08.069"></status>
</kw>
<msg timestamp="20201103 05:22:08.073" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:22:08.073" starttime="20201103 05:22:08.068"></status>
</kw>
<msg timestamp="20201103 05:22:08.073" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:22:08.073" starttime="20201103 05:22:08.067"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:22:08.074" level="INFO">${random} = 73149</msg>
<status status="PASS" endtime="20201103 05:22:08.074" starttime="20201103 05:22:08.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:22:08.078" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-73149 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:22:14.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:22:14.209" level="INFO">${output} = 2020-11-03 05:22:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:22:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 05:22:14.210" starttime="20201103 05:22:08.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:22:14.211" level="INFO">2020-11-03 05:22:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:22:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:22:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:22:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:22:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5CF9B4B0F2A3-&gt;eab12d69-5d01-4c60-aefc-d3bc1c0f875c
2020-11-03 05:22:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 05:22:14.211" starttime="20201103 05:22:14.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:22:14.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:22:14.212" starttime="20201103 05:22:14.211"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:14.212" starttime="20201103 05:22:08.075"></status>
</kw>
<msg timestamp="20201103 05:22:14.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:22:14.212" starttime="20201103 05:22:08.074"></status>
</kw>
<msg timestamp="20201103 05:22:14.213" level="INFO">${result} = 2020-11-03 05:22:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:22:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 05:22:14.213" starttime="20201103 05:22:08.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:22:14.216" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:22:16.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:22:16.119" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 05:20 ofs://om/volume1/bucket1/ozone-53463
-rw-...</msg>
<status status="PASS" endtime="20201103 05:22:16.119" starttime="20201103 05:22:14.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:22:16.120" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 05:20 ofs://om/volume1/bucket1/ozone-53463
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 05:22 ofs://om/volume1/bucket1/ozone-73149
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:20 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:21 ofs://om/volume1/bucket1/wordcount-50.txt</msg>
<status status="PASS" endtime="20201103 05:22:16.120" starttime="20201103 05:22:16.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:22:16.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:22:16.121" starttime="20201103 05:22:16.120"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:16.121" starttime="20201103 05:22:14.214"></status>
</kw>
<msg timestamp="20201103 05:22:16.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:22:16.121" starttime="20201103 05:22:14.213"></status>
</kw>
<msg timestamp="20201103 05:22:16.122" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 05:20 ofs://om/volume1/bucket1/ozone-53463
-rw-...</msg>
<status status="PASS" endtime="20201103 05:22:16.122" starttime="20201103 05:22:14.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:22:16.122" starttime="20201103 05:22:16.122"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:22:16.122" critical="yes" starttime="20201103 05:22:08.066"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 05:22:16.124" starttime="20201103 05:22:08.009"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:20:30.561" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:20:30.561" starttime="20201103 05:20:30.561"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:20:30.562" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:20:30.562" starttime="20201103 05:20:30.561"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:30.562" starttime="20201103 05:20:30.560"></status>
</kw>
<msg timestamp="20201103 05:20:30.562" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:20:30.562" starttime="20201103 05:20:30.560"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:30.562" starttime="20201103 05:20:30.559"></status>
</kw>
<msg timestamp="20201103 05:20:30.563" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:20:30.563" starttime="20201103 05:20:30.559"></status>
</kw>
<msg timestamp="20201103 05:20:30.563" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:20:30.563" starttime="20201103 05:20:30.558"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:20:30.563" level="INFO">${random} = 53463</msg>
<status status="PASS" endtime="20201103 05:20:30.563" starttime="20201103 05:20:30.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:20:30.569" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-53463 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:20:34.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:20:34.625" level="INFO">${output} = 2020-11-03 05:20:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:20:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 05:20:34.625" starttime="20201103 05:20:30.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:20:34.626" level="INFO">2020-11-03 05:20:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:20:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:20:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:20:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:20:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C2FF80467ECA-&gt;eab12d69-5d01-4c60-aefc-d3bc1c0f875c
2020-11-03 05:20:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 05:20:34.627" starttime="20201103 05:20:34.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:20:34.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:20:34.627" starttime="20201103 05:20:34.627"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:34.628" starttime="20201103 05:20:30.564"></status>
</kw>
<msg timestamp="20201103 05:20:34.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:20:34.628" starttime="20201103 05:20:30.564"></status>
</kw>
<msg timestamp="20201103 05:20:34.628" level="INFO">${result} = 2020-11-03 05:20:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:20:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 05:20:34.629" starttime="20201103 05:20:30.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:20:34.633" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:20:36.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:20:36.406" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 05:20 o3fs://bucket1.volume1.om/ozone-53463
dr...</msg>
<status status="PASS" endtime="20201103 05:20:36.407" starttime="20201103 05:20:34.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:20:36.408" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 05:20 o3fs://bucket1.volume1.om/ozone-53463
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:20 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:20:36.408" starttime="20201103 05:20:36.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:20:36.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:20:36.409" starttime="20201103 05:20:36.408"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:36.409" starttime="20201103 05:20:34.630"></status>
</kw>
<msg timestamp="20201103 05:20:36.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:20:36.409" starttime="20201103 05:20:34.630"></status>
</kw>
<msg timestamp="20201103 05:20:36.409" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 05:20 o3fs://bucket1.volume1.om/ozone-53463
dr...</msg>
<status status="PASS" endtime="20201103 05:20:36.409" starttime="20201103 05:20:34.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:20:36.410" starttime="20201103 05:20:36.410"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:20:36.410" critical="yes" starttime="20201103 05:20:30.557"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 05:20:36.412" starttime="20201103 05:20:30.499"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:22:20.759" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:22:20.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:22:20.764" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:22:20.764" starttime="20201103 05:22:20.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:22:20.765" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:22:20.765" starttime="20201103 05:22:20.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:22:20.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:22:20.766" starttime="20201103 05:22:20.766"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:20.766" starttime="20201103 05:22:20.755"></status>
</kw>
<msg timestamp="20201103 05:22:20.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:22:20.766" starttime="20201103 05:22:20.755"></status>
</kw>
<msg timestamp="20201103 05:22:20.767" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:22:20.767" starttime="20201103 05:22:20.754"></status>
</kw>
<msg timestamp="20201103 05:22:20.767" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:22:20.767" starttime="20201103 05:22:20.754"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:22:20.770" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:22:20.770" starttime="20201103 05:22:20.770"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:22:20.771" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:22:20.771" starttime="20201103 05:22:20.770"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:20.771" starttime="20201103 05:22:20.769"></status>
</kw>
<msg timestamp="20201103 05:22:20.771" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:22:20.771" starttime="20201103 05:22:20.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:22:20.772" starttime="20201103 05:22:20.772"></status>
</kw>
<msg timestamp="20201103 05:22:20.772" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 05:22:20.772" starttime="20201103 05:22:20.771"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:20.772" starttime="20201103 05:22:20.768"></status>
</kw>
<msg timestamp="20201103 05:22:20.773" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:22:20.773" starttime="20201103 05:22:20.768"></status>
</kw>
<msg timestamp="20201103 05:22:20.773" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:22:20.773" starttime="20201103 05:22:20.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:22:20.777" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:22:56.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:22:56.416" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:22:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:22:22 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 05:22:56.416" starttime="20201103 05:22:20.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:22:56.417" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:22:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:22:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:22:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:22:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:22:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FCE400FF1F99-&gt;eab12d69-5d01-4c60-aefc-d3bc1c0f875c
2020-11-03 05:22:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 05:22:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-03 05:22:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 05:22:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 05:22:24 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 05:22:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604380725105_0003
2020-11-03 05:22:25 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 05:22:25 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 05:22:25 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 05:22:25 INFO  YarnClientImpl:329 - Submitted application application_1604380725105_0003
2020-11-03 05:22:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604380725105_0003/
2020-11-03 05:22:25 INFO  Job:1619 - Running job: job_1604380725105_0003
2020-11-03 05:22:32 INFO  Job:1640 - Job job_1604380725105_0003 running in uber mode : false
2020-11-03 05:22:32 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 05:22:39 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 05:22:45 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 05:22:50 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 05:22:54 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 05:22:55 INFO  Job:1658 - Job job_1604380725105_0003 completed successfully
2020-11-03 05:22:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39768
		Total time spent by all reduces in occupied slots (ms)=15036
		Total time spent by all map tasks (ms)=9942
		Total time spent by all reduce tasks (ms)=3759
		Total vcore-milliseconds taken by all map tasks=9942
		Total vcore-milliseconds taken by all reduce tasks=3759
		Total megabyte-milliseconds taken by all map tasks=40722432
		Total megabyte-milliseconds taken by all reduce tasks=15396864
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=568
		CPU time spent (ms)=7280
		Physical memory (bytes) snapshot=1307148288
		Virtual memory (bytes) snapshot=16059777024
		Total committed heap usage (bytes)=1400897536
		Peak Map Physical memory (bytes)=365912064
		Peak Map Virtual memory (bytes)=4018753536
		Peak Reduce Physical memory (bytes)=373669888
		Peak Reduce Virtual memory (bytes)=4030263296
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.742 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 05:22:56.418" starttime="20201103 05:22:56.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:22:56.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:22:56.418" starttime="20201103 05:22:56.418"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:56.418" starttime="20201103 05:22:20.774"></status>
</kw>
<msg timestamp="20201103 05:22:56.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:22:56.419" starttime="20201103 05:22:20.773"></status>
</kw>
<msg timestamp="20201103 05:22:56.419" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:22:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:22:22 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 05:22:56.419" starttime="20201103 05:22:20.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:22:56.420" starttime="20201103 05:22:56.419"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:22:56.420" critical="yes" starttime="20201103 05:22:20.753"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:22:56.425" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:22:56.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:22:56.431" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:22:56.431" starttime="20201103 05:22:56.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:22:56.432" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:22:56.432" starttime="20201103 05:22:56.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:22:56.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:22:56.433" starttime="20201103 05:22:56.433"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:56.434" starttime="20201103 05:22:56.422"></status>
</kw>
<msg timestamp="20201103 05:22:56.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:22:56.434" starttime="20201103 05:22:56.422"></status>
</kw>
<msg timestamp="20201103 05:22:56.434" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:22:56.434" starttime="20201103 05:22:56.421"></status>
</kw>
<msg timestamp="20201103 05:22:56.434" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:22:56.434" starttime="20201103 05:22:56.421"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:22:56.435" level="INFO">${random} = 01</msg>
<status status="PASS" endtime="20201103 05:22:56.435" starttime="20201103 05:22:56.434"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:22:56.439" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:22:56.439" starttime="20201103 05:22:56.438"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:22:56.439" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:22:56.439" starttime="20201103 05:22:56.439"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:56.439" starttime="20201103 05:22:56.438"></status>
</kw>
<msg timestamp="20201103 05:22:56.439" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:22:56.439" starttime="20201103 05:22:56.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:22:56.441" starttime="20201103 05:22:56.440"></status>
</kw>
<msg timestamp="20201103 05:22:56.441" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201103 05:22:56.441" starttime="20201103 05:22:56.440"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:56.441" starttime="20201103 05:22:56.436"></status>
</kw>
<msg timestamp="20201103 05:22:56.441" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:22:56.441" starttime="20201103 05:22:56.436"></status>
</kw>
<msg timestamp="20201103 05:22:56.441" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201103 05:22:56.441" starttime="20201103 05:22:56.435"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:22:56.445" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:22:56.445" starttime="20201103 05:22:56.444"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:22:56.445" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:22:56.445" starttime="20201103 05:22:56.445"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:56.445" starttime="20201103 05:22:56.444"></status>
</kw>
<msg timestamp="20201103 05:22:56.446" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:22:56.446" starttime="20201103 05:22:56.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:22:56.447" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201103 05:22:56.447" starttime="20201103 05:22:56.447"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:22:56.448" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201103 05:22:56.448" starttime="20201103 05:22:56.447"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:56.448" starttime="20201103 05:22:56.446"></status>
</kw>
<msg timestamp="20201103 05:22:56.448" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201103 05:22:56.448" starttime="20201103 05:22:56.446"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:56.448" starttime="20201103 05:22:56.443"></status>
</kw>
<msg timestamp="20201103 05:22:56.448" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 05:22:56.448" starttime="20201103 05:22:56.442"></status>
</kw>
<msg timestamp="20201103 05:22:56.449" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201103 05:22:56.449" starttime="20201103 05:22:56.441"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201103 05:22:56.452" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201103 05:22:56.452" starttime="20201103 05:22:56.451"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:22:56.453" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201103 05:22:56.453" starttime="20201103 05:22:56.452"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:56.454" starttime="20201103 05:22:56.451"></status>
</kw>
<msg timestamp="20201103 05:22:56.454" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201103 05:22:56.454" starttime="20201103 05:22:56.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:22:56.455" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201103 05:22:56.455" starttime="20201103 05:22:56.455"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:22:56.456" level="INFO">${result} = /wordcount-01.txt</msg>
<status status="PASS" endtime="20201103 05:22:56.456" starttime="20201103 05:22:56.455"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:56.456" starttime="20201103 05:22:56.454"></status>
</kw>
<msg timestamp="20201103 05:22:56.456" level="INFO">${path_with_leading} = /wordcount-01.txt</msg>
<status status="PASS" endtime="20201103 05:22:56.456" starttime="20201103 05:22:56.454"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:56.456" starttime="20201103 05:22:56.450"></status>
</kw>
<msg timestamp="20201103 05:22:56.456" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-01.txt</msg>
<status status="PASS" endtime="20201103 05:22:56.456" starttime="20201103 05:22:56.449"></status>
</kw>
<msg timestamp="20201103 05:22:56.456" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-01.txt</msg>
<status status="PASS" endtime="20201103 05:22:56.457" starttime="20201103 05:22:56.449"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:22:56.460" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-01.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:23:31.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:23:31.724" level="INFO">${output} = 2020-11-03 05:22:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-03 05:22:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 05:23:31.724" starttime="20201103 05:22:56.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:23:31.725" level="INFO">2020-11-03 05:22:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-03 05:22:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 05:22:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:22:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:22:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:22:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:22:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-856CF6B95A03-&gt;eab12d69-5d01-4c60-aefc-d3bc1c0f875c
2020-11-03 05:22:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:23:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 05:23:00 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 05:23:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604380725105_0004
2020-11-03 05:23:00 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 05:23:00 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 05:23:00 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 05:23:00 INFO  YarnClientImpl:329 - Submitted application application_1604380725105_0004
2020-11-03 05:23:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604380725105_0004/
2020-11-03 05:23:00 INFO  Job:1619 - Running job: job_1604380725105_0004
2020-11-03 05:23:09 INFO  Job:1640 - Job job_1604380725105_0004 running in uber mode : false
2020-11-03 05:23:09 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 05:23:15 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 05:23:21 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 05:23:26 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 05:23:31 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 05:23:31 INFO  Job:1658 - Job job_1604380725105_0004 completed successfully
2020-11-03 05:23:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41544
		Total time spent by all reduces in occupied slots (ms)=15404
		Total time spent by all map tasks (ms)=10386
		Total time spent by all reduce tasks (ms)=3851
		Total vcore-milliseconds taken by all map tasks=10386
		Total vcore-milliseconds taken by all reduce tasks=3851
		Total megabyte-milliseconds taken by all map tasks=42541056
		Total megabyte-milliseconds taken by all reduce tasks=15773696
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=627
		CPU time spent (ms)=8170
		Physical memory (bytes) snapshot=1495977984
		Virtual memory (bytes) snapshot=16096346112
		Total committed heap usage (bytes)=1703936000
		Peak Map Physical memory (bytes)=376528896
		Peak Map Virtual memory (bytes)=4018606080
		Peak Reduce Physical memory (bytes)=379736064
		Peak Reduce Virtual memory (bytes)=4042133504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 05:23:31.726" starttime="20201103 05:23:31.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:23:31.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:23:31.726" starttime="20201103 05:23:31.726"></status>
</kw>
<status status="PASS" endtime="20201103 05:23:31.726" starttime="20201103 05:22:56.457"></status>
</kw>
<msg timestamp="20201103 05:23:31.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:23:31.727" starttime="20201103 05:22:56.457"></status>
</kw>
<msg timestamp="20201103 05:23:31.727" level="INFO">${output} = 2020-11-03 05:22:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-03 05:22:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 05:23:31.727" starttime="20201103 05:22:56.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 05:23:31.728" starttime="20201103 05:23:31.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:23:31.728" starttime="20201103 05:23:31.728"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:23:31.729" critical="yes" starttime="20201103 05:22:56.420"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 05:23:31.730" starttime="20201103 05:22:20.697"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:20:41.288" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:20:41.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:20:41.294" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:20:41.294" starttime="20201103 05:20:41.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:20:41.295" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:20:41.295" starttime="20201103 05:20:41.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:20:41.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:20:41.296" starttime="20201103 05:20:41.295"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:41.296" starttime="20201103 05:20:41.284"></status>
</kw>
<msg timestamp="20201103 05:20:41.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:20:41.296" starttime="20201103 05:20:41.284"></status>
</kw>
<msg timestamp="20201103 05:20:41.296" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:20:41.296" starttime="20201103 05:20:41.284"></status>
</kw>
<msg timestamp="20201103 05:20:41.297" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:20:41.297" starttime="20201103 05:20:41.283"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:20:41.300" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:20:41.300" starttime="20201103 05:20:41.299"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:20:41.301" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:20:41.301" starttime="20201103 05:20:41.300"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:41.301" starttime="20201103 05:20:41.299"></status>
</kw>
<msg timestamp="20201103 05:20:41.301" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:20:41.301" starttime="20201103 05:20:41.299"></status>
</kw>
<status status="PASS" endtime="20201103 05:20:41.301" starttime="20201103 05:20:41.298"></status>
</kw>
<msg timestamp="20201103 05:20:41.302" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:20:41.302" starttime="20201103 05:20:41.297"></status>
</kw>
<msg timestamp="20201103 05:20:41.302" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:20:41.302" starttime="20201103 05:20:41.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:20:41.305" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:21:22.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:21:22.826" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:20:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:20:43 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 05:21:22.826" starttime="20201103 05:20:41.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:21:22.828" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:20:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:20:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:20:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:20:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:20:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9A8A3B307AEB-&gt;eab12d69-5d01-4c60-aefc-d3bc1c0f875c
2020-11-03 05:20:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-03 05:20:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-03 05:20:47 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 05:20:47 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 05:20:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604380725105_0001
2020-11-03 05:20:48 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 05:20:48 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 05:20:48 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 05:20:48 INFO  YarnClientImpl:329 - Submitted application application_1604380725105_0001
2020-11-03 05:20:48 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604380725105_0001/
2020-11-03 05:20:48 INFO  Job:1619 - Running job: job_1604380725105_0001
2020-11-03 05:20:58 INFO  Job:1640 - Job job_1604380725105_0001 running in uber mode : false
2020-11-03 05:20:58 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 05:21:06 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 05:21:11 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 05:21:16 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 05:21:21 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 05:21:22 INFO  Job:1658 - Job job_1604380725105_0001 completed successfully
2020-11-03 05:21:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41676
		Total time spent by all reduces in occupied slots (ms)=15740
		Total time spent by all map tasks (ms)=10419
		Total time spent by all reduce tasks (ms)=3935
		Total vcore-milliseconds taken by all map tasks=10419
		Total vcore-milliseconds taken by all reduce tasks=3935
		Total megabyte-milliseconds taken by all map tasks=42676224
		Total megabyte-milliseconds taken by all reduce tasks=16117760
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=595
		CPU time spent (ms)=7190
		Physical memory (bytes) snapshot=1410236416
		Virtual memory (bytes) snapshot=16071114752
		Total committed heap usage (bytes)=1567096832
		Peak Map Physical memory (bytes)=377004032
		Peak Map Virtual memory (bytes)=4019433472
		Peak Reduce Physical memory (bytes)=382984192
		Peak Reduce Virtual memory (bytes)=4036288512
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.119 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201103 05:21:22.829" starttime="20201103 05:21:22.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:21:22.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:21:22.829" starttime="20201103 05:21:22.829"></status>
</kw>
<status status="PASS" endtime="20201103 05:21:22.830" starttime="20201103 05:20:41.303"></status>
</kw>
<msg timestamp="20201103 05:21:22.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:21:22.830" starttime="20201103 05:20:41.302"></status>
</kw>
<msg timestamp="20201103 05:21:22.830" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-03 05:20:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:20:43 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201103 05:21:22.831" starttime="20201103 05:20:41.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:21:22.831" starttime="20201103 05:21:22.831"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:21:22.831" critical="yes" starttime="20201103 05:20:41.283"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:21:22.837" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:21:22.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:21:22.842" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:21:22.842" starttime="20201103 05:21:22.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:21:22.843" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:21:22.843" starttime="20201103 05:21:22.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:21:22.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:21:22.844" starttime="20201103 05:21:22.843"></status>
</kw>
<status status="PASS" endtime="20201103 05:21:22.844" starttime="20201103 05:21:22.834"></status>
</kw>
<msg timestamp="20201103 05:21:22.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:21:22.845" starttime="20201103 05:21:22.834"></status>
</kw>
<msg timestamp="20201103 05:21:22.845" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:21:22.845" starttime="20201103 05:21:22.834"></status>
</kw>
<msg timestamp="20201103 05:21:22.845" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:21:22.845" starttime="20201103 05:21:22.833"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:21:22.846" level="INFO">${random} = 50</msg>
<status status="PASS" endtime="20201103 05:21:22.846" starttime="20201103 05:21:22.845"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:21:22.849" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:21:22.849" starttime="20201103 05:21:22.849"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:21:22.850" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:21:22.850" starttime="20201103 05:21:22.849"></status>
</kw>
<status status="PASS" endtime="20201103 05:21:22.850" starttime="20201103 05:21:22.848"></status>
</kw>
<msg timestamp="20201103 05:21:22.850" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:21:22.850" starttime="20201103 05:21:22.848"></status>
</kw>
<status status="PASS" endtime="20201103 05:21:22.850" starttime="20201103 05:21:22.847"></status>
</kw>
<msg timestamp="20201103 05:21:22.850" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:21:22.850" starttime="20201103 05:21:22.846"></status>
</kw>
<msg timestamp="20201103 05:21:22.851" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:21:22.851" starttime="20201103 05:21:22.846"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:21:22.854" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:21:22.854" starttime="20201103 05:21:22.853"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:21:22.854" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:21:22.854" starttime="20201103 05:21:22.854"></status>
</kw>
<status status="PASS" endtime="20201103 05:21:22.855" starttime="20201103 05:21:22.853"></status>
</kw>
<msg timestamp="20201103 05:21:22.855" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:21:22.855" starttime="20201103 05:21:22.852"></status>
</kw>
<status status="PASS" endtime="20201103 05:21:22.855" starttime="20201103 05:21:22.852"></status>
</kw>
<msg timestamp="20201103 05:21:22.855" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 05:21:22.855" starttime="20201103 05:21:22.851"></status>
</kw>
<msg timestamp="20201103 05:21:22.855" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 05:21:22.855" starttime="20201103 05:21:22.851"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:21:22.859" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:21:22.859" starttime="20201103 05:21:22.858"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:21:22.860" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:21:22.860" starttime="20201103 05:21:22.859"></status>
</kw>
<status status="PASS" endtime="20201103 05:21:22.860" starttime="20201103 05:21:22.858"></status>
</kw>
<msg timestamp="20201103 05:21:22.860" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:21:22.860" starttime="20201103 05:21:22.857"></status>
</kw>
<status status="PASS" endtime="20201103 05:21:22.860" starttime="20201103 05:21:22.857"></status>
</kw>
<msg timestamp="20201103 05:21:22.860" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-50.txt</msg>
<status status="PASS" endtime="20201103 05:21:22.860" starttime="20201103 05:21:22.856"></status>
</kw>
<msg timestamp="20201103 05:21:22.861" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-50.txt</msg>
<status status="PASS" endtime="20201103 05:21:22.861" starttime="20201103 05:21:22.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:21:22.865" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-50.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:22:03.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:22:03.202" level="INFO">${output} = 2020-11-03 05:21:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-03 05:21:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 05:22:03.202" starttime="20201103 05:21:22.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:22:03.203" level="INFO">2020-11-03 05:21:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-03 05:21:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-03 05:21:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:21:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:21:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:21:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:21:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E5D736BB6D8F-&gt;eab12d69-5d01-4c60-aefc-d3bc1c0f875c
2020-11-03 05:21:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:21:26 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-03 05:21:26 INFO  JobSubmitter:202 - number of splits:3
2020-11-03 05:21:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604380725105_0002
2020-11-03 05:21:26 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-03 05:21:27 INFO  Configuration:2795 - resource-types.xml not found
2020-11-03 05:21:27 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-03 05:21:27 INFO  YarnClientImpl:329 - Submitted application application_1604380725105_0002
2020-11-03 05:21:27 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604380725105_0002/
2020-11-03 05:21:27 INFO  Job:1619 - Running job: job_1604380725105_0002
2020-11-03 05:21:35 INFO  Job:1640 - Job job_1604380725105_0002 running in uber mode : false
2020-11-03 05:21:35 INFO  Job:1647 -  map 0% reduce 0%
2020-11-03 05:21:41 INFO  Job:1647 -  map 33% reduce 0%
2020-11-03 05:21:47 INFO  Job:1647 -  map 67% reduce 0%
2020-11-03 05:21:54 INFO  Job:1647 -  map 100% reduce 0%
2020-11-03 05:21:59 INFO  Job:1647 -  map 100% reduce 100%
2020-11-03 05:22:02 INFO  Job:1658 - Job job_1604380725105_0002 completed successfully
2020-11-03 05:22:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44308
		Total time spent by all reduces in occupied slots (ms)=15744
		Total time spent by all map tasks (ms)=11077
		Total time spent by all reduce tasks (ms)=3936
		Total vcore-milliseconds taken by all map tasks=11077
		Total vcore-milliseconds taken by all reduce tasks=3936
		Total megabyte-milliseconds taken by all map tasks=45371392
		Total megabyte-milliseconds taken by all reduce tasks=16121856
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=603
		CPU time spent (ms)=8120
		Physical memory (bytes) snapshot=1489100800
		Virtual memory (bytes) snapshot=16088444928
		Total committed heap usage (bytes)=1692401664
		Peak Map Physical memory (bytes)=377126912
		Peak Map Virtual memory (bytes)=4017332224
		Peak Reduce Physical memory (bytes)=376475648
		Peak Reduce Virtual memory (bytes)=4039725056
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201103 05:22:03.204" starttime="20201103 05:22:03.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:22:03.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:22:03.204" starttime="20201103 05:22:03.204"></status>
</kw>
<status status="PASS" endtime="20201103 05:22:03.205" starttime="20201103 05:21:22.861"></status>
</kw>
<msg timestamp="20201103 05:22:03.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:22:03.205" starttime="20201103 05:21:22.861"></status>
</kw>
<msg timestamp="20201103 05:22:03.205" level="INFO">${output} = 2020-11-03 05:21:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-03 05:21:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201103 05:22:03.206" starttime="20201103 05:21:22.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201103 05:22:03.206" starttime="20201103 05:22:03.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201103 05:22:03.207" starttime="20201103 05:22:03.206"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201103 05:22:03.207" critical="yes" starttime="20201103 05:21:22.833"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201103 05:22:03.208" starttime="20201103 05:20:41.225"></status>
</suite>
<status status="PASS" elapsedtime="209034" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="633840" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
