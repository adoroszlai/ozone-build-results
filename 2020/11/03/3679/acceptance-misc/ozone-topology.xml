<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201103 05:33:47.433" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201103 05:31:03.290" starttime="20201103 05:31:03.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:31:03.295" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:31:03.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:31:03.416" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 03 Nov 2020 05:31:03 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 03 Nov 2020 04:50:48 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201103 05:31:03.416" starttime="20201103 05:31:03.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:31:03.417" level="INFO">HTTP/1.1 200 OK
Date: Tue, 03 Nov 2020 05:31:03 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 03 Nov 2020 04:50:48 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201103 05:31:03.417" starttime="20201103 05:31:03.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:31:03.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:31:03.418" starttime="20201103 05:31:03.417"></status>
</kw>
<status status="PASS" endtime="20201103 05:31:03.418" starttime="20201103 05:31:03.291"></status>
</kw>
<msg timestamp="20201103 05:31:03.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:31:03.418" starttime="20201103 05:31:03.290"></status>
</kw>
<msg timestamp="20201103 05:31:03.419" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 03 Nov 2020 05:31:03 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 03 Nov 2020 04:50:48 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201103 05:31:03.419" starttime="20201103 05:31:03.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201103 05:31:03.419" starttime="20201103 05:31:03.419"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:31:03.419" critical="yes" starttime="20201103 05:31:03.288"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201103 05:31:03.431" starttime="20201103 05:31:03.431"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:31:03.439" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:32:11.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:32:11.061" level="INFO">${output} = 2020-11-03 05:31:04,997 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:31:05,164 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 05:32:11.061" starttime="20201103 05:31:03.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:32:11.062" level="INFO">2020-11-03 05:31:04,997 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:31:05,164 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:31:05,164 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 05:31:06,969 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-03 05:31:06,971 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-11-03 05:31:06,971 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-11-03 05:31:06,972 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-11-03 05:31:06,972 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-03 05:31:06,972 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-03 05:31:06,972 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-11-03 05:31:06,978 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-11-03 05:31:06,980 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-03 05:31:06,992 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-03 05:31:07,030 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-64895, with hadoop as owner.
2020-11-03 05:31:07,338 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-74234, with hadoop as owner.
2020-11-03 05:31:07,350 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-84848, with hadoop as owner.
2020-11-03 05:31:07,356 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-70732, with hadoop as owner.
2020-11-03 05:31:07,363 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-78001, with hadoop as owner.
2020-11-03 05:31:07,376 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64895/bucket-0-68521, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,461 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-74234/bucket-0-50248, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,470 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84848/bucket-0-47275, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,489 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-70732/bucket-0-77008, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,502 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-78001/bucket-0-27252, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,510 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64895/bucket-1-22369, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,517 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-74234/bucket-1-91645, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,526 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84848/bucket-1-07314, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,533 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-70732/bucket-1-14899, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,543 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-78001/bucket-1-98925, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,552 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64895/bucket-2-12507, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,557 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-74234/bucket-2-97383, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,561 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84848/bucket-2-72298, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,569 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-70732/bucket-2-80587, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,579 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-78001/bucket-2-89991, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,583 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64895/bucket-3-49583, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,589 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-74234/bucket-3-28555, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,594 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84848/bucket-3-24940, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,599 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-70732/bucket-3-64332, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,606 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-78001/bucket-3-79471, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,611 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64895/bucket-4-91518, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,615 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-74234/bucket-4-32288, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,619 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84848/bucket-4-74740, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,624 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-70732/bucket-4-52269, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,629 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-78001/bucket-4-16982, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:31:07,995 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-03 05:31:08,996 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-03 05:31:09,043 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-03 05:31:09,428 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:31:09,429 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-C318487CD929-&gt;f907b4d1-c072-4e9f-b8cc-691107ef5dc1
2020-11-03 05:31:09,431 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:31:10,008 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-03 05:31:11,009 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-03 05:31:12,009 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-03 05:31:12,515 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E7C48317F25D-&gt;f5d82cbb-e84b-4547-a734-d0d51915fc2a
2020-11-03 05:31:12,515 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:31:13,011 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-11-03 05:31:14,012 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-11-03 05:31:15,012 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-11-03 05:31:16,013 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-11-03 05:31:17,014 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-11-03 05:31:18,014 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-11-03 05:31:19,015 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-11-03 05:31:20,015 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-11-03 05:31:21,015 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-11-03 05:31:22,016 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-03 05:31:23,016 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-03 05:31:24,017 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-03 05:31:25,019 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-11-03 05:31:26,019 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-11-03 05:31:27,020 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-11-03 05:31:28,020 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-11-03 05:31:29,021 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-11-03 05:31:30,021 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-11-03 05:31:31,022 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-11-03 05:31:32,022 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-11-03 05:31:33,023 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-11-03 05:31:34,023 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-11-03 05:31:35,024 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-11-03 05:31:36,027 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-11-03 05:31:37,028 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-11-03 05:31:38,028 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-11-03 05:31:39,035 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-11-03 05:31:40,035 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-11-03 05:31:41,036 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-11-03 05:31:42,036 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-11-03 05:31:43,037 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-11-03 05:31:44,037 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-11-03 05:31:45,038 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-11-03 05:31:46,038 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-11-03 05:31:47,038 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-11-03 05:31:48,039 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-11-03 05:31:49,040 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-11-03 05:31:50,040 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-11-03 05:31:51,040 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-11-03 05:31:52,042 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-11-03 05:31:53,043 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-11-03 05:31:54,043 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-11-03 05:31:55,043 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-11-03 05:31:56,044 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-11-03 05:31:57,045 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-11-03 05:31:58,045 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-03 05:31:59,046 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-11-03 05:32:00,048 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-11-03 05:32:01,049 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-11-03 05:32:02,049 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-11-03 05:32:03,050 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-11-03 05:32:04,050 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-11-03 05:32:05,051 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-11-03 05:32:06,051 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,339
Average Time spent in bucket creation: 00:00:00,189
Average Time spent in key creation: 00:00:02,234
Average Time spent in key write: 00:00:01,143
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:05,281
***************************************************</msg>
<status status="PASS" endtime="20201103 05:32:11.063" starttime="20201103 05:32:11.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:32:11.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:32:11.063" starttime="20201103 05:32:11.063"></status>
</kw>
<status status="PASS" endtime="20201103 05:32:11.064" starttime="20201103 05:31:03.437"></status>
</kw>
<msg timestamp="20201103 05:32:11.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:32:11.064" starttime="20201103 05:31:03.436"></status>
</kw>
<msg timestamp="20201103 05:32:11.064" level="INFO">${result} = 2020-11-03 05:31:04,997 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:31:05,164 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 05:32:11.064" starttime="20201103 05:31:03.432"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201103 05:32:11.066" starttime="20201103 05:32:11.065"></status>
</kw>
<status status="PASS" endtime="20201103 05:32:11.066" starttime="20201103 05:32:11.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201103 05:32:11.067" starttime="20201103 05:32:11.066"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:32:11.067" critical="yes" starttime="20201103 05:31:03.430"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 05:32:11.068" starttime="20201103 05:31:03.229"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:32:15.651" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:32:18.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:32:18.344" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201103 05:32:18.344" starttime="20201103 05:32:15.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:32:18.346" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1</msg>
<status status="PASS" endtime="20201103 05:32:18.346" starttime="20201103 05:32:18.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:32:18.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:32:18.347" starttime="20201103 05:32:18.346"></status>
</kw>
<status status="PASS" endtime="20201103 05:32:18.347" starttime="20201103 05:32:15.646"></status>
</kw>
<msg timestamp="20201103 05:32:18.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:32:18.347" starttime="20201103 05:32:15.646"></status>
</kw>
<msg timestamp="20201103 05:32:18.347" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201103 05:32:18.348" starttime="20201103 05:32:15.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201103 05:32:18.348" starttime="20201103 05:32:18.348"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:32:18.348" critical="yes" starttime="20201103 05:32:15.644"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:32:18.354" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:32:20.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:32:20.816" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201103 05:32:20.816" starttime="20201103 05:32:18.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:32:20.818" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201103 05:32:20.818" starttime="20201103 05:32:20.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:32:20.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:32:20.818" starttime="20201103 05:32:20.818"></status>
</kw>
<status status="PASS" endtime="20201103 05:32:20.819" starttime="20201103 05:32:18.351"></status>
</kw>
<msg timestamp="20201103 05:32:20.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:32:20.819" starttime="20201103 05:32:18.351"></status>
</kw>
<msg timestamp="20201103 05:32:20.819" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201103 05:32:20.820" starttime="20201103 05:32:18.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201103 05:32:20.820" starttime="20201103 05:32:20.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201103 05:32:20.821" starttime="20201103 05:32:20.820"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:32:20.821" critical="yes" starttime="20201103 05:32:18.349"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 05:32:20.822" starttime="20201103 05:32:15.580"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:32:25.309" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:32:28.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:32:28.153" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:32:28.153" starttime="20201103 05:32:25.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:32:28.154" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:32:28.154" starttime="20201103 05:32:28.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:32:28.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:32:28.155" starttime="20201103 05:32:28.154"></status>
</kw>
<status status="PASS" endtime="20201103 05:32:28.155" starttime="20201103 05:32:25.304"></status>
</kw>
<msg timestamp="20201103 05:32:28.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:32:28.155" starttime="20201103 05:32:25.303"></status>
</kw>
<msg timestamp="20201103 05:32:28.155" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:32:28.155" starttime="20201103 05:32:25.303"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 05:32:28.156" starttime="20201103 05:32:28.155"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:32:28.159" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:32:31.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:32:31.241" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:32:31.241" starttime="20201103 05:32:28.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:32:31.242" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:32:31.243" starttime="20201103 05:32:31.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:32:31.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:32:31.243" starttime="20201103 05:32:31.243"></status>
</kw>
<status status="PASS" endtime="20201103 05:32:31.244" starttime="20201103 05:32:28.157"></status>
</kw>
<msg timestamp="20201103 05:32:31.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:32:31.244" starttime="20201103 05:32:28.156"></status>
</kw>
<msg timestamp="20201103 05:32:31.244" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:32:31.244" starttime="20201103 05:32:28.156"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 05:32:31.245" starttime="20201103 05:32:31.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:32:31.249" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:32:36.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:32:36.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:32:36.447" starttime="20201103 05:32:31.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:32:36.449" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:32:36.449" starttime="20201103 05:32:36.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:32:36.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:32:36.450" starttime="20201103 05:32:36.449"></status>
</kw>
<status status="PASS" endtime="20201103 05:32:36.450" starttime="20201103 05:32:31.246"></status>
</kw>
<msg timestamp="20201103 05:32:36.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:32:36.450" starttime="20201103 05:32:31.246"></status>
</kw>
<msg timestamp="20201103 05:32:36.450" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:32:36.450" starttime="20201103 05:32:31.245"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 05:32:36.451" starttime="20201103 05:32:36.450"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:32:36.451" critical="yes" starttime="20201103 05:32:25.302"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 05:32:36.453" starttime="20201103 05:32:25.241"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:33:36.206" level="INFO">${random} = 73006</msg>
<status status="PASS" endtime="20201103 05:33:36.206" starttime="20201103 05:33:36.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:33:36.212" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-73006 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:33:41.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:33:41.187" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:33:41.187" starttime="20201103 05:33:36.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:33:41.188" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:33:41.188" starttime="20201103 05:33:41.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:33:41.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:33:41.189" starttime="20201103 05:33:41.188"></status>
</kw>
<status status="PASS" endtime="20201103 05:33:41.189" starttime="20201103 05:33:36.207"></status>
</kw>
<msg timestamp="20201103 05:33:41.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:33:41.189" starttime="20201103 05:33:36.207"></status>
</kw>
<msg timestamp="20201103 05:33:41.189" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:33:41.190" starttime="20201103 05:33:36.207"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 05:33:41.190" starttime="20201103 05:33:41.190"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:33:41.191" critical="yes" starttime="20201103 05:33:36.205"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 05:33:41.192" starttime="20201103 05:33:36.152"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:32:42.585" level="INFO">${random} = 42514</msg>
<status status="PASS" endtime="20201103 05:32:42.585" starttime="20201103 05:32:42.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:32:42.592" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-42514 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:33:05.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:33:05.525" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:33:05.525" starttime="20201103 05:32:42.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:33:05.526" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:33:05.526" starttime="20201103 05:33:05.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:33:05.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:33:05.527" starttime="20201103 05:33:05.526"></status>
</kw>
<status status="PASS" endtime="20201103 05:33:05.527" starttime="20201103 05:32:42.586"></status>
</kw>
<msg timestamp="20201103 05:33:05.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:33:05.527" starttime="20201103 05:32:42.586"></status>
</kw>
<msg timestamp="20201103 05:33:05.528" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:33:05.528" starttime="20201103 05:32:42.585"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 05:33:05.528" starttime="20201103 05:33:05.528"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:33:05.529" critical="yes" starttime="20201103 05:32:42.583"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 05:33:05.530" starttime="20201103 05:32:42.527"></status>
</suite>
<status status="PASS" elapsedtime="112336" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
