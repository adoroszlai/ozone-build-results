<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201103 05:47:29.815" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:37:42.529" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:37:46.685" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 05:37:46.685" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:37:46.685" starttime="20201103 05:37:42.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:37:46.686" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201103 05:37:46.686" starttime="20201103 05:37:46.685"></status>
</kw>
<msg timestamp="20201103 05:37:46.687" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:37:46.687" starttime="20201103 05:37:42.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:37:46.695" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:37:50.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:37:50.931" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:37:50.931" starttime="20201103 05:37:46.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:37:50.932" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:37:50.932" starttime="20201103 05:37:50.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:37:50.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:37:50.933" starttime="20201103 05:37:50.932"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:50.933" starttime="20201103 05:37:46.689"></status>
</kw>
<msg timestamp="20201103 05:37:50.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:37:50.933" starttime="20201103 05:37:46.689"></status>
</kw>
<msg timestamp="20201103 05:37:50.934" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:37:50.934" starttime="20201103 05:37:46.688"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201103 05:37:50.934" starttime="20201103 05:37:50.934"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:50.935" starttime="20201103 05:37:46.688"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:50.935" starttime="20201103 05:37:46.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:37:50.947" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:37:54.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:37:54.646" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:37:54.646" starttime="20201103 05:37:50.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:37:54.647" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:37:54.648" starttime="20201103 05:37:54.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:37:54.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:37:54.649" starttime="20201103 05:37:54.648"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:54.649" starttime="20201103 05:37:50.937"></status>
</kw>
<msg timestamp="20201103 05:37:54.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:37:54.649" starttime="20201103 05:37:50.937"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:54.649" starttime="20201103 05:37:50.936"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:54.649" starttime="20201103 05:37:50.935"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:54.649" starttime="20201103 05:37:50.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 05:37:54.650" starttime="20201103 05:37:54.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:37:54.654" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:37:58.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:37:58.251" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:37:58.251" starttime="20201103 05:37:54.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:37:58.252" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:37:54.476Z",
  "modificationTime" : "2020-11-03T05:37:54.476Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 05:37:58.252" starttime="20201103 05:37:58.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:37:58.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:37:58.253" starttime="20201103 05:37:58.252"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:58.253" starttime="20201103 05:37:54.651"></status>
</kw>
<msg timestamp="20201103 05:37:58.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:37:58.253" starttime="20201103 05:37:54.651"></status>
</kw>
<msg timestamp="20201103 05:37:58.253" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:37:58.253" starttime="20201103 05:37:54.650"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 05:37:58.254" starttime="20201103 05:37:58.254"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:37:58.258" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:37:58.258" starttime="20201103 05:37:58.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:37:58.259" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:37:58.259" starttime="20201103 05:37:58.259"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:58.260" starttime="20201103 05:37:58.257"></status>
</kw>
<msg timestamp="20201103 05:37:58.260" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:37:58.260" starttime="20201103 05:37:58.257"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:58.260" starttime="20201103 05:37:58.256"></status>
</kw>
<msg timestamp="20201103 05:37:58.260" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 05:37:58.260" starttime="20201103 05:37:58.255"></status>
</kw>
<msg timestamp="20201103 05:37:58.261" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201103 05:37:58.261" starttime="20201103 05:37:58.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:37:58.264" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:38:01.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:38:01.695" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:38:01.695" starttime="20201103 05:37:58.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:38:01.696" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:38:01.696" starttime="20201103 05:38:01.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:38:01.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:38:01.696" starttime="20201103 05:38:01.696"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:01.697" starttime="20201103 05:37:58.262"></status>
</kw>
<msg timestamp="20201103 05:38:01.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:38:01.697" starttime="20201103 05:37:58.261"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:01.697" starttime="20201103 05:37:58.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:38:01.701" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:38:10.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:38:10.467" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:38:10.467" starttime="20201103 05:38:01.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:38:10.468" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:38:10.469" starttime="20201103 05:38:10.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:38:10.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:38:10.469" starttime="20201103 05:38:10.469"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:10.470" starttime="20201103 05:38:01.698"></status>
</kw>
<msg timestamp="20201103 05:38:10.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:38:10.470" starttime="20201103 05:38:01.698"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:10.470" starttime="20201103 05:38:01.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:38:10.481" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:38:17.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:38:17.135" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:38:17.136" starttime="20201103 05:38:10.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:38:17.137" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:38:17.137" starttime="20201103 05:38:17.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:38:17.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:38:17.138" starttime="20201103 05:38:17.138"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:17.143" starttime="20201103 05:38:10.476"></status>
</kw>
<msg timestamp="20201103 05:38:17.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:38:17.143" starttime="20201103 05:38:10.471"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:17.144" starttime="20201103 05:38:10.471"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:38:17.152" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:38:23.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:38:23.187" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:38:23.187" starttime="20201103 05:38:17.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:38:23.188" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:38:23.188" starttime="20201103 05:38:23.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:38:23.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:38:23.189" starttime="20201103 05:38:23.189"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:23.189" starttime="20201103 05:38:17.146"></status>
</kw>
<msg timestamp="20201103 05:38:23.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:38:23.190" starttime="20201103 05:38:17.145"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:23.190" starttime="20201103 05:38:17.144"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:38:23.190" critical="yes" starttime="20201103 05:37:42.524"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:38:23.196" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:38:23.196" starttime="20201103 05:38:23.196"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:38:23.197" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:38:23.197" starttime="20201103 05:38:23.196"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:23.197" starttime="20201103 05:38:23.195"></status>
</kw>
<msg timestamp="20201103 05:38:23.198" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:38:23.198" starttime="20201103 05:38:23.195"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:23.198" starttime="20201103 05:38:23.194"></status>
</kw>
<msg timestamp="20201103 05:38:23.198" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:38:23.198" starttime="20201103 05:38:23.193"></status>
</kw>
<msg timestamp="20201103 05:38:23.199" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:38:23.199" starttime="20201103 05:38:23.192"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:38:23.203" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:38:26.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:38:26.589" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:38:26.589" starttime="20201103 05:38:23.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:38:26.590" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:38:26.590" starttime="20201103 05:38:26.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:38:26.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:38:26.591" starttime="20201103 05:38:26.590"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:26.591" starttime="20201103 05:38:23.200"></status>
</kw>
<msg timestamp="20201103 05:38:26.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:38:26.592" starttime="20201103 05:38:23.200"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:26.592" starttime="20201103 05:38:23.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:38:26.597" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:38:30.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:38:30.329" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:38:30.329" starttime="20201103 05:38:26.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:38:30.330" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:38:30.330" starttime="20201103 05:38:30.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:38:30.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:38:30.331" starttime="20201103 05:38:30.330"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:30.331" starttime="20201103 05:38:26.593"></status>
</kw>
<msg timestamp="20201103 05:38:30.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:38:30.332" starttime="20201103 05:38:26.593"></status>
</kw>
<status status="PASS" endtime="20201103 05:38:30.332" starttime="20201103 05:38:26.592"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:38:30.332" critical="yes" starttime="20201103 05:38:23.191"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201103 05:38:30.334" starttime="20201103 05:37:42.459"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-o3fs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:39:09.314" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:39:09.314" starttime="20201103 05:39:09.314"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:39:09.315" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:39:09.315" starttime="20201103 05:39:09.314"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:09.315" starttime="20201103 05:39:09.313"></status>
</kw>
<msg timestamp="20201103 05:39:09.315" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:39:09.315" starttime="20201103 05:39:09.313"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:09.315" starttime="20201103 05:39:09.312"></status>
</kw>
<msg timestamp="20201103 05:39:09.316" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:39:09.316" starttime="20201103 05:39:09.312"></status>
</kw>
<msg timestamp="20201103 05:39:09.316" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:39:09.316" starttime="20201103 05:39:09.310"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:39:09.316" level="INFO">${random} = 54769</msg>
<status status="PASS" endtime="20201103 05:39:09.316" starttime="20201103 05:39:09.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:39:09.322" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-54769 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:39:13.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:39:13.290" level="INFO">${output} = 2020-11-03 05:39:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:39:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 05:39:13.290" starttime="20201103 05:39:09.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:39:13.291" level="INFO">2020-11-03 05:39:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:39:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:39:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-03 05:39:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:39:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-69B1FB2529B4-&gt;d5938190-10a7-4735-a22b-a1bab10b62a6
2020-11-03 05:39:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201103 05:39:13.291" starttime="20201103 05:39:13.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:39:13.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:39:13.292" starttime="20201103 05:39:13.291"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:13.292" starttime="20201103 05:39:09.317"></status>
</kw>
<msg timestamp="20201103 05:39:13.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:39:13.292" starttime="20201103 05:39:09.317"></status>
</kw>
<msg timestamp="20201103 05:39:13.292" level="INFO">${result} = 2020-11-03 05:39:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-03 05:39:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201103 05:39:13.292" starttime="20201103 05:39:09.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:39:13.295" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:39:15.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:39:15.544" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 05:39 o3fs://bucket1.volume1.om/ozone-54769
dr...</msg>
<status status="PASS" endtime="20201103 05:39:15.544" starttime="20201103 05:39:13.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:39:15.545" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 05:39 o3fs://bucket1.volume1.om/ozone-54769
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:38 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201103 05:39:15.545" starttime="20201103 05:39:15.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:39:15.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:39:15.546" starttime="20201103 05:39:15.545"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:15.546" starttime="20201103 05:39:13.293"></status>
</kw>
<msg timestamp="20201103 05:39:15.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:39:15.546" starttime="20201103 05:39:13.293"></status>
</kw>
<msg timestamp="20201103 05:39:15.546" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-03 05:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-03 05:39 o3fs://bucket1.volume1.om/ozone-54769
dr...</msg>
<status status="PASS" endtime="20201103 05:39:15.546" starttime="20201103 05:39:13.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:39:15.547" starttime="20201103 05:39:15.546"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:39:15.547" critical="yes" starttime="20201103 05:39:09.310"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201103 05:39:15.548" starttime="20201103 05:39:09.254"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s3" name="Kinit-Hadoop">
<test id="s1-s3-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:39:04.286" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:39:04.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:39:04.288" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201103 05:39:04.288" starttime="20201103 05:39:04.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:39:04.289" level="INFO">rm</msg>
<status status="PASS" endtime="20201103 05:39:04.289" starttime="20201103 05:39:04.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:39:04.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:39:04.290" starttime="20201103 05:39:04.289"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:04.290" starttime="20201103 05:39:04.280"></status>
</kw>
<msg timestamp="20201103 05:39:04.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:39:04.290" starttime="20201103 05:39:04.280"></status>
</kw>
<msg timestamp="20201103 05:39:04.291" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201103 05:39:04.291" starttime="20201103 05:39:04.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:39:04.292" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:39:04.292" starttime="20201103 05:39:04.291"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:39:04.297" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:39:04.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:39:04.310" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:39:04.310" starttime="20201103 05:39:04.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:39:04.311" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:39:04.311" starttime="20201103 05:39:04.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:39:04.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:39:04.312" starttime="20201103 05:39:04.311"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:04.312" starttime="20201103 05:39:04.294"></status>
</kw>
<msg timestamp="20201103 05:39:04.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:39:04.313" starttime="20201103 05:39:04.294"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:04.313" starttime="20201103 05:39:04.293"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:04.313" starttime="20201103 05:39:04.293"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:04.313" starttime="20201103 05:39:04.279"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:39:04.313" critical="yes" starttime="20201103 05:39:04.278"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201103 05:39:04.314" starttime="20201103 05:39:04.225"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s4" name="Kinit">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:37:37.293" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:37:37.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:37:37.294" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201103 05:37:37.294" starttime="20201103 05:37:37.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:37:37.295" level="INFO">om</msg>
<status status="PASS" endtime="20201103 05:37:37.295" starttime="20201103 05:37:37.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:37:37.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:37:37.296" starttime="20201103 05:37:37.295"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:37.296" starttime="20201103 05:37:37.287"></status>
</kw>
<msg timestamp="20201103 05:37:37.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:37:37.296" starttime="20201103 05:37:37.287"></status>
</kw>
<msg timestamp="20201103 05:37:37.296" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201103 05:37:37.296" starttime="20201103 05:37:37.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:37:37.297" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:37:37.297" starttime="20201103 05:37:37.297"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:37:37.302" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:37:37.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:37:37.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:37:37.319" starttime="20201103 05:37:37.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:37:37.320" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:37:37.320" starttime="20201103 05:37:37.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:37:37.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:37:37.321" starttime="20201103 05:37:37.321"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:37.322" starttime="20201103 05:37:37.299"></status>
</kw>
<msg timestamp="20201103 05:37:37.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:37:37.322" starttime="20201103 05:37:37.298"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:37.322" starttime="20201103 05:37:37.298"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:37.322" starttime="20201103 05:37:37.297"></status>
</kw>
<status status="PASS" endtime="20201103 05:37:37.323" starttime="20201103 05:37:37.285"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:37:37.323" critical="yes" starttime="20201103 05:37:37.284"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201103 05:37:37.324" starttime="20201103 05:37:37.229"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s5" name="mapreduce-o3fs">
<test id="s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:39:20.478" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:39:20.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:39:20.486" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:39:20.486" starttime="20201103 05:39:20.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:39:20.487" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:39:20.487" starttime="20201103 05:39:20.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:39:20.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:39:20.488" starttime="20201103 05:39:20.487"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:20.488" starttime="20201103 05:39:20.474"></status>
</kw>
<msg timestamp="20201103 05:39:20.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:39:20.488" starttime="20201103 05:39:20.474"></status>
</kw>
<msg timestamp="20201103 05:39:20.488" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:39:20.488" starttime="20201103 05:39:20.473"></status>
</kw>
<msg timestamp="20201103 05:39:20.488" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:39:20.489" starttime="20201103 05:39:20.473"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:39:20.492" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:39:20.493" starttime="20201103 05:39:20.492"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:39:20.493" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:39:20.493" starttime="20201103 05:39:20.493"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:20.494" starttime="20201103 05:39:20.491"></status>
</kw>
<msg timestamp="20201103 05:39:20.494" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:39:20.494" starttime="20201103 05:39:20.491"></status>
</kw>
<status status="PASS" endtime="20201103 05:39:20.494" starttime="20201103 05:39:20.490"></status>
</kw>
<msg timestamp="20201103 05:39:20.494" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:39:20.494" starttime="20201103 05:39:20.490"></status>
</kw>
<msg timestamp="20201103 05:39:20.494" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:39:20.494" starttime="20201103 05:39:20.489"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:39:20.499" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:43:20.474" level="FAIL">Test timeout 4 minutes exceeded.</msg>
<status status="FAIL" endtime="20201103 05:43:20.474" starttime="20201103 05:39:20.496"></status>
</kw>
<status status="FAIL" endtime="20201103 05:43:20.475" starttime="20201103 05:39:20.495"></status>
</kw>
<msg timestamp="20201103 05:43:20.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201103 05:43:20.475" starttime="20201103 05:39:20.495"></status>
</kw>
<status status="FAIL" endtime="20201103 05:43:20.475" starttime="20201103 05:39:20.495"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201103 05:43:20.475" critical="yes" starttime="20201103 05:39:20.472">Test timeout 4 minutes exceeded.</status>
</test>
<test id="s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:43:20.483" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:43:20.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:43:20.489" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:43:20.489" starttime="20201103 05:43:20.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:43:20.490" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:43:20.490" starttime="20201103 05:43:20.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:43:20.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:43:20.491" starttime="20201103 05:43:20.491"></status>
</kw>
<status status="PASS" endtime="20201103 05:43:20.492" starttime="20201103 05:43:20.480"></status>
</kw>
<msg timestamp="20201103 05:43:20.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:43:20.492" starttime="20201103 05:43:20.480"></status>
</kw>
<msg timestamp="20201103 05:43:20.492" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:43:20.492" starttime="20201103 05:43:20.479"></status>
</kw>
<msg timestamp="20201103 05:43:20.492" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201103 05:43:20.492" starttime="20201103 05:43:20.478"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:43:20.493" level="INFO">${random} = 50</msg>
<status status="PASS" endtime="20201103 05:43:20.493" starttime="20201103 05:43:20.493"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:43:20.497" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:43:20.497" starttime="20201103 05:43:20.496"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:43:20.497" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:43:20.497" starttime="20201103 05:43:20.497"></status>
</kw>
<status status="PASS" endtime="20201103 05:43:20.498" starttime="20201103 05:43:20.496"></status>
</kw>
<msg timestamp="20201103 05:43:20.498" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:43:20.498" starttime="20201103 05:43:20.495"></status>
</kw>
<status status="PASS" endtime="20201103 05:43:20.498" starttime="20201103 05:43:20.495"></status>
</kw>
<msg timestamp="20201103 05:43:20.498" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:43:20.498" starttime="20201103 05:43:20.494"></status>
</kw>
<msg timestamp="20201103 05:43:20.498" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201103 05:43:20.498" starttime="20201103 05:43:20.493"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:43:20.501" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:43:20.501" starttime="20201103 05:43:20.501"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:43:20.502" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:43:20.502" starttime="20201103 05:43:20.501"></status>
</kw>
<status status="PASS" endtime="20201103 05:43:20.502" starttime="20201103 05:43:20.500"></status>
</kw>
<msg timestamp="20201103 05:43:20.502" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:43:20.502" starttime="20201103 05:43:20.500"></status>
</kw>
<status status="PASS" endtime="20201103 05:43:20.502" starttime="20201103 05:43:20.499"></status>
</kw>
<msg timestamp="20201103 05:43:20.502" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 05:43:20.503" starttime="20201103 05:43:20.499"></status>
</kw>
<msg timestamp="20201103 05:43:20.503" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201103 05:43:20.503" starttime="20201103 05:43:20.498"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201103 05:43:20.506" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201103 05:43:20.506" starttime="20201103 05:43:20.505"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:43:20.507" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201103 05:43:20.507" starttime="20201103 05:43:20.506"></status>
</kw>
<status status="PASS" endtime="20201103 05:43:20.507" starttime="20201103 05:43:20.505"></status>
</kw>
<msg timestamp="20201103 05:43:20.507" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201103 05:43:20.507" starttime="20201103 05:43:20.504"></status>
</kw>
<status status="PASS" endtime="20201103 05:43:20.508" starttime="20201103 05:43:20.504"></status>
</kw>
<msg timestamp="20201103 05:43:20.508" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-50.txt</msg>
<status status="PASS" endtime="20201103 05:43:20.508" starttime="20201103 05:43:20.503"></status>
</kw>
<msg timestamp="20201103 05:43:20.509" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-50.txt</msg>
<status status="PASS" endtime="20201103 05:43:20.509" starttime="20201103 05:43:20.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:43:20.513" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-50.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:47:20.478" level="FAIL">Test timeout 4 minutes exceeded.</msg>
<status status="FAIL" endtime="20201103 05:47:20.478" starttime="20201103 05:43:20.511"></status>
</kw>
<status status="FAIL" endtime="20201103 05:47:20.478" starttime="20201103 05:43:20.510"></status>
</kw>
<msg timestamp="20201103 05:47:20.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201103 05:47:20.479" starttime="20201103 05:43:20.510"></status>
</kw>
<status status="FAIL" endtime="20201103 05:47:20.479" starttime="20201103 05:43:20.509"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201103 05:47:20.479" critical="yes" starttime="20201103 05:43:20.477">Test timeout 4 minutes exceeded.</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201103 05:47:20.480" starttime="20201103 05:39:20.415"></status>
</suite>
<status status="FAIL" elapsedtime="534418" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="5">Critical Tests</stat>
<stat fail="2" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="ozonesecure-mr" pass="5">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s4" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="2" id="s1-s5" name="mapreduce-o3fs" pass="0">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
