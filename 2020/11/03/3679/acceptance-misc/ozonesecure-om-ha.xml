<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201103 05:53:47.718" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:49:30.827" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:49:41.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:49:41.616" level="INFO">${output} = 2020-11-03 05:49:32,637 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:32,860 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 05:49:41.616" starttime="20201103 05:49:30.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:49:41.617" level="INFO">2020-11-03 05:49:32,637 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:32,860 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:49:32,860 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 05:49:36,106 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-03 05:49:36,106 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-03 05:49:36,106 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-03 05:49:36,106 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-03 05:49:36,107 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-03 05:49:36,107 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-03 05:49:36,107 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-03 05:49:36,109 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-03 05:49:36,114 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 05:49:36,154 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-04219, with testuser/scm@EXAMPLE.COM as owner.
2020-11-03 05:49:36,638 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-04219/bucket-0-97435, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:49:37,122 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 05:49:38,123 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 05:49:38,949 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-03 05:49:39,124 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 05:49:40,124 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,424
Average Time spent in bucket creation: 00:00:00,217
Average Time spent in key creation: 00:00:01,115
Average Time spent in key write: 00:00:01,234
Total bytes written: 10240
Total Execution time: 00:00:08,198
***************************************************</msg>
<status status="PASS" endtime="20201103 05:49:41.617" starttime="20201103 05:49:41.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:49:41.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:49:41.619" starttime="20201103 05:49:41.618"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:41.619" starttime="20201103 05:49:30.823"></status>
</kw>
<msg timestamp="20201103 05:49:41.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:49:41.619" starttime="20201103 05:49:30.823"></status>
</kw>
<msg timestamp="20201103 05:49:41.620" level="INFO">${result} = 2020-11-03 05:49:32,637 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:32,860 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 05:49:41.620" starttime="20201103 05:49:30.822"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 05:49:41.621" starttime="20201103 05:49:41.620"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:41.621" starttime="20201103 05:49:41.620"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:49:41.621" critical="yes" starttime="20201103 05:49:30.821"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:49:41.627" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:49:50.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:49:50.000" level="INFO">${output} = 2020-11-03 05:49:43,446 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:43,644 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 05:49:50.000" starttime="20201103 05:49:41.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:49:50.002" level="INFO">2020-11-03 05:49:43,446 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:43,644 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:49:43,644 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 05:49:43,809 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xcratdxvci
2020-11-03 05:49:43,830 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 05:49:44,838 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 05:49:45,365 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-03 05:49:45,429 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-03 05:49:45,838 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 05:49:46,036 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-03 05:49:46,359 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-03 05:49:46,359 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-416FA3ACC2DC-&gt;49460cae-ba60-4923-8815-c3a38836c7b2
2020-11-03 05:49:46,360 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-03 05:49:46,839 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 05:49:47,839 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 05:49:48,840 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-03 05:49:49,632 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3068.738484, max=3068.738484, mean=3068.738484, stddev=0.0, median=3068.738484, p75=3068.738484, p95=3068.738484, p98=3068.738484, p99=3068.738484, p999=3068.738484, mean_rate=0.2415951563727428, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-03 05:49:49,633 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-11-03 05:49:49,657 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-03 05:49:49,657 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201103 05:49:50.003" starttime="20201103 05:49:50.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:49:50.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:49:50.003" starttime="20201103 05:49:50.003"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:50.004" starttime="20201103 05:49:41.624"></status>
</kw>
<msg timestamp="20201103 05:49:50.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:49:50.004" starttime="20201103 05:49:41.624"></status>
</kw>
<msg timestamp="20201103 05:49:50.004" level="INFO">${result} = 2020-11-03 05:49:43,446 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:43,644 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 05:49:50.004" starttime="20201103 05:49:41.623"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 05:49:50.006" starttime="20201103 05:49:50.005"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:50.006" starttime="20201103 05:49:50.005"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:49:50.006" critical="yes" starttime="20201103 05:49:41.622"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:49:50.013" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:49:54.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:49:54.625" level="INFO">${output} = 2020-11-03 05:49:51,699 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:51,862 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 05:49:54.625" starttime="20201103 05:49:50.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:49:54.626" level="INFO">2020-11-03 05:49:51,699 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:51,862 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:49:51,862 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 05:49:52,038 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ipefbaydcb
2020-11-03 05:49:52,063 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 05:49:53,064 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 05:49:54,065 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-03 05:49:54,596 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=220.881074, max=220.881074, mean=220.881074, stddev=0.0, median=220.881074, p75=220.881074, p95=220.881074, p98=220.881074, p99=220.881074, p999=220.881074, mean_rate=0.8762693484434415, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-03 05:49:54,597 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-03 05:49:54,600 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-03 05:49:54,600 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201103 05:49:54.626" starttime="20201103 05:49:54.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:49:54.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:49:54.627" starttime="20201103 05:49:54.626"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:54.628" starttime="20201103 05:49:50.009"></status>
</kw>
<msg timestamp="20201103 05:49:54.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:49:54.628" starttime="20201103 05:49:50.008"></status>
</kw>
<msg timestamp="20201103 05:49:54.628" level="INFO">${result} = 2020-11-03 05:49:51,699 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:51,862 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 05:49:54.628" starttime="20201103 05:49:50.008"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 05:49:54.629" starttime="20201103 05:49:54.629"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:54.629" starttime="20201103 05:49:54.628"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:49:54.629" critical="yes" starttime="20201103 05:49:50.007"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:49:54.634" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:49:59.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:49:59.447" level="INFO">${output} = 2020-11-03 05:49:56,351 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:56,572 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 05:49:59.447" starttime="20201103 05:49:54.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:49:59.452" level="INFO">2020-11-03 05:49:56,351 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:56,572 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-03 05:49:56,572 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-03 05:49:56,779 [main] INFO freon.BaseFreonGenerator: Executing test with prefix oalqvax5if
2020-11-03 05:49:56,798 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-03 05:49:57,801 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-03 05:49:58,802 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-03 05:49:59,381 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=88.956394, max=88.956394, mean=88.956394, stddev=0.0, median=88.956394, p75=88.956394, p95=88.956394, p98=88.956394, p99=88.956394, p999=88.956394, mean_rate=0.9001467077107161, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-03 05:49:59,381 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-03 05:49:59,383 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-03 05:49:59,383 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201103 05:49:59.452" starttime="20201103 05:49:59.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:49:59.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:49:59.453" starttime="20201103 05:49:59.452"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:59.453" starttime="20201103 05:49:54.632"></status>
</kw>
<msg timestamp="20201103 05:49:59.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:49:59.453" starttime="20201103 05:49:54.632"></status>
</kw>
<msg timestamp="20201103 05:49:59.453" level="INFO">${result} = 2020-11-03 05:49:56,351 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-03 05:49:56,572 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201103 05:49:59.453" starttime="20201103 05:49:54.631"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201103 05:49:59.455" starttime="20201103 05:49:59.454"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:59.455" starttime="20201103 05:49:59.454"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201103 05:49:59.455" critical="yes" starttime="20201103 05:49:54.630"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201103 05:49:59.457" starttime="20201103 05:49:30.793"></status>
</suite>
<status status="PASS" endtime="20201103 05:49:59.462" starttime="20201103 05:49:30.763"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:49:24.113" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:49:24.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:49:24.117" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:49:24.117" starttime="20201103 05:49:24.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:49:24.117" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:49:24.117" starttime="20201103 05:49:24.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:49:24.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:49:24.118" starttime="20201103 05:49:24.118"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:24.119" starttime="20201103 05:49:24.103"></status>
</kw>
<msg timestamp="20201103 05:49:24.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:49:24.119" starttime="20201103 05:49:24.103"></status>
</kw>
<msg timestamp="20201103 05:49:24.119" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:49:24.119" starttime="20201103 05:49:24.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:49:24.120" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:49:24.120" starttime="20201103 05:49:24.119"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:49:24.132" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:49:24.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:49:24.149" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:49:24.149" starttime="20201103 05:49:24.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:49:24.150" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:49:24.150" starttime="20201103 05:49:24.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:49:24.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:49:24.151" starttime="20201103 05:49:24.150"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:24.151" starttime="20201103 05:49:24.129"></status>
</kw>
<msg timestamp="20201103 05:49:24.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:49:24.151" starttime="20201103 05:49:24.129"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:24.151" starttime="20201103 05:49:24.121"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:24.152" starttime="20201103 05:49:24.120"></status>
</kw>
<status status="PASS" endtime="20201103 05:49:24.152" starttime="20201103 05:49:24.101"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:49:24.152" critical="yes" starttime="20201103 05:49:24.097"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201103 05:49:24.153" starttime="20201103 05:49:23.984"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201103 05:50:04.894" level="INFO">${random} = 07319</msg>
<status status="PASS" endtime="20201103 05:50:04.894" starttime="20201103 05:50:04.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201103 05:50:04.896" level="INFO">${source} = 07319-source</msg>
<status status="PASS" endtime="20201103 05:50:04.896" starttime="20201103 05:50:04.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201103 05:50:04.897" level="INFO">${target} = 07319-target</msg>
<status status="PASS" endtime="20201103 05:50:04.897" starttime="20201103 05:50:04.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:04.903" level="INFO">Running command 'ozone sh volume create 07319-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:08.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:08.389" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:08.389" starttime="20201103 05:50:04.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:08.390" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:50:08.390" starttime="20201103 05:50:08.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:08.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:08.391" starttime="20201103 05:50:08.390"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:08.391" starttime="20201103 05:50:04.897"></status>
</kw>
<msg timestamp="20201103 05:50:08.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:08.391" starttime="20201103 05:50:04.897"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:08.392" starttime="20201103 05:50:04.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:08.395" level="INFO">Running command 'ozone sh volume create 07319-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:11.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:11.791" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:11.791" starttime="20201103 05:50:08.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:11.792" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:50:11.792" starttime="20201103 05:50:11.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:11.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:11.793" starttime="20201103 05:50:11.792"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:11.793" starttime="20201103 05:50:08.393"></status>
</kw>
<msg timestamp="20201103 05:50:11.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:11.793" starttime="20201103 05:50:08.392"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:11.794" starttime="20201103 05:50:08.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:11.798" level="INFO">Running command 'ozone sh bucket create 07319-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:16.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:16.012" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:16.012" starttime="20201103 05:50:11.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:16.013" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:50:16.014" starttime="20201103 05:50:16.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:16.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:16.015" starttime="20201103 05:50:16.014"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:16.015" starttime="20201103 05:50:11.796"></status>
</kw>
<msg timestamp="20201103 05:50:16.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:16.015" starttime="20201103 05:50:11.795"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:16.015" starttime="20201103 05:50:11.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:16.021" level="INFO">Running command 'ozone sh key put 07319-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:23.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:23.003" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:23.003" starttime="20201103 05:50:16.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:23.005" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:50:23.005" starttime="20201103 05:50:23.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:23.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:23.006" starttime="20201103 05:50:23.005"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:23.006" starttime="20201103 05:50:16.017"></status>
</kw>
<msg timestamp="20201103 05:50:23.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:23.006" starttime="20201103 05:50:16.016"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:23.007" starttime="20201103 05:50:16.016"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:23.010" level="INFO">Running command 'ozone sh bucket create 07319-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:26.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:26.570" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:26.570" starttime="20201103 05:50:23.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:26.571" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:50:26.571" starttime="20201103 05:50:26.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:26.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:26.572" starttime="20201103 05:50:26.571"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:26.572" starttime="20201103 05:50:23.008"></status>
</kw>
<msg timestamp="20201103 05:50:26.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:26.573" starttime="20201103 05:50:23.007"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:26.573" starttime="20201103 05:50:23.007"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:26.577" level="INFO">Running command 'ozone sh bucket link 07319-source/readable-bucket 07319-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:30.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:30.194" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:30.195" starttime="20201103 05:50:26.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:30.196" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:50:30.196" starttime="20201103 05:50:30.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:30.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:30.197" starttime="20201103 05:50:30.196"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:30.197" starttime="20201103 05:50:26.574"></status>
</kw>
<msg timestamp="20201103 05:50:30.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:30.198" starttime="20201103 05:50:26.574"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:30.198" starttime="20201103 05:50:26.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:30.203" level="INFO">Running command 'ozone sh bucket link 07319-source/readable-bucket 07319-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:33.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:33.788" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:33.788" starttime="20201103 05:50:30.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:33.789" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:50:33.789" starttime="20201103 05:50:33.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:33.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:33.789" starttime="20201103 05:50:33.789"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:33.790" starttime="20201103 05:50:30.199"></status>
</kw>
<msg timestamp="20201103 05:50:33.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:33.790" starttime="20201103 05:50:30.199"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:33.791" starttime="20201103 05:50:30.198"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:33.795" level="INFO">Running command 'ozone sh bucket link 07319-source/unreadable-bucket 07319-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:37.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:37.306" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:37.306" starttime="20201103 05:50:33.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:37.307" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:50:37.307" starttime="20201103 05:50:37.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:37.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:37.308" starttime="20201103 05:50:37.308"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:37.308" starttime="20201103 05:50:33.792"></status>
</kw>
<msg timestamp="20201103 05:50:37.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:37.309" starttime="20201103 05:50:33.791"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:37.309" starttime="20201103 05:50:33.791"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:37.314" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 07319-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:40.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:40.709" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:40.709" starttime="20201103 05:50:37.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:40.710" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 05:50:40.710" starttime="20201103 05:50:40.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:40.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:40.711" starttime="20201103 05:50:40.710"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:40.711" starttime="20201103 05:50:37.310"></status>
</kw>
<msg timestamp="20201103 05:50:40.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:40.711" starttime="20201103 05:50:37.310"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:40.712" starttime="20201103 05:50:37.309"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:40.716" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 07319-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:44.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:44.492" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:44.492" starttime="20201103 05:50:40.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:44.493" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 05:50:44.493" starttime="20201103 05:50:44.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:44.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:44.494" starttime="20201103 05:50:44.494"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:44.495" starttime="20201103 05:50:40.713"></status>
</kw>
<msg timestamp="20201103 05:50:44.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:44.495" starttime="20201103 05:50:40.713"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:44.495" starttime="20201103 05:50:40.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:44.500" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 07319-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:47.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:47.905" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:47.905" starttime="20201103 05:50:44.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:47.906" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 05:50:47.906" starttime="20201103 05:50:47.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:47.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:47.907" starttime="20201103 05:50:47.906"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:47.907" starttime="20201103 05:50:44.497"></status>
</kw>
<msg timestamp="20201103 05:50:47.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:47.907" starttime="20201103 05:50:44.496"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:47.908" starttime="20201103 05:50:44.495"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:47.911" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 07319-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:51.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:51.447" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:51.448" starttime="20201103 05:50:47.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:51.449" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 05:50:51.449" starttime="20201103 05:50:51.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:51.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:51.449" starttime="20201103 05:50:51.449"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:51.450" starttime="20201103 05:50:47.909"></status>
</kw>
<msg timestamp="20201103 05:50:51.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:51.450" starttime="20201103 05:50:47.908"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:51.450" starttime="20201103 05:50:47.908"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:51.454" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 07319-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:54.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:54.874" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:54.874" starttime="20201103 05:50:51.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:54.875" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 05:50:54.875" starttime="20201103 05:50:54.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:54.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:54.876" starttime="20201103 05:50:54.875"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.876" starttime="20201103 05:50:51.451"></status>
</kw>
<msg timestamp="20201103 05:50:54.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:54.876" starttime="20201103 05:50:51.451"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.877" starttime="20201103 05:50:51.450"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.877" starttime="20201103 05:50:11.794"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.877" starttime="20201103 05:50:11.794"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.877" starttime="20201103 05:50:04.894"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:54.884" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:54.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:54.886" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:50:54.887" starttime="20201103 05:50:54.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:54.888" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:50:54.888" starttime="20201103 05:50:54.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:54.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:54.889" starttime="20201103 05:50:54.888"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.889" starttime="20201103 05:50:54.880"></status>
</kw>
<msg timestamp="20201103 05:50:54.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:54.889" starttime="20201103 05:50:54.880"></status>
</kw>
<msg timestamp="20201103 05:50:54.889" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:50:54.889" starttime="20201103 05:50:54.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:50:54.891" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:50:54.891" starttime="20201103 05:50:54.890"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:54.896" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:54.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:54.907" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:50:54.907" starttime="20201103 05:50:54.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:54.908" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:50:54.908" starttime="20201103 05:50:54.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:54.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:54.909" starttime="20201103 05:50:54.908"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.909" starttime="20201103 05:50:54.892"></status>
</kw>
<msg timestamp="20201103 05:50:54.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:54.909" starttime="20201103 05:50:54.892"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.909" starttime="20201103 05:50:54.891"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.910" starttime="20201103 05:50:54.891"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.910" starttime="20201103 05:50:54.879"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:54.910" starttime="20201103 05:50:54.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:54.914" level="INFO">Running command 'ozone sh bucket link 07319-source/no-such-bucket 07319-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:50:58.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:50:58.790" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:50:58.790" starttime="20201103 05:50:54.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:50:58.791" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:50:58.792" starttime="20201103 05:50:58.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:50:58.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:50:58.792" starttime="20201103 05:50:58.792"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:58.793" starttime="20201103 05:50:54.911"></status>
</kw>
<msg timestamp="20201103 05:50:58.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:50:58.793" starttime="20201103 05:50:54.910"></status>
</kw>
<status status="PASS" endtime="20201103 05:50:58.793" starttime="20201103 05:50:54.910"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:50:58.796" level="INFO">Running command 'ozone sh key list 07319-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:02.474" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 05:51:02.474" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:02.474" starttime="20201103 05:50:58.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:02.475" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201103 05:51:02.475" starttime="20201103 05:51:02.474"></status>
</kw>
<msg timestamp="20201103 05:51:02.476" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:02.476" starttime="20201103 05:50:58.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201103 05:51:02.476" starttime="20201103 05:51:02.476"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:51:02.477" critical="yes" starttime="20201103 05:50:54.877"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:02.491" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:02.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:02.492" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:51:02.492" starttime="20201103 05:51:02.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:02.493" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:51:02.493" starttime="20201103 05:51:02.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:02.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:02.494" starttime="20201103 05:51:02.493"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:02.494" starttime="20201103 05:51:02.487"></status>
</kw>
<msg timestamp="20201103 05:51:02.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:02.494" starttime="20201103 05:51:02.487"></status>
</kw>
<msg timestamp="20201103 05:51:02.495" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:51:02.495" starttime="20201103 05:51:02.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:51:02.495" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:51:02.495" starttime="20201103 05:51:02.495"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:02.500" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:02.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:02.515" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:51:02.516" starttime="20201103 05:51:02.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:02.516" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:51:02.517" starttime="20201103 05:51:02.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:02.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:02.517" starttime="20201103 05:51:02.517"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:02.517" starttime="20201103 05:51:02.497"></status>
</kw>
<msg timestamp="20201103 05:51:02.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:02.518" starttime="20201103 05:51:02.497"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:02.518" starttime="20201103 05:51:02.496"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:02.518" starttime="20201103 05:51:02.496"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:02.518" starttime="20201103 05:51:02.486"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:02.518" starttime="20201103 05:51:02.485"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:02.522" level="INFO">Running command 'ozone sh bucket link 07319-source/bucket1 07319-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:05.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:05.919" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:05.919" starttime="20201103 05:51:02.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:05.920" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:51:05.920" starttime="20201103 05:51:05.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:05.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:05.921" starttime="20201103 05:51:05.920"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:05.922" starttime="20201103 05:51:02.519"></status>
</kw>
<msg timestamp="20201103 05:51:05.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:05.922" starttime="20201103 05:51:02.519"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:05.922" starttime="20201103 05:51:02.518"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:05.926" level="INFO">Running command 'ozone sh bucket create 07319-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:09.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:09.471" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:09.471" starttime="20201103 05:51:05.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:09.472" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:51:09.473" starttime="20201103 05:51:09.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:09.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:09.473" starttime="20201103 05:51:09.473"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:09.474" starttime="20201103 05:51:05.923"></status>
</kw>
<msg timestamp="20201103 05:51:09.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:09.474" starttime="20201103 05:51:05.923"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:09.474" starttime="20201103 05:51:05.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:09.479" level="INFO">Running command 'ozone sh key put 07319-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:17.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:17.863" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:17.863" starttime="20201103 05:51:09.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:17.864" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:51:17.865" starttime="20201103 05:51:17.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:17.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:17.865" starttime="20201103 05:51:17.865"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:17.866" starttime="20201103 05:51:09.475"></status>
</kw>
<msg timestamp="20201103 05:51:17.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:17.866" starttime="20201103 05:51:09.475"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:17.866" starttime="20201103 05:51:09.474"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201103 05:51:17.868" level="INFO">${postfix} = 85633</msg>
<status status="PASS" endtime="20201103 05:51:17.868" starttime="20201103 05:51:17.867"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201103 05:51:17.869" level="INFO">${tmpfile} = /tmp/tempkey-85633</msg>
<status status="PASS" endtime="20201103 05:51:17.869" starttime="20201103 05:51:17.868"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:17.872" level="INFO">Running command 'ozone sh key get -f 07319-target/link1/key1 /tmp/tempkey-85633 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:24.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:24.207" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:24.208" starttime="20201103 05:51:17.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:24.209" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:51:24.209" starttime="20201103 05:51:24.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:24.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:24.210" starttime="20201103 05:51:24.209"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.210" starttime="20201103 05:51:17.870"></status>
</kw>
<msg timestamp="20201103 05:51:24.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:24.210" starttime="20201103 05:51:17.869"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.211" starttime="20201103 05:51:17.869"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201103 05:51:24.213" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-85633 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:24.216" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201103 05:51:24.216" starttime="20201103 05:51:24.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:24.220" level="INFO">Running command 'rm -f /tmp/tempkey-85633 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:24.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:24.223" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:51:24.223" starttime="20201103 05:51:24.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:24.224" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:51:24.225" starttime="20201103 05:51:24.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:24.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:24.226" starttime="20201103 05:51:24.225"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.226" starttime="20201103 05:51:24.218"></status>
</kw>
<msg timestamp="20201103 05:51:24.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:24.226" starttime="20201103 05:51:24.217"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.226" starttime="20201103 05:51:24.217"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:51:24.227" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201103 05:51:24.227" starttime="20201103 05:51:24.226"></status>
</kw>
<msg timestamp="20201103 05:51:24.227" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201103 05:51:24.227" starttime="20201103 05:51:17.867"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:51:24.228" starttime="20201103 05:51:24.227"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.229" starttime="20201103 05:51:17.866"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:51:24.229" critical="yes" starttime="20201103 05:51:02.477"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:24.235" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:24.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:24.237" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:51:24.237" starttime="20201103 05:51:24.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:24.238" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:51:24.238" starttime="20201103 05:51:24.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:24.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:24.239" starttime="20201103 05:51:24.238"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.239" starttime="20201103 05:51:24.232"></status>
</kw>
<msg timestamp="20201103 05:51:24.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:24.239" starttime="20201103 05:51:24.232"></status>
</kw>
<msg timestamp="20201103 05:51:24.240" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:51:24.240" starttime="20201103 05:51:24.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:51:24.240" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:51:24.241" starttime="20201103 05:51:24.240"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:24.245" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:24.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:24.264" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:51:24.264" starttime="20201103 05:51:24.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:24.265" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:51:24.265" starttime="20201103 05:51:24.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:24.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:24.265" starttime="20201103 05:51:24.265"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.266" starttime="20201103 05:51:24.242"></status>
</kw>
<msg timestamp="20201103 05:51:24.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:24.266" starttime="20201103 05:51:24.242"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.266" starttime="20201103 05:51:24.241"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.266" starttime="20201103 05:51:24.241"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.267" starttime="20201103 05:51:24.231"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:24.267" starttime="20201103 05:51:24.231"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:24.271" level="INFO">Running command 'ozone sh key put 07319-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:32.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:32.500" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:32.500" starttime="20201103 05:51:24.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:32.501" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:51:32.502" starttime="20201103 05:51:32.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:32.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:32.502" starttime="20201103 05:51:32.502"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:32.503" starttime="20201103 05:51:24.268"></status>
</kw>
<msg timestamp="20201103 05:51:32.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:32.503" starttime="20201103 05:51:24.268"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:32.503" starttime="20201103 05:51:24.267"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201103 05:51:32.505" level="INFO">${postfix} = 22911</msg>
<status status="PASS" endtime="20201103 05:51:32.505" starttime="20201103 05:51:32.505"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201103 05:51:32.506" level="INFO">${tmpfile} = /tmp/tempkey-22911</msg>
<status status="PASS" endtime="20201103 05:51:32.506" starttime="20201103 05:51:32.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:32.510" level="INFO">Running command 'ozone sh key get -f 07319-source/bucket1/key2 /tmp/tempkey-22911 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:38.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:38.237" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:38.237" starttime="20201103 05:51:32.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:38.238" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:51:38.238" starttime="20201103 05:51:38.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:38.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:38.239" starttime="20201103 05:51:38.238"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.239" starttime="20201103 05:51:32.507"></status>
</kw>
<msg timestamp="20201103 05:51:38.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:38.240" starttime="20201103 05:51:32.506"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.240" starttime="20201103 05:51:32.506"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201103 05:51:38.242" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-22911 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:38.245" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201103 05:51:38.245" starttime="20201103 05:51:38.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:38.249" level="INFO">Running command 'rm -f /tmp/tempkey-22911 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:38.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:38.252" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:51:38.252" starttime="20201103 05:51:38.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:38.253" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:51:38.253" starttime="20201103 05:51:38.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:38.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:38.253" starttime="20201103 05:51:38.253"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.254" starttime="20201103 05:51:38.247"></status>
</kw>
<msg timestamp="20201103 05:51:38.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:38.254" starttime="20201103 05:51:38.246"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.254" starttime="20201103 05:51:38.246"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:51:38.255" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201103 05:51:38.255" starttime="20201103 05:51:38.254"></status>
</kw>
<msg timestamp="20201103 05:51:38.255" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201103 05:51:38.255" starttime="20201103 05:51:32.504"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:51:38.256" starttime="20201103 05:51:38.255"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.256" starttime="20201103 05:51:32.503"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:51:38.256" critical="yes" starttime="20201103 05:51:24.230"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:38.262" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:38.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:38.264" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:51:38.264" starttime="20201103 05:51:38.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:38.265" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:51:38.265" starttime="20201103 05:51:38.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:38.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:38.266" starttime="20201103 05:51:38.266"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.266" starttime="20201103 05:51:38.260"></status>
</kw>
<msg timestamp="20201103 05:51:38.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:38.267" starttime="20201103 05:51:38.260"></status>
</kw>
<msg timestamp="20201103 05:51:38.267" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:51:38.267" starttime="20201103 05:51:38.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:51:38.267" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:51:38.267" starttime="20201103 05:51:38.267"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:38.272" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:38.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:38.290" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:51:38.290" starttime="20201103 05:51:38.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:38.291" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:51:38.291" starttime="20201103 05:51:38.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:38.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:38.291" starttime="20201103 05:51:38.291"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.292" starttime="20201103 05:51:38.269"></status>
</kw>
<msg timestamp="20201103 05:51:38.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:38.292" starttime="20201103 05:51:38.269"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.292" starttime="20201103 05:51:38.268"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.292" starttime="20201103 05:51:38.268"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.292" starttime="20201103 05:51:38.258"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:38.293" starttime="20201103 05:51:38.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:38.296" level="INFO">Running command 'ozone sh key list 07319-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:42.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:42.339" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201103 05:51:42.339" starttime="20201103 05:51:38.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:42.340" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201103 05:51:42.340" starttime="20201103 05:51:42.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:42.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:42.341" starttime="20201103 05:51:42.340"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:42.341" starttime="20201103 05:51:38.294"></status>
</kw>
<msg timestamp="20201103 05:51:42.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:42.341" starttime="20201103 05:51:38.293"></status>
</kw>
<msg timestamp="20201103 05:51:42.342" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201103 05:51:42.342" starttime="20201103 05:51:38.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:42.346" level="INFO">Running command 'ozone sh key list 07319-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:46.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:46.240" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201103 05:51:46.240" starttime="20201103 05:51:42.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:46.241" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201103 05:51:46.242" starttime="20201103 05:51:46.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:46.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:46.242" starttime="20201103 05:51:46.242"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:46.243" starttime="20201103 05:51:42.343"></status>
</kw>
<msg timestamp="20201103 05:51:46.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:46.243" starttime="20201103 05:51:42.342"></status>
</kw>
<msg timestamp="20201103 05:51:46.243" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201103 05:51:46.243" starttime="20201103 05:51:42.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:51:46.244" starttime="20201103 05:51:46.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201103 05:51:46.245" starttime="20201103 05:51:46.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201103 05:51:46.245" starttime="20201103 05:51:46.245"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:51:46.245" critical="yes" starttime="20201103 05:51:38.257"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:46.253" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:46.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:46.254" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:51:46.254" starttime="20201103 05:51:46.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:46.255" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:51:46.255" starttime="20201103 05:51:46.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:46.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:46.256" starttime="20201103 05:51:46.255"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:46.256" starttime="20201103 05:51:46.249"></status>
</kw>
<msg timestamp="20201103 05:51:46.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:46.256" starttime="20201103 05:51:46.249"></status>
</kw>
<msg timestamp="20201103 05:51:46.256" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:51:46.256" starttime="20201103 05:51:46.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:51:46.257" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:51:46.257" starttime="20201103 05:51:46.256"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:46.264" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:46.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:46.281" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:51:46.281" starttime="20201103 05:51:46.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:46.282" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:51:46.282" starttime="20201103 05:51:46.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:46.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:46.283" starttime="20201103 05:51:46.282"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:46.283" starttime="20201103 05:51:46.258"></status>
</kw>
<msg timestamp="20201103 05:51:46.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:46.284" starttime="20201103 05:51:46.258"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:46.284" starttime="20201103 05:51:46.258"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:46.284" starttime="20201103 05:51:46.257"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:46.284" starttime="20201103 05:51:46.247"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:46.284" starttime="20201103 05:51:46.247"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:46.289" level="INFO">Running command 'ozone sh key delete 07319-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:50.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:50.413" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:50.413" starttime="20201103 05:51:46.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:50.414" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:51:50.414" starttime="20201103 05:51:50.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:50.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:50.414" starttime="20201103 05:51:50.414"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:50.415" starttime="20201103 05:51:46.285"></status>
</kw>
<msg timestamp="20201103 05:51:50.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:50.415" starttime="20201103 05:51:46.285"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:50.415" starttime="20201103 05:51:46.284"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:50.420" level="INFO">Running command 'ozone sh key list 07319-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:54.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:54.073" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201103 05:51:54.073" starttime="20201103 05:51:50.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:54.074" level="INFO">key1</msg>
<status status="PASS" endtime="20201103 05:51:54.075" starttime="20201103 05:51:54.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:54.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:54.075" starttime="20201103 05:51:54.075"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:54.076" starttime="20201103 05:51:50.417"></status>
</kw>
<msg timestamp="20201103 05:51:54.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:54.076" starttime="20201103 05:51:50.416"></status>
</kw>
<msg timestamp="20201103 05:51:54.076" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201103 05:51:54.076" starttime="20201103 05:51:50.416"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201103 05:51:54.077" starttime="20201103 05:51:54.076"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:51:54.077" critical="yes" starttime="20201103 05:51:46.246"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:54.085" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:54.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:54.088" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:51:54.088" starttime="20201103 05:51:54.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:54.089" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:51:54.089" starttime="20201103 05:51:54.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:54.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:54.090" starttime="20201103 05:51:54.089"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:54.090" starttime="20201103 05:51:54.082"></status>
</kw>
<msg timestamp="20201103 05:51:54.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:54.090" starttime="20201103 05:51:54.082"></status>
</kw>
<msg timestamp="20201103 05:51:54.090" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:51:54.091" starttime="20201103 05:51:54.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:51:54.091" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:51:54.091" starttime="20201103 05:51:54.091"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:54.097" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:54.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:54.110" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:51:54.110" starttime="20201103 05:51:54.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:54.111" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:51:54.111" starttime="20201103 05:51:54.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:54.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:54.112" starttime="20201103 05:51:54.111"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:54.112" starttime="20201103 05:51:54.093"></status>
</kw>
<msg timestamp="20201103 05:51:54.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:54.113" starttime="20201103 05:51:54.093"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:54.113" starttime="20201103 05:51:54.092"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:54.113" starttime="20201103 05:51:54.091"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:54.113" starttime="20201103 05:51:54.080"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:54.113" starttime="20201103 05:51:54.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:54.118" level="INFO">Running command 'ozone sh bucket list 07319-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:57.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:57.831" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:57.831" starttime="20201103 05:51:54.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:57.832" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:50:58.610Z",
  "modificationTime" : "2020-11-03T05:50:58.610Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:50:37.221Z",
  "modificationTime" : "2020-11-03T05:50:54.675Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:51:05.833Z",
  "modificationTime" : "2020-11-03T05:51:05.833Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:50:29.916Z",
  "modificationTime" : "2020-11-03T05:50:51.258Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:50:33.608Z",
  "modificationTime" : "2020-11-03T05:50:33.608Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 05:51:57.832" starttime="20201103 05:51:57.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:57.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:57.833" starttime="20201103 05:51:57.832"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:57.833" starttime="20201103 05:51:54.114"></status>
</kw>
<msg timestamp="20201103 05:51:57.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:57.833" starttime="20201103 05:51:54.114"></status>
</kw>
<msg timestamp="20201103 05:51:57.834" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:51:57.834" starttime="20201103 05:51:54.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201103 05:51:57.834" starttime="20201103 05:51:57.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201103 05:51:57.835" starttime="20201103 05:51:57.834"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:51:57.835" critical="yes" starttime="20201103 05:51:54.079"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:57.842" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:57.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:57.844" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:51:57.844" starttime="20201103 05:51:57.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:57.845" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:51:57.845" starttime="20201103 05:51:57.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:57.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:57.846" starttime="20201103 05:51:57.845"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:57.846" starttime="20201103 05:51:57.838"></status>
</kw>
<msg timestamp="20201103 05:51:57.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:57.846" starttime="20201103 05:51:57.838"></status>
</kw>
<msg timestamp="20201103 05:51:57.847" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:51:57.847" starttime="20201103 05:51:57.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:51:57.848" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:51:57.848" starttime="20201103 05:51:57.847"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:57.853" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:51:57.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:51:57.864" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:51:57.864" starttime="20201103 05:51:57.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:51:57.865" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:51:57.865" starttime="20201103 05:51:57.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:51:57.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:51:57.866" starttime="20201103 05:51:57.865"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:57.866" starttime="20201103 05:51:57.849"></status>
</kw>
<msg timestamp="20201103 05:51:57.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:51:57.866" starttime="20201103 05:51:57.849"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:57.866" starttime="20201103 05:51:57.848"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:57.866" starttime="20201103 05:51:57.848"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:57.866" starttime="20201103 05:51:57.837"></status>
</kw>
<status status="PASS" endtime="20201103 05:51:57.866" starttime="20201103 05:51:57.836"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:51:57.870" level="INFO">Running command 'ozone sh bucket info 07319-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:01.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:01.897" level="INFO">${output} = 07319-source bucket1</msg>
<status status="PASS" endtime="20201103 05:52:01.897" starttime="20201103 05:51:57.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:01.898" level="INFO">07319-source bucket1</msg>
<status status="PASS" endtime="20201103 05:52:01.898" starttime="20201103 05:52:01.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:01.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:01.899" starttime="20201103 05:52:01.898"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:01.899" starttime="20201103 05:51:57.867"></status>
</kw>
<msg timestamp="20201103 05:52:01.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:01.899" starttime="20201103 05:51:57.867"></status>
</kw>
<msg timestamp="20201103 05:52:01.900" level="INFO">${result} = 07319-source bucket1</msg>
<status status="PASS" endtime="20201103 05:52:01.900" starttime="20201103 05:51:57.867"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:01.901" starttime="20201103 05:52:01.900"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:52:01.901" critical="yes" starttime="20201103 05:51:57.835"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:01.908" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:01.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:01.911" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:52:01.911" starttime="20201103 05:52:01.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:01.912" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:52:01.912" starttime="20201103 05:52:01.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:01.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:01.913" starttime="20201103 05:52:01.912"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:01.913" starttime="20201103 05:52:01.905"></status>
</kw>
<msg timestamp="20201103 05:52:01.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:01.913" starttime="20201103 05:52:01.905"></status>
</kw>
<msg timestamp="20201103 05:52:01.914" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:52:01.914" starttime="20201103 05:52:01.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:52:01.914" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:52:01.914" starttime="20201103 05:52:01.914"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:01.919" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:01.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:01.931" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:01.931" starttime="20201103 05:52:01.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:01.932" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:01.933" starttime="20201103 05:52:01.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:01.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:01.933" starttime="20201103 05:52:01.933"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:01.934" starttime="20201103 05:52:01.916"></status>
</kw>
<msg timestamp="20201103 05:52:01.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:01.934" starttime="20201103 05:52:01.916"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:01.934" starttime="20201103 05:52:01.915"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:01.934" starttime="20201103 05:52:01.915"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:01.934" starttime="20201103 05:52:01.904"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:01.934" starttime="20201103 05:52:01.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:01.939" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 07319-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:05.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:05.583" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:05.583" starttime="20201103 05:52:01.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:05.585" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 05:52:05.585" starttime="20201103 05:52:05.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:05.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:05.585" starttime="20201103 05:52:05.585"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:05.586" starttime="20201103 05:52:01.935"></status>
</kw>
<msg timestamp="20201103 05:52:05.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:05.586" starttime="20201103 05:52:01.935"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:05.586" starttime="20201103 05:52:01.935"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:05.592" level="INFO">Running command 'ozone sh bucket getacl 07319-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:09.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:09.730" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201103 05:52:09.730" starttime="20201103 05:52:05.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:09.732" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201103 05:52:09.732" starttime="20201103 05:52:09.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:09.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:09.733" starttime="20201103 05:52:09.732"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:09.733" starttime="20201103 05:52:05.590"></status>
</kw>
<msg timestamp="20201103 05:52:09.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:09.733" starttime="20201103 05:52:05.589"></status>
</kw>
<msg timestamp="20201103 05:52:09.734" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201103 05:52:09.734" starttime="20201103 05:52:05.588"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:09.734" starttime="20201103 05:52:09.734"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:09.735" starttime="20201103 05:52:05.586"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:09.740" level="INFO">Running command 'ozone sh bucket getacl 07319-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:13.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:13.596" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:13.596" starttime="20201103 05:52:09.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:13.597" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:13.598" starttime="20201103 05:52:13.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:13.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:13.598" starttime="20201103 05:52:13.598"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:13.599" starttime="20201103 05:52:09.737"></status>
</kw>
<msg timestamp="20201103 05:52:13.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:13.599" starttime="20201103 05:52:09.736"></status>
</kw>
<msg timestamp="20201103 05:52:13.599" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201103 05:52:13.599" starttime="20201103 05:52:09.736"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:13.600" starttime="20201103 05:52:13.599"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:13.600" starttime="20201103 05:52:09.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:13.604" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 07319-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:16.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:16.969" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:16.969" starttime="20201103 05:52:13.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:16.970" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201103 05:52:16.971" starttime="20201103 05:52:16.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:16.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:16.971" starttime="20201103 05:52:16.971"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:16.972" starttime="20201103 05:52:13.601"></status>
</kw>
<msg timestamp="20201103 05:52:16.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:16.972" starttime="20201103 05:52:13.601"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:16.972" starttime="20201103 05:52:13.600"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:16.979" level="INFO">Running command 'ozone sh bucket getacl 07319-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:21.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:21.101" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:21.101" starttime="20201103 05:52:16.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:21.102" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:21.103" starttime="20201103 05:52:21.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:21.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:21.103" starttime="20201103 05:52:21.103"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:21.104" starttime="20201103 05:52:16.974"></status>
</kw>
<msg timestamp="20201103 05:52:21.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:21.104" starttime="20201103 05:52:16.974"></status>
</kw>
<msg timestamp="20201103 05:52:21.104" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201103 05:52:21.104" starttime="20201103 05:52:16.973"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:21.105" starttime="20201103 05:52:21.104"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:21.105" starttime="20201103 05:52:16.973"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:21.111" level="INFO">Running command 'ozone sh bucket getacl 07319-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:25.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:25.234" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201103 05:52:25.234" starttime="20201103 05:52:21.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:25.235" level="INFO">READ</msg>
<status status="PASS" endtime="20201103 05:52:25.235" starttime="20201103 05:52:25.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:25.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:25.236" starttime="20201103 05:52:25.236"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:25.237" starttime="20201103 05:52:21.107"></status>
</kw>
<msg timestamp="20201103 05:52:25.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:25.237" starttime="20201103 05:52:21.107"></status>
</kw>
<msg timestamp="20201103 05:52:25.237" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201103 05:52:25.237" starttime="20201103 05:52:21.106"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:25.238" starttime="20201103 05:52:25.237"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:25.238" starttime="20201103 05:52:21.105"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:52:25.238" critical="yes" starttime="20201103 05:52:01.902"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:25.246" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:25.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:25.248" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:52:25.248" starttime="20201103 05:52:25.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:25.249" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:52:25.249" starttime="20201103 05:52:25.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:25.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:25.250" starttime="20201103 05:52:25.249"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:25.250" starttime="20201103 05:52:25.243"></status>
</kw>
<msg timestamp="20201103 05:52:25.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:25.251" starttime="20201103 05:52:25.242"></status>
</kw>
<msg timestamp="20201103 05:52:25.251" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:52:25.251" starttime="20201103 05:52:25.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:52:25.252" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:52:25.252" starttime="20201103 05:52:25.251"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:25.256" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:25.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:25.274" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:25.274" starttime="20201103 05:52:25.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:25.276" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:25.276" starttime="20201103 05:52:25.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:25.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:25.277" starttime="20201103 05:52:25.276"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:25.277" starttime="20201103 05:52:25.254"></status>
</kw>
<msg timestamp="20201103 05:52:25.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:25.277" starttime="20201103 05:52:25.253"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:25.278" starttime="20201103 05:52:25.253"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:25.278" starttime="20201103 05:52:25.252"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:25.278" starttime="20201103 05:52:25.241"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:25.278" starttime="20201103 05:52:25.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:25.283" level="INFO">Running command 'ozone sh bucket link 07319-source/bucket2 07319-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:28.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:28.990" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:28.990" starttime="20201103 05:52:25.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:28.991" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:52:28.991" starttime="20201103 05:52:28.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:28.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:28.992" starttime="20201103 05:52:28.991"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:28.992" starttime="20201103 05:52:25.279"></status>
</kw>
<msg timestamp="20201103 05:52:28.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:28.992" starttime="20201103 05:52:25.279"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:28.993" starttime="20201103 05:52:25.278"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:28.996" level="INFO">Running command 'ozone sh bucket create 07319-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:33.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 05:52:33.316" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:33.316" starttime="20201103 05:52:28.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:33.318" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201103 05:52:33.318" starttime="20201103 05:52:33.317"></status>
</kw>
<msg timestamp="20201103 05:52:33.318" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:33.318" starttime="20201103 05:52:28.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:33.319" starttime="20201103 05:52:33.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:33.323" level="INFO">Running command 'ozone sh bucket create 07319-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:37.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:37.344" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:37.344" starttime="20201103 05:52:33.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:37.345" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:52:37.345" starttime="20201103 05:52:37.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:37.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:37.346" starttime="20201103 05:52:37.346"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:37.346" starttime="20201103 05:52:33.320"></status>
</kw>
<msg timestamp="20201103 05:52:37.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:37.347" starttime="20201103 05:52:33.319"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:37.347" starttime="20201103 05:52:33.319"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:37.351" level="INFO">Running command 'ozone sh bucket link 07319-source/bucket1 07319-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:40.997" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 05:52:40.997" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:40.997" starttime="20201103 05:52:37.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:40.998" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201103 05:52:40.999" starttime="20201103 05:52:40.998"></status>
</kw>
<msg timestamp="20201103 05:52:40.999" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:40.999" starttime="20201103 05:52:37.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:41.000" starttime="20201103 05:52:40.999"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:52:41.000" critical="yes" starttime="20201103 05:52:25.239"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:41.007" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:41.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:41.010" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:52:41.010" starttime="20201103 05:52:41.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:41.011" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:52:41.011" starttime="20201103 05:52:41.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:41.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:41.012" starttime="20201103 05:52:41.011"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.012" starttime="20201103 05:52:41.004"></status>
</kw>
<msg timestamp="20201103 05:52:41.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:41.012" starttime="20201103 05:52:41.003"></status>
</kw>
<msg timestamp="20201103 05:52:41.013" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:52:41.013" starttime="20201103 05:52:41.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:52:41.013" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:52:41.014" starttime="20201103 05:52:41.013"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:41.018" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:41.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:41.038" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:41.038" starttime="20201103 05:52:41.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:41.039" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:41.039" starttime="20201103 05:52:41.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:41.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:41.040" starttime="20201103 05:52:41.039"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.040" starttime="20201103 05:52:41.015"></status>
</kw>
<msg timestamp="20201103 05:52:41.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:41.041" starttime="20201103 05:52:41.015"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.041" starttime="20201103 05:52:41.014"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.041" starttime="20201103 05:52:41.014"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.041" starttime="20201103 05:52:41.002"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.041" starttime="20201103 05:52:41.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:41.047" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:41.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:41.052" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:41.052" starttime="20201103 05:52:41.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:41.053" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:41.053" starttime="20201103 05:52:41.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:41.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:41.054" starttime="20201103 05:52:41.054"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.055" starttime="20201103 05:52:41.044"></status>
</kw>
<msg timestamp="20201103 05:52:41.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:41.055" starttime="20201103 05:52:41.043"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.055" starttime="20201103 05:52:41.043"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:41.063" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:41.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:41.064" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:52:41.065" starttime="20201103 05:52:41.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:41.066" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:52:41.066" starttime="20201103 05:52:41.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:41.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:41.067" starttime="20201103 05:52:41.066"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.067" starttime="20201103 05:52:41.058"></status>
</kw>
<msg timestamp="20201103 05:52:41.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:41.067" starttime="20201103 05:52:41.057"></status>
</kw>
<msg timestamp="20201103 05:52:41.067" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:52:41.068" starttime="20201103 05:52:41.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:52:41.068" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:52:41.069" starttime="20201103 05:52:41.068"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:41.074" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:41.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:41.084" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:41.084" starttime="20201103 05:52:41.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:41.085" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:41.085" starttime="20201103 05:52:41.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:41.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:41.087" starttime="20201103 05:52:41.086"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.087" starttime="20201103 05:52:41.070"></status>
</kw>
<msg timestamp="20201103 05:52:41.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:41.087" starttime="20201103 05:52:41.070"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.087" starttime="20201103 05:52:41.069"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.088" starttime="20201103 05:52:41.069"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.088" starttime="20201103 05:52:41.056"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:41.088" starttime="20201103 05:52:41.056"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:41.092" level="INFO">Running command 'ozone sh key list 07319-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:45.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:45.897" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:45.897" starttime="20201103 05:52:41.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.898" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "07319-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-03T05:50:20.643Z",
  "modificationTime" : "2020-11-03T05:50:22.472Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201103 05:52:45.898" starttime="20201103 05:52:45.897"></status>
</kw>
<msg timestamp="20201103 05:52:45.899" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:45.899" starttime="20201103 05:52:41.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:45.899" starttime="20201103 05:52:45.899"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.900" starttime="20201103 05:52:41.042"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.900" starttime="20201103 05:52:41.042"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:52:45.900" critical="yes" starttime="20201103 05:52:41.001"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:45.908" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:45.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:45.910" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:52:45.910" starttime="20201103 05:52:45.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.911" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:52:45.911" starttime="20201103 05:52:45.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:45.912" starttime="20201103 05:52:45.911"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.912" starttime="20201103 05:52:45.905"></status>
</kw>
<msg timestamp="20201103 05:52:45.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:45.912" starttime="20201103 05:52:45.904"></status>
</kw>
<msg timestamp="20201103 05:52:45.913" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:52:45.913" starttime="20201103 05:52:45.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:52:45.913" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:52:45.913" starttime="20201103 05:52:45.913"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:45.918" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:45.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:45.934" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:45.934" starttime="20201103 05:52:45.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.935" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:45.935" starttime="20201103 05:52:45.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:45.936" starttime="20201103 05:52:45.935"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.936" starttime="20201103 05:52:45.915"></status>
</kw>
<msg timestamp="20201103 05:52:45.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:45.937" starttime="20201103 05:52:45.915"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.937" starttime="20201103 05:52:45.914"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.937" starttime="20201103 05:52:45.914"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.937" starttime="20201103 05:52:45.903"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.937" starttime="20201103 05:52:45.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:45.942" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:45.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:45.944" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:45.944" starttime="20201103 05:52:45.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.945" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:45.945" starttime="20201103 05:52:45.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:45.946" starttime="20201103 05:52:45.945"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.946" starttime="20201103 05:52:45.939"></status>
</kw>
<msg timestamp="20201103 05:52:45.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:45.946" starttime="20201103 05:52:45.939"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.947" starttime="20201103 05:52:45.938"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:45.952" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:45.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:45.954" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:52:45.954" starttime="20201103 05:52:45.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.955" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:52:45.955" starttime="20201103 05:52:45.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:45.956" starttime="20201103 05:52:45.955"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.956" starttime="20201103 05:52:45.949"></status>
</kw>
<msg timestamp="20201103 05:52:45.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:45.956" starttime="20201103 05:52:45.949"></status>
</kw>
<msg timestamp="20201103 05:52:45.956" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:52:45.956" starttime="20201103 05:52:45.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:52:45.957" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:52:45.957" starttime="20201103 05:52:45.957"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:45.962" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:45.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:45.972" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:45.972" starttime="20201103 05:52:45.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.973" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:45.974" starttime="20201103 05:52:45.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:45.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:45.974" starttime="20201103 05:52:45.974"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.975" starttime="20201103 05:52:45.959"></status>
</kw>
<msg timestamp="20201103 05:52:45.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:45.975" starttime="20201103 05:52:45.958"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.975" starttime="20201103 05:52:45.958"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.975" starttime="20201103 05:52:45.957"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.975" starttime="20201103 05:52:45.947"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:45.977" starttime="20201103 05:52:45.947"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:45.982" level="INFO">Running command 'ozone sh key list 07319-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:49.690" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 05:52:49.690" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:49.690" starttime="20201103 05:52:45.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.691" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201103 05:52:49.691" starttime="20201103 05:52:49.690"></status>
</kw>
<msg timestamp="20201103 05:52:49.692" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:49.692" starttime="20201103 05:52:45.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:49.692" starttime="20201103 05:52:49.692"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.693" starttime="20201103 05:52:45.938"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.693" starttime="20201103 05:52:45.937"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:52:49.693" critical="yes" starttime="20201103 05:52:45.901"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:49.706" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:49.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:49.708" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:52:49.708" starttime="20201103 05:52:49.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.709" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:52:49.709" starttime="20201103 05:52:49.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:49.710" starttime="20201103 05:52:49.709"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.710" starttime="20201103 05:52:49.699"></status>
</kw>
<msg timestamp="20201103 05:52:49.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:49.710" starttime="20201103 05:52:49.699"></status>
</kw>
<msg timestamp="20201103 05:52:49.710" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:52:49.711" starttime="20201103 05:52:49.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:52:49.711" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:52:49.711" starttime="20201103 05:52:49.711"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:49.715" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:49.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:49.732" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:49.732" starttime="20201103 05:52:49.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.733" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:49.733" starttime="20201103 05:52:49.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:49.734" starttime="20201103 05:52:49.733"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.734" starttime="20201103 05:52:49.713"></status>
</kw>
<msg timestamp="20201103 05:52:49.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:49.735" starttime="20201103 05:52:49.713"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.735" starttime="20201103 05:52:49.712"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.735" starttime="20201103 05:52:49.711"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.735" starttime="20201103 05:52:49.696"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.735" starttime="20201103 05:52:49.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:49.740" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:49.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:49.743" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:49.743" starttime="20201103 05:52:49.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.744" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:49.744" starttime="20201103 05:52:49.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:49.745" starttime="20201103 05:52:49.744"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.745" starttime="20201103 05:52:49.737"></status>
</kw>
<msg timestamp="20201103 05:52:49.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:49.745" starttime="20201103 05:52:49.737"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.745" starttime="20201103 05:52:49.736"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:49.752" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:49.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:49.753" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:52:49.754" starttime="20201103 05:52:49.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.755" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:52:49.755" starttime="20201103 05:52:49.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:49.756" starttime="20201103 05:52:49.755"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.756" starttime="20201103 05:52:49.748"></status>
</kw>
<msg timestamp="20201103 05:52:49.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:49.756" starttime="20201103 05:52:49.747"></status>
</kw>
<msg timestamp="20201103 05:52:49.757" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:52:49.757" starttime="20201103 05:52:49.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:52:49.757" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:52:49.757" starttime="20201103 05:52:49.757"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:49.762" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:49.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:49.771" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:49.771" starttime="20201103 05:52:49.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.772" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:49.772" starttime="20201103 05:52:49.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:49.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:49.773" starttime="20201103 05:52:49.772"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.773" starttime="20201103 05:52:49.759"></status>
</kw>
<msg timestamp="20201103 05:52:49.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:49.773" starttime="20201103 05:52:49.759"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.773" starttime="20201103 05:52:49.758"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.774" starttime="20201103 05:52:49.758"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.774" starttime="20201103 05:52:49.746"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:49.774" starttime="20201103 05:52:49.746"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:49.782" level="INFO">Running command 'ozone sh bucket info 07319-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:53.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:53.585" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:53.585" starttime="20201103 05:52:49.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:53.586" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:50:37.221Z",
  "modificationTime" : "2020-11-03T05:50:54.675Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 05:52:53.587" starttime="20201103 05:52:53.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:53.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:53.587" starttime="20201103 05:52:53.587"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:53.588" starttime="20201103 05:52:49.775"></status>
</kw>
<msg timestamp="20201103 05:52:53.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:53.588" starttime="20201103 05:52:49.774"></status>
</kw>
<msg timestamp="20201103 05:52:53.588" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:53.589" starttime="20201103 05:52:49.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:53.589" starttime="20201103 05:52:53.589"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:53.590" starttime="20201103 05:52:53.589"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:53.593" level="INFO">Running command 'ozone sh key list 07319-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:57.151" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 05:52:57.151" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:57.151" starttime="20201103 05:52:53.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:57.153" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201103 05:52:57.153" starttime="20201103 05:52:57.152"></status>
</kw>
<msg timestamp="20201103 05:52:57.154" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:52:57.154" starttime="20201103 05:52:53.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201103 05:52:57.154" starttime="20201103 05:52:57.154"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:57.155" starttime="20201103 05:52:49.736"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:57.155" starttime="20201103 05:52:49.735"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:52:57.155" critical="yes" starttime="20201103 05:52:49.694"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:57.161" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:57.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:57.164" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:52:57.164" starttime="20201103 05:52:57.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:57.165" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:52:57.165" starttime="20201103 05:52:57.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:57.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:57.166" starttime="20201103 05:52:57.165"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:57.166" starttime="20201103 05:52:57.158"></status>
</kw>
<msg timestamp="20201103 05:52:57.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:57.166" starttime="20201103 05:52:57.158"></status>
</kw>
<msg timestamp="20201103 05:52:57.166" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:52:57.166" starttime="20201103 05:52:57.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:52:57.167" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:52:57.167" starttime="20201103 05:52:57.167"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:57.172" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:52:57.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:52:57.190" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:52:57.190" starttime="20201103 05:52:57.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:52:57.191" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:52:57.191" starttime="20201103 05:52:57.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:52:57.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:52:57.192" starttime="20201103 05:52:57.191"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:57.192" starttime="20201103 05:52:57.170"></status>
</kw>
<msg timestamp="20201103 05:52:57.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:52:57.193" starttime="20201103 05:52:57.169"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:57.193" starttime="20201103 05:52:57.168"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:57.193" starttime="20201103 05:52:57.168"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:57.193" starttime="20201103 05:52:57.157"></status>
</kw>
<status status="PASS" endtime="20201103 05:52:57.193" starttime="20201103 05:52:57.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:52:57.197" level="INFO">Running command 'ozone sh bucket link 07319-target/loop1 07319-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:00.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:00.616" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:00.616" starttime="20201103 05:52:57.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:00.618" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:53:00.618" starttime="20201103 05:53:00.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:00.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:00.619" starttime="20201103 05:53:00.618"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:00.619" starttime="20201103 05:52:57.194"></status>
</kw>
<msg timestamp="20201103 05:53:00.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:00.619" starttime="20201103 05:52:57.194"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:00.619" starttime="20201103 05:52:57.193"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:00.625" level="INFO">Running command 'ozone sh bucket link 07319-target/loop2 07319-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:04.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:04.405" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:04.405" starttime="20201103 05:53:00.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:04.407" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:53:04.407" starttime="20201103 05:53:04.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:04.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:04.407" starttime="20201103 05:53:04.407"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:04.408" starttime="20201103 05:53:00.621"></status>
</kw>
<msg timestamp="20201103 05:53:04.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:04.408" starttime="20201103 05:53:00.621"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:04.408" starttime="20201103 05:53:00.620"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:04.413" level="INFO">Running command 'ozone sh bucket link 07319-target/loop3 07319-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:08.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:08.122" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:08.122" starttime="20201103 05:53:04.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:08.123" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:53:08.123" starttime="20201103 05:53:08.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:08.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:08.124" starttime="20201103 05:53:08.123"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:08.124" starttime="20201103 05:53:04.409"></status>
</kw>
<msg timestamp="20201103 05:53:08.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:08.124" starttime="20201103 05:53:04.409"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:08.124" starttime="20201103 05:53:04.408"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:08.128" level="INFO">Running command 'ozone sh key list 07319-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:11.465" level="INFO">${rc} = 255</msg>
<msg timestamp="20201103 05:53:11.465" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:11.465" starttime="20201103 05:53:08.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:11.466" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201103 05:53:11.467" starttime="20201103 05:53:11.466"></status>
</kw>
<msg timestamp="20201103 05:53:11.467" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:11.467" starttime="20201103 05:53:08.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201103 05:53:11.468" starttime="20201103 05:53:11.467"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:53:11.468" critical="yes" starttime="20201103 05:52:57.156"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:11.475" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:11.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:11.478" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:53:11.478" starttime="20201103 05:53:11.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:11.479" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:53:11.479" starttime="20201103 05:53:11.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:11.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:11.480" starttime="20201103 05:53:11.479"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:11.480" starttime="20201103 05:53:11.472"></status>
</kw>
<msg timestamp="20201103 05:53:11.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:11.480" starttime="20201103 05:53:11.472"></status>
</kw>
<msg timestamp="20201103 05:53:11.480" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:53:11.481" starttime="20201103 05:53:11.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:53:11.481" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:53:11.481" starttime="20201103 05:53:11.481"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:11.486" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:11.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:11.521" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:53:11.522" starttime="20201103 05:53:11.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:11.522" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:53:11.523" starttime="20201103 05:53:11.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:11.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:11.523" starttime="20201103 05:53:11.523"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:11.524" starttime="20201103 05:53:11.483"></status>
</kw>
<msg timestamp="20201103 05:53:11.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:11.524" starttime="20201103 05:53:11.483"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:11.524" starttime="20201103 05:53:11.482"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:11.524" starttime="20201103 05:53:11.482"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:11.524" starttime="20201103 05:53:11.471"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:11.525" starttime="20201103 05:53:11.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:11.529" level="INFO">Running command 'ozone sh bucket link 07319-source/bucket1 07319-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:15.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:15.251" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:15.251" starttime="20201103 05:53:11.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:15.252" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:53:15.252" starttime="20201103 05:53:15.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:15.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:15.253" starttime="20201103 05:53:15.252"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:15.253" starttime="20201103 05:53:11.526"></status>
</kw>
<msg timestamp="20201103 05:53:15.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:15.253" starttime="20201103 05:53:11.525"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:15.254" starttime="20201103 05:53:11.525"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:15.257" level="INFO">Running command 'ozone sh key put 07319-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:21.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:21.322" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:21.322" starttime="20201103 05:53:15.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:21.323" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:53:21.323" starttime="20201103 05:53:21.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:21.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:21.324" starttime="20201103 05:53:21.323"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:21.324" starttime="20201103 05:53:15.255"></status>
</kw>
<msg timestamp="20201103 05:53:21.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:21.324" starttime="20201103 05:53:15.254"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:21.325" starttime="20201103 05:53:15.254"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201103 05:53:21.327" level="INFO">${postfix} = 50066</msg>
<status status="PASS" endtime="20201103 05:53:21.327" starttime="20201103 05:53:21.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201103 05:53:21.327" level="INFO">${tmpfile} = /tmp/tempkey-50066</msg>
<status status="PASS" endtime="20201103 05:53:21.327" starttime="20201103 05:53:21.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:21.331" level="INFO">Running command 'ozone sh key get -f 07319-target/link1/key3 /tmp/tempkey-50066 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:26.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:26.051" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:26.051" starttime="20201103 05:53:21.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:26.052" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:53:26.052" starttime="20201103 05:53:26.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:26.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:26.053" starttime="20201103 05:53:26.052"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.053" starttime="20201103 05:53:21.328"></status>
</kw>
<msg timestamp="20201103 05:53:26.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:26.054" starttime="20201103 05:53:21.328"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.054" starttime="20201103 05:53:21.327"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201103 05:53:26.056" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-50066 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:26.059" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201103 05:53:26.059" starttime="20201103 05:53:26.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:26.062" level="INFO">Running command 'rm -f /tmp/tempkey-50066 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:26.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:26.065" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:53:26.065" starttime="20201103 05:53:26.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:26.066" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:53:26.066" starttime="20201103 05:53:26.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:26.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:26.067" starttime="20201103 05:53:26.066"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.067" starttime="20201103 05:53:26.060"></status>
</kw>
<msg timestamp="20201103 05:53:26.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:26.067" starttime="20201103 05:53:26.060"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.068" starttime="20201103 05:53:26.059"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201103 05:53:26.068" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201103 05:53:26.068" starttime="20201103 05:53:26.068"></status>
</kw>
<msg timestamp="20201103 05:53:26.069" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201103 05:53:26.069" starttime="20201103 05:53:21.325"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201103 05:53:26.069" starttime="20201103 05:53:26.069"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.069" starttime="20201103 05:53:21.325"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:53:26.070" critical="yes" starttime="20201103 05:53:11.469"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:26.075" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:26.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:26.078" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201103 05:53:26.078" starttime="20201103 05:53:26.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:26.078" level="INFO">scm</msg>
<status status="PASS" endtime="20201103 05:53:26.079" starttime="20201103 05:53:26.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:26.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:26.080" starttime="20201103 05:53:26.079"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.080" starttime="20201103 05:53:26.073"></status>
</kw>
<msg timestamp="20201103 05:53:26.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:26.080" starttime="20201103 05:53:26.073"></status>
</kw>
<msg timestamp="20201103 05:53:26.080" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201103 05:53:26.080" starttime="20201103 05:53:26.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201103 05:53:26.081" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201103 05:53:26.081" starttime="20201103 05:53:26.081"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:26.084" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:26.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:26.109" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201103 05:53:26.109" starttime="20201103 05:53:26.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:26.110" level="INFO"></msg>
<status status="PASS" endtime="20201103 05:53:26.110" starttime="20201103 05:53:26.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:26.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:26.111" starttime="20201103 05:53:26.110"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.111" starttime="20201103 05:53:26.082"></status>
</kw>
<msg timestamp="20201103 05:53:26.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:26.111" starttime="20201103 05:53:26.082"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.111" starttime="20201103 05:53:26.082"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.111" starttime="20201103 05:53:26.081"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.112" starttime="20201103 05:53:26.072"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:26.112" starttime="20201103 05:53:26.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:26.116" level="INFO">Running command 'ozone sh bucket delete 07319-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:29.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:29.627" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:29.627" starttime="20201103 05:53:26.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:29.629" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201103 05:53:29.629" starttime="20201103 05:53:29.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:29.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:29.630" starttime="20201103 05:53:29.629"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:29.630" starttime="20201103 05:53:26.113"></status>
</kw>
<msg timestamp="20201103 05:53:29.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:29.630" starttime="20201103 05:53:26.113"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:29.630" starttime="20201103 05:53:26.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:29.635" level="INFO">Running command 'ozone sh bucket list 07319-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:33.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:33.399" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:33.399" starttime="20201103 05:53:29.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:33.401" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:52:37.095Z",
  "modificationTime" : "2020-11-03T05:52:37.095Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:50:58.610Z",
  "modificationTime" : "2020-11-03T05:50:58.610Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:50:37.221Z",
  "modificationTime" : "2020-11-03T05:50:54.675Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:52:28.714Z",
  "modificationTime" : "2020-11-03T05:52:28.714Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:53:15.011Z",
  "modificationTime" : "2020-11-03T05:53:15.011Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:53:07.944Z",
  "modificationTime" : "2020-11-03T05:53:07.944Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:53:00.538Z",
  "modificationTime" : "2020-11-03T05:53:00.538Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:53:04.210Z",
  "modificationTime" : "2020-11-03T05:53:04.210Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:50:29.916Z",
  "modificationTime" : "2020-11-03T05:50:51.258Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "07319-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-03T05:50:33.608Z",
  "modificationTime" : "2020-11-03T05:50:33.608Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "07319-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201103 05:53:33.401" starttime="20201103 05:53:33.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:33.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:33.402" starttime="20201103 05:53:33.401"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:33.402" starttime="20201103 05:53:29.631"></status>
</kw>
<msg timestamp="20201103 05:53:33.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:33.402" starttime="20201103 05:53:29.631"></status>
</kw>
<msg timestamp="20201103 05:53:33.403" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201103 05:53:33.403" starttime="20201103 05:53:29.630"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201103 05:53:33.403" starttime="20201103 05:53:33.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201103 05:53:33.407" level="INFO">Running command 'ozone sh key list 07319-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201103 05:53:37.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201103 05:53:37.282" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201103 05:53:37.282" starttime="20201103 05:53:33.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201103 05:53:37.283" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201103 05:53:37.284" starttime="20201103 05:53:37.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201103 05:53:37.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201103 05:53:37.285" starttime="20201103 05:53:37.284"></status>
</kw>
<status status="PASS" endtime="20201103 05:53:37.285" starttime="20201103 05:53:33.404"></status>
</kw>
<msg timestamp="20201103 05:53:37.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201103 05:53:37.285" starttime="20201103 05:53:33.404"></status>
</kw>
<msg timestamp="20201103 05:53:37.285" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201103 05:53:37.286" starttime="20201103 05:53:33.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201103 05:53:37.286" starttime="20201103 05:53:37.286"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201103 05:53:37.286" critical="yes" starttime="20201103 05:53:26.070"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201103 05:53:37.290" starttime="20201103 05:50:04.835"></status>
</suite>
<status status="PASS" elapsedtime="241323" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
