<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201111 13:05:27.648" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:01:55.641" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:01:59.664" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 13:01:59.664" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:01:59.664" starttime="20201111 13:01:55.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:01:59.665" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201111 13:01:59.666" starttime="20201111 13:01:59.665"></status>
</kw>
<msg timestamp="20201111 13:01:59.666" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:01:59.666" starttime="20201111 13:01:55.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:01:59.672" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:02:03.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:02:03.217" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:03.217" starttime="20201111 13:01:59.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:02:03.218" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:02:03.219" starttime="20201111 13:02:03.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:02:03.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:02:03.219" starttime="20201111 13:02:03.219"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:03.219" starttime="20201111 13:01:59.668"></status>
</kw>
<msg timestamp="20201111 13:02:03.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:02:03.220" starttime="20201111 13:01:59.668"></status>
</kw>
<msg timestamp="20201111 13:02:03.220" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:03.220" starttime="20201111 13:01:59.667"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201111 13:02:03.221" starttime="20201111 13:02:03.220"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:03.221" starttime="20201111 13:01:59.667"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:03.221" starttime="20201111 13:01:59.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:02:03.227" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:02:06.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:02:06.535" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:06.535" starttime="20201111 13:02:03.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:02:06.536" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:02:06.536" starttime="20201111 13:02:06.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:02:06.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:02:06.537" starttime="20201111 13:02:06.537"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:06.537" starttime="20201111 13:02:03.223"></status>
</kw>
<msg timestamp="20201111 13:02:06.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:02:06.538" starttime="20201111 13:02:03.223"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:06.538" starttime="20201111 13:02:03.222"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:06.538" starttime="20201111 13:02:03.222"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:06.538" starttime="20201111 13:02:03.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201111 13:02:06.539" starttime="20201111 13:02:06.538"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:02:06.542" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:02:09.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:02:09.878" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:09.878" starttime="20201111 13:02:06.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:02:09.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:02:06.352Z",
  "modificationTime" : "2020-11-11T13:02:06.352Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201111 13:02:09.880" starttime="20201111 13:02:09.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:02:09.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:02:09.880" starttime="20201111 13:02:09.880"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:09.881" starttime="20201111 13:02:06.540"></status>
</kw>
<msg timestamp="20201111 13:02:09.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:02:09.881" starttime="20201111 13:02:06.539"></status>
</kw>
<msg timestamp="20201111 13:02:09.881" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:09.881" starttime="20201111 13:02:06.539"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201111 13:02:09.882" starttime="20201111 13:02:09.881"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 13:02:09.886" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 13:02:09.886" starttime="20201111 13:02:09.885"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:02:09.886" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 13:02:09.887" starttime="20201111 13:02:09.886"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:09.887" starttime="20201111 13:02:09.885"></status>
</kw>
<msg timestamp="20201111 13:02:09.887" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 13:02:09.887" starttime="20201111 13:02:09.884"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:09.887" starttime="20201111 13:02:09.883"></status>
</kw>
<msg timestamp="20201111 13:02:09.887" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201111 13:02:09.888" starttime="20201111 13:02:09.882"></status>
</kw>
<msg timestamp="20201111 13:02:09.888" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201111 13:02:09.888" starttime="20201111 13:02:09.882"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:02:09.892" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:02:13.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:02:13.430" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:13.430" starttime="20201111 13:02:09.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:02:13.431" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:02:13.431" starttime="20201111 13:02:13.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:02:13.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:02:13.432" starttime="20201111 13:02:13.431"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:13.432" starttime="20201111 13:02:09.889"></status>
</kw>
<msg timestamp="20201111 13:02:13.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:02:13.432" starttime="20201111 13:02:09.888"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:13.433" starttime="20201111 13:02:09.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:02:13.436" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:02:21.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:02:21.055" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:21.055" starttime="20201111 13:02:13.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:02:21.059" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:02:21.059" starttime="20201111 13:02:21.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:02:21.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:02:21.060" starttime="20201111 13:02:21.059"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:21.060" starttime="20201111 13:02:13.434"></status>
</kw>
<msg timestamp="20201111 13:02:21.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:02:21.060" starttime="20201111 13:02:13.433"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:21.061" starttime="20201111 13:02:13.433"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:02:21.065" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:02:28.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:02:28.866" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:28.866" starttime="20201111 13:02:21.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:02:28.867" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:02:28.868" starttime="20201111 13:02:28.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:02:28.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:02:28.868" starttime="20201111 13:02:28.868"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:28.869" starttime="20201111 13:02:21.062"></status>
</kw>
<msg timestamp="20201111 13:02:28.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:02:28.869" starttime="20201111 13:02:21.062"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:28.869" starttime="20201111 13:02:21.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:02:28.874" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:02:34.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:02:34.317" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:34.317" starttime="20201111 13:02:28.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:02:34.318" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:02:34.318" starttime="20201111 13:02:34.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:02:34.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:02:34.319" starttime="20201111 13:02:34.318"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:34.319" starttime="20201111 13:02:28.870"></status>
</kw>
<msg timestamp="20201111 13:02:34.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:02:34.320" starttime="20201111 13:02:28.870"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:34.320" starttime="20201111 13:02:28.869"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:02:34.320" critical="yes" starttime="20201111 13:01:55.635"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 13:02:34.325" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 13:02:34.325" starttime="20201111 13:02:34.325"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:02:34.326" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 13:02:34.326" starttime="20201111 13:02:34.325"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:34.326" starttime="20201111 13:02:34.324"></status>
</kw>
<msg timestamp="20201111 13:02:34.326" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 13:02:34.326" starttime="20201111 13:02:34.324"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:34.327" starttime="20201111 13:02:34.323"></status>
</kw>
<msg timestamp="20201111 13:02:34.327" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 13:02:34.327" starttime="20201111 13:02:34.322"></status>
</kw>
<msg timestamp="20201111 13:02:34.327" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 13:02:34.327" starttime="20201111 13:02:34.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:02:34.331" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:02:37.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:02:37.585" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:37.585" starttime="20201111 13:02:34.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:02:37.586" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:02:37.586" starttime="20201111 13:02:37.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:02:37.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:02:37.587" starttime="20201111 13:02:37.586"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:37.587" starttime="20201111 13:02:34.328"></status>
</kw>
<msg timestamp="20201111 13:02:37.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:02:37.587" starttime="20201111 13:02:34.328"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:37.588" starttime="20201111 13:02:34.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:02:37.593" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:02:40.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:02:40.988" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:02:40.988" starttime="20201111 13:02:37.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:02:40.989" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:02:40.989" starttime="20201111 13:02:40.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:02:40.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:02:40.990" starttime="20201111 13:02:40.989"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:40.990" starttime="20201111 13:02:37.589"></status>
</kw>
<msg timestamp="20201111 13:02:40.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:02:40.991" starttime="20201111 13:02:37.589"></status>
</kw>
<status status="PASS" endtime="20201111 13:02:40.991" starttime="20201111 13:02:37.588"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:02:40.991" critical="yes" starttime="20201111 13:02:34.321"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201111 13:02:40.992" starttime="20201111 13:01:55.579"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 13:04:36.032" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 13:04:36.032" starttime="20201111 13:04:36.031"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:04:36.033" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 13:04:36.033" starttime="20201111 13:04:36.032"></status>
</kw>
<status status="PASS" endtime="20201111 13:04:36.033" starttime="20201111 13:04:36.031"></status>
</kw>
<msg timestamp="20201111 13:04:36.033" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 13:04:36.033" starttime="20201111 13:04:36.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:04:36.034" starttime="20201111 13:04:36.034"></status>
</kw>
<msg timestamp="20201111 13:04:36.034" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 13:04:36.034" starttime="20201111 13:04:36.033"></status>
</kw>
<status status="PASS" endtime="20201111 13:04:36.035" starttime="20201111 13:04:36.026"></status>
</kw>
<msg timestamp="20201111 13:04:36.035" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 13:04:36.035" starttime="20201111 13:04:36.025"></status>
</kw>
<msg timestamp="20201111 13:04:36.035" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 13:04:36.035" starttime="20201111 13:04:36.024"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 13:04:36.036" level="INFO">${random} = 19816</msg>
<status status="PASS" endtime="20201111 13:04:36.036" starttime="20201111 13:04:36.035"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:04:36.042" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-19816 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:04:39.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:04:39.729" level="INFO">${output} = 2020-11-11 13:04:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:04:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201111 13:04:39.729" starttime="20201111 13:04:36.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:04:39.730" level="INFO">2020-11-11 13:04:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:04:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 13:04:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 13:04:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 13:04:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AA097F6D3451-&gt;d9d7052d-96aa-40b3-8ee8-64ca6c855cf0
2020-11-11 13:04:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201111 13:04:39.730" starttime="20201111 13:04:39.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:04:39.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:04:39.731" starttime="20201111 13:04:39.730"></status>
</kw>
<status status="PASS" endtime="20201111 13:04:39.731" starttime="20201111 13:04:36.037"></status>
</kw>
<msg timestamp="20201111 13:04:39.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:04:39.731" starttime="20201111 13:04:36.037"></status>
</kw>
<msg timestamp="20201111 13:04:39.732" level="INFO">${result} = 2020-11-11 13:04:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:04:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201111 13:04:39.732" starttime="20201111 13:04:36.036"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:04:39.736" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:04:41.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:04:41.903" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 13:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 13:04 ofs://om/volume1/bucket1/ozone-19816
-rw-...</msg>
<status status="PASS" endtime="20201111 13:04:41.903" starttime="20201111 13:04:39.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:04:41.905" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 13:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 13:04 ofs://om/volume1/bucket1/ozone-19816
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 13:03 ofs://om/volume1/bucket1/ozone-26793
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 13:02 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 13:04 ofs://om/volume1/bucket1/wordcount-62.txt</msg>
<status status="PASS" endtime="20201111 13:04:41.905" starttime="20201111 13:04:41.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:04:41.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:04:41.905" starttime="20201111 13:04:41.905"></status>
</kw>
<status status="PASS" endtime="20201111 13:04:41.906" starttime="20201111 13:04:39.734"></status>
</kw>
<msg timestamp="20201111 13:04:41.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:04:41.906" starttime="20201111 13:04:39.733"></status>
</kw>
<msg timestamp="20201111 13:04:41.906" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 13:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 13:04 ofs://om/volume1/bucket1/ozone-19816
-rw-...</msg>
<status status="PASS" endtime="20201111 13:04:41.906" starttime="20201111 13:04:39.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:04:41.907" starttime="20201111 13:04:41.906"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 13:04:41.907" critical="yes" starttime="20201111 13:04:36.023"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201111 13:04:41.909" starttime="20201111 13:04:35.903"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 13:03:06.475" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 13:03:06.475" starttime="20201111 13:03:06.474"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:03:06.475" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 13:03:06.475" starttime="20201111 13:03:06.475"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:06.475" starttime="20201111 13:03:06.474"></status>
</kw>
<msg timestamp="20201111 13:03:06.476" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 13:03:06.476" starttime="20201111 13:03:06.473"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:06.476" starttime="20201111 13:03:06.472"></status>
</kw>
<msg timestamp="20201111 13:03:06.476" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 13:03:06.476" starttime="20201111 13:03:06.472"></status>
</kw>
<msg timestamp="20201111 13:03:06.476" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 13:03:06.476" starttime="20201111 13:03:06.471"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 13:03:06.477" level="INFO">${random} = 26793</msg>
<status status="PASS" endtime="20201111 13:03:06.477" starttime="20201111 13:03:06.476"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:03:06.483" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-26793 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:03:10.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:03:10.398" level="INFO">${output} = 2020-11-11 13:03:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:03:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201111 13:03:10.398" starttime="20201111 13:03:06.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:03:10.399" level="INFO">2020-11-11 13:03:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:03:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 13:03:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 13:03:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 13:03:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7629C09B5347-&gt;d9d7052d-96aa-40b3-8ee8-64ca6c855cf0
2020-11-11 13:03:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201111 13:03:10.399" starttime="20201111 13:03:10.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:03:10.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:03:10.400" starttime="20201111 13:03:10.399"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:10.400" starttime="20201111 13:03:06.478"></status>
</kw>
<msg timestamp="20201111 13:03:10.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:03:10.400" starttime="20201111 13:03:06.477"></status>
</kw>
<msg timestamp="20201111 13:03:10.400" level="INFO">${result} = 2020-11-11 13:03:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:03:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201111 13:03:10.400" starttime="20201111 13:03:06.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:03:10.407" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:03:12.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:03:12.384" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 13:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 13:03 o3fs://bucket1.volume1.om/ozone-26793
dr...</msg>
<status status="PASS" endtime="20201111 13:03:12.384" starttime="20201111 13:03:10.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:03:12.385" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 13:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 13:03 o3fs://bucket1.volume1.om/ozone-26793
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 13:02 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 13:03:12.385" starttime="20201111 13:03:12.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:03:12.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:03:12.386" starttime="20201111 13:03:12.385"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:12.386" starttime="20201111 13:03:10.403"></status>
</kw>
<msg timestamp="20201111 13:03:12.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:03:12.386" starttime="20201111 13:03:10.401"></status>
</kw>
<msg timestamp="20201111 13:03:12.387" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 13:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 13:03 o3fs://bucket1.volume1.om/ozone-26793
dr...</msg>
<status status="PASS" endtime="20201111 13:03:12.387" starttime="20201111 13:03:10.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:03:12.387" starttime="20201111 13:03:12.387"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 13:03:12.387" critical="yes" starttime="20201111 13:03:06.471"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201111 13:03:12.390" starttime="20201111 13:03:06.413"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:03:01.584" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:03:01.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:03:01.586" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201111 13:03:01.586" starttime="20201111 13:03:01.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:03:01.587" level="INFO">rm</msg>
<status status="PASS" endtime="20201111 13:03:01.587" starttime="20201111 13:03:01.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:03:01.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:03:01.588" starttime="20201111 13:03:01.587"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:01.589" starttime="20201111 13:03:01.579"></status>
</kw>
<msg timestamp="20201111 13:03:01.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:03:01.589" starttime="20201111 13:03:01.579"></status>
</kw>
<msg timestamp="20201111 13:03:01.589" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201111 13:03:01.589" starttime="20201111 13:03:01.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:03:01.590" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:03:01.591" starttime="20201111 13:03:01.589"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:03:01.595" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:03:01.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:03:01.619" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:03:01.619" starttime="20201111 13:03:01.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:03:01.621" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:03:01.621" starttime="20201111 13:03:01.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:03:01.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:03:01.621" starttime="20201111 13:03:01.621"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:01.622" starttime="20201111 13:03:01.592"></status>
</kw>
<msg timestamp="20201111 13:03:01.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:03:01.622" starttime="20201111 13:03:01.592"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:01.622" starttime="20201111 13:03:01.591"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:01.622" starttime="20201111 13:03:01.591"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:01.622" starttime="20201111 13:03:01.578"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:03:01.622" critical="yes" starttime="20201111 13:03:01.577"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201111 13:03:01.624" starttime="20201111 13:03:01.522"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:01:50.779" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:01:50.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:01:50.782" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201111 13:01:50.782" starttime="20201111 13:01:50.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:01:50.783" level="INFO">om</msg>
<status status="PASS" endtime="20201111 13:01:50.784" starttime="20201111 13:01:50.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:01:50.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:01:50.784" starttime="20201111 13:01:50.784"></status>
</kw>
<status status="PASS" endtime="20201111 13:01:50.785" starttime="20201111 13:01:50.775"></status>
</kw>
<msg timestamp="20201111 13:01:50.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:01:50.785" starttime="20201111 13:01:50.774"></status>
</kw>
<msg timestamp="20201111 13:01:50.785" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201111 13:01:50.786" starttime="20201111 13:01:50.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:01:50.786" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:01:50.786" starttime="20201111 13:01:50.786"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:01:50.791" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:01:50.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:01:50.808" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:01:50.808" starttime="20201111 13:01:50.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:01:50.809" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:01:50.809" starttime="20201111 13:01:50.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:01:50.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:01:50.809" starttime="20201111 13:01:50.809"></status>
</kw>
<status status="PASS" endtime="20201111 13:01:50.810" starttime="20201111 13:01:50.788"></status>
</kw>
<msg timestamp="20201111 13:01:50.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:01:50.810" starttime="20201111 13:01:50.788"></status>
</kw>
<status status="PASS" endtime="20201111 13:01:50.810" starttime="20201111 13:01:50.787"></status>
</kw>
<status status="PASS" endtime="20201111 13:01:50.810" starttime="20201111 13:01:50.787"></status>
</kw>
<status status="PASS" endtime="20201111 13:01:50.810" starttime="20201111 13:01:50.773"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:01:50.811" critical="yes" starttime="20201111 13:01:50.772"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201111 13:01:50.811" starttime="20201111 13:01:50.710"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:04:46.820" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:04:46.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:04:46.824" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:04:46.825" starttime="20201111 13:04:46.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:04:46.825" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:04:46.826" starttime="20201111 13:04:46.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:04:46.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:04:46.826" starttime="20201111 13:04:46.826"></status>
</kw>
<status status="PASS" endtime="20201111 13:04:46.826" starttime="20201111 13:04:46.816"></status>
</kw>
<msg timestamp="20201111 13:04:46.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:04:46.827" starttime="20201111 13:04:46.816"></status>
</kw>
<msg timestamp="20201111 13:04:46.827" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:04:46.827" starttime="20201111 13:04:46.815"></status>
</kw>
<msg timestamp="20201111 13:04:46.827" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:04:46.827" starttime="20201111 13:04:46.815"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 13:04:46.832" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 13:04:46.832" starttime="20201111 13:04:46.831"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:04:46.832" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 13:04:46.832" starttime="20201111 13:04:46.832"></status>
</kw>
<status status="PASS" endtime="20201111 13:04:46.832" starttime="20201111 13:04:46.830"></status>
</kw>
<msg timestamp="20201111 13:04:46.833" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 13:04:46.833" starttime="20201111 13:04:46.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:04:46.834" starttime="20201111 13:04:46.833"></status>
</kw>
<msg timestamp="20201111 13:04:46.834" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 13:04:46.834" starttime="20201111 13:04:46.833"></status>
</kw>
<status status="PASS" endtime="20201111 13:04:46.834" starttime="20201111 13:04:46.829"></status>
</kw>
<msg timestamp="20201111 13:04:46.834" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 13:04:46.834" starttime="20201111 13:04:46.828"></status>
</kw>
<msg timestamp="20201111 13:04:46.834" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 13:04:46.834" starttime="20201111 13:04:46.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:04:46.839" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:05:17.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:05:17.492" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 13:04:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:04:49 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201111 13:05:17.493" starttime="20201111 13:04:46.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:05:17.494" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-11 13:04:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:04:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 13:04:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 13:04:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 13:04:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-156739739841-&gt;d9d7052d-96aa-40b3-8ee8-64ca6c855cf0
2020-11-11 13:04:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-11 13:04:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-11 13:04:50 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.12:10200
2020-11-11 13:04:50 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099890805, maxDate=1605704690805, sequenceNumber=3, masterKeyId=2))
2020-11-11 13:04:50 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9b d0 a2 bb db 2e 38 9b d8 d4 db dd 2e 40 03 48 01 5a 0d 32 35 37 39 32 33 39 36 36 37 38 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-11 13:04:50 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099890805, maxDate=1605704690805, sequenceNumber=3, masterKeyId=2)
2020-11-11 13:04:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 13:04:51 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 13:04:51 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 13:04:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605099667664_0003
2020-11-11 13:04:51 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9b d0 a2 bb db 2e 38 9b d8 d4 db dd 2e 40 03 48 01 5a 0d 32 35 37 39 32 33 39 36 36 37 38 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099890805, maxDate=1605704690805, sequenceNumber=3, masterKeyId=2)]
2020-11-11 13:04:51 INFO  Configuration:2795 - resource-types.xml not found
2020-11-11 13:04:51 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-11 13:04:51 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-11 13:04:52 INFO  YarnClientImpl:329 - Submitted application application_1605099667664_0003
2020-11-11 13:04:52 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605099667664_0003/
2020-11-11 13:04:52 INFO  Job:1619 - Running job: job_1605099667664_0003
2020-11-11 13:04:59 INFO  Job:1640 - Job job_1605099667664_0003 running in uber mode : false
2020-11-11 13:04:59 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 13:05:09 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 13:05:11 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 13:05:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 13:05:16 INFO  Job:1658 - Job job_1605099667664_0003 completed successfully
2020-11-11 13:05:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1070945
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42066
		Total time spent by all reduces in occupied slots (ms)=7144
		Total time spent by all map tasks (ms)=21033
		Total time spent by all reduce tasks (ms)=3572
		Total vcore-milliseconds taken by all map tasks=21033
		Total vcore-milliseconds taken by all reduce tasks=3572
		Total megabyte-milliseconds taken by all map tasks=43075584
		Total megabyte-milliseconds taken by all reduce tasks=7315456
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=934
		CPU time spent (ms)=7190
		Physical memory (bytes) snapshot=1437151232
		Virtual memory (bytes) snapshot=14057349120
		Total committed heap usage (bytes)=1208483840
		Peak Map Physical memory (bytes)=387297280
		Peak Map Virtual memory (bytes)=3511377920
		Peak Reduce Physical memory (bytes)=303087616
		Peak Reduce Virtual memory (bytes)=3529605120
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 26.587 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201111 13:05:17.494" starttime="20201111 13:05:17.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:05:17.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:05:17.495" starttime="20201111 13:05:17.494"></status>
</kw>
<status status="PASS" endtime="20201111 13:05:17.495" starttime="20201111 13:04:46.835"></status>
</kw>
<msg timestamp="20201111 13:05:17.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:05:17.495" starttime="20201111 13:04:46.835"></status>
</kw>
<msg timestamp="20201111 13:05:17.496" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 13:04:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:04:49 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201111 13:05:17.496" starttime="20201111 13:04:46.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 13:05:17.496" starttime="20201111 13:05:17.496"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 13:05:17.497" critical="yes" starttime="20201111 13:04:46.814"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:05:17.502" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:05:17.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:05:17.506" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:05:17.507" starttime="20201111 13:05:17.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:05:17.507" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:05:17.508" starttime="20201111 13:05:17.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:05:17.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:05:17.508" starttime="20201111 13:05:17.508"></status>
</kw>
<status status="PASS" endtime="20201111 13:05:17.509" starttime="20201111 13:05:17.499"></status>
</kw>
<msg timestamp="20201111 13:05:17.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:05:17.509" starttime="20201111 13:05:17.499"></status>
</kw>
<msg timestamp="20201111 13:05:17.509" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:05:17.509" starttime="20201111 13:05:17.498"></status>
</kw>
<msg timestamp="20201111 13:05:17.509" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:05:17.509" starttime="20201111 13:05:17.498"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 13:05:17.510" level="INFO">${random} = 62</msg>
<status status="PASS" endtime="20201111 13:05:17.510" starttime="20201111 13:05:17.510"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 13:05:17.515" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 13:05:17.515" starttime="20201111 13:05:17.514"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:05:17.515" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 13:05:17.515" starttime="20201111 13:05:17.515"></status>
</kw>
<status status="PASS" endtime="20201111 13:05:17.516" starttime="20201111 13:05:17.514"></status>
</kw>
<msg timestamp="20201111 13:05:17.516" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 13:05:17.516" starttime="20201111 13:05:17.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:05:17.517" starttime="20201111 13:05:17.516"></status>
</kw>
<msg timestamp="20201111 13:05:17.517" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 13:05:17.517" starttime="20201111 13:05:17.516"></status>
</kw>
<status status="PASS" endtime="20201111 13:05:17.517" starttime="20201111 13:05:17.512"></status>
</kw>
<msg timestamp="20201111 13:05:17.517" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 13:05:17.518" starttime="20201111 13:05:17.511"></status>
</kw>
<msg timestamp="20201111 13:05:17.518" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 13:05:17.518" starttime="20201111 13:05:17.510"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 13:05:17.521" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 13:05:17.521" starttime="20201111 13:05:17.521"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:05:17.522" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 13:05:17.522" starttime="20201111 13:05:17.521"></status>
</kw>
<status status="PASS" endtime="20201111 13:05:17.522" starttime="20201111 13:05:17.520"></status>
</kw>
<msg timestamp="20201111 13:05:17.523" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 13:05:17.523" starttime="20201111 13:05:17.520"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 13:05:17.524" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201111 13:05:17.524" starttime="20201111 13:05:17.524"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:05:17.525" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201111 13:05:17.525" starttime="20201111 13:05:17.524"></status>
</kw>
<status status="PASS" endtime="20201111 13:05:17.525" starttime="20201111 13:05:17.523"></status>
</kw>
<msg timestamp="20201111 13:05:17.525" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201111 13:05:17.525" starttime="20201111 13:05:17.523"></status>
</kw>
<status status="PASS" endtime="20201111 13:05:17.526" starttime="20201111 13:05:17.519"></status>
</kw>
<msg timestamp="20201111 13:05:17.526" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201111 13:05:17.526" starttime="20201111 13:05:17.519"></status>
</kw>
<msg timestamp="20201111 13:05:17.526" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201111 13:05:17.526" starttime="20201111 13:05:17.518"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 13:05:17.530" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 13:05:17.530" starttime="20201111 13:05:17.530"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:05:17.531" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 13:05:17.531" starttime="20201111 13:05:17.530"></status>
</kw>
<status status="PASS" endtime="20201111 13:05:17.531" starttime="20201111 13:05:17.529"></status>
</kw>
<msg timestamp="20201111 13:05:17.531" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 13:05:17.531" starttime="20201111 13:05:17.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 13:05:17.533" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201111 13:05:17.533" starttime="20201111 13:05:17.532"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:05:17.533" level="INFO">${result} = /wordcount-62.txt</msg>
<status status="PASS" endtime="20201111 13:05:17.534" starttime="20201111 13:05:17.533"></status>
</kw>
<status status="PASS" endtime="20201111 13:05:17.534" starttime="20201111 13:05:17.532"></status>
</kw>
<msg timestamp="20201111 13:05:17.534" level="INFO">${path_with_leading} = /wordcount-62.txt</msg>
<status status="PASS" endtime="20201111 13:05:17.534" starttime="20201111 13:05:17.531"></status>
</kw>
<status status="PASS" endtime="20201111 13:05:17.534" starttime="20201111 13:05:17.528"></status>
</kw>
<msg timestamp="20201111 13:05:17.534" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-62.txt</msg>
<status status="PASS" endtime="20201111 13:05:17.534" starttime="20201111 13:05:17.527"></status>
</kw>
<msg timestamp="20201111 13:05:17.535" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-62.txt</msg>
<status status="PASS" endtime="20201111 13:05:17.535" starttime="20201111 13:05:17.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:05:17.539" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-62.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:05:20.065" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 13:05:20.065" level="INFO">${output} = 2020-11-11 13:05:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-11 13:05:19 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.12:10200
20...</msg>
<status status="PASS" endtime="20201111 13:05:20.065" starttime="20201111 13:05:17.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:05:20.066" level="INFO">2020-11-11 13:05:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-11 13:05:19 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.12:10200
2020-11-11 13:05:19 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099919869, maxDate=1605704719869, sequenceNumber=4, masterKeyId=2))
2020-11-11 13:05:19 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 81 b3 a4 bb db 2e 38 81 bb d6 db dd 2e 40 04 48 01 5a 0d 32 35 37 39 32 33 39 36 36 37 38 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-11 13:05:19 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099919869, maxDate=1605704719869, sequenceNumber=4, masterKeyId=2)
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-62.txt already exists
	at org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:164)
	at org.apache.hadoop.mapreduce.JobSubmitter.checkSpecs(JobSubmitter.java:277)
	at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:143)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1570)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1567)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1567)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</msg>
<status status="PASS" endtime="20201111 13:05:20.066" starttime="20201111 13:05:20.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:05:20.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201111 13:05:20.075" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201111 13:05:20.075" starttime="20201111 13:05:20.067"></status>
</kw>
<status status="FAIL" endtime="20201111 13:05:20.076" starttime="20201111 13:05:17.536"></status>
</kw>
<msg timestamp="20201111 13:05:20.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201111 13:05:20.076" starttime="20201111 13:05:17.536"></status>
</kw>
<status status="FAIL" endtime="20201111 13:05:20.076" starttime="20201111 13:05:17.535"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201111 13:05:20.077" critical="yes" starttime="20201111 13:05:17.497">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201111 13:05:20.085" starttime="20201111 13:04:46.755"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:03:17.216" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:03:17.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:03:17.222" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:03:17.222" starttime="20201111 13:03:17.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:03:17.222" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:03:17.223" starttime="20201111 13:03:17.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:03:17.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:03:17.224" starttime="20201111 13:03:17.223"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:17.225" starttime="20201111 13:03:17.211"></status>
</kw>
<msg timestamp="20201111 13:03:17.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:03:17.225" starttime="20201111 13:03:17.211"></status>
</kw>
<msg timestamp="20201111 13:03:17.225" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:03:17.225" starttime="20201111 13:03:17.210"></status>
</kw>
<msg timestamp="20201111 13:03:17.225" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:03:17.225" starttime="20201111 13:03:17.210"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 13:03:17.231" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 13:03:17.231" starttime="20201111 13:03:17.230"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:03:17.232" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 13:03:17.232" starttime="20201111 13:03:17.231"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:17.233" starttime="20201111 13:03:17.228"></status>
</kw>
<msg timestamp="20201111 13:03:17.233" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 13:03:17.233" starttime="20201111 13:03:17.228"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:17.233" starttime="20201111 13:03:17.227"></status>
</kw>
<msg timestamp="20201111 13:03:17.234" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 13:03:17.234" starttime="20201111 13:03:17.226"></status>
</kw>
<msg timestamp="20201111 13:03:17.234" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 13:03:17.234" starttime="20201111 13:03:17.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:03:17.238" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:03:55.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:03:55.308" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 13:03:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:03:19 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201111 13:03:55.308" starttime="20201111 13:03:17.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:03:55.309" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-11 13:03:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:03:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 13:03:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 13:03:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 13:03:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EB30FC2ABFFD-&gt;d9d7052d-96aa-40b3-8ee8-64ca6c855cf0
2020-11-11 13:03:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-11 13:03:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-11 13:03:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.12:10200
2020-11-11 13:03:21 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099801237, maxDate=1605704601237, sequenceNumber=1, masterKeyId=2))
2020-11-11 13:03:21 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ed 92 9d bb db 2e 38 ed 9a cf db dd 2e 40 01 48 01 5a 0d 32 35 37 39 32 33 39 36 36 37 38 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-11 13:03:21 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099801237, maxDate=1605704601237, sequenceNumber=1, masterKeyId=2)
2020-11-11 13:03:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 13:03:21 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 13:03:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605099667664_0001
2020-11-11 13:03:22 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ed 92 9d bb db 2e 38 ed 9a cf db dd 2e 40 01 48 01 5a 0d 32 35 37 39 32 33 39 36 36 37 38 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099801237, maxDate=1605704601237, sequenceNumber=1, masterKeyId=2)]
2020-11-11 13:03:22 INFO  Configuration:2795 - resource-types.xml not found
2020-11-11 13:03:22 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-11 13:03:22 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-11 13:03:24 INFO  YarnClientImpl:329 - Submitted application application_1605099667664_0001
2020-11-11 13:03:24 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605099667664_0001/
2020-11-11 13:03:24 INFO  Job:1619 - Running job: job_1605099667664_0001
2020-11-11 13:03:34 INFO  Job:1640 - Job job_1605099667664_0001 running in uber mode : false
2020-11-11 13:03:34 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 13:03:44 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 13:03:46 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 13:03:51 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 13:03:54 INFO  Job:1658 - Job job_1605099667664_0001 completed successfully
2020-11-11 13:03:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1071149
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42442
		Total time spent by all reduces in occupied slots (ms)=9870
		Total time spent by all map tasks (ms)=21221
		Total time spent by all reduce tasks (ms)=4935
		Total vcore-milliseconds taken by all map tasks=21221
		Total vcore-milliseconds taken by all reduce tasks=4935
		Total megabyte-milliseconds taken by all map tasks=43460608
		Total megabyte-milliseconds taken by all reduce tasks=10106880
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=924
		CPU time spent (ms)=6870
		Physical memory (bytes) snapshot=1413836800
		Virtual memory (bytes) snapshot=14028591104
		Total committed heap usage (bytes)=1192230912
		Peak Map Physical memory (bytes)=387665920
		Peak Map Virtual memory (bytes)=3508477952
		Peak Reduce Physical memory (bytes)=291803136
		Peak Reduce Virtual memory (bytes)=3527905280
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.159 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201111 13:03:55.309" starttime="20201111 13:03:55.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:03:55.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:03:55.310" starttime="20201111 13:03:55.309"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:55.311" starttime="20201111 13:03:17.235"></status>
</kw>
<msg timestamp="20201111 13:03:55.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:03:55.311" starttime="20201111 13:03:17.235"></status>
</kw>
<msg timestamp="20201111 13:03:55.311" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 13:03:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:03:19 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201111 13:03:55.311" starttime="20201111 13:03:17.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 13:03:55.312" starttime="20201111 13:03:55.311"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 13:03:55.312" critical="yes" starttime="20201111 13:03:17.209"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:03:55.318" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:03:55.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:03:55.324" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:03:55.324" starttime="20201111 13:03:55.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:03:55.325" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:03:55.325" starttime="20201111 13:03:55.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:03:55.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:03:55.326" starttime="20201111 13:03:55.325"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:55.326" starttime="20201111 13:03:55.315"></status>
</kw>
<msg timestamp="20201111 13:03:55.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:03:55.326" starttime="20201111 13:03:55.315"></status>
</kw>
<msg timestamp="20201111 13:03:55.326" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:03:55.326" starttime="20201111 13:03:55.315"></status>
</kw>
<msg timestamp="20201111 13:03:55.327" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 13:03:55.327" starttime="20201111 13:03:55.314"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 13:03:55.327" level="INFO">${random} = 62</msg>
<status status="PASS" endtime="20201111 13:03:55.327" starttime="20201111 13:03:55.327"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 13:03:55.331" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 13:03:55.331" starttime="20201111 13:03:55.330"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:03:55.331" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 13:03:55.332" starttime="20201111 13:03:55.331"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:55.332" starttime="20201111 13:03:55.330"></status>
</kw>
<msg timestamp="20201111 13:03:55.332" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 13:03:55.332" starttime="20201111 13:03:55.329"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:55.332" starttime="20201111 13:03:55.329"></status>
</kw>
<msg timestamp="20201111 13:03:55.332" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 13:03:55.332" starttime="20201111 13:03:55.328"></status>
</kw>
<msg timestamp="20201111 13:03:55.333" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 13:03:55.333" starttime="20201111 13:03:55.327"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 13:03:55.336" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 13:03:55.336" starttime="20201111 13:03:55.335"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:03:55.337" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 13:03:55.337" starttime="20201111 13:03:55.336"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:55.337" starttime="20201111 13:03:55.335"></status>
</kw>
<msg timestamp="20201111 13:03:55.337" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 13:03:55.337" starttime="20201111 13:03:55.335"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:55.337" starttime="20201111 13:03:55.334"></status>
</kw>
<msg timestamp="20201111 13:03:55.338" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201111 13:03:55.338" starttime="20201111 13:03:55.334"></status>
</kw>
<msg timestamp="20201111 13:03:55.338" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201111 13:03:55.338" starttime="20201111 13:03:55.333"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 13:03:55.342" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 13:03:55.342" starttime="20201111 13:03:55.341"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:03:55.342" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 13:03:55.342" starttime="20201111 13:03:55.342"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:55.343" starttime="20201111 13:03:55.341"></status>
</kw>
<msg timestamp="20201111 13:03:55.343" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 13:03:55.343" starttime="20201111 13:03:55.340"></status>
</kw>
<status status="PASS" endtime="20201111 13:03:55.343" starttime="20201111 13:03:55.340"></status>
</kw>
<msg timestamp="20201111 13:03:55.343" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-62.txt</msg>
<status status="PASS" endtime="20201111 13:03:55.343" starttime="20201111 13:03:55.339"></status>
</kw>
<msg timestamp="20201111 13:03:55.343" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-62.txt</msg>
<status status="PASS" endtime="20201111 13:03:55.343" starttime="20201111 13:03:55.338"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:03:55.347" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-62.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:04:30.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:04:30.509" level="INFO">${output} = 2020-11-11 13:03:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-11 13:03:57 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.12:10200
20...</msg>
<status status="PASS" endtime="20201111 13:04:30.509" starttime="20201111 13:03:55.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:04:30.510" level="INFO">2020-11-11 13:03:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-11 13:03:57 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.12:10200
2020-11-11 13:03:57 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099837733, maxDate=1605704637733, sequenceNumber=2, masterKeyId=2))
2020-11-11 13:03:57 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ce b1 9f bb db 2e 38 ce b9 d1 db dd 2e 40 02 48 01 5a 0d 32 35 37 39 32 33 39 36 36 37 38 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-11 13:03:57 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099837733, maxDate=1605704637733, sequenceNumber=2, masterKeyId=2)
2020-11-11 13:03:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 13:03:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 13:03:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 13:03:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 13:03:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 13:03:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CCBA87E61390-&gt;d9d7052d-96aa-40b3-8ee8-64ca6c855cf0
2020-11-11 13:03:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 13:04:01 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 13:04:01 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 13:04:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605099667664_0002
2020-11-11 13:04:04 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ce b1 9f bb db 2e 38 ce b9 d1 db dd 2e 40 02 48 01 5a 0d 32 35 37 39 32 33 39 36 36 37 38 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605099837733, maxDate=1605704637733, sequenceNumber=2, masterKeyId=2)]
2020-11-11 13:04:04 INFO  Configuration:2795 - resource-types.xml not found
2020-11-11 13:04:04 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-11 13:04:04 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-11 13:04:05 INFO  YarnClientImpl:329 - Submitted application application_1605099667664_0002
2020-11-11 13:04:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605099667664_0002/
2020-11-11 13:04:05 INFO  Job:1619 - Running job: job_1605099667664_0002
2020-11-11 13:04:12 INFO  Job:1640 - Job job_1605099667664_0002 running in uber mode : false
2020-11-11 13:04:12 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 13:04:22 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 13:04:23 INFO  Job:1647 -  map 67% reduce 0%
2020-11-11 13:04:24 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 13:04:28 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 13:04:30 INFO  Job:1658 - Job job_1605099667664_0002 completed successfully
2020-11-11 13:04:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1133395
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42394
		Total time spent by all reduces in occupied slots (ms)=7694
		Total time spent by all map tasks (ms)=21197
		Total time spent by all reduce tasks (ms)=3847
		Total vcore-milliseconds taken by all map tasks=21197
		Total vcore-milliseconds taken by all reduce tasks=3847
		Total megabyte-milliseconds taken by all map tasks=43411456
		Total megabyte-milliseconds taken by all reduce tasks=7878656
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=947
		CPU time spent (ms)=7230
		Physical memory (bytes) snapshot=1456439296
		Virtual memory (bytes) snapshot=14046879744
		Total committed heap usage (bytes)=1261961216
		Peak Map Physical memory (bytes)=388370432
		Peak Map Virtual memory (bytes)=3509039104
		Peak Reduce Physical memory (bytes)=299790336
		Peak Reduce Virtual memory (bytes)=3526627328
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201111 13:04:30.511" starttime="20201111 13:04:30.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:04:30.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:04:30.511" starttime="20201111 13:04:30.511"></status>
</kw>
<status status="PASS" endtime="20201111 13:04:30.512" starttime="20201111 13:03:55.344"></status>
</kw>
<msg timestamp="20201111 13:04:30.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:04:30.512" starttime="20201111 13:03:55.344"></status>
</kw>
<msg timestamp="20201111 13:04:30.512" level="INFO">${output} = 2020-11-11 13:03:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-11-11 13:03:57 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.12:10200
20...</msg>
<status status="PASS" endtime="20201111 13:04:30.512" starttime="20201111 13:03:55.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201111 13:04:30.513" starttime="20201111 13:04:30.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 13:04:30.513" starttime="20201111 13:04:30.513"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 13:04:30.514" critical="yes" starttime="20201111 13:03:55.313"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201111 13:04:30.515" starttime="20201111 13:03:17.144"></status>
</suite>
<status status="FAIL" elapsedtime="164300" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="9">Critical Tests</stat>
<stat fail="1" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozonesecure-mr" pass="9">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="1" id="s1-s6" name="mapreduce-ofs" pass="1">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
