<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201111 12:33:34.309" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:31:13.237" level="INFO">${random} = 20498</msg>
<status status="PASS" endtime="20201111 12:31:13.237" starttime="20201111 12:31:13.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201111 12:31:13.238" level="INFO">${prefix} = 20498</msg>
<status status="PASS" endtime="20201111 12:31:13.238" starttime="20201111 12:31:13.237"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:13.238" starttime="20201111 12:31:13.236"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:13.248" level="INFO">Running command 'ozone sh volume info /20498-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:20.057" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 12:31:20.057" level="INFO">${output} = VOLUME_NOT_FOUND Volume 20498-rpcbasic is not found</msg>
<status status="PASS" endtime="20201111 12:31:20.058" starttime="20201111 12:31:13.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:20.059" level="INFO">VOLUME_NOT_FOUND Volume 20498-rpcbasic is not found</msg>
<status status="PASS" endtime="20201111 12:31:20.059" starttime="20201111 12:31:20.058"></status>
</kw>
<msg timestamp="20201111 12:31:20.059" level="INFO">${result} = VOLUME_NOT_FOUND Volume 20498-rpcbasic is not found</msg>
<status status="PASS" endtime="20201111 12:31:20.059" starttime="20201111 12:31:13.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:20.060" starttime="20201111 12:31:20.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:20.064" level="INFO">Running command 'ozone sh volume create /20498-rpcbasic --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:22.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:22.455" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:31:22.455" starttime="20201111 12:31:20.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:22.458" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:31:22.458" starttime="20201111 12:31:22.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:22.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:22.460" starttime="20201111 12:31:22.459"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:22.466" starttime="20201111 12:31:20.061"></status>
</kw>
<msg timestamp="20201111 12:31:22.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:22.467" starttime="20201111 12:31:20.061"></status>
</kw>
<msg timestamp="20201111 12:31:22.467" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201111 12:31:22.467" starttime="20201111 12:31:20.060"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:22.469" starttime="20201111 12:31:22.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:22.483" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="20498-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:25.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:25.163" level="INFO">${output} = {
  "metadata": {},
  "name": "20498-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-11-11T12:31:22.287Z",
  "mo...</msg>
<status status="PASS" endtime="20201111 12:31:25.163" starttime="20201111 12:31:22.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:25.165" level="INFO">{
  "metadata": {},
  "name": "20498-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-11-11T12:31:22.287Z",
  "modificationTime": "2020-11-11T12:31:24.947804Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201111 12:31:25.165" starttime="20201111 12:31:25.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:25.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:25.166" starttime="20201111 12:31:25.165"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:25.166" starttime="20201111 12:31:22.470"></status>
</kw>
<msg timestamp="20201111 12:31:25.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:25.166" starttime="20201111 12:31:22.470"></status>
</kw>
<msg timestamp="20201111 12:31:25.166" level="INFO">${result} = {
  "metadata": {},
  "name": "20498-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-11-11T12:31:22.287Z",
  "mo...</msg>
<status status="PASS" endtime="20201111 12:31:25.166" starttime="20201111 12:31:22.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:25.167" starttime="20201111 12:31:25.167"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:25.172" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="20498-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:27.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:27.421" level="INFO">${output} = {
  "metadata": {},
  "name": "20498-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-11-11T12:31:22.287Z",
  "mo...</msg>
<status status="PASS" endtime="20201111 12:31:27.421" starttime="20201111 12:31:25.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:27.422" level="INFO">{
  "metadata": {},
  "name": "20498-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-11-11T12:31:22.287Z",
  "modificationTime": "2020-11-11T12:31:27.098697Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201111 12:31:27.422" starttime="20201111 12:31:27.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:27.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:27.423" starttime="20201111 12:31:27.422"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:27.423" starttime="20201111 12:31:25.168"></status>
</kw>
<msg timestamp="20201111 12:31:27.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:27.423" starttime="20201111 12:31:25.168"></status>
</kw>
<msg timestamp="20201111 12:31:27.423" level="INFO">${result} = {
  "metadata": {},
  "name": "20498-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-11-11T12:31:22.287Z",
  "mo...</msg>
<status status="PASS" endtime="20201111 12:31:27.423" starttime="20201111 12:31:25.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:27.424" starttime="20201111 12:31:27.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:27.428" level="INFO">Running command 'ozone sh volume setquota /20498-rpcbasic --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:29.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:29.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:31:29.495" starttime="20201111 12:31:27.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:29.496" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:31:29.496" starttime="20201111 12:31:29.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:29.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:29.497" starttime="20201111 12:31:29.496"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:29.497" starttime="20201111 12:31:27.425"></status>
</kw>
<msg timestamp="20201111 12:31:29.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:29.498" starttime="20201111 12:31:27.425"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:29.498" starttime="20201111 12:31:27.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:29.502" level="INFO">Running command 'ozone sh volume info /20498-rpcbasic | jq -r '. | select(.name=="20498-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:31.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:31.580" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201111 12:31:31.580" starttime="20201111 12:31:29.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:31.581" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201111 12:31:31.582" starttime="20201111 12:31:31.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:31.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:31.582" starttime="20201111 12:31:31.582"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:31.583" starttime="20201111 12:31:29.499"></status>
</kw>
<msg timestamp="20201111 12:31:31.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:31.583" starttime="20201111 12:31:29.499"></status>
</kw>
<msg timestamp="20201111 12:31:31.583" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201111 12:31:31.583" starttime="20201111 12:31:29.498"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:31.584" starttime="20201111 12:31:31.583"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:31.588" level="INFO">Running command 'ozone sh bucket create /20498-rpcbasic/bb1 --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:33.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:33.745" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:31:33.745" starttime="20201111 12:31:31.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:33.746" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:31:33.746" starttime="20201111 12:31:33.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:33.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:33.747" starttime="20201111 12:31:33.746"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:33.747" starttime="20201111 12:31:31.585"></status>
</kw>
<msg timestamp="20201111 12:31:33.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:33.747" starttime="20201111 12:31:31.585"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:33.747" starttime="20201111 12:31:31.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:33.752" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:35.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:35.825" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20201111 12:31:35.825" starttime="20201111 12:31:33.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:35.826" level="INFO">DISK</msg>
<status status="PASS" endtime="20201111 12:31:35.827" starttime="20201111 12:31:35.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:35.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:35.827" starttime="20201111 12:31:35.827"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:35.827" starttime="20201111 12:31:33.749"></status>
</kw>
<msg timestamp="20201111 12:31:35.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:35.828" starttime="20201111 12:31:33.748"></status>
</kw>
<msg timestamp="20201111 12:31:35.828" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20201111 12:31:35.828" starttime="20201111 12:31:33.748"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:35.829" starttime="20201111 12:31:35.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:35.832" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:38.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:38.002" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201111 12:31:38.002" starttime="20201111 12:31:35.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:38.003" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201111 12:31:38.003" starttime="20201111 12:31:38.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:38.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:38.004" starttime="20201111 12:31:38.003"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:38.004" starttime="20201111 12:31:35.830"></status>
</kw>
<msg timestamp="20201111 12:31:38.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:38.004" starttime="20201111 12:31:35.829"></status>
</kw>
<msg timestamp="20201111 12:31:38.005" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201111 12:31:38.005" starttime="20201111 12:31:35.829"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:38.005" starttime="20201111 12:31:38.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:38.010" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:40.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:40.180" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20201111 12:31:40.180" starttime="20201111 12:31:38.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:40.182" level="INFO">100</msg>
<status status="PASS" endtime="20201111 12:31:40.182" starttime="20201111 12:31:40.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:40.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:40.183" starttime="20201111 12:31:40.182"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:40.183" starttime="20201111 12:31:38.006"></status>
</kw>
<msg timestamp="20201111 12:31:40.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:40.183" starttime="20201111 12:31:38.006"></status>
</kw>
<msg timestamp="20201111 12:31:40.184" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20201111 12:31:40.184" starttime="20201111 12:31:38.005"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:40.184" starttime="20201111 12:31:40.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --count-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:40.189" level="INFO">Running command 'ozone sh bucket setquota /20498-rpcbasic/bb1 --space-quota 1TB --count-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:42.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:42.332" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:31:42.332" starttime="20201111 12:31:40.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:42.333" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:31:42.333" starttime="20201111 12:31:42.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:42.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:42.334" starttime="20201111 12:31:42.334"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:42.334" starttime="20201111 12:31:40.186"></status>
</kw>
<msg timestamp="20201111 12:31:42.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:42.335" starttime="20201111 12:31:40.185"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:42.335" starttime="20201111 12:31:40.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:42.339" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:44.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:44.574" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20201111 12:31:44.574" starttime="20201111 12:31:42.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:44.575" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20201111 12:31:44.575" starttime="20201111 12:31:44.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:44.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:44.576" starttime="20201111 12:31:44.575"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:44.576" starttime="20201111 12:31:42.336"></status>
</kw>
<msg timestamp="20201111 12:31:44.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:44.576" starttime="20201111 12:31:42.336"></status>
</kw>
<msg timestamp="20201111 12:31:44.577" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20201111 12:31:44.577" starttime="20201111 12:31:42.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:44.577" starttime="20201111 12:31:44.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:44.582" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:46.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:46.765" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20201111 12:31:46.765" starttime="20201111 12:31:44.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:46.766" level="INFO">1000</msg>
<status status="PASS" endtime="20201111 12:31:46.766" starttime="20201111 12:31:46.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:46.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:46.767" starttime="20201111 12:31:46.766"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:46.767" starttime="20201111 12:31:44.579"></status>
</kw>
<msg timestamp="20201111 12:31:46.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:46.768" starttime="20201111 12:31:44.578"></status>
</kw>
<msg timestamp="20201111 12:31:46.768" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20201111 12:31:46.768" starttime="20201111 12:31:44.577"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:46.768" starttime="20201111 12:31:46.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:46.776" level="INFO">Running command 'ozone sh bucket list /20498-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:48.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:48.891" level="INFO">${output} = 20498-rpcbasic</msg>
<status status="PASS" endtime="20201111 12:31:48.891" starttime="20201111 12:31:46.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:48.893" level="INFO">20498-rpcbasic</msg>
<status status="PASS" endtime="20201111 12:31:48.893" starttime="20201111 12:31:48.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:48.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:48.894" starttime="20201111 12:31:48.893"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:48.894" starttime="20201111 12:31:46.772"></status>
</kw>
<msg timestamp="20201111 12:31:48.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:48.894" starttime="20201111 12:31:46.771"></status>
</kw>
<msg timestamp="20201111 12:31:48.895" level="INFO">${result} = 20498-rpcbasic</msg>
<status status="PASS" endtime="20201111 12:31:48.895" starttime="20201111 12:31:46.768"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:31:48.895" starttime="20201111 12:31:48.895"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:48.900" level="INFO">Running command 'ozone sh key put /20498-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:54.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:54.514" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:31:54.514" starttime="20201111 12:31:48.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:54.515" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:31:54.515" starttime="20201111 12:31:54.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:54.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:54.516" starttime="20201111 12:31:54.515"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:54.516" starttime="20201111 12:31:48.897"></status>
</kw>
<msg timestamp="20201111 12:31:54.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:54.516" starttime="20201111 12:31:48.897"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:54.516" starttime="20201111 12:31:48.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:54.520" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:54.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:54.523" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:31:54.523" starttime="20201111 12:31:54.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:54.524" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:31:54.524" starttime="20201111 12:31:54.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:54.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:54.525" starttime="20201111 12:31:54.524"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:54.525" starttime="20201111 12:31:54.517"></status>
</kw>
<msg timestamp="20201111 12:31:54.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:54.525" starttime="20201111 12:31:54.517"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:54.526" starttime="20201111 12:31:54.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:54.530" level="INFO">Running command 'ozone sh key get /20498-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:58.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:58.389" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:31:58.389" starttime="20201111 12:31:54.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:58.390" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:31:58.390" starttime="20201111 12:31:58.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:58.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:58.391" starttime="20201111 12:31:58.390"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:58.391" starttime="20201111 12:31:54.527"></status>
</kw>
<msg timestamp="20201111 12:31:58.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:58.391" starttime="20201111 12:31:54.527"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:58.392" starttime="20201111 12:31:54.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:58.395" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:31:58.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:31:58.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:31:58.400" starttime="20201111 12:31:58.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:31:58.401" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:31:58.401" starttime="20201111 12:31:58.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:31:58.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:31:58.401" starttime="20201111 12:31:58.401"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:58.402" starttime="20201111 12:31:58.393"></status>
</kw>
<msg timestamp="20201111 12:31:58.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:31:58.402" starttime="20201111 12:31:58.392"></status>
</kw>
<status status="PASS" endtime="20201111 12:31:58.402" starttime="20201111 12:31:58.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:31:58.406" level="INFO">Running command 'ozone sh key put -t RATIS /20498-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:02.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:02.302" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:02.302" starttime="20201111 12:31:58.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:02.303" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:02.303" starttime="20201111 12:32:02.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:02.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:02.303" starttime="20201111 12:32:02.303"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:02.304" starttime="20201111 12:31:58.403"></status>
</kw>
<msg timestamp="20201111 12:32:02.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:02.304" starttime="20201111 12:31:58.403"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:02.304" starttime="20201111 12:31:58.402"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:02.308" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:02.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:02.310" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:02.310" starttime="20201111 12:32:02.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:02.311" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:02.311" starttime="20201111 12:32:02.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:02.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:02.312" starttime="20201111 12:32:02.311"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:02.312" starttime="20201111 12:32:02.305"></status>
</kw>
<msg timestamp="20201111 12:32:02.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:02.312" starttime="20201111 12:32:02.305"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:02.313" starttime="20201111 12:32:02.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:02.317" level="INFO">Running command 'ozone sh key get /20498-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:06.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:06.044" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:06.044" starttime="20201111 12:32:02.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:06.045" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:06.045" starttime="20201111 12:32:06.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:06.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:06.045" starttime="20201111 12:32:06.045"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:06.046" starttime="20201111 12:32:02.313"></status>
</kw>
<msg timestamp="20201111 12:32:06.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:06.046" starttime="20201111 12:32:02.313"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:06.046" starttime="20201111 12:32:02.313"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:06.050" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:06.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:06.055" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:06.056" starttime="20201111 12:32:06.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:06.057" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:06.057" starttime="20201111 12:32:06.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:06.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:06.058" starttime="20201111 12:32:06.057"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:06.058" starttime="20201111 12:32:06.047"></status>
</kw>
<msg timestamp="20201111 12:32:06.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:06.058" starttime="20201111 12:32:06.047"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:06.058" starttime="20201111 12:32:06.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:06.063" level="INFO">Running command 'ozone sh key info /20498-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:08.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:08.272" level="INFO">${output} = {
  "volumeName": "20498-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-11-11T12:32:00.280Z",
  "modificationTime": "2020-11-11T12:32:01.929Z",
...</msg>
<status status="PASS" endtime="20201111 12:32:08.272" starttime="20201111 12:32:06.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:08.273" level="INFO">{
  "volumeName": "20498-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-11-11T12:32:00.280Z",
  "modificationTime": "2020-11-11T12:32:01.929Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 105191697303339000,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201111 12:32:08.273" starttime="20201111 12:32:08.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:08.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:08.274" starttime="20201111 12:32:08.273"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:08.274" starttime="20201111 12:32:06.060"></status>
</kw>
<msg timestamp="20201111 12:32:08.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:08.274" starttime="20201111 12:32:06.059"></status>
</kw>
<msg timestamp="20201111 12:32:08.275" level="INFO">${result} = {
  "volumeName": "20498-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-11-11T12:32:00.280Z",
  "modificationTime": "2020-11-11T12:32:01.929Z",
...</msg>
<status status="PASS" endtime="20201111 12:32:08.275" starttime="20201111 12:32:06.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20201111 12:32:08.275" starttime="20201111 12:32:08.275"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:08.280" level="INFO">Running command 'ozone sh key delete /20498-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:10.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:10.134" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:10.134" starttime="20201111 12:32:08.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:10.135" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:10.135" starttime="20201111 12:32:10.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:10.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:10.136" starttime="20201111 12:32:10.136"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:10.136" starttime="20201111 12:32:08.276"></status>
</kw>
<msg timestamp="20201111 12:32:10.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:10.137" starttime="20201111 12:32:08.276"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:10.137" starttime="20201111 12:32:08.275"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:10.141" level="INFO">Running command 'ozone sh key cp /20498-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:14.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:14.134" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:14.134" starttime="20201111 12:32:10.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:14.135" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:14.135" starttime="20201111 12:32:14.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:14.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:14.136" starttime="20201111 12:32:14.136"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:14.137" starttime="20201111 12:32:10.138"></status>
</kw>
<msg timestamp="20201111 12:32:14.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:14.137" starttime="20201111 12:32:10.138"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:14.137" starttime="20201111 12:32:10.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:14.142" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:14.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:14.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:14.144" starttime="20201111 12:32:14.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:14.145" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:14.145" starttime="20201111 12:32:14.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:14.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:14.146" starttime="20201111 12:32:14.145"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:14.146" starttime="20201111 12:32:14.139"></status>
</kw>
<msg timestamp="20201111 12:32:14.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:14.146" starttime="20201111 12:32:14.138"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:14.147" starttime="20201111 12:32:14.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:14.150" level="INFO">Running command 'ozone sh key get /20498-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:17.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:17.794" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:17.794" starttime="20201111 12:32:14.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:17.795" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:17.795" starttime="20201111 12:32:17.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:17.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:17.796" starttime="20201111 12:32:17.795"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:17.796" starttime="20201111 12:32:14.148"></status>
</kw>
<msg timestamp="20201111 12:32:17.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:17.796" starttime="20201111 12:32:14.148"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:17.797" starttime="20201111 12:32:14.147"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:17.801" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:17.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:17.805" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:17.805" starttime="20201111 12:32:17.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:17.806" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:17.806" starttime="20201111 12:32:17.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:17.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:17.807" starttime="20201111 12:32:17.806"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:17.807" starttime="20201111 12:32:17.798"></status>
</kw>
<msg timestamp="20201111 12:32:17.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:17.807" starttime="20201111 12:32:17.797"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:17.808" starttime="20201111 12:32:17.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:17.812" level="INFO">Running command 'ozone sh key delete /20498-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:19.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:19.748" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:19.748" starttime="20201111 12:32:17.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:19.749" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:19.749" starttime="20201111 12:32:19.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:19.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:19.750" starttime="20201111 12:32:19.749"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:19.750" starttime="20201111 12:32:17.809"></status>
</kw>
<msg timestamp="20201111 12:32:19.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:19.751" starttime="20201111 12:32:17.808"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:19.751" starttime="20201111 12:32:17.808"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:19.755" level="INFO">Running command 'ozone sh key get /20498-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:21.672" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 12:32:21.672" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201111 12:32:21.672" starttime="20201111 12:32:19.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:21.673" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201111 12:32:21.674" starttime="20201111 12:32:21.673"></status>
</kw>
<msg timestamp="20201111 12:32:21.674" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201111 12:32:21.674" starttime="20201111 12:32:19.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201111 12:32:21.674" starttime="20201111 12:32:21.674"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:21.679" level="INFO">Running command 'ozone sh key get --force /20498-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:25.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:25.393" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:25.393" starttime="20201111 12:32:21.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:25.394" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:25.394" starttime="20201111 12:32:25.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:25.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:25.395" starttime="20201111 12:32:25.394"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:25.395" starttime="20201111 12:32:21.676"></status>
</kw>
<msg timestamp="20201111 12:32:25.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:25.395" starttime="20201111 12:32:21.675"></status>
</kw>
<msg timestamp="20201111 12:32:25.395" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201111 12:32:25.395" starttime="20201111 12:32:21.675"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201111 12:32:25.396" starttime="20201111 12:32:25.395"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:25.399" level="INFO">Running command 'ozone sh key info /20498-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:27.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:27.499" level="INFO">${output} = {
  "volumeName": "20498-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-11-11T12:31:50.795Z",
  "modificationTime": "2020-11-11T12:31:54.073Z",
  "rep...</msg>
<status status="PASS" endtime="20201111 12:32:27.499" starttime="20201111 12:32:25.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:27.500" level="INFO">{
  "volumeName": "20498-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-11-11T12:31:50.795Z",
  "modificationTime": "2020-11-11T12:31:54.073Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105191696680550400,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201111 12:32:27.500" starttime="20201111 12:32:27.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:27.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:27.501" starttime="20201111 12:32:27.500"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:27.501" starttime="20201111 12:32:25.397"></status>
</kw>
<msg timestamp="20201111 12:32:27.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:27.501" starttime="20201111 12:32:25.397"></status>
</kw>
<msg timestamp="20201111 12:32:27.502" level="INFO">${result} = {
  "volumeName": "20498-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-11-11T12:31:50.795Z",
  "modificationTime": "2020-11-11T12:31:54.073Z",
  "rep...</msg>
<status status="PASS" endtime="20201111 12:32:27.502" starttime="20201111 12:32:25.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201111 12:32:27.502" starttime="20201111 12:32:27.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:27.507" level="INFO">Running command 'ozone sh key list /20498-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:29.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:29.656" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201111 12:32:29.656" starttime="20201111 12:32:27.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:29.657" level="INFO">key1</msg>
<status status="PASS" endtime="20201111 12:32:29.657" starttime="20201111 12:32:29.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:29.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:29.658" starttime="20201111 12:32:29.658"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:29.659" starttime="20201111 12:32:27.504"></status>
</kw>
<msg timestamp="20201111 12:32:29.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:29.659" starttime="20201111 12:32:27.503"></status>
</kw>
<msg timestamp="20201111 12:32:29.659" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20201111 12:32:29.659" starttime="20201111 12:32:27.503"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:32:29.660" starttime="20201111 12:32:29.659"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:29.668" level="INFO">Running command 'ozone sh key rename /20498-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:31.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:31.576" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:31.576" starttime="20201111 12:32:29.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:31.578" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:31.578" starttime="20201111 12:32:31.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:31.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:31.578" starttime="20201111 12:32:31.578"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:31.579" starttime="20201111 12:32:29.661"></status>
</kw>
<msg timestamp="20201111 12:32:31.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:31.579" starttime="20201111 12:32:29.661"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:31.579" starttime="20201111 12:32:29.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:31.584" level="INFO">Running command 'ozone sh key list /20498-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:33.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:33.809" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20201111 12:32:33.809" starttime="20201111 12:32:31.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:33.810" level="INFO">key2</msg>
<status status="PASS" endtime="20201111 12:32:33.811" starttime="20201111 12:32:33.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:33.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:33.811" starttime="20201111 12:32:33.811"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:33.812" starttime="20201111 12:32:31.581"></status>
</kw>
<msg timestamp="20201111 12:32:33.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:33.812" starttime="20201111 12:32:31.580"></status>
</kw>
<msg timestamp="20201111 12:32:33.812" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20201111 12:32:33.812" starttime="20201111 12:32:31.579"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201111 12:32:33.813" starttime="20201111 12:32:33.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:33.817" level="INFO">Running command 'ozone sh key delete /20498-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:35.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:35.654" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:35.654" starttime="20201111 12:32:33.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:35.655" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:35.656" starttime="20201111 12:32:35.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:35.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:35.656" starttime="20201111 12:32:35.656"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:35.657" starttime="20201111 12:32:33.814"></status>
</kw>
<msg timestamp="20201111 12:32:35.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:35.657" starttime="20201111 12:32:33.814"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:35.657" starttime="20201111 12:32:33.813"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:35.657" starttime="20201111 12:31:48.896"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:35.657" starttime="20201111 12:31:48.895"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:35.661" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /20498-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:37.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:37.668" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:37.668" starttime="20201111 12:32:35.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:37.669" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:37.670" starttime="20201111 12:32:37.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:37.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:37.670" starttime="20201111 12:32:37.670"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:37.671" starttime="20201111 12:32:35.658"></status>
</kw>
<msg timestamp="20201111 12:32:37.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:37.671" starttime="20201111 12:32:35.658"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:37.671" starttime="20201111 12:32:35.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:37.676" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:39.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:39.894" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:32:39.894" starttime="20201111 12:32:37.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:39.895" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:32:39.895" starttime="20201111 12:32:39.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:39.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:39.895" starttime="20201111 12:32:39.895"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:39.896" starttime="20201111 12:32:37.672"></status>
</kw>
<msg timestamp="20201111 12:32:39.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:39.896" starttime="20201111 12:32:37.672"></status>
</kw>
<msg timestamp="20201111 12:32:39.896" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:32:39.896" starttime="20201111 12:32:37.671"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:32:39.897" starttime="20201111 12:32:39.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --count-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:39.901" level="INFO">Running command 'ozone sh bucket clrquota --count-quota /20498-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:42.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:42.107" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:42.107" starttime="20201111 12:32:39.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:42.108" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:42.108" starttime="20201111 12:32:42.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:42.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:42.109" starttime="20201111 12:32:42.109"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:42.110" starttime="20201111 12:32:39.898"></status>
</kw>
<msg timestamp="20201111 12:32:42.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:42.110" starttime="20201111 12:32:39.898"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:42.110" starttime="20201111 12:32:39.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:42.114" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:44.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:44.257" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:32:44.257" starttime="20201111 12:32:42.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:44.258" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:32:44.258" starttime="20201111 12:32:44.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:44.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:44.259" starttime="20201111 12:32:44.259"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:44.260" starttime="20201111 12:32:42.111"></status>
</kw>
<msg timestamp="20201111 12:32:44.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:44.260" starttime="20201111 12:32:42.111"></status>
</kw>
<msg timestamp="20201111 12:32:44.260" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:32:44.260" starttime="20201111 12:32:42.110"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:32:44.261" starttime="20201111 12:32:44.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:44.267" level="INFO">Running command 'ozone sh volume clrquota --space-quota /20498-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:46.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:46.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:46.240" starttime="20201111 12:32:44.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:46.241" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:46.241" starttime="20201111 12:32:46.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:46.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:46.242" starttime="20201111 12:32:46.242"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:46.243" starttime="20201111 12:32:44.262"></status>
</kw>
<msg timestamp="20201111 12:32:46.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:46.243" starttime="20201111 12:32:44.262"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:46.243" starttime="20201111 12:32:44.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:46.266" level="INFO">Running command 'ozone sh volume info /20498-rpcbasic | jq -r '. | select(.name=="20498-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:48.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:48.559" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:32:48.559" starttime="20201111 12:32:46.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:48.560" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:32:48.561" starttime="20201111 12:32:48.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:48.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:48.561" starttime="20201111 12:32:48.561"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:48.561" starttime="20201111 12:32:46.245"></status>
</kw>
<msg timestamp="20201111 12:32:48.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:48.562" starttime="20201111 12:32:46.244"></status>
</kw>
<msg timestamp="20201111 12:32:48.562" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:32:48.562" starttime="20201111 12:32:46.243"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:32:48.563" starttime="20201111 12:32:48.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --count-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:48.572" level="INFO">Running command 'ozone sh volume clrquota --count-quota /20498-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:50.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:50.619" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:50.619" starttime="20201111 12:32:48.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:50.620" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:50.620" starttime="20201111 12:32:50.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:50.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:50.621" starttime="20201111 12:32:50.620"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:50.621" starttime="20201111 12:32:48.564"></status>
</kw>
<msg timestamp="20201111 12:32:50.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:50.621" starttime="20201111 12:32:48.563"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:50.621" starttime="20201111 12:32:48.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:50.625" level="INFO">Running command 'ozone sh volume info /20498-rpcbasic | jq -r '. | select(.name=="20498-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:52.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:52.751" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:32:52.751" starttime="20201111 12:32:50.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:52.753" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:32:52.753" starttime="20201111 12:32:52.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:52.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:52.753" starttime="20201111 12:32:52.753"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:52.754" starttime="20201111 12:32:50.623"></status>
</kw>
<msg timestamp="20201111 12:32:52.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:52.754" starttime="20201111 12:32:50.622"></status>
</kw>
<msg timestamp="20201111 12:32:52.754" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:32:52.754" starttime="20201111 12:32:50.622"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:32:52.755" starttime="20201111 12:32:52.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:52.760" level="INFO">Running command 'ozone sh bucket delete /20498-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:54.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:54.796" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:54.796" starttime="20201111 12:32:52.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:54.797" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:54.797" starttime="20201111 12:32:54.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:54.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:54.798" starttime="20201111 12:32:54.797"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:54.799" starttime="20201111 12:32:52.756"></status>
</kw>
<msg timestamp="20201111 12:32:54.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:54.799" starttime="20201111 12:32:52.756"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:54.800" starttime="20201111 12:32:52.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:54.804" level="INFO">Running command 'ozone sh volume delete /20498-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:57.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:57.004" level="INFO">${output} = Volume 20498-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201111 12:32:57.004" starttime="20201111 12:32:54.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:57.005" level="INFO">Volume 20498-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201111 12:32:57.005" starttime="20201111 12:32:57.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:57.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:57.006" starttime="20201111 12:32:57.005"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:57.006" starttime="20201111 12:32:54.801"></status>
</kw>
<msg timestamp="20201111 12:32:57.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:57.006" starttime="20201111 12:32:54.800"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:57.006" starttime="20201111 12:32:54.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:57.010" level="INFO">Running command 'ozone sh volume create /20498-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:32:59.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:32:59.066" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:32:59.066" starttime="20201111 12:32:57.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:32:59.067" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:32:59.067" starttime="20201111 12:32:59.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:32:59.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:32:59.068" starttime="20201111 12:32:59.067"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:59.068" starttime="20201111 12:32:57.008"></status>
</kw>
<msg timestamp="20201111 12:32:59.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:32:59.068" starttime="20201111 12:32:57.007"></status>
</kw>
<status status="PASS" endtime="20201111 12:32:59.069" starttime="20201111 12:32:57.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:32:59.074" level="INFO">Running command 'ozone sh volume info /20498-rpcbasic | jq -r '. | select(.name=="20498-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:01.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:01.315" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:33:01.315" starttime="20201111 12:32:59.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:01.316" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:33:01.316" starttime="20201111 12:33:01.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:01.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:01.317" starttime="20201111 12:33:01.317"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:01.317" starttime="20201111 12:32:59.070"></status>
</kw>
<msg timestamp="20201111 12:33:01.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:01.318" starttime="20201111 12:32:59.070"></status>
</kw>
<msg timestamp="20201111 12:33:01.318" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:33:01.318" starttime="20201111 12:32:59.069"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:33:01.319" starttime="20201111 12:33:01.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:01.324" level="INFO">Running command 'ozone sh volume info /20498-rpcbasic | jq -r '. | select(.name=="20498-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:03.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:03.787" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:33:03.787" starttime="20201111 12:33:01.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:03.788" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:33:03.788" starttime="20201111 12:33:03.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:03.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:03.789" starttime="20201111 12:33:03.788"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:03.789" starttime="20201111 12:33:01.320"></status>
</kw>
<msg timestamp="20201111 12:33:03.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:03.789" starttime="20201111 12:33:01.320"></status>
</kw>
<msg timestamp="20201111 12:33:03.790" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:33:03.790" starttime="20201111 12:33:01.319"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:33:03.790" starttime="20201111 12:33:03.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:03.795" level="INFO">Running command 'ozone sh bucket create /20498-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:05.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:05.943" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:33:05.943" starttime="20201111 12:33:03.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:05.944" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:33:05.944" starttime="20201111 12:33:05.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:05.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:05.944" starttime="20201111 12:33:05.944"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:05.945" starttime="20201111 12:33:03.792"></status>
</kw>
<msg timestamp="20201111 12:33:05.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:05.945" starttime="20201111 12:33:03.791"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:05.945" starttime="20201111 12:33:03.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:05.951" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:08.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:08.164" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:33:08.164" starttime="20201111 12:33:05.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:08.165" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:33:08.165" starttime="20201111 12:33:08.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:08.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:08.166" starttime="20201111 12:33:08.165"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:08.167" starttime="20201111 12:33:05.947"></status>
</kw>
<msg timestamp="20201111 12:33:08.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:08.167" starttime="20201111 12:33:05.946"></status>
</kw>
<msg timestamp="20201111 12:33:08.167" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:33:08.167" starttime="20201111 12:33:05.945"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:33:08.168" starttime="20201111 12:33:08.167"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:08.173" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:10.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:10.453" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:33:10.453" starttime="20201111 12:33:08.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:10.454" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:33:10.455" starttime="20201111 12:33:10.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:10.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:10.455" starttime="20201111 12:33:10.455"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:10.456" starttime="20201111 12:33:08.169"></status>
</kw>
<msg timestamp="20201111 12:33:10.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:10.456" starttime="20201111 12:33:08.169"></status>
</kw>
<msg timestamp="20201111 12:33:10.456" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:33:10.456" starttime="20201111 12:33:08.168"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:33:10.457" starttime="20201111 12:33:10.456"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:10.462" level="INFO">Running command 'ozone sh volume setquota /20498-rpcbasic --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:12.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:12.561" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:33:12.561" starttime="20201111 12:33:10.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:12.562" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:33:12.562" starttime="20201111 12:33:12.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:12.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:12.563" starttime="20201111 12:33:12.563"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:12.563" starttime="20201111 12:33:10.458"></status>
</kw>
<msg timestamp="20201111 12:33:12.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:12.564" starttime="20201111 12:33:10.457"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:12.564" starttime="20201111 12:33:10.457"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:12.568" level="INFO">Running command 'ozone sh volume info /20498-rpcbasic | jq -r '. | select(.name=="20498-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:14.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:14.663" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:33:14.663" starttime="20201111 12:33:12.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:14.665" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:33:14.665" starttime="20201111 12:33:14.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:14.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:14.665" starttime="20201111 12:33:14.665"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:14.666" starttime="20201111 12:33:12.565"></status>
</kw>
<msg timestamp="20201111 12:33:14.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:14.666" starttime="20201111 12:33:12.565"></status>
</kw>
<msg timestamp="20201111 12:33:14.666" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:33:14.666" starttime="20201111 12:33:12.564"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:33:14.667" starttime="20201111 12:33:14.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:14.672" level="INFO">Running command 'ozone sh volume info /20498-rpcbasic | jq -r '. | select(.name=="20498-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:16.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:16.921" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:33:16.921" starttime="20201111 12:33:14.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:16.922" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:33:16.922" starttime="20201111 12:33:16.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:16.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:16.923" starttime="20201111 12:33:16.922"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:16.923" starttime="20201111 12:33:14.668"></status>
</kw>
<msg timestamp="20201111 12:33:16.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:16.923" starttime="20201111 12:33:14.668"></status>
</kw>
<msg timestamp="20201111 12:33:16.924" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:33:16.924" starttime="20201111 12:33:14.667"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:33:16.924" starttime="20201111 12:33:16.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:16.928" level="INFO">Running command 'ozone sh bucket setquota /20498-rpcbasic/bb1 --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:18.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:18.965" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:33:18.965" starttime="20201111 12:33:16.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:18.967" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:33:18.967" starttime="20201111 12:33:18.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:18.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:18.967" starttime="20201111 12:33:18.967"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:18.968" starttime="20201111 12:33:16.925"></status>
</kw>
<msg timestamp="20201111 12:33:18.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:18.968" starttime="20201111 12:33:16.925"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:18.968" starttime="20201111 12:33:16.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:18.973" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:21.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:21.109" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:33:21.109" starttime="20201111 12:33:18.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:21.110" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:33:21.110" starttime="20201111 12:33:21.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:21.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:21.111" starttime="20201111 12:33:21.111"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:21.112" starttime="20201111 12:33:18.970"></status>
</kw>
<msg timestamp="20201111 12:33:21.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:21.112" starttime="20201111 12:33:18.969"></status>
</kw>
<msg timestamp="20201111 12:33:21.112" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:33:21.112" starttime="20201111 12:33:18.968"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:33:21.113" starttime="20201111 12:33:21.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:21.117" level="INFO">Running command 'ozone sh bucket info /20498-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:23.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:23.294" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201111 12:33:23.294" starttime="20201111 12:33:21.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:23.295" level="INFO">-1</msg>
<status status="PASS" endtime="20201111 12:33:23.295" starttime="20201111 12:33:23.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:23.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:23.296" starttime="20201111 12:33:23.295"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:23.296" starttime="20201111 12:33:21.114"></status>
</kw>
<msg timestamp="20201111 12:33:23.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:23.297" starttime="20201111 12:33:21.114"></status>
</kw>
<msg timestamp="20201111 12:33:23.297" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201111 12:33:23.297" starttime="20201111 12:33:21.113"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201111 12:33:23.298" starttime="20201111 12:33:23.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:23.302" level="INFO">Running command 'ozone sh bucket delete /20498-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:25.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:25.233" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:33:25.233" starttime="20201111 12:33:23.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:25.235" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:33:25.235" starttime="20201111 12:33:25.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:25.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:25.236" starttime="20201111 12:33:25.235"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:25.236" starttime="20201111 12:33:23.299"></status>
</kw>
<msg timestamp="20201111 12:33:25.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:25.236" starttime="20201111 12:33:23.299"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:25.236" starttime="20201111 12:33:23.298"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:33:25.241" level="INFO">Running command 'ozone sh volume delete /20498-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:33:27.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:33:27.178" level="INFO">${output} = Volume 20498-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201111 12:33:27.178" starttime="20201111 12:33:25.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:33:27.179" level="INFO">Volume 20498-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201111 12:33:27.179" starttime="20201111 12:33:27.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:33:27.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:33:27.180" starttime="20201111 12:33:27.180"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:27.181" starttime="20201111 12:33:25.238"></status>
</kw>
<msg timestamp="20201111 12:33:27.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:33:27.181" starttime="20201111 12:33:25.237"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:27.181" starttime="20201111 12:33:25.237"></status>
</kw>
<status status="PASS" endtime="20201111 12:33:27.181" starttime="20201111 12:31:13.239"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:33:27.182" critical="yes" starttime="20201111 12:31:13.238"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20201111 12:33:27.183" starttime="20201111 12:31:13.097"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
