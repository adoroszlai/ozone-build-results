<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201111 12:58:18.471" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201111 12:55:21.543" starttime="20201111 12:55:21.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:55:21.553" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:55:21.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:55:21.668" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 11 Nov 2020 12:55:21 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 11 Nov 2020 12:20:40 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201111 12:55:21.668" starttime="20201111 12:55:21.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:55:21.669" level="INFO">HTTP/1.1 200 OK
Date: Wed, 11 Nov 2020 12:55:21 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 11 Nov 2020 12:20:40 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201111 12:55:21.669" starttime="20201111 12:55:21.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:55:21.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:55:21.670" starttime="20201111 12:55:21.669"></status>
</kw>
<status status="PASS" endtime="20201111 12:55:21.670" starttime="20201111 12:55:21.546"></status>
</kw>
<msg timestamp="20201111 12:55:21.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:55:21.670" starttime="20201111 12:55:21.546"></status>
</kw>
<msg timestamp="20201111 12:55:21.670" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 11 Nov 2020 12:55:21 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 11 Nov 2020 12:20:40 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201111 12:55:21.670" starttime="20201111 12:55:21.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201111 12:55:21.671" starttime="20201111 12:55:21.671"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:55:21.671" critical="yes" starttime="20201111 12:55:21.541"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201111 12:55:21.676" starttime="20201111 12:55:21.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:55:21.682" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:56:32.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:56:32.784" level="INFO">${output} = 2020-11-11 12:55:23,926 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 12:55:24,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201111 12:56:32.784" starttime="20201111 12:55:21.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:56:32.785" level="INFO">2020-11-11 12:55:23,926 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 12:55:24,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:55:24,081 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-11 12:55:26,131 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-11 12:55:26,132 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-11-11 12:55:26,132 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-11-11 12:55:26,133 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-11-11 12:55:26,133 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-11 12:55:26,133 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-11 12:55:26,133 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-11-11 12:55:26,136 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-11-11 12:55:26,137 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-11 12:55:26,147 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-11 12:55:26,181 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-29057, with hadoop as owner.
2020-11-11 12:55:26,443 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-22950, with hadoop as owner.
2020-11-11 12:55:26,451 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-91226, with hadoop as owner.
2020-11-11 12:55:26,458 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-70239, with hadoop as owner.
2020-11-11 12:55:26,465 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-87207, with hadoop as owner.
2020-11-11 12:55:26,479 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-29057/bucket-0-78913, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,548 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-22950/bucket-0-60629, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,562 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-91226/bucket-0-03764, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,579 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-70239/bucket-0-53908, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,595 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87207/bucket-0-92842, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,604 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-29057/bucket-1-33108, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,616 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-22950/bucket-1-28656, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,634 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-91226/bucket-1-10113, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,644 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-70239/bucket-1-32647, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,653 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87207/bucket-1-93375, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,659 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-29057/bucket-2-04240, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,665 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-22950/bucket-2-48963, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,673 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-91226/bucket-2-86980, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,684 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-70239/bucket-2-13891, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,691 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87207/bucket-2-91643, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,696 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-29057/bucket-3-28078, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,704 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-22950/bucket-3-44733, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,712 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-91226/bucket-3-48543, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,720 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-70239/bucket-3-35190, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,728 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87207/bucket-3-54566, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,734 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-29057/bucket-4-41830, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,742 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-22950/bucket-4-94605, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,752 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-91226/bucket-4-75795, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,759 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-70239/bucket-4-83098, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:26,773 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87207/bucket-4-24101, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 12:55:27,150 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-11 12:55:27,714 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-11 12:55:28,060 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:55:28,060 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-B9F4B0A26CF5-&gt;33b29beb-4f8f-4ff6-9e0d-4b4879dff6cb
2020-11-11 12:55:28,061 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 12:55:28,154 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-11 12:55:29,155 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-11 12:55:30,155 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-11 12:55:30,686 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5471DB9FE643-&gt;069aa1c0-c3ab-45d4-a9d6-a4ed129b744b
2020-11-11 12:55:30,687 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 12:55:31,159 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-11 12:55:32,168 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-11 12:55:33,168 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-11 12:55:34,168 [Thread-7] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-11-11 12:55:35,169 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-11-11 12:55:36,169 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-11-11 12:55:37,170 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-11-11 12:55:38,171 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-11-11 12:55:39,171 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-11-11 12:55:40,172 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-11-11 12:55:41,172 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-11-11 12:55:42,173 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-11-11 12:55:43,173 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-11-11 12:55:44,174 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-11-11 12:55:45,174 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-11-11 12:55:46,175 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-11 12:55:47,175 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-11 12:55:48,177 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-11 12:55:49,177 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-11-11 12:55:50,178 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-11-11 12:55:51,178 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-11-11 12:55:52,185 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-11-11 12:55:53,186 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-11-11 12:55:54,186 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-11-11 12:55:55,186 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-11-11 12:55:56,187 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-11-11 12:55:57,187 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-11-11 12:55:58,188 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-11-11 12:55:59,188 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-11-11 12:56:00,189 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-11-11 12:56:01,189 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-11-11 12:56:02,190 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-11-11 12:56:03,190 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-11-11 12:56:04,191 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-11-11 12:56:05,191 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-11-11 12:56:06,192 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-11-11 12:56:07,193 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-11-11 12:56:08,193 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-11-11 12:56:09,194 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-11-11 12:56:10,194 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-11-11 12:56:11,195 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-11-11 12:56:12,195 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-11-11 12:56:13,196 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-11-11 12:56:14,196 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-11-11 12:56:15,197 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-11-11 12:56:16,198 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-11-11 12:56:17,198 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-11-11 12:56:18,199 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-11-11 12:56:19,199 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-11-11 12:56:20,200 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-11-11 12:56:21,202 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-11-11 12:56:22,202 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-11-11 12:56:23,203 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-11-11 12:56:24,203 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-11-11 12:56:25,204 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-11-11 12:56:26,204 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-11-11 12:56:27,205 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,298
Average Time spent in bucket creation: 00:00:00,188
Average Time spent in key creation: 00:00:01,998
Average Time spent in key write: 00:00:00,808
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:08,095
***************************************************</msg>
<status status="PASS" endtime="20201111 12:56:32.786" starttime="20201111 12:56:32.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:56:32.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:56:32.786" starttime="20201111 12:56:32.786"></status>
</kw>
<status status="PASS" endtime="20201111 12:56:32.787" starttime="20201111 12:55:21.677"></status>
</kw>
<msg timestamp="20201111 12:56:32.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:56:32.787" starttime="20201111 12:55:21.676"></status>
</kw>
<msg timestamp="20201111 12:56:32.787" level="INFO">${result} = 2020-11-11 12:55:23,926 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 12:55:24,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201111 12:56:32.787" starttime="20201111 12:55:21.676"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201111 12:56:32.788" starttime="20201111 12:56:32.788"></status>
</kw>
<status status="PASS" endtime="20201111 12:56:32.788" starttime="20201111 12:56:32.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201111 12:56:32.789" starttime="20201111 12:56:32.789"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:56:32.789" critical="yes" starttime="20201111 12:55:21.672"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201111 12:56:32.797" starttime="20201111 12:55:21.465"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:56:37.174" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:56:39.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:56:39.607" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201111 12:56:39.607" starttime="20201111 12:56:37.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:56:39.608" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1</msg>
<status status="PASS" endtime="20201111 12:56:39.608" starttime="20201111 12:56:39.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:56:39.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:56:39.609" starttime="20201111 12:56:39.609"></status>
</kw>
<status status="PASS" endtime="20201111 12:56:39.609" starttime="20201111 12:56:37.169"></status>
</kw>
<msg timestamp="20201111 12:56:39.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:56:39.610" starttime="20201111 12:56:37.169"></status>
</kw>
<msg timestamp="20201111 12:56:39.610" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201111 12:56:39.610" starttime="20201111 12:56:37.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201111 12:56:39.611" starttime="20201111 12:56:39.610"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:56:39.611" critical="yes" starttime="20201111 12:56:37.167"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:56:39.617" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:56:42.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:56:42.030" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201111 12:56:42.030" starttime="20201111 12:56:39.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:56:42.031" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201111 12:56:42.031" starttime="20201111 12:56:42.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:56:42.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:56:42.032" starttime="20201111 12:56:42.031"></status>
</kw>
<status status="PASS" endtime="20201111 12:56:42.032" starttime="20201111 12:56:39.614"></status>
</kw>
<msg timestamp="20201111 12:56:42.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:56:42.033" starttime="20201111 12:56:39.613"></status>
</kw>
<msg timestamp="20201111 12:56:42.033" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201111 12:56:42.033" starttime="20201111 12:56:39.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201111 12:56:42.033" starttime="20201111 12:56:42.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201111 12:56:42.034" starttime="20201111 12:56:42.034"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:56:42.034" critical="yes" starttime="20201111 12:56:39.612"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201111 12:56:42.035" starttime="20201111 12:56:37.113"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:56:46.372" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:56:49.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:56:49.360" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:56:49.360" starttime="20201111 12:56:46.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:56:49.361" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:56:49.361" starttime="20201111 12:56:49.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:56:49.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:56:49.362" starttime="20201111 12:56:49.361"></status>
</kw>
<status status="PASS" endtime="20201111 12:56:49.362" starttime="20201111 12:56:46.367"></status>
</kw>
<msg timestamp="20201111 12:56:49.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:56:49.362" starttime="20201111 12:56:46.367"></status>
</kw>
<msg timestamp="20201111 12:56:49.363" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:56:49.363" starttime="20201111 12:56:46.366"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201111 12:56:49.364" starttime="20201111 12:56:49.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:56:49.367" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:56:52.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:56:52.203" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:56:52.203" starttime="20201111 12:56:49.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:56:52.204" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:56:52.204" starttime="20201111 12:56:52.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:56:52.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:56:52.205" starttime="20201111 12:56:52.204"></status>
</kw>
<status status="PASS" endtime="20201111 12:56:52.205" starttime="20201111 12:56:49.365"></status>
</kw>
<msg timestamp="20201111 12:56:52.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:56:52.205" starttime="20201111 12:56:49.364"></status>
</kw>
<msg timestamp="20201111 12:56:52.205" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:56:52.205" starttime="20201111 12:56:49.364"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201111 12:56:52.206" starttime="20201111 12:56:52.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:56:52.210" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:56:57.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:56:57.049" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:56:57.049" starttime="20201111 12:56:52.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:56:57.050" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:56:57.050" starttime="20201111 12:56:57.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:56:57.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:56:57.051" starttime="20201111 12:56:57.050"></status>
</kw>
<status status="PASS" endtime="20201111 12:56:57.051" starttime="20201111 12:56:52.207"></status>
</kw>
<msg timestamp="20201111 12:56:57.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:56:57.051" starttime="20201111 12:56:52.206"></status>
</kw>
<msg timestamp="20201111 12:56:57.051" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:56:57.051" starttime="20201111 12:56:52.206"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201111 12:56:57.052" starttime="20201111 12:56:57.052"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:56:57.052" critical="yes" starttime="20201111 12:56:46.365"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201111 12:56:57.053" starttime="20201111 12:56:46.311"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:57:37.693" level="INFO">${random} = 09783</msg>
<status status="PASS" endtime="20201111 12:57:37.693" starttime="20201111 12:57:37.692"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:57:37.698" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-09783 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:58:12.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:58:12.404" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:58:12.404" starttime="20201111 12:57:37.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:58:12.405" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:58:12.405" starttime="20201111 12:58:12.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:58:12.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:58:12.405" starttime="20201111 12:58:12.405"></status>
</kw>
<status status="PASS" endtime="20201111 12:58:12.406" starttime="20201111 12:57:37.694"></status>
</kw>
<msg timestamp="20201111 12:58:12.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:58:12.406" starttime="20201111 12:57:37.693"></status>
</kw>
<msg timestamp="20201111 12:58:12.406" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:58:12.406" starttime="20201111 12:57:37.693"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201111 12:58:12.407" starttime="20201111 12:58:12.406"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:58:12.407" critical="yes" starttime="20201111 12:57:37.691"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201111 12:58:12.409" starttime="20201111 12:57:37.639"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:57:03.183" level="INFO">${random} = 81563</msg>
<status status="PASS" endtime="20201111 12:57:03.183" starttime="20201111 12:57:03.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:57:03.191" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-81563 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:57:07.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:57:07.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:57:07.558" starttime="20201111 12:57:03.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:57:07.559" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:57:07.559" starttime="20201111 12:57:07.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:57:07.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:57:07.560" starttime="20201111 12:57:07.559"></status>
</kw>
<status status="PASS" endtime="20201111 12:57:07.560" starttime="20201111 12:57:03.184"></status>
</kw>
<msg timestamp="20201111 12:57:07.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:57:07.560" starttime="20201111 12:57:03.184"></status>
</kw>
<msg timestamp="20201111 12:57:07.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:57:07.560" starttime="20201111 12:57:03.183"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201111 12:57:07.561" starttime="20201111 12:57:07.561"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:57:07.561" critical="yes" starttime="20201111 12:57:03.181"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201111 12:57:07.562" starttime="20201111 12:57:03.126"></status>
</suite>
<status status="PASS" elapsedtime="126202" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
