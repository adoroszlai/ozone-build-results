<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201111 12:48:26.632" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:34:55.217" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:34:57.706" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 12:34:57.706" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201111 12:34:57.706" starttime="20201111 12:34:55.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:34:57.707" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201111 12:34:57.707" starttime="20201111 12:34:57.706"></status>
</kw>
<msg timestamp="20201111 12:34:57.708" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201111 12:34:57.708" starttime="20201111 12:34:55.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:34:57.714" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:34:59.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:34:59.867" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:34:59.867" starttime="20201111 12:34:57.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:34:59.868" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:34:59.868" starttime="20201111 12:34:59.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:34:59.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:34:59.869" starttime="20201111 12:34:59.869"></status>
</kw>
<status status="PASS" endtime="20201111 12:34:59.869" starttime="20201111 12:34:57.710"></status>
</kw>
<msg timestamp="20201111 12:34:59.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:34:59.870" starttime="20201111 12:34:57.709"></status>
</kw>
<msg timestamp="20201111 12:34:59.870" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201111 12:34:59.870" starttime="20201111 12:34:57.709"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201111 12:34:59.870" starttime="20201111 12:34:59.870"></status>
</kw>
<status status="PASS" endtime="20201111 12:34:59.871" starttime="20201111 12:34:57.708"></status>
</kw>
<status status="PASS" endtime="20201111 12:34:59.871" starttime="20201111 12:34:57.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:34:59.876" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:01.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:01.857" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:35:01.857" starttime="20201111 12:34:59.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:01.858" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:35:01.858" starttime="20201111 12:35:01.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:01.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:01.859" starttime="20201111 12:35:01.858"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:01.859" starttime="20201111 12:34:59.873"></status>
</kw>
<msg timestamp="20201111 12:35:01.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:01.859" starttime="20201111 12:34:59.872"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:01.859" starttime="20201111 12:34:59.872"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:01.859" starttime="20201111 12:34:59.871"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:01.860" starttime="20201111 12:34:59.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201111 12:35:01.860" starttime="20201111 12:35:01.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:01.865" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:04.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:04.032" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T12:35:01.726Z",
  "modificat...</msg>
<status status="PASS" endtime="20201111 12:35:04.032" starttime="20201111 12:35:01.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:04.033" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T12:35:01.726Z",
  "modificationTime" : "2020-11-11T12:35:01.726Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201111 12:35:04.034" starttime="20201111 12:35:04.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:04.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:04.034" starttime="20201111 12:35:04.034"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:04.035" starttime="20201111 12:35:01.861"></status>
</kw>
<msg timestamp="20201111 12:35:04.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:04.035" starttime="20201111 12:35:01.861"></status>
</kw>
<msg timestamp="20201111 12:35:04.035" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T12:35:01.726Z",
  "modificat...</msg>
<status status="PASS" endtime="20201111 12:35:04.035" starttime="20201111 12:35:01.860"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201111 12:35:04.036" starttime="20201111 12:35:04.035"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:35:04.040" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:35:04.040" starttime="20201111 12:35:04.040"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:35:04.041" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:35:04.041" starttime="20201111 12:35:04.040"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:04.041" starttime="20201111 12:35:04.039"></status>
</kw>
<msg timestamp="20201111 12:35:04.041" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:35:04.041" starttime="20201111 12:35:04.038"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:04.042" starttime="20201111 12:35:04.038"></status>
</kw>
<msg timestamp="20201111 12:35:04.042" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201111 12:35:04.042" starttime="20201111 12:35:04.037"></status>
</kw>
<msg timestamp="20201111 12:35:04.042" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201111 12:35:04.042" starttime="20201111 12:35:04.036"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:04.047" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:06.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:06.175" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:35:06.175" starttime="20201111 12:35:04.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:06.177" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:35:06.177" starttime="20201111 12:35:06.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:06.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:06.177" starttime="20201111 12:35:06.177"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:06.178" starttime="20201111 12:35:04.043"></status>
</kw>
<msg timestamp="20201111 12:35:06.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:06.178" starttime="20201111 12:35:04.043"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:06.178" starttime="20201111 12:35:04.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:06.182" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:11.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:11.743" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:35:11.743" starttime="20201111 12:35:06.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:11.744" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:35:11.745" starttime="20201111 12:35:11.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:11.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:11.745" starttime="20201111 12:35:11.745"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:11.745" starttime="20201111 12:35:06.179"></status>
</kw>
<msg timestamp="20201111 12:35:11.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:11.746" starttime="20201111 12:35:06.179"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:11.746" starttime="20201111 12:35:06.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:11.750" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:15.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:15.517" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:35:15.517" starttime="20201111 12:35:11.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:15.518" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:35:15.518" starttime="20201111 12:35:15.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:15.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:15.519" starttime="20201111 12:35:15.518"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:15.519" starttime="20201111 12:35:11.747"></status>
</kw>
<msg timestamp="20201111 12:35:15.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:15.519" starttime="20201111 12:35:11.747"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:15.520" starttime="20201111 12:35:11.746"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:15.523" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:19.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:19.234" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:35:19.234" starttime="20201111 12:35:15.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:19.235" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:35:19.235" starttime="20201111 12:35:19.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:19.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:19.236" starttime="20201111 12:35:19.235"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:19.236" starttime="20201111 12:35:15.521"></status>
</kw>
<msg timestamp="20201111 12:35:19.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:19.236" starttime="20201111 12:35:15.520"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:19.236" starttime="20201111 12:35:15.520"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 12:35:19.236" critical="yes" starttime="20201111 12:34:55.211"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:35:19.241" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:35:19.241" starttime="20201111 12:35:19.241"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:35:19.242" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:35:19.242" starttime="20201111 12:35:19.241"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:19.242" starttime="20201111 12:35:19.240"></status>
</kw>
<msg timestamp="20201111 12:35:19.242" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:35:19.242" starttime="20201111 12:35:19.240"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:19.243" starttime="20201111 12:35:19.239"></status>
</kw>
<msg timestamp="20201111 12:35:19.243" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 12:35:19.243" starttime="20201111 12:35:19.239"></status>
</kw>
<msg timestamp="20201111 12:35:19.243" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 12:35:19.243" starttime="20201111 12:35:19.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:19.247" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:21.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:21.195" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:35:21.195" starttime="20201111 12:35:19.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:21.197" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:35:21.197" starttime="20201111 12:35:21.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:21.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:21.198" starttime="20201111 12:35:21.197"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:21.198" starttime="20201111 12:35:19.244"></status>
</kw>
<msg timestamp="20201111 12:35:21.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:21.198" starttime="20201111 12:35:19.244"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:21.199" starttime="20201111 12:35:19.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:21.203" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:23.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:23.197" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:35:23.197" starttime="20201111 12:35:21.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:23.198" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:35:23.198" starttime="20201111 12:35:23.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:23.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:23.199" starttime="20201111 12:35:23.198"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:23.199" starttime="20201111 12:35:21.200"></status>
</kw>
<msg timestamp="20201111 12:35:23.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:23.199" starttime="20201111 12:35:21.199"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:23.199" starttime="20201111 12:35:21.199"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 12:35:23.200" critical="yes" starttime="20201111 12:35:19.237"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201111 12:35:23.201" starttime="20201111 12:34:55.150"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:36:58.140" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:36:58.140" starttime="20201111 12:36:58.139"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:36:58.140" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:36:58.140" starttime="20201111 12:36:58.140"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:58.141" starttime="20201111 12:36:58.139"></status>
</kw>
<msg timestamp="20201111 12:36:58.141" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:36:58.141" starttime="20201111 12:36:58.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:36:58.142" starttime="20201111 12:36:58.141"></status>
</kw>
<msg timestamp="20201111 12:36:58.142" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 12:36:58.142" starttime="20201111 12:36:58.141"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:58.142" starttime="20201111 12:36:58.138"></status>
</kw>
<msg timestamp="20201111 12:36:58.142" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:36:58.142" starttime="20201111 12:36:58.137"></status>
</kw>
<msg timestamp="20201111 12:36:58.143" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:36:58.143" starttime="20201111 12:36:58.136"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:36:58.143" level="INFO">${random} = 10376</msg>
<status status="PASS" endtime="20201111 12:36:58.143" starttime="20201111 12:36:58.143"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:36:58.148" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-10376 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:37:01.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:37:01.239" level="INFO">${output} = 2020-11-11 12:36:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:36:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-11 ...</msg>
<status status="PASS" endtime="20201111 12:37:01.239" starttime="20201111 12:36:58.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:37:01.240" level="INFO">2020-11-11 12:36:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:36:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-11 12:36:59 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-11 12:37:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:37:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B5E3F68B6459-&gt;d1a647ef-8d54-486e-805d-3215f660dfde
2020-11-11 12:37:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201111 12:37:01.241" starttime="20201111 12:37:01.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:37:01.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:37:01.241" starttime="20201111 12:37:01.241"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:01.241" starttime="20201111 12:36:58.144"></status>
</kw>
<msg timestamp="20201111 12:37:01.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:37:01.242" starttime="20201111 12:36:58.144"></status>
</kw>
<msg timestamp="20201111 12:37:01.242" level="INFO">${result} = 2020-11-11 12:36:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:36:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-11 ...</msg>
<status status="PASS" endtime="20201111 12:37:01.242" starttime="20201111 12:36:58.144"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:37:01.248" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:37:02.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:37:02.893" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-11 12:37 ofs://om/volume1/bucket1/ozone-10376
-rw-...</msg>
<status status="PASS" endtime="20201111 12:37:02.893" starttime="20201111 12:37:01.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:37:02.894" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-11 12:37 ofs://om/volume1/bucket1/ozone-10376
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-11 12:35 ofs://om/volume1/bucket1/ozone-72477
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:35 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:36 ofs://om/volume1/bucket1/wordcount-35.txt</msg>
<status status="PASS" endtime="20201111 12:37:02.894" starttime="20201111 12:37:02.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:37:02.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:37:02.894" starttime="20201111 12:37:02.894"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:02.894" starttime="20201111 12:37:01.244"></status>
</kw>
<msg timestamp="20201111 12:37:02.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:37:02.895" starttime="20201111 12:37:01.244"></status>
</kw>
<msg timestamp="20201111 12:37:02.895" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-11 12:37 ofs://om/volume1/bucket1/ozone-10376
-rw-...</msg>
<status status="PASS" endtime="20201111 12:37:02.895" starttime="20201111 12:37:01.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:37:02.896" starttime="20201111 12:37:02.895"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:37:02.896" critical="yes" starttime="20201111 12:36:58.136"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201111 12:37:02.897" starttime="20201111 12:36:58.081"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:35:27.577" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:35:27.577" starttime="20201111 12:35:27.577"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:35:27.578" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:35:27.578" starttime="20201111 12:35:27.578"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:27.578" starttime="20201111 12:35:27.577"></status>
</kw>
<msg timestamp="20201111 12:35:27.579" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:35:27.579" starttime="20201111 12:35:27.576"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:27.579" starttime="20201111 12:35:27.575"></status>
</kw>
<msg timestamp="20201111 12:35:27.579" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:35:27.579" starttime="20201111 12:35:27.575"></status>
</kw>
<msg timestamp="20201111 12:35:27.579" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:35:27.579" starttime="20201111 12:35:27.574"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:35:27.580" level="INFO">${random} = 72477</msg>
<status status="PASS" endtime="20201111 12:35:27.580" starttime="20201111 12:35:27.579"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:27.584" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-72477 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:30.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:30.800" level="INFO">${output} = 2020-11-11 12:35:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:35:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-11 ...</msg>
<status status="PASS" endtime="20201111 12:35:30.800" starttime="20201111 12:35:27.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:30.801" level="INFO">2020-11-11 12:35:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:35:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-11 12:35:29 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-11 12:35:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:35:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E8E4BF1D4277-&gt;d1a647ef-8d54-486e-805d-3215f660dfde
2020-11-11 12:35:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201111 12:35:30.801" starttime="20201111 12:35:30.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:30.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:30.802" starttime="20201111 12:35:30.802"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:30.802" starttime="20201111 12:35:27.581"></status>
</kw>
<msg timestamp="20201111 12:35:30.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:30.803" starttime="20201111 12:35:27.580"></status>
</kw>
<msg timestamp="20201111 12:35:30.803" level="INFO">${result} = 2020-11-11 12:35:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:35:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-11 ...</msg>
<status status="PASS" endtime="20201111 12:35:30.803" starttime="20201111 12:35:27.580"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:30.808" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:32.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:32.490" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-11 12:35 o3fs://bucket1.volume1.om/ozone-72477
dr...</msg>
<status status="PASS" endtime="20201111 12:35:32.491" starttime="20201111 12:35:30.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:32.492" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-11 12:35 o3fs://bucket1.volume1.om/ozone-72477
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:35 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 12:35:32.492" starttime="20201111 12:35:32.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:32.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:32.492" starttime="20201111 12:35:32.492"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:32.493" starttime="20201111 12:35:30.805"></status>
</kw>
<msg timestamp="20201111 12:35:32.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:32.493" starttime="20201111 12:35:30.804"></status>
</kw>
<msg timestamp="20201111 12:35:32.493" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-11 12:35 o3fs://bucket1.volume1.om/ozone-72477
dr...</msg>
<status status="PASS" endtime="20201111 12:35:32.493" starttime="20201111 12:35:30.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:35:32.494" starttime="20201111 12:35:32.494"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:35:32.494" critical="yes" starttime="20201111 12:35:27.573"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201111 12:35:32.496" starttime="20201111 12:35:27.520"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:37:07.276" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:37:07.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:37:07.281" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:37:07.281" starttime="20201111 12:37:07.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:37:07.282" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:37:07.282" starttime="20201111 12:37:07.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:37:07.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:37:07.283" starttime="20201111 12:37:07.282"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:07.283" starttime="20201111 12:37:07.271"></status>
</kw>
<msg timestamp="20201111 12:37:07.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:37:07.283" starttime="20201111 12:37:07.271"></status>
</kw>
<msg timestamp="20201111 12:37:07.283" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:37:07.283" starttime="20201111 12:37:07.270"></status>
</kw>
<msg timestamp="20201111 12:37:07.284" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:37:07.284" starttime="20201111 12:37:07.270"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:37:07.288" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:37:07.288" starttime="20201111 12:37:07.288"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:37:07.289" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:37:07.289" starttime="20201111 12:37:07.288"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:07.289" starttime="20201111 12:37:07.286"></status>
</kw>
<msg timestamp="20201111 12:37:07.289" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:37:07.289" starttime="20201111 12:37:07.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:37:07.290" starttime="20201111 12:37:07.290"></status>
</kw>
<msg timestamp="20201111 12:37:07.290" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 12:37:07.290" starttime="20201111 12:37:07.289"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:07.291" starttime="20201111 12:37:07.285"></status>
</kw>
<msg timestamp="20201111 12:37:07.291" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:37:07.291" starttime="20201111 12:37:07.285"></status>
</kw>
<msg timestamp="20201111 12:37:07.291" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:37:07.291" starttime="20201111 12:37:07.284"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:37:07.295" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:37:41.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:37:41.592" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:37:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:37:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201111 12:37:41.592" starttime="20201111 12:37:07.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:37:41.594" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:37:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:37:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-11 12:37:09 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-11 12:37:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:37:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-322DFF0BF766-&gt;d1a647ef-8d54-486e-805d-3215f660dfde
2020-11-11 12:37:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-11 12:37:10 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-11-11 12:37:10 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 12:37:10 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-11 12:37:13 INFO  JobSubmitter:198 - number of splits:3
2020-11-11 12:37:13 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605098064687_0003
2020-11-11 12:37:13 INFO  YarnClientImpl:273 - Submitted application application_1605098064687_0003
2020-11-11 12:37:13 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605098064687_0003/
2020-11-11 12:37:13 INFO  Job:1339 - Running job: job_1605098064687_0003
2020-11-11 12:37:20 INFO  Job:1360 - Job job_1605098064687_0003 running in uber mode : false
2020-11-11 12:37:20 INFO  Job:1367 -  map 0% reduce 0%
2020-11-11 12:37:26 INFO  Job:1367 -  map 33% reduce 0%
2020-11-11 12:37:30 INFO  Job:1367 -  map 67% reduce 0%
2020-11-11 12:37:35 INFO  Job:1367 -  map 100% reduce 0%
2020-11-11 12:37:39 INFO  Job:1367 -  map 100% reduce 100%
2020-11-11 12:37:40 INFO  Job:1378 - Job job_1605098064687_0003 completed successfully
2020-11-11 12:37:41 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615229
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36384
		Total time spent by all reduces in occupied slots (ms)=14016
		Total time spent by all map tasks (ms)=9096
		Total time spent by all reduce tasks (ms)=3504
		Total vcore-milliseconds taken by all map tasks=9096
		Total vcore-milliseconds taken by all reduce tasks=3504
		Total megabyte-milliseconds taken by all map tasks=37257216
		Total megabyte-milliseconds taken by all reduce tasks=14352384
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=513
		CPU time spent (ms)=6370
		Physical memory (bytes) snapshot=1163042816
		Virtual memory (bytes) snapshot=15789957120
		Total committed heap usage (bytes)=1056440320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.768 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201111 12:37:41.594" starttime="20201111 12:37:41.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:37:41.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:37:41.596" starttime="20201111 12:37:41.595"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:41.596" starttime="20201111 12:37:07.292"></status>
</kw>
<msg timestamp="20201111 12:37:41.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:37:41.596" starttime="20201111 12:37:07.292"></status>
</kw>
<msg timestamp="20201111 12:37:41.597" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:37:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:37:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201111 12:37:41.597" starttime="20201111 12:37:07.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:37:41.597" starttime="20201111 12:37:41.597"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:37:41.597" critical="yes" starttime="20201111 12:37:07.269"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:37:41.604" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:37:41.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:37:41.609" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:37:41.609" starttime="20201111 12:37:41.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:37:41.610" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:37:41.610" starttime="20201111 12:37:41.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:37:41.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:37:41.611" starttime="20201111 12:37:41.611"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:41.612" starttime="20201111 12:37:41.601"></status>
</kw>
<msg timestamp="20201111 12:37:41.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:37:41.612" starttime="20201111 12:37:41.600"></status>
</kw>
<msg timestamp="20201111 12:37:41.612" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:37:41.612" starttime="20201111 12:37:41.600"></status>
</kw>
<msg timestamp="20201111 12:37:41.612" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:37:41.612" starttime="20201111 12:37:41.600"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:37:41.613" level="INFO">${random} = 53</msg>
<status status="PASS" endtime="20201111 12:37:41.613" starttime="20201111 12:37:41.613"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:37:41.617" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:37:41.617" starttime="20201111 12:37:41.617"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:37:41.618" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:37:41.618" starttime="20201111 12:37:41.617"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:41.618" starttime="20201111 12:37:41.616"></status>
</kw>
<msg timestamp="20201111 12:37:41.618" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:37:41.619" starttime="20201111 12:37:41.615"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:37:41.619" starttime="20201111 12:37:41.619"></status>
</kw>
<msg timestamp="20201111 12:37:41.620" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 12:37:41.620" starttime="20201111 12:37:41.619"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:41.620" starttime="20201111 12:37:41.615"></status>
</kw>
<msg timestamp="20201111 12:37:41.620" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:37:41.620" starttime="20201111 12:37:41.614"></status>
</kw>
<msg timestamp="20201111 12:37:41.621" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:37:41.621" starttime="20201111 12:37:41.613"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:37:41.624" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:37:41.624" starttime="20201111 12:37:41.624"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:37:41.625" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:37:41.625" starttime="20201111 12:37:41.624"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:41.625" starttime="20201111 12:37:41.623"></status>
</kw>
<msg timestamp="20201111 12:37:41.625" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:37:41.625" starttime="20201111 12:37:41.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:37:41.627" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201111 12:37:41.627" starttime="20201111 12:37:41.627"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:37:41.628" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201111 12:37:41.628" starttime="20201111 12:37:41.627"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:41.628" starttime="20201111 12:37:41.626"></status>
</kw>
<msg timestamp="20201111 12:37:41.628" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201111 12:37:41.628" starttime="20201111 12:37:41.626"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:41.629" starttime="20201111 12:37:41.622"></status>
</kw>
<msg timestamp="20201111 12:37:41.629" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201111 12:37:41.629" starttime="20201111 12:37:41.621"></status>
</kw>
<msg timestamp="20201111 12:37:41.629" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201111 12:37:41.629" starttime="20201111 12:37:41.621"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:37:41.633" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:37:41.633" starttime="20201111 12:37:41.632"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:37:41.633" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:37:41.633" starttime="20201111 12:37:41.633"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:41.634" starttime="20201111 12:37:41.632"></status>
</kw>
<msg timestamp="20201111 12:37:41.634" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:37:41.634" starttime="20201111 12:37:41.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:37:41.636" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201111 12:37:41.636" starttime="20201111 12:37:41.635"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:37:41.637" level="INFO">${result} = /wordcount-53.txt</msg>
<status status="PASS" endtime="20201111 12:37:41.637" starttime="20201111 12:37:41.636"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:41.637" starttime="20201111 12:37:41.635"></status>
</kw>
<msg timestamp="20201111 12:37:41.637" level="INFO">${path_with_leading} = /wordcount-53.txt</msg>
<status status="PASS" endtime="20201111 12:37:41.637" starttime="20201111 12:37:41.634"></status>
</kw>
<status status="PASS" endtime="20201111 12:37:41.638" starttime="20201111 12:37:41.630"></status>
</kw>
<msg timestamp="20201111 12:37:41.638" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-53.txt</msg>
<status status="PASS" endtime="20201111 12:37:41.638" starttime="20201111 12:37:41.630"></status>
</kw>
<msg timestamp="20201111 12:37:41.638" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-53.txt</msg>
<status status="PASS" endtime="20201111 12:37:41.638" starttime="20201111 12:37:41.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:37:41.641" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-53.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:38:18.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:38:18.803" level="INFO">${output} = 2020-11-11 12:37:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-11-11 12:37:43 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201111 12:38:18.803" starttime="20201111 12:37:41.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:38:18.804" level="INFO">2020-11-11 12:37:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-11-11 12:37:43 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 12:37:43 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:37:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-11 12:37:43 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-11 12:37:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:37:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-22AFE236B146-&gt;d1a647ef-8d54-486e-805d-3215f660dfde
2020-11-11 12:37:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 12:37:45 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-11 12:37:47 INFO  JobSubmitter:198 - number of splits:3
2020-11-11 12:37:47 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605098064687_0004
2020-11-11 12:37:48 INFO  YarnClientImpl:273 - Submitted application application_1605098064687_0004
2020-11-11 12:37:48 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605098064687_0004/
2020-11-11 12:37:48 INFO  Job:1339 - Running job: job_1605098064687_0004
2020-11-11 12:37:55 INFO  Job:1360 - Job job_1605098064687_0004 running in uber mode : false
2020-11-11 12:37:55 INFO  Job:1367 -  map 0% reduce 0%
2020-11-11 12:38:01 INFO  Job:1367 -  map 33% reduce 0%
2020-11-11 12:38:06 INFO  Job:1367 -  map 67% reduce 0%
2020-11-11 12:38:11 INFO  Job:1367 -  map 100% reduce 0%
2020-11-11 12:38:15 INFO  Job:1367 -  map 100% reduce 100%
2020-11-11 12:38:18 INFO  Job:1378 - Job job_1605098064687_0004 completed successfully
2020-11-11 12:38:18 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37400
		Total time spent by all reduces in occupied slots (ms)=13276
		Total time spent by all map tasks (ms)=9350
		Total time spent by all reduce tasks (ms)=3319
		Total vcore-milliseconds taken by all map tasks=9350
		Total vcore-milliseconds taken by all reduce tasks=3319
		Total megabyte-milliseconds taken by all map tasks=38297600
		Total megabyte-milliseconds taken by all reduce tasks=13594624
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=519
		CPU time spent (ms)=6700
		Physical memory (bytes) snapshot=1159200768
		Virtual memory (bytes) snapshot=15788630016
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201111 12:38:18.805" starttime="20201111 12:38:18.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:38:18.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:38:18.805" starttime="20201111 12:38:18.805"></status>
</kw>
<status status="PASS" endtime="20201111 12:38:18.806" starttime="20201111 12:37:41.639"></status>
</kw>
<msg timestamp="20201111 12:38:18.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:38:18.806" starttime="20201111 12:37:41.639"></status>
</kw>
<msg timestamp="20201111 12:38:18.806" level="INFO">${output} = 2020-11-11 12:37:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-11-11 12:37:43 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201111 12:38:18.806" starttime="20201111 12:37:41.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201111 12:38:18.807" starttime="20201111 12:38:18.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:38:18.808" starttime="20201111 12:38:18.807"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:38:18.808" critical="yes" starttime="20201111 12:37:41.599"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201111 12:38:18.809" starttime="20201111 12:37:07.216"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:36.782" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:35:36.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:35:36.785" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:35:36.785" starttime="20201111 12:35:36.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:35:36.786" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:35:36.786" starttime="20201111 12:35:36.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:35:36.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:35:36.787" starttime="20201111 12:35:36.787"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:36.787" starttime="20201111 12:35:36.777"></status>
</kw>
<msg timestamp="20201111 12:35:36.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:35:36.787" starttime="20201111 12:35:36.777"></status>
</kw>
<msg timestamp="20201111 12:35:36.788" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:35:36.788" starttime="20201111 12:35:36.776"></status>
</kw>
<msg timestamp="20201111 12:35:36.788" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:35:36.788" starttime="20201111 12:35:36.776"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:35:36.792" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:35:36.792" starttime="20201111 12:35:36.792"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:35:36.793" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:35:36.793" starttime="20201111 12:35:36.793"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:36.793" starttime="20201111 12:35:36.791"></status>
</kw>
<msg timestamp="20201111 12:35:36.793" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:35:36.793" starttime="20201111 12:35:36.790"></status>
</kw>
<status status="PASS" endtime="20201111 12:35:36.794" starttime="20201111 12:35:36.790"></status>
</kw>
<msg timestamp="20201111 12:35:36.794" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:35:36.794" starttime="20201111 12:35:36.789"></status>
</kw>
<msg timestamp="20201111 12:35:36.794" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:35:36.794" starttime="20201111 12:35:36.788"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:35:36.797" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:36:15.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:36:15.066" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:35:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:35:38 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201111 12:36:15.066" starttime="20201111 12:35:36.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:36:15.068" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:35:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:35:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-11 12:35:38 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-11 12:35:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:35:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E1E46B698EB9-&gt;d1a647ef-8d54-486e-805d-3215f660dfde
2020-11-11 12:35:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-11 12:35:39 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-11-11 12:35:40 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-11 12:35:40 INFO  JobSubmitter:198 - number of splits:3
2020-11-11 12:35:40 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605098064687_0001
2020-11-11 12:35:41 INFO  YarnClientImpl:273 - Submitted application application_1605098064687_0001
2020-11-11 12:35:41 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605098064687_0001/
2020-11-11 12:35:41 INFO  Job:1339 - Running job: job_1605098064687_0001
2020-11-11 12:35:50 INFO  Job:1360 - Job job_1605098064687_0001 running in uber mode : false
2020-11-11 12:35:50 INFO  Job:1367 -  map 0% reduce 0%
2020-11-11 12:35:57 INFO  Job:1367 -  map 33% reduce 0%
2020-11-11 12:36:01 INFO  Job:1367 -  map 67% reduce 0%
2020-11-11 12:36:06 INFO  Job:1367 -  map 100% reduce 0%
2020-11-11 12:36:11 INFO  Job:1367 -  map 100% reduce 100%
2020-11-11 12:36:14 INFO  Job:1378 - Job job_1605098064687_0001 completed successfully
2020-11-11 12:36:14 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36628
		Total time spent by all reduces in occupied slots (ms)=13800
		Total time spent by all map tasks (ms)=9157
		Total time spent by all reduce tasks (ms)=3450
		Total vcore-milliseconds taken by all map tasks=9157
		Total vcore-milliseconds taken by all reduce tasks=3450
		Total megabyte-milliseconds taken by all map tasks=37507072
		Total megabyte-milliseconds taken by all reduce tasks=14131200
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=514
		CPU time spent (ms)=6290
		Physical memory (bytes) snapshot=1166163968
		Virtual memory (bytes) snapshot=15794978816
		Total committed heap usage (bytes)=1056964608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.812 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201111 12:36:15.068" starttime="20201111 12:36:15.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:36:15.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:36:15.069" starttime="20201111 12:36:15.068"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:15.069" starttime="20201111 12:35:36.795"></status>
</kw>
<msg timestamp="20201111 12:36:15.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:36:15.069" starttime="20201111 12:35:36.795"></status>
</kw>
<msg timestamp="20201111 12:36:15.069" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:35:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:35:38 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201111 12:36:15.069" starttime="20201111 12:35:36.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:36:15.070" starttime="20201111 12:36:15.070"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:36:15.070" critical="yes" starttime="20201111 12:35:36.775"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:36:15.076" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:36:15.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:36:15.082" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:36:15.082" starttime="20201111 12:36:15.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:36:15.083" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:36:15.083" starttime="20201111 12:36:15.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:36:15.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:36:15.083" starttime="20201111 12:36:15.083"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:15.084" starttime="20201111 12:36:15.073"></status>
</kw>
<msg timestamp="20201111 12:36:15.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:36:15.084" starttime="20201111 12:36:15.072"></status>
</kw>
<msg timestamp="20201111 12:36:15.084" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:36:15.084" starttime="20201111 12:36:15.072"></status>
</kw>
<msg timestamp="20201111 12:36:15.084" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201111 12:36:15.084" starttime="20201111 12:36:15.072"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:36:15.085" level="INFO">${random} = 35</msg>
<status status="PASS" endtime="20201111 12:36:15.085" starttime="20201111 12:36:15.084"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:36:15.090" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:36:15.090" starttime="20201111 12:36:15.089"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:36:15.090" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:36:15.091" starttime="20201111 12:36:15.090"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:15.091" starttime="20201111 12:36:15.089"></status>
</kw>
<msg timestamp="20201111 12:36:15.091" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:36:15.091" starttime="20201111 12:36:15.088"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:15.091" starttime="20201111 12:36:15.087"></status>
</kw>
<msg timestamp="20201111 12:36:15.091" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:36:15.092" starttime="20201111 12:36:15.086"></status>
</kw>
<msg timestamp="20201111 12:36:15.092" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:36:15.092" starttime="20201111 12:36:15.085"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:36:15.095" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:36:15.095" starttime="20201111 12:36:15.094"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:36:15.095" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:36:15.095" starttime="20201111 12:36:15.095"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:15.096" starttime="20201111 12:36:15.094"></status>
</kw>
<msg timestamp="20201111 12:36:15.096" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:36:15.096" starttime="20201111 12:36:15.094"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:15.096" starttime="20201111 12:36:15.093"></status>
</kw>
<msg timestamp="20201111 12:36:15.096" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201111 12:36:15.096" starttime="20201111 12:36:15.093"></status>
</kw>
<msg timestamp="20201111 12:36:15.096" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201111 12:36:15.097" starttime="20201111 12:36:15.092"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:36:15.100" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:36:15.100" starttime="20201111 12:36:15.100"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:36:15.101" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:36:15.101" starttime="20201111 12:36:15.100"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:15.101" starttime="20201111 12:36:15.099"></status>
</kw>
<msg timestamp="20201111 12:36:15.101" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:36:15.101" starttime="20201111 12:36:15.099"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:15.101" starttime="20201111 12:36:15.098"></status>
</kw>
<msg timestamp="20201111 12:36:15.101" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-35.txt</msg>
<status status="PASS" endtime="20201111 12:36:15.101" starttime="20201111 12:36:15.097"></status>
</kw>
<msg timestamp="20201111 12:36:15.102" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-35.txt</msg>
<status status="PASS" endtime="20201111 12:36:15.102" starttime="20201111 12:36:15.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:36:15.106" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-35.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:36:53.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:36:53.554" level="INFO">${output} = 2020-11-11 12:36:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-11-11 12:36:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201111 12:36:53.554" starttime="20201111 12:36:15.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:36:53.556" level="INFO">2020-11-11 12:36:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-11-11 12:36:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 12:36:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:36:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-11 12:36:17 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-11 12:36:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:36:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5EACCB593705-&gt;d1a647ef-8d54-486e-805d-3215f660dfde
2020-11-11 12:36:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 12:36:18 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-11 12:36:18 INFO  JobSubmitter:198 - number of splits:3
2020-11-11 12:36:18 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605098064687_0002
2020-11-11 12:36:18 INFO  YarnClientImpl:273 - Submitted application application_1605098064687_0002
2020-11-11 12:36:18 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605098064687_0002/
2020-11-11 12:36:18 INFO  Job:1339 - Running job: job_1605098064687_0002
2020-11-11 12:36:26 INFO  Job:1360 - Job job_1605098064687_0002 running in uber mode : false
2020-11-11 12:36:26 INFO  Job:1367 -  map 0% reduce 0%
2020-11-11 12:36:32 INFO  Job:1367 -  map 33% reduce 0%
2020-11-11 12:36:37 INFO  Job:1367 -  map 67% reduce 0%
2020-11-11 12:36:43 INFO  Job:1367 -  map 100% reduce 0%
2020-11-11 12:36:50 INFO  Job:1367 -  map 100% reduce 100%
2020-11-11 12:36:53 INFO  Job:1378 - Job job_1605098064687_0002 completed successfully
2020-11-11 12:36:53 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677783
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37884
		Total time spent by all reduces in occupied slots (ms)=23256
		Total time spent by all map tasks (ms)=9471
		Total time spent by all reduce tasks (ms)=5814
		Total vcore-milliseconds taken by all map tasks=9471
		Total vcore-milliseconds taken by all reduce tasks=5814
		Total megabyte-milliseconds taken by all map tasks=38793216
		Total megabyte-milliseconds taken by all reduce tasks=23814144
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=487
		CPU time spent (ms)=6790
		Physical memory (bytes) snapshot=1167650816
		Virtual memory (bytes) snapshot=15790538752
		Total committed heap usage (bytes)=1002962944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201111 12:36:53.556" starttime="20201111 12:36:53.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:36:53.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:36:53.557" starttime="20201111 12:36:53.556"></status>
</kw>
<status status="PASS" endtime="20201111 12:36:53.557" starttime="20201111 12:36:15.103"></status>
</kw>
<msg timestamp="20201111 12:36:53.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:36:53.557" starttime="20201111 12:36:15.103"></status>
</kw>
<msg timestamp="20201111 12:36:53.558" level="INFO">${output} = 2020-11-11 12:36:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-11-11 12:36:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201111 12:36:53.558" starttime="20201111 12:36:15.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201111 12:36:53.558" starttime="20201111 12:36:53.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:36:53.559" starttime="20201111 12:36:53.559"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:36:53.559" critical="yes" starttime="20201111 12:36:15.071"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201111 12:36:53.562" starttime="20201111 12:35:36.720"></status>
</suite>
<status status="PASS" elapsedtime="186278" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:39:56.471" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:39:58.629" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 12:39:58.629" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201111 12:39:58.629" starttime="20201111 12:39:56.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:39:58.630" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201111 12:39:58.631" starttime="20201111 12:39:58.630"></status>
</kw>
<msg timestamp="20201111 12:39:58.631" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201111 12:39:58.631" starttime="20201111 12:39:56.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:39:58.637" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:00.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:00.548" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:40:00.548" starttime="20201111 12:39:58.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:00.549" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:40:00.549" starttime="20201111 12:40:00.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:00.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:00.550" starttime="20201111 12:40:00.550"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:00.550" starttime="20201111 12:39:58.633"></status>
</kw>
<msg timestamp="20201111 12:40:00.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:00.551" starttime="20201111 12:39:58.633"></status>
</kw>
<msg timestamp="20201111 12:40:00.551" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201111 12:40:00.551" starttime="20201111 12:39:58.632"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201111 12:40:00.552" starttime="20201111 12:40:00.551"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:00.552" starttime="20201111 12:39:58.632"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:00.552" starttime="20201111 12:39:58.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:00.557" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:02.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:02.534" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:40:02.534" starttime="20201111 12:40:00.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:02.535" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:40:02.535" starttime="20201111 12:40:02.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:02.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:02.536" starttime="20201111 12:40:02.535"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:02.536" starttime="20201111 12:40:00.554"></status>
</kw>
<msg timestamp="20201111 12:40:02.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:02.536" starttime="20201111 12:40:00.553"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:02.537" starttime="20201111 12:40:00.553"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:02.537" starttime="20201111 12:40:00.552"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:02.537" starttime="20201111 12:40:00.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201111 12:40:02.538" starttime="20201111 12:40:02.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:02.542" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:04.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:04.622" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T12:40:02.409Z",
  "modificat...</msg>
<status status="PASS" endtime="20201111 12:40:04.622" starttime="20201111 12:40:02.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:04.623" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T12:40:02.409Z",
  "modificationTime" : "2020-11-11T12:40:02.409Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201111 12:40:04.623" starttime="20201111 12:40:04.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:04.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:04.624" starttime="20201111 12:40:04.624"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:04.625" starttime="20201111 12:40:02.539"></status>
</kw>
<msg timestamp="20201111 12:40:04.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:04.625" starttime="20201111 12:40:02.538"></status>
</kw>
<msg timestamp="20201111 12:40:04.625" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T12:40:02.409Z",
  "modificat...</msg>
<status status="PASS" endtime="20201111 12:40:04.625" starttime="20201111 12:40:02.538"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201111 12:40:04.626" starttime="20201111 12:40:04.625"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:40:04.630" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:40:04.630" starttime="20201111 12:40:04.630"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:40:04.631" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:40:04.631" starttime="20201111 12:40:04.630"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:04.631" starttime="20201111 12:40:04.629"></status>
</kw>
<msg timestamp="20201111 12:40:04.631" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:40:04.631" starttime="20201111 12:40:04.629"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:04.632" starttime="20201111 12:40:04.628"></status>
</kw>
<msg timestamp="20201111 12:40:04.632" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201111 12:40:04.632" starttime="20201111 12:40:04.627"></status>
</kw>
<msg timestamp="20201111 12:40:04.632" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201111 12:40:04.632" starttime="20201111 12:40:04.626"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:04.636" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:06.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:06.672" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:40:06.672" starttime="20201111 12:40:04.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:06.673" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:40:06.674" starttime="20201111 12:40:06.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:06.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:06.674" starttime="20201111 12:40:06.674"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:06.675" starttime="20201111 12:40:04.633"></status>
</kw>
<msg timestamp="20201111 12:40:06.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:06.675" starttime="20201111 12:40:04.633"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:06.675" starttime="20201111 12:40:04.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:06.679" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:11.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:11.395" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:40:11.395" starttime="20201111 12:40:06.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:11.396" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:40:11.396" starttime="20201111 12:40:11.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:11.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:11.397" starttime="20201111 12:40:11.397"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:11.398" starttime="20201111 12:40:06.676"></status>
</kw>
<msg timestamp="20201111 12:40:11.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:11.398" starttime="20201111 12:40:06.676"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:11.398" starttime="20201111 12:40:06.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:11.403" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:15.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:15.372" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:40:15.372" starttime="20201111 12:40:11.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:15.373" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:40:15.373" starttime="20201111 12:40:15.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:15.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:15.374" starttime="20201111 12:40:15.373"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:15.374" starttime="20201111 12:40:11.399"></status>
</kw>
<msg timestamp="20201111 12:40:15.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:15.374" starttime="20201111 12:40:11.399"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:15.374" starttime="20201111 12:40:11.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:15.378" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:19.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:19.389" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:40:19.389" starttime="20201111 12:40:15.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:19.390" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:40:19.390" starttime="20201111 12:40:19.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:19.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:19.391" starttime="20201111 12:40:19.390"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:19.391" starttime="20201111 12:40:15.375"></status>
</kw>
<msg timestamp="20201111 12:40:19.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:19.392" starttime="20201111 12:40:15.375"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:19.392" starttime="20201111 12:40:15.374"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 12:40:19.392" critical="yes" starttime="20201111 12:39:56.466"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:40:19.398" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:40:19.398" starttime="20201111 12:40:19.397"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:40:19.398" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:40:19.398" starttime="20201111 12:40:19.398"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:19.399" starttime="20201111 12:40:19.397"></status>
</kw>
<msg timestamp="20201111 12:40:19.399" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:40:19.399" starttime="20201111 12:40:19.396"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:19.400" starttime="20201111 12:40:19.395"></status>
</kw>
<msg timestamp="20201111 12:40:19.400" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 12:40:19.400" starttime="20201111 12:40:19.395"></status>
</kw>
<msg timestamp="20201111 12:40:19.400" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 12:40:19.400" starttime="20201111 12:40:19.394"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:19.406" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:21.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:21.461" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:40:21.461" starttime="20201111 12:40:19.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:21.463" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:40:21.463" starttime="20201111 12:40:21.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:21.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:21.465" starttime="20201111 12:40:21.463"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:21.465" starttime="20201111 12:40:19.402"></status>
</kw>
<msg timestamp="20201111 12:40:21.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:21.465" starttime="20201111 12:40:19.401"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:21.466" starttime="20201111 12:40:19.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:21.469" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:23.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:23.390" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:40:23.390" starttime="20201111 12:40:21.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:23.391" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:40:23.391" starttime="20201111 12:40:23.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:23.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:23.392" starttime="20201111 12:40:23.391"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:23.392" starttime="20201111 12:40:21.467"></status>
</kw>
<msg timestamp="20201111 12:40:23.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:23.392" starttime="20201111 12:40:21.467"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:23.392" starttime="20201111 12:40:21.466"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 12:40:23.393" critical="yes" starttime="20201111 12:40:19.393"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201111 12:40:23.394" starttime="20201111 12:39:56.405"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:41:57.902" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:41:57.902" starttime="20201111 12:41:57.901"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:41:57.902" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:41:57.902" starttime="20201111 12:41:57.902"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:57.902" starttime="20201111 12:41:57.901"></status>
</kw>
<msg timestamp="20201111 12:41:57.902" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:41:57.903" starttime="20201111 12:41:57.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:41:57.903" starttime="20201111 12:41:57.903"></status>
</kw>
<msg timestamp="20201111 12:41:57.904" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 12:41:57.904" starttime="20201111 12:41:57.903"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:57.904" starttime="20201111 12:41:57.899"></status>
</kw>
<msg timestamp="20201111 12:41:57.904" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:41:57.904" starttime="20201111 12:41:57.898"></status>
</kw>
<msg timestamp="20201111 12:41:57.904" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:41:57.904" starttime="20201111 12:41:57.898"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:41:57.905" level="INFO">${random} = 92573</msg>
<status status="PASS" endtime="20201111 12:41:57.905" starttime="20201111 12:41:57.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:41:57.911" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-92573 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:42:01.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:42:01.314" level="INFO">${output} = 2020-11-11 12:41:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:42:01.314" starttime="20201111 12:41:57.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:42:01.315" level="INFO">2020-11-11 12:41:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:59 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-11 12:41:59 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:41:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:41:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:42:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:42:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-575F67A17F37-&gt;57c5be95-225e-40f2-9c3a-750b2f5c5df6
2020-11-11 12:42:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 12:42:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201111 12:42:01.315" starttime="20201111 12:42:01.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:42:01.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:42:01.316" starttime="20201111 12:42:01.316"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:01.317" starttime="20201111 12:41:57.906"></status>
</kw>
<msg timestamp="20201111 12:42:01.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:42:01.317" starttime="20201111 12:41:57.906"></status>
</kw>
<msg timestamp="20201111 12:42:01.317" level="INFO">${result} = 2020-11-11 12:41:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:42:01.317" starttime="20201111 12:41:57.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:42:01.322" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:42:02.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:42:02.934" level="INFO">${output} = 2020-11-11 12:42:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:42:02.934" starttime="20201111 12:42:01.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:42:02.935" level="INFO">2020-11-11 12:42:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:02 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:40 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-11 12:40 ofs://om/volume1/bucket1/ozone-58436
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-11 12:42 ofs://om/volume1/bucket1/ozone-92573
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:40 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:41 ofs://om/volume1/bucket1/wordcount-27.txt
2020-11-11 12:42:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201111 12:42:02.935" starttime="20201111 12:42:02.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:42:02.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:42:02.936" starttime="20201111 12:42:02.935"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:02.936" starttime="20201111 12:42:01.319"></status>
</kw>
<msg timestamp="20201111 12:42:02.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:42:02.936" starttime="20201111 12:42:01.319"></status>
</kw>
<msg timestamp="20201111 12:42:02.937" level="INFO">${result} = 2020-11-11 12:42:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:42:02.937" starttime="20201111 12:42:01.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:42:02.937" starttime="20201111 12:42:02.937"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:42:02.938" critical="yes" starttime="20201111 12:41:57.897"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201111 12:42:02.939" starttime="20201111 12:41:57.840"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:40:27.816" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:40:27.817" starttime="20201111 12:40:27.816"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:40:27.817" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:40:27.817" starttime="20201111 12:40:27.817"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:27.817" starttime="20201111 12:40:27.815"></status>
</kw>
<msg timestamp="20201111 12:40:27.818" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:40:27.818" starttime="20201111 12:40:27.815"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:27.818" starttime="20201111 12:40:27.814"></status>
</kw>
<msg timestamp="20201111 12:40:27.818" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:40:27.818" starttime="20201111 12:40:27.814"></status>
</kw>
<msg timestamp="20201111 12:40:27.818" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:40:27.818" starttime="20201111 12:40:27.813"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:40:27.819" level="INFO">${random} = 58436</msg>
<status status="PASS" endtime="20201111 12:40:27.819" starttime="20201111 12:40:27.818"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:27.824" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-58436 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:31.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:31.186" level="INFO">${output} = 2020-11-11 12:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:40:31.186" starttime="20201111 12:40:27.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:31.187" level="INFO">2020-11-11 12:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:29 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-11 12:40:29 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:40:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:40:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:40:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:40:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BADDC8D6A278-&gt;57c5be95-225e-40f2-9c3a-750b2f5c5df6
2020-11-11 12:40:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 12:40:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201111 12:40:31.188" starttime="20201111 12:40:31.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:31.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:31.188" starttime="20201111 12:40:31.188"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:31.189" starttime="20201111 12:40:27.820"></status>
</kw>
<msg timestamp="20201111 12:40:31.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:31.189" starttime="20201111 12:40:27.819"></status>
</kw>
<msg timestamp="20201111 12:40:31.189" level="INFO">${result} = 2020-11-11 12:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:40:31.189" starttime="20201111 12:40:27.819"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:31.194" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:32.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:32.934" level="INFO">${output} = 2020-11-11 12:40:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:40:32.934" starttime="20201111 12:40:31.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:32.935" level="INFO">2020-11-11 12:40:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:32 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:40 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-11 12:40 o3fs://bucket1.volume1.om/ozone-58436
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:40 o3fs://bucket1.volume1.om/user
2020-11-11 12:40:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201111 12:40:32.936" starttime="20201111 12:40:32.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:32.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:32.936" starttime="20201111 12:40:32.936"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:32.936" starttime="20201111 12:40:31.191"></status>
</kw>
<msg timestamp="20201111 12:40:32.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:32.937" starttime="20201111 12:40:31.190"></status>
</kw>
<msg timestamp="20201111 12:40:32.937" level="INFO">${result} = 2020-11-11 12:40:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:40:32.937" starttime="20201111 12:40:31.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:40:32.937" starttime="20201111 12:40:32.937"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:40:32.938" critical="yes" starttime="20201111 12:40:27.812"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201111 12:40:32.939" starttime="20201111 12:40:27.757"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:42:07.412" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:42:07.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:42:07.415" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:42:07.415" starttime="20201111 12:42:07.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:42:07.416" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:42:07.417" starttime="20201111 12:42:07.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:42:07.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:42:07.417" starttime="20201111 12:42:07.417"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:07.417" starttime="20201111 12:42:07.406"></status>
</kw>
<msg timestamp="20201111 12:42:07.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:42:07.418" starttime="20201111 12:42:07.406"></status>
</kw>
<msg timestamp="20201111 12:42:07.418" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:42:07.418" starttime="20201111 12:42:07.406"></status>
</kw>
<msg timestamp="20201111 12:42:07.418" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:42:07.418" starttime="20201111 12:42:07.405"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:42:07.423" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:42:07.423" starttime="20201111 12:42:07.422"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:42:07.423" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:42:07.424" starttime="20201111 12:42:07.423"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:07.424" starttime="20201111 12:42:07.421"></status>
</kw>
<msg timestamp="20201111 12:42:07.424" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:42:07.424" starttime="20201111 12:42:07.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:42:07.425" starttime="20201111 12:42:07.425"></status>
</kw>
<msg timestamp="20201111 12:42:07.425" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 12:42:07.425" starttime="20201111 12:42:07.424"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:07.426" starttime="20201111 12:42:07.420"></status>
</kw>
<msg timestamp="20201111 12:42:07.426" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:42:07.426" starttime="20201111 12:42:07.419"></status>
</kw>
<msg timestamp="20201111 12:42:07.426" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:42:07.426" starttime="20201111 12:42:07.418"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:42:07.429" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:42:48.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:42:48.672" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42...</msg>
<status status="PASS" endtime="20201111 12:42:48.672" starttime="20201111 12:42:07.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:42:48.674" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-11 12:42:09 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:42:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:42:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:42:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:42:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BD6A69BFB9B4-&gt;57c5be95-225e-40f2-9c3a-750b2f5c5df6
2020-11-11 12:42:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-11 12:42:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-11-11 12:42:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 12:42:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:13 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 12:42:13 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 12:42:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605098340702_0003
2020-11-11 12:42:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-11 12:42:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:16 INFO  Configuration:2752 - resource-types.xml not found
2020-11-11 12:42:16 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-11 12:42:16 INFO  YarnClientImpl:324 - Submitted application application_1605098340702_0003
2020-11-11 12:42:16 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605098340702_0003/
2020-11-11 12:42:16 INFO  Job:1619 - Running job: job_1605098340702_0003
2020-11-11 12:42:23 INFO  Job:1640 - Job job_1605098340702_0003 running in uber mode : false
2020-11-11 12:42:23 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 12:42:30 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 12:42:34 INFO  Job:1647 -  map 67% reduce 0%
2020-11-11 12:42:39 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 12:42:46 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 12:42:47 INFO  Job:1658 - Job job_1605098340702_0003 completed successfully
2020-11-11 12:42:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36844
		Total time spent by all reduces in occupied slots (ms)=23352
		Total time spent by all map tasks (ms)=9211
		Total time spent by all reduce tasks (ms)=5838
		Total vcore-milliseconds taken by all map tasks=9211
		Total vcore-milliseconds taken by all reduce tasks=5838
		Total megabyte-milliseconds taken by all map tasks=37728256
		Total megabyte-milliseconds taken by all reduce tasks=23912448
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=521
		CPU time spent (ms)=6100
		Physical memory (bytes) snapshot=1178234880
		Virtual memory (bytes) snapshot=15773483008
		Total committed heap usage (bytes)=1168113664
		Peak Map Physical memory (bytes)=306593792
		Peak Map Virtual memory (bytes)=3945390080
		Peak Reduce Physical memory (bytes)=282988544
		Peak Reduce Virtual memory (bytes)=3955838976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.193 seconds
2020-11-11 12:42:48 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-11 12:42:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201111 12:42:48.674" starttime="20201111 12:42:48.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:42:48.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:42:48.676" starttime="20201111 12:42:48.675"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:48.676" starttime="20201111 12:42:07.427"></status>
</kw>
<msg timestamp="20201111 12:42:48.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:42:48.680" starttime="20201111 12:42:07.427"></status>
</kw>
<msg timestamp="20201111 12:42:48.680" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42...</msg>
<status status="PASS" endtime="20201111 12:42:48.681" starttime="20201111 12:42:07.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:42:48.681" starttime="20201111 12:42:48.681"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:42:48.682" critical="yes" starttime="20201111 12:42:07.405"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:42:48.687" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:42:48.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:42:48.694" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:42:48.694" starttime="20201111 12:42:48.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:42:48.695" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:42:48.695" starttime="20201111 12:42:48.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:42:48.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:42:48.695" starttime="20201111 12:42:48.695"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:48.696" starttime="20201111 12:42:48.685"></status>
</kw>
<msg timestamp="20201111 12:42:48.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:42:48.696" starttime="20201111 12:42:48.684"></status>
</kw>
<msg timestamp="20201111 12:42:48.697" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:42:48.697" starttime="20201111 12:42:48.684"></status>
</kw>
<msg timestamp="20201111 12:42:48.697" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:42:48.697" starttime="20201111 12:42:48.683"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:42:48.698" level="INFO">${random} = 54</msg>
<status status="PASS" endtime="20201111 12:42:48.698" starttime="20201111 12:42:48.697"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:42:48.702" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:42:48.702" starttime="20201111 12:42:48.701"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:42:48.702" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:42:48.702" starttime="20201111 12:42:48.702"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:48.703" starttime="20201111 12:42:48.701"></status>
</kw>
<msg timestamp="20201111 12:42:48.703" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:42:48.703" starttime="20201111 12:42:48.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:42:48.704" starttime="20201111 12:42:48.704"></status>
</kw>
<msg timestamp="20201111 12:42:48.704" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 12:42:48.704" starttime="20201111 12:42:48.703"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:48.704" starttime="20201111 12:42:48.699"></status>
</kw>
<msg timestamp="20201111 12:42:48.705" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:42:48.705" starttime="20201111 12:42:48.699"></status>
</kw>
<msg timestamp="20201111 12:42:48.705" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:42:48.705" starttime="20201111 12:42:48.698"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:42:48.708" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:42:48.708" starttime="20201111 12:42:48.708"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:42:48.709" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:42:48.709" starttime="20201111 12:42:48.708"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:48.709" starttime="20201111 12:42:48.707"></status>
</kw>
<msg timestamp="20201111 12:42:48.709" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:42:48.709" starttime="20201111 12:42:48.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:42:48.711" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201111 12:42:48.711" starttime="20201111 12:42:48.710"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:42:48.711" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201111 12:42:48.712" starttime="20201111 12:42:48.711"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:48.712" starttime="20201111 12:42:48.710"></status>
</kw>
<msg timestamp="20201111 12:42:48.712" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201111 12:42:48.712" starttime="20201111 12:42:48.709"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:48.712" starttime="20201111 12:42:48.706"></status>
</kw>
<msg timestamp="20201111 12:42:48.713" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201111 12:42:48.713" starttime="20201111 12:42:48.706"></status>
</kw>
<msg timestamp="20201111 12:42:48.713" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201111 12:42:48.713" starttime="20201111 12:42:48.705"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:42:48.716" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:42:48.716" starttime="20201111 12:42:48.716"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:42:48.717" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:42:48.717" starttime="20201111 12:42:48.716"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:48.717" starttime="20201111 12:42:48.715"></status>
</kw>
<msg timestamp="20201111 12:42:48.718" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:42:48.718" starttime="20201111 12:42:48.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:42:48.719" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201111 12:42:48.719" starttime="20201111 12:42:48.719"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:42:48.720" level="INFO">${result} = /wordcount-54.txt</msg>
<status status="PASS" endtime="20201111 12:42:48.720" starttime="20201111 12:42:48.719"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:48.720" starttime="20201111 12:42:48.718"></status>
</kw>
<msg timestamp="20201111 12:42:48.720" level="INFO">${path_with_leading} = /wordcount-54.txt</msg>
<status status="PASS" endtime="20201111 12:42:48.720" starttime="20201111 12:42:48.718"></status>
</kw>
<status status="PASS" endtime="20201111 12:42:48.721" starttime="20201111 12:42:48.714"></status>
</kw>
<msg timestamp="20201111 12:42:48.721" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-54.txt</msg>
<status status="PASS" endtime="20201111 12:42:48.721" starttime="20201111 12:42:48.714"></status>
</kw>
<msg timestamp="20201111 12:42:48.721" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-54.txt</msg>
<status status="PASS" endtime="20201111 12:42:48.721" starttime="20201111 12:42:48.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:42:48.725" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-54.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:43:24.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:43:24.925" level="INFO">${output} = 2020-11-11 12:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:43:24.925" starttime="20201111 12:42:48.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:43:24.926" level="INFO">2020-11-11 12:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-11-11 12:42:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 12:42:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:50 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-11 12:42:50 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:42:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:42:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:42:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:42:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-86EEE7F41AC9-&gt;57c5be95-225e-40f2-9c3a-750b2f5c5df6
2020-11-11 12:42:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 12:42:51 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 12:42:54 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 12:42:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605098340702_0004
2020-11-11 12:42:54 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-11 12:42:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:55 INFO  Configuration:2752 - resource-types.xml not found
2020-11-11 12:42:55 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-11 12:42:55 INFO  YarnClientImpl:324 - Submitted application application_1605098340702_0004
2020-11-11 12:42:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605098340702_0004/
2020-11-11 12:42:55 INFO  Job:1619 - Running job: job_1605098340702_0004
2020-11-11 12:43:02 INFO  Job:1640 - Job job_1605098340702_0004 running in uber mode : false
2020-11-11 12:43:02 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 12:43:09 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 12:43:14 INFO  Job:1647 -  map 67% reduce 0%
2020-11-11 12:43:19 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 12:43:23 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 12:43:24 INFO  Job:1658 - Job job_1605098340702_0004 completed successfully
2020-11-11 12:43:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:43:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083691
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37964
		Total time spent by all reduces in occupied slots (ms)=14148
		Total time spent by all map tasks (ms)=9491
		Total time spent by all reduce tasks (ms)=3537
		Total vcore-milliseconds taken by all map tasks=9491
		Total vcore-milliseconds taken by all reduce tasks=3537
		Total megabyte-milliseconds taken by all map tasks=38875136
		Total megabyte-milliseconds taken by all reduce tasks=14487552
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=562
		CPU time spent (ms)=6730
		Physical memory (bytes) snapshot=1217474560
		Virtual memory (bytes) snapshot=15810183168
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=311459840
		Peak Map Virtual memory (bytes)=3952889856
		Peak Reduce Physical memory (bytes)=298065920
		Peak Reduce Virtual memory (bytes)=3968897024
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-11 12:43:24 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201111 12:43:24.927" starttime="20201111 12:43:24.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:43:24.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:43:24.927" starttime="20201111 12:43:24.927"></status>
</kw>
<status status="PASS" endtime="20201111 12:43:24.928" starttime="20201111 12:42:48.722"></status>
</kw>
<msg timestamp="20201111 12:43:24.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:43:24.928" starttime="20201111 12:42:48.722"></status>
</kw>
<msg timestamp="20201111 12:43:24.928" level="INFO">${output} = 2020-11-11 12:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:42:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:43:24.928" starttime="20201111 12:42:48.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201111 12:43:24.929" starttime="20201111 12:43:24.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:43:24.930" starttime="20201111 12:43:24.929"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:43:24.930" critical="yes" starttime="20201111 12:42:48.683"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201111 12:43:24.931" starttime="20201111 12:42:07.349"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:37.407" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:40:37.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:40:37.410" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:40:37.410" starttime="20201111 12:40:37.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:40:37.411" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:40:37.411" starttime="20201111 12:40:37.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:40:37.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:40:37.411" starttime="20201111 12:40:37.411"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:37.412" starttime="20201111 12:40:37.398"></status>
</kw>
<msg timestamp="20201111 12:40:37.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:40:37.412" starttime="20201111 12:40:37.398"></status>
</kw>
<msg timestamp="20201111 12:40:37.412" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:40:37.412" starttime="20201111 12:40:37.398"></status>
</kw>
<msg timestamp="20201111 12:40:37.412" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:40:37.413" starttime="20201111 12:40:37.397"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:40:37.417" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:40:37.417" starttime="20201111 12:40:37.417"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:40:37.418" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:40:37.418" starttime="20201111 12:40:37.417"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:37.418" starttime="20201111 12:40:37.415"></status>
</kw>
<msg timestamp="20201111 12:40:37.418" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:40:37.418" starttime="20201111 12:40:37.415"></status>
</kw>
<status status="PASS" endtime="20201111 12:40:37.418" starttime="20201111 12:40:37.414"></status>
</kw>
<msg timestamp="20201111 12:40:37.418" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:40:37.418" starttime="20201111 12:40:37.413"></status>
</kw>
<msg timestamp="20201111 12:40:37.419" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:40:37.419" starttime="20201111 12:40:37.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:40:37.423" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:41:14.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:41:14.399" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:40:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40...</msg>
<status status="PASS" endtime="20201111 12:41:14.399" starttime="20201111 12:40:37.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:41:14.400" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:40:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-11 12:40:39 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:40:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:40:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:40:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:40:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BE87FE6290B7-&gt;57c5be95-225e-40f2-9c3a-750b2f5c5df6
2020-11-11 12:40:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-11 12:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-11-11 12:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:41 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 12:40:41 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 12:40:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605098340702_0001
2020-11-11 12:40:41 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-11 12:40:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:41 INFO  Configuration:2752 - resource-types.xml not found
2020-11-11 12:40:41 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-11 12:40:42 INFO  YarnClientImpl:324 - Submitted application application_1605098340702_0001
2020-11-11 12:40:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605098340702_0001/
2020-11-11 12:40:42 INFO  Job:1619 - Running job: job_1605098340702_0001
2020-11-11 12:40:52 INFO  Job:1640 - Job job_1605098340702_0001 running in uber mode : false
2020-11-11 12:40:52 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 12:40:58 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 12:41:03 INFO  Job:1647 -  map 67% reduce 0%
2020-11-11 12:41:08 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 12:41:13 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 12:41:13 INFO  Job:1658 - Job job_1605098340702_0001 completed successfully
2020-11-11 12:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:13 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021529
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37848
		Total time spent by all reduces in occupied slots (ms)=14252
		Total time spent by all map tasks (ms)=9462
		Total time spent by all reduce tasks (ms)=3563
		Total vcore-milliseconds taken by all map tasks=9462
		Total vcore-milliseconds taken by all reduce tasks=3563
		Total megabyte-milliseconds taken by all map tasks=38756352
		Total megabyte-milliseconds taken by all reduce tasks=14594048
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=520
		CPU time spent (ms)=6210
		Physical memory (bytes) snapshot=1291145216
		Virtual memory (bytes) snapshot=15792676864
		Total committed heap usage (bytes)=1135607808
		Peak Map Physical memory (bytes)=377577472
		Peak Map Virtual memory (bytes)=3942387712
		Peak Reduce Physical memory (bytes)=300838912
		Peak Reduce Virtual memory (bytes)=3968479232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.166 seconds
2020-11-11 12:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:13 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-11 12:41:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201111 12:41:14.401" starttime="20201111 12:41:14.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:41:14.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:41:14.401" starttime="20201111 12:41:14.401"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:14.401" starttime="20201111 12:40:37.420"></status>
</kw>
<msg timestamp="20201111 12:41:14.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:41:14.402" starttime="20201111 12:40:37.419"></status>
</kw>
<msg timestamp="20201111 12:41:14.402" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:40:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:40...</msg>
<status status="PASS" endtime="20201111 12:41:14.403" starttime="20201111 12:40:37.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:41:14.403" starttime="20201111 12:41:14.403"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:41:14.403" critical="yes" starttime="20201111 12:40:37.396"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:41:14.408" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:41:14.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:41:14.414" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:41:14.414" starttime="20201111 12:41:14.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:41:14.415" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:41:14.415" starttime="20201111 12:41:14.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:41:14.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:41:14.416" starttime="20201111 12:41:14.415"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:14.416" starttime="20201111 12:41:14.406"></status>
</kw>
<msg timestamp="20201111 12:41:14.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:41:14.416" starttime="20201111 12:41:14.406"></status>
</kw>
<msg timestamp="20201111 12:41:14.417" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:41:14.417" starttime="20201111 12:41:14.405"></status>
</kw>
<msg timestamp="20201111 12:41:14.417" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201111 12:41:14.417" starttime="20201111 12:41:14.405"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:41:14.418" level="INFO">${random} = 27</msg>
<status status="PASS" endtime="20201111 12:41:14.418" starttime="20201111 12:41:14.417"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:41:14.421" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:41:14.422" starttime="20201111 12:41:14.421"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:41:14.422" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:41:14.422" starttime="20201111 12:41:14.422"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:14.422" starttime="20201111 12:41:14.421"></status>
</kw>
<msg timestamp="20201111 12:41:14.422" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:41:14.422" starttime="20201111 12:41:14.420"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:14.423" starttime="20201111 12:41:14.419"></status>
</kw>
<msg timestamp="20201111 12:41:14.423" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:41:14.423" starttime="20201111 12:41:14.419"></status>
</kw>
<msg timestamp="20201111 12:41:14.423" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:41:14.423" starttime="20201111 12:41:14.418"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:41:14.427" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:41:14.427" starttime="20201111 12:41:14.426"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:41:14.428" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:41:14.428" starttime="20201111 12:41:14.427"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:14.428" starttime="20201111 12:41:14.426"></status>
</kw>
<msg timestamp="20201111 12:41:14.428" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:41:14.428" starttime="20201111 12:41:14.425"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:14.429" starttime="20201111 12:41:14.425"></status>
</kw>
<msg timestamp="20201111 12:41:14.429" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201111 12:41:14.429" starttime="20201111 12:41:14.424"></status>
</kw>
<msg timestamp="20201111 12:41:14.429" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201111 12:41:14.429" starttime="20201111 12:41:14.423"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:41:14.433" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:41:14.433" starttime="20201111 12:41:14.432"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:41:14.433" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:41:14.433" starttime="20201111 12:41:14.433"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:14.434" starttime="20201111 12:41:14.432"></status>
</kw>
<msg timestamp="20201111 12:41:14.434" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:41:14.434" starttime="20201111 12:41:14.431"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:14.434" starttime="20201111 12:41:14.431"></status>
</kw>
<msg timestamp="20201111 12:41:14.434" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-27.txt</msg>
<status status="PASS" endtime="20201111 12:41:14.434" starttime="20201111 12:41:14.430"></status>
</kw>
<msg timestamp="20201111 12:41:14.434" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-27.txt</msg>
<status status="PASS" endtime="20201111 12:41:14.434" starttime="20201111 12:41:14.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:41:14.437" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-27.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:41:53.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:41:53.291" level="INFO">${output} = 2020-11-11 12:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:41:53.291" starttime="20201111 12:41:14.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:41:53.292" level="INFO">2020-11-11 12:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-11-11 12:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 12:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:16 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-11 12:41:16 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-11 12:41:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:41:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:41:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:41:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-448CAF4672A8-&gt;57c5be95-225e-40f2-9c3a-750b2f5c5df6
2020-11-11 12:41:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 12:41:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 12:41:17 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 12:41:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605098340702_0002
2020-11-11 12:41:18 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-11 12:41:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:18 INFO  Configuration:2752 - resource-types.xml not found
2020-11-11 12:41:18 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-11 12:41:18 INFO  YarnClientImpl:324 - Submitted application application_1605098340702_0002
2020-11-11 12:41:18 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605098340702_0002/
2020-11-11 12:41:18 INFO  Job:1619 - Running job: job_1605098340702_0002
2020-11-11 12:41:26 INFO  Job:1640 - Job job_1605098340702_0002 running in uber mode : false
2020-11-11 12:41:26 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 12:41:33 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 12:41:37 INFO  Job:1647 -  map 67% reduce 0%
2020-11-11 12:41:43 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 12:41:47 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 12:41:52 INFO  Job:1658 - Job job_1605098340702_0002 completed successfully
2020-11-11 12:41:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:52 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083775
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38220
		Total time spent by all reduces in occupied slots (ms)=13880
		Total time spent by all map tasks (ms)=9555
		Total time spent by all reduce tasks (ms)=3470
		Total vcore-milliseconds taken by all map tasks=9555
		Total vcore-milliseconds taken by all reduce tasks=3470
		Total megabyte-milliseconds taken by all map tasks=39137280
		Total megabyte-milliseconds taken by all reduce tasks=14213120
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=502
		CPU time spent (ms)=6590
		Physical memory (bytes) snapshot=1225875456
		Virtual memory (bytes) snapshot=15807143936
		Total committed heap usage (bytes)=1070596096
		Peak Map Physical memory (bytes)=311517184
		Peak Map Virtual memory (bytes)=3947180032
		Peak Reduce Physical memory (bytes)=295968768
		Peak Reduce Virtual memory (bytes)=3968724992
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-11 12:41:52 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201111 12:41:53.292" starttime="20201111 12:41:53.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:41:53.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:41:53.293" starttime="20201111 12:41:53.292"></status>
</kw>
<status status="PASS" endtime="20201111 12:41:53.293" starttime="20201111 12:41:14.435"></status>
</kw>
<msg timestamp="20201111 12:41:53.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:41:53.293" starttime="20201111 12:41:14.435"></status>
</kw>
<msg timestamp="20201111 12:41:53.294" level="INFO">${output} = 2020-11-11 12:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-11 12:41:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201111 12:41:53.294" starttime="20201111 12:41:14.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201111 12:41:53.294" starttime="20201111 12:41:53.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:41:53.295" starttime="20201111 12:41:53.294"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:41:53.295" critical="yes" starttime="20201111 12:41:14.404"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201111 12:41:53.296" starttime="20201111 12:40:37.338"></status>
</suite>
<status status="PASS" elapsedtime="190810" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:44:27.841" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:44:31.805" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 12:44:31.805" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201111 12:44:31.805" starttime="20201111 12:44:27.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:44:31.806" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201111 12:44:31.806" starttime="20201111 12:44:31.805"></status>
</kw>
<msg timestamp="20201111 12:44:31.807" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201111 12:44:31.807" starttime="20201111 12:44:27.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:44:31.813" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:44:34.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:44:34.832" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:44:34.832" starttime="20201111 12:44:31.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:44:34.833" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:44:34.833" starttime="20201111 12:44:34.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:44:34.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:44:34.833" starttime="20201111 12:44:34.833"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:34.834" starttime="20201111 12:44:31.809"></status>
</kw>
<msg timestamp="20201111 12:44:34.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:44:34.834" starttime="20201111 12:44:31.809"></status>
</kw>
<msg timestamp="20201111 12:44:34.834" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201111 12:44:34.834" starttime="20201111 12:44:31.808"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201111 12:44:34.836" starttime="20201111 12:44:34.834"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:34.836" starttime="20201111 12:44:31.807"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:34.836" starttime="20201111 12:44:31.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:44:34.841" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:44:37.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:44:37.807" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:44:37.807" starttime="20201111 12:44:34.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:44:37.808" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:44:37.808" starttime="20201111 12:44:37.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:44:37.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:44:37.809" starttime="20201111 12:44:37.808"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:37.809" starttime="20201111 12:44:34.838"></status>
</kw>
<msg timestamp="20201111 12:44:37.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:44:37.809" starttime="20201111 12:44:34.838"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:37.809" starttime="20201111 12:44:34.837"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:37.810" starttime="20201111 12:44:34.837"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:37.810" starttime="20201111 12:44:34.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201111 12:44:37.810" starttime="20201111 12:44:37.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:44:37.814" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:44:40.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:44:40.756" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T12:44:37.591Z",
  "modificat...</msg>
<status status="PASS" endtime="20201111 12:44:40.756" starttime="20201111 12:44:37.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:44:40.757" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T12:44:37.591Z",
  "modificationTime" : "2020-11-11T12:44:37.591Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201111 12:44:40.757" starttime="20201111 12:44:40.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:44:40.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:44:40.758" starttime="20201111 12:44:40.757"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:40.758" starttime="20201111 12:44:37.811"></status>
</kw>
<msg timestamp="20201111 12:44:40.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:44:40.758" starttime="20201111 12:44:37.811"></status>
</kw>
<msg timestamp="20201111 12:44:40.758" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T12:44:37.591Z",
  "modificat...</msg>
<status status="PASS" endtime="20201111 12:44:40.758" starttime="20201111 12:44:37.810"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201111 12:44:40.759" starttime="20201111 12:44:40.759"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:44:40.763" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:44:40.764" starttime="20201111 12:44:40.763"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:44:40.764" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:44:40.764" starttime="20201111 12:44:40.764"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:40.765" starttime="20201111 12:44:40.763"></status>
</kw>
<msg timestamp="20201111 12:44:40.765" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:44:40.765" starttime="20201111 12:44:40.762"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:40.765" starttime="20201111 12:44:40.761"></status>
</kw>
<msg timestamp="20201111 12:44:40.765" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201111 12:44:40.765" starttime="20201111 12:44:40.760"></status>
</kw>
<msg timestamp="20201111 12:44:40.765" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201111 12:44:40.766" starttime="20201111 12:44:40.759"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:44:40.768" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:44:43.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:44:43.881" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:44:43.881" starttime="20201111 12:44:40.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:44:43.882" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:44:43.882" starttime="20201111 12:44:43.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:44:43.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:44:43.883" starttime="20201111 12:44:43.882"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:43.883" starttime="20201111 12:44:40.766"></status>
</kw>
<msg timestamp="20201111 12:44:43.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:44:43.883" starttime="20201111 12:44:40.766"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:43.883" starttime="20201111 12:44:40.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:44:43.887" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:44:50.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:44:50.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:44:50.019" starttime="20201111 12:44:43.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:44:50.020" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:44:50.020" starttime="20201111 12:44:50.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:44:50.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:44:50.021" starttime="20201111 12:44:50.020"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:50.021" starttime="20201111 12:44:43.885"></status>
</kw>
<msg timestamp="20201111 12:44:50.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:44:50.021" starttime="20201111 12:44:43.884"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:50.022" starttime="20201111 12:44:43.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:44:50.025" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:44:55.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:44:55.023" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:44:55.023" starttime="20201111 12:44:50.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:44:55.024" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:44:55.024" starttime="20201111 12:44:55.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:44:55.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:44:55.025" starttime="20201111 12:44:55.024"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:55.025" starttime="20201111 12:44:50.023"></status>
</kw>
<msg timestamp="20201111 12:44:55.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:44:55.025" starttime="20201111 12:44:50.022"></status>
</kw>
<status status="PASS" endtime="20201111 12:44:55.026" starttime="20201111 12:44:50.022"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:44:55.030" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:45:00.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:45:00.101" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:45:00.101" starttime="20201111 12:44:55.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:45:00.102" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:45:00.102" starttime="20201111 12:45:00.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:45:00.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:45:00.103" starttime="20201111 12:45:00.102"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:00.103" starttime="20201111 12:44:55.027"></status>
</kw>
<msg timestamp="20201111 12:45:00.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:45:00.103" starttime="20201111 12:44:55.026"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:00.103" starttime="20201111 12:44:55.026"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 12:45:00.104" critical="yes" starttime="20201111 12:44:27.835"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:45:00.110" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:45:00.110" starttime="20201111 12:45:00.109"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:45:00.110" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:45:00.111" starttime="20201111 12:45:00.110"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:00.111" starttime="20201111 12:45:00.108"></status>
</kw>
<msg timestamp="20201111 12:45:00.111" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:45:00.111" starttime="20201111 12:45:00.108"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:00.111" starttime="20201111 12:45:00.107"></status>
</kw>
<msg timestamp="20201111 12:45:00.111" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 12:45:00.111" starttime="20201111 12:45:00.106"></status>
</kw>
<msg timestamp="20201111 12:45:00.112" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 12:45:00.112" starttime="20201111 12:45:00.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:45:00.116" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:45:03.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:45:03.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:45:03.073" starttime="20201111 12:45:00.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:45:03.074" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:45:03.074" starttime="20201111 12:45:03.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:45:03.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:45:03.075" starttime="20201111 12:45:03.074"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:03.075" starttime="20201111 12:45:00.113"></status>
</kw>
<msg timestamp="20201111 12:45:03.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:45:03.075" starttime="20201111 12:45:00.112"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:03.076" starttime="20201111 12:45:00.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:45:03.079" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:45:06.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:45:06.080" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 12:45:06.080" starttime="20201111 12:45:03.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:45:06.081" level="INFO"></msg>
<status status="PASS" endtime="20201111 12:45:06.081" starttime="20201111 12:45:06.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:45:06.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:45:06.082" starttime="20201111 12:45:06.081"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:06.082" starttime="20201111 12:45:03.077"></status>
</kw>
<msg timestamp="20201111 12:45:06.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:45:06.082" starttime="20201111 12:45:03.076"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:06.083" starttime="20201111 12:45:03.076"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 12:45:06.083" critical="yes" starttime="20201111 12:45:00.105"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201111 12:45:06.084" starttime="20201111 12:44:27.766"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:46:53.115" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:46:53.115" starttime="20201111 12:46:53.115"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:46:53.116" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:46:53.116" starttime="20201111 12:46:53.115"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:53.116" starttime="20201111 12:46:53.114"></status>
</kw>
<msg timestamp="20201111 12:46:53.116" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:46:53.116" starttime="20201111 12:46:53.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:46:53.117" starttime="20201111 12:46:53.117"></status>
</kw>
<msg timestamp="20201111 12:46:53.117" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 12:46:53.117" starttime="20201111 12:46:53.116"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:53.118" starttime="20201111 12:46:53.113"></status>
</kw>
<msg timestamp="20201111 12:46:53.118" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:46:53.118" starttime="20201111 12:46:53.112"></status>
</kw>
<msg timestamp="20201111 12:46:53.118" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:46:53.118" starttime="20201111 12:46:53.111"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:46:53.119" level="INFO">${random} = 58043</msg>
<status status="PASS" endtime="20201111 12:46:53.119" starttime="20201111 12:46:53.118"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:46:53.126" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-58043 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:46:59.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:46:59.124" level="INFO">${output} = 2020-11-11 12:46:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:46:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201111 12:46:59.124" starttime="20201111 12:46:53.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:46:59.125" level="INFO">2020-11-11 12:46:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:46:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:46:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:46:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:46:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9D4C385A50BA-&gt;5cc6518a-773a-42a5-8b6b-ced31221d4f2
2020-11-11 12:46:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201111 12:46:59.125" starttime="20201111 12:46:59.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:46:59.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:46:59.126" starttime="20201111 12:46:59.125"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:59.126" starttime="20201111 12:46:53.120"></status>
</kw>
<msg timestamp="20201111 12:46:59.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:46:59.126" starttime="20201111 12:46:53.120"></status>
</kw>
<msg timestamp="20201111 12:46:59.127" level="INFO">${result} = 2020-11-11 12:46:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:46:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201111 12:46:59.127" starttime="20201111 12:46:53.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:46:59.131" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:47:00.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:47:00.973" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:44 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 12:46 ofs://om/volume1/bucket1/ozone-58043
-rw-...</msg>
<status status="PASS" endtime="20201111 12:47:00.974" starttime="20201111 12:46:59.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:47:00.975" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:44 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 12:46 ofs://om/volume1/bucket1/ozone-58043
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 12:45 ofs://om/volume1/bucket1/ozone-87841
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:45 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:46 ofs://om/volume1/bucket1/wordcount-61.txt</msg>
<status status="PASS" endtime="20201111 12:47:00.975" starttime="20201111 12:47:00.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:47:00.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:47:00.975" starttime="20201111 12:47:00.975"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:00.976" starttime="20201111 12:46:59.129"></status>
</kw>
<msg timestamp="20201111 12:47:00.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:47:00.976" starttime="20201111 12:46:59.129"></status>
</kw>
<msg timestamp="20201111 12:47:00.976" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:44 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 12:46 ofs://om/volume1/bucket1/ozone-58043
-rw-...</msg>
<status status="PASS" endtime="20201111 12:47:00.977" starttime="20201111 12:46:59.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:47:00.977" starttime="20201111 12:47:00.977"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:47:00.977" critical="yes" starttime="20201111 12:46:53.110"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201111 12:47:00.979" starttime="20201111 12:46:53.051"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:45:10.366" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:45:10.366" starttime="20201111 12:45:10.365"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:45:10.366" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:45:10.366" starttime="20201111 12:45:10.366"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:10.366" starttime="20201111 12:45:10.365"></status>
</kw>
<msg timestamp="20201111 12:45:10.366" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:45:10.367" starttime="20201111 12:45:10.364"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:10.367" starttime="20201111 12:45:10.363"></status>
</kw>
<msg timestamp="20201111 12:45:10.367" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:45:10.367" starttime="20201111 12:45:10.363"></status>
</kw>
<msg timestamp="20201111 12:45:10.367" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:45:10.367" starttime="20201111 12:45:10.362"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:45:10.368" level="INFO">${random} = 87841</msg>
<status status="PASS" endtime="20201111 12:45:10.368" starttime="20201111 12:45:10.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:45:10.374" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-87841 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:45:13.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:45:13.870" level="INFO">${output} = 2020-11-11 12:45:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:45:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201111 12:45:13.870" starttime="20201111 12:45:10.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:45:13.871" level="INFO">2020-11-11 12:45:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:45:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:45:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:45:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:45:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FCACD9964949-&gt;5cc6518a-773a-42a5-8b6b-ced31221d4f2
2020-11-11 12:45:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201111 12:45:13.871" starttime="20201111 12:45:13.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:45:13.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:45:13.872" starttime="20201111 12:45:13.871"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:13.872" starttime="20201111 12:45:10.369"></status>
</kw>
<msg timestamp="20201111 12:45:13.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:45:13.872" starttime="20201111 12:45:10.368"></status>
</kw>
<msg timestamp="20201111 12:45:13.873" level="INFO">${result} = 2020-11-11 12:45:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:45:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201111 12:45:13.873" starttime="20201111 12:45:10.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:45:13.877" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:45:15.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:45:15.728" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:44 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 12:45 o3fs://bucket1.volume1.om/ozone-87841
dr...</msg>
<status status="PASS" endtime="20201111 12:45:15.728" starttime="20201111 12:45:13.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:45:15.729" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:44 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 12:45 o3fs://bucket1.volume1.om/ozone-87841
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:45 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201111 12:45:15.729" starttime="20201111 12:45:15.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:45:15.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:45:15.730" starttime="20201111 12:45:15.729"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:15.730" starttime="20201111 12:45:13.874"></status>
</kw>
<msg timestamp="20201111 12:45:15.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:45:15.730" starttime="20201111 12:45:13.873"></status>
</kw>
<msg timestamp="20201111 12:45:15.731" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-11 12:44 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-11 12:45 o3fs://bucket1.volume1.om/ozone-87841
dr...</msg>
<status status="PASS" endtime="20201111 12:45:15.731" starttime="20201111 12:45:13.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:45:15.731" starttime="20201111 12:45:15.731"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 12:45:15.731" critical="yes" starttime="20201111 12:45:10.362"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201111 12:45:15.732" starttime="20201111 12:45:10.309"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:47:05.312" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:47:05.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:47:05.318" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:47:05.318" starttime="20201111 12:47:05.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:47:05.318" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:47:05.318" starttime="20201111 12:47:05.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:47:05.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:47:05.319" starttime="20201111 12:47:05.319"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:05.319" starttime="20201111 12:47:05.309"></status>
</kw>
<msg timestamp="20201111 12:47:05.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:47:05.320" starttime="20201111 12:47:05.309"></status>
</kw>
<msg timestamp="20201111 12:47:05.320" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:47:05.320" starttime="20201111 12:47:05.308"></status>
</kw>
<msg timestamp="20201111 12:47:05.320" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:47:05.320" starttime="20201111 12:47:05.308"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:47:05.327" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:47:05.327" starttime="20201111 12:47:05.327"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:47:05.328" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:47:05.328" starttime="20201111 12:47:05.328"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:05.328" starttime="20201111 12:47:05.326"></status>
</kw>
<msg timestamp="20201111 12:47:05.328" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:47:05.329" starttime="20201111 12:47:05.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:47:05.329" starttime="20201111 12:47:05.329"></status>
</kw>
<msg timestamp="20201111 12:47:05.329" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 12:47:05.330" starttime="20201111 12:47:05.329"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:05.330" starttime="20201111 12:47:05.322"></status>
</kw>
<msg timestamp="20201111 12:47:05.330" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:47:05.330" starttime="20201111 12:47:05.321"></status>
</kw>
<msg timestamp="20201111 12:47:05.330" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:47:05.330" starttime="20201111 12:47:05.320"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:47:05.335" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:47:39.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:47:39.477" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:47:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:47:07 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201111 12:47:39.477" starttime="20201111 12:47:05.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:47:39.479" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:47:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:47:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:47:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:47:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:47:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0568BCDF69D5-&gt;5cc6518a-773a-42a5-8b6b-ced31221d4f2
2020-11-11 12:47:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-11 12:47:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-11 12:47:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 12:47:08 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 12:47:08 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 12:47:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605098644716_0003
2020-11-11 12:47:09 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-11 12:47:09 INFO  Configuration:2795 - resource-types.xml not found
2020-11-11 12:47:09 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-11 12:47:09 INFO  YarnClientImpl:329 - Submitted application application_1605098644716_0003
2020-11-11 12:47:09 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605098644716_0003/
2020-11-11 12:47:09 INFO  Job:1619 - Running job: job_1605098644716_0003
2020-11-11 12:47:17 INFO  Job:1640 - Job job_1605098644716_0003 running in uber mode : false
2020-11-11 12:47:17 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 12:47:23 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 12:47:28 INFO  Job:1647 -  map 67% reduce 0%
2020-11-11 12:47:33 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 12:47:37 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 12:47:38 INFO  Job:1658 - Job job_1605098644716_0003 completed successfully
2020-11-11 12:47:38 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37284
		Total time spent by all reduces in occupied slots (ms)=13984
		Total time spent by all map tasks (ms)=9321
		Total time spent by all reduce tasks (ms)=3496
		Total vcore-milliseconds taken by all map tasks=9321
		Total vcore-milliseconds taken by all reduce tasks=3496
		Total megabyte-milliseconds taken by all map tasks=38178816
		Total megabyte-milliseconds taken by all reduce tasks=14319616
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=520
		CPU time spent (ms)=6690
		Physical memory (bytes) snapshot=1274236928
		Virtual memory (bytes) snapshot=15819411456
		Total committed heap usage (bytes)=1054867456
		Peak Map Physical memory (bytes)=295825408
		Peak Map Virtual memory (bytes)=3950923776
		Peak Reduce Physical memory (bytes)=392876032
		Peak Reduce Virtual memory (bytes)=3971440640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.585 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201111 12:47:39.479" starttime="20201111 12:47:39.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:47:39.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:47:39.479" starttime="20201111 12:47:39.479"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:39.480" starttime="20201111 12:47:05.331"></status>
</kw>
<msg timestamp="20201111 12:47:39.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:47:39.480" starttime="20201111 12:47:05.331"></status>
</kw>
<msg timestamp="20201111 12:47:39.480" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:47:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:47:07 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201111 12:47:39.481" starttime="20201111 12:47:05.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:47:39.481" starttime="20201111 12:47:39.481"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:47:39.481" critical="yes" starttime="20201111 12:47:05.307"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:47:39.486" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:47:39.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:47:39.490" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:47:39.491" starttime="20201111 12:47:39.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:47:39.491" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:47:39.492" starttime="20201111 12:47:39.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:47:39.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:47:39.492" starttime="20201111 12:47:39.492"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:39.493" starttime="20201111 12:47:39.484"></status>
</kw>
<msg timestamp="20201111 12:47:39.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:47:39.493" starttime="20201111 12:47:39.484"></status>
</kw>
<msg timestamp="20201111 12:47:39.493" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:47:39.493" starttime="20201111 12:47:39.483"></status>
</kw>
<msg timestamp="20201111 12:47:39.493" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:47:39.493" starttime="20201111 12:47:39.483"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:47:39.494" level="INFO">${random} = 63</msg>
<status status="PASS" endtime="20201111 12:47:39.494" starttime="20201111 12:47:39.493"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:47:39.498" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:47:39.498" starttime="20201111 12:47:39.498"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:47:39.499" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:47:39.499" starttime="20201111 12:47:39.498"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:39.499" starttime="20201111 12:47:39.497"></status>
</kw>
<msg timestamp="20201111 12:47:39.499" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:47:39.499" starttime="20201111 12:47:39.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201111 12:47:39.500" starttime="20201111 12:47:39.500"></status>
</kw>
<msg timestamp="20201111 12:47:39.500" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201111 12:47:39.500" starttime="20201111 12:47:39.499"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:39.500" starttime="20201111 12:47:39.496"></status>
</kw>
<msg timestamp="20201111 12:47:39.500" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:47:39.501" starttime="20201111 12:47:39.495"></status>
</kw>
<msg timestamp="20201111 12:47:39.501" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201111 12:47:39.501" starttime="20201111 12:47:39.494"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:47:39.504" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:47:39.504" starttime="20201111 12:47:39.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:47:39.505" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:47:39.505" starttime="20201111 12:47:39.504"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:39.505" starttime="20201111 12:47:39.503"></status>
</kw>
<msg timestamp="20201111 12:47:39.505" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:47:39.505" starttime="20201111 12:47:39.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:47:39.507" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201111 12:47:39.507" starttime="20201111 12:47:39.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:47:39.507" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201111 12:47:39.507" starttime="20201111 12:47:39.507"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:39.507" starttime="20201111 12:47:39.506"></status>
</kw>
<msg timestamp="20201111 12:47:39.507" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201111 12:47:39.507" starttime="20201111 12:47:39.505"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:39.508" starttime="20201111 12:47:39.502"></status>
</kw>
<msg timestamp="20201111 12:47:39.508" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201111 12:47:39.508" starttime="20201111 12:47:39.502"></status>
</kw>
<msg timestamp="20201111 12:47:39.508" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201111 12:47:39.508" starttime="20201111 12:47:39.501"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201111 12:47:39.512" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201111 12:47:39.512" starttime="20201111 12:47:39.512"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:47:39.513" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201111 12:47:39.513" starttime="20201111 12:47:39.513"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:39.513" starttime="20201111 12:47:39.511"></status>
</kw>
<msg timestamp="20201111 12:47:39.514" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201111 12:47:39.514" starttime="20201111 12:47:39.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:47:39.515" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201111 12:47:39.515" starttime="20201111 12:47:39.515"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:47:39.516" level="INFO">${result} = /wordcount-63.txt</msg>
<status status="PASS" endtime="20201111 12:47:39.516" starttime="20201111 12:47:39.515"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:39.516" starttime="20201111 12:47:39.514"></status>
</kw>
<msg timestamp="20201111 12:47:39.516" level="INFO">${path_with_leading} = /wordcount-63.txt</msg>
<status status="PASS" endtime="20201111 12:47:39.516" starttime="20201111 12:47:39.514"></status>
</kw>
<status status="PASS" endtime="20201111 12:47:39.517" starttime="20201111 12:47:39.510"></status>
</kw>
<msg timestamp="20201111 12:47:39.517" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-63.txt</msg>
<status status="PASS" endtime="20201111 12:47:39.517" starttime="20201111 12:47:39.509"></status>
</kw>
<msg timestamp="20201111 12:47:39.517" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-63.txt</msg>
<status status="PASS" endtime="20201111 12:47:39.517" starttime="20201111 12:47:39.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:47:39.521" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-63.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:48:19.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:48:19.797" level="INFO">${output} = 2020-11-11 12:47:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-11 12:47:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201111 12:48:19.797" starttime="20201111 12:47:39.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:48:19.798" level="INFO">2020-11-11 12:47:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-11 12:47:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 12:47:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:47:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:47:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:47:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:47:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A0EC86F88625-&gt;5cc6518a-773a-42a5-8b6b-ced31221d4f2
2020-11-11 12:47:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 12:47:45 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 12:47:45 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 12:47:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605098644716_0004
2020-11-11 12:47:45 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-11 12:47:45 INFO  Configuration:2795 - resource-types.xml not found
2020-11-11 12:47:45 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-11 12:47:45 INFO  YarnClientImpl:329 - Submitted application application_1605098644716_0004
2020-11-11 12:47:45 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605098644716_0004/
2020-11-11 12:47:45 INFO  Job:1619 - Running job: job_1605098644716_0004
2020-11-11 12:47:53 INFO  Job:1640 - Job job_1605098644716_0004 running in uber mode : false
2020-11-11 12:47:53 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 12:47:59 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 12:48:04 INFO  Job:1647 -  map 67% reduce 0%
2020-11-11 12:48:09 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 12:48:13 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 12:48:19 INFO  Job:1658 - Job job_1605098644716_0004 completed successfully
2020-11-11 12:48:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123795
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37148
		Total time spent by all reduces in occupied slots (ms)=13360
		Total time spent by all map tasks (ms)=9287
		Total time spent by all reduce tasks (ms)=3340
		Total vcore-milliseconds taken by all map tasks=9287
		Total vcore-milliseconds taken by all reduce tasks=3340
		Total megabyte-milliseconds taken by all map tasks=38039552
		Total megabyte-milliseconds taken by all reduce tasks=13680640
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=547
		CPU time spent (ms)=6570
		Physical memory (bytes) snapshot=1163309056
		Virtual memory (bytes) snapshot=15793016832
		Total committed heap usage (bytes)=1013448704
		Peak Map Physical memory (bytes)=297238528
		Peak Map Virtual memory (bytes)=3949346816
		Peak Reduce Physical memory (bytes)=303091712
		Peak Reduce Virtual memory (bytes)=3970981888
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201111 12:48:19.799" starttime="20201111 12:48:19.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:48:19.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:48:19.799" starttime="20201111 12:48:19.799"></status>
</kw>
<status status="PASS" endtime="20201111 12:48:19.800" starttime="20201111 12:47:39.518"></status>
</kw>
<msg timestamp="20201111 12:48:19.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:48:19.800" starttime="20201111 12:47:39.518"></status>
</kw>
<msg timestamp="20201111 12:48:19.800" level="INFO">${output} = 2020-11-11 12:47:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-11 12:47:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201111 12:48:19.800" starttime="20201111 12:47:39.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201111 12:48:19.801" starttime="20201111 12:48:19.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:48:19.802" starttime="20201111 12:48:19.801"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:48:19.802" critical="yes" starttime="20201111 12:47:39.482"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201111 12:48:19.803" starttime="20201111 12:47:05.256"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:45:20.139" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:45:20.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:45:20.144" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:45:20.144" starttime="20201111 12:45:20.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:45:20.145" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:45:20.145" starttime="20201111 12:45:20.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:45:20.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:45:20.145" starttime="20201111 12:45:20.145"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:20.145" starttime="20201111 12:45:20.134"></status>
</kw>
<msg timestamp="20201111 12:45:20.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:45:20.146" starttime="20201111 12:45:20.134"></status>
</kw>
<msg timestamp="20201111 12:45:20.146" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:45:20.146" starttime="20201111 12:45:20.133"></status>
</kw>
<msg timestamp="20201111 12:45:20.146" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:45:20.146" starttime="20201111 12:45:20.133"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:45:20.151" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:45:20.151" starttime="20201111 12:45:20.151"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:45:20.152" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:45:20.152" starttime="20201111 12:45:20.151"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:20.152" starttime="20201111 12:45:20.149"></status>
</kw>
<msg timestamp="20201111 12:45:20.152" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:45:20.152" starttime="20201111 12:45:20.149"></status>
</kw>
<status status="PASS" endtime="20201111 12:45:20.153" starttime="20201111 12:45:20.148"></status>
</kw>
<msg timestamp="20201111 12:45:20.153" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:45:20.153" starttime="20201111 12:45:20.147"></status>
</kw>
<msg timestamp="20201111 12:45:20.153" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:45:20.153" starttime="20201111 12:45:20.146"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:45:20.157" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:46:06.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:46:06.767" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:45:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:45:22 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201111 12:46:06.767" starttime="20201111 12:45:20.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:46:06.768" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:45:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:45:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:45:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:45:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:45:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F9961740DC52-&gt;5cc6518a-773a-42a5-8b6b-ced31221d4f2
2020-11-11 12:45:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-11 12:45:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-11 12:45:23 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 12:45:26 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 12:45:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605098644716_0001
2020-11-11 12:45:29 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-11 12:45:29 INFO  Configuration:2795 - resource-types.xml not found
2020-11-11 12:45:29 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-11 12:45:29 INFO  YarnClientImpl:329 - Submitted application application_1605098644716_0001
2020-11-11 12:45:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605098644716_0001/
2020-11-11 12:45:29 INFO  Job:1619 - Running job: job_1605098644716_0001
2020-11-11 12:45:38 INFO  Job:1640 - Job job_1605098644716_0001 running in uber mode : false
2020-11-11 12:45:38 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 12:45:44 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 12:45:49 INFO  Job:1647 -  map 67% reduce 0%
2020-11-11 12:45:55 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 12:46:03 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 12:46:06 INFO  Job:1658 - Job job_1605098644716_0001 completed successfully
2020-11-11 12:46:06 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37064
		Total time spent by all reduces in occupied slots (ms)=25032
		Total time spent by all map tasks (ms)=9266
		Total time spent by all reduce tasks (ms)=6258
		Total vcore-milliseconds taken by all map tasks=9266
		Total vcore-milliseconds taken by all reduce tasks=6258
		Total megabyte-milliseconds taken by all map tasks=37953536
		Total megabyte-milliseconds taken by all reduce tasks=25632768
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=581
		CPU time spent (ms)=6870
		Physical memory (bytes) snapshot=1258926080
		Virtual memory (bytes) snapshot=15803961344
		Total committed heap usage (bytes)=1106771968
		Peak Map Physical memory (bytes)=295043072
		Peak Map Virtual memory (bytes)=3948818432
		Peak Reduce Physical memory (bytes)=386711552
		Peak Reduce Virtual memory (bytes)=3964686336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 42.88 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201111 12:46:06.768" starttime="20201111 12:46:06.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:46:06.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:46:06.769" starttime="20201111 12:46:06.768"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:06.769" starttime="20201111 12:45:20.154"></status>
</kw>
<msg timestamp="20201111 12:46:06.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:46:06.769" starttime="20201111 12:45:20.154"></status>
</kw>
<msg timestamp="20201111 12:46:06.769" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-11 12:45:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:45:22 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201111 12:46:06.770" starttime="20201111 12:45:20.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:46:06.770" starttime="20201111 12:46:06.770"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:46:06.770" critical="yes" starttime="20201111 12:45:20.132"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:46:06.775" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:46:06.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:46:06.782" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:46:06.782" starttime="20201111 12:46:06.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:46:06.783" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:46:06.783" starttime="20201111 12:46:06.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:46:06.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:46:06.784" starttime="20201111 12:46:06.783"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:06.784" starttime="20201111 12:46:06.773"></status>
</kw>
<msg timestamp="20201111 12:46:06.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:46:06.784" starttime="20201111 12:46:06.772"></status>
</kw>
<msg timestamp="20201111 12:46:06.785" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:46:06.785" starttime="20201111 12:46:06.772"></status>
</kw>
<msg timestamp="20201111 12:46:06.785" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201111 12:46:06.785" starttime="20201111 12:46:06.772"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 12:46:06.786" level="INFO">${random} = 61</msg>
<status status="PASS" endtime="20201111 12:46:06.786" starttime="20201111 12:46:06.785"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:46:06.790" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:46:06.790" starttime="20201111 12:46:06.789"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:46:06.791" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:46:06.791" starttime="20201111 12:46:06.790"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:06.791" starttime="20201111 12:46:06.789"></status>
</kw>
<msg timestamp="20201111 12:46:06.791" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:46:06.791" starttime="20201111 12:46:06.788"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:06.791" starttime="20201111 12:46:06.788"></status>
</kw>
<msg timestamp="20201111 12:46:06.792" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:46:06.792" starttime="20201111 12:46:06.787"></status>
</kw>
<msg timestamp="20201111 12:46:06.792" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201111 12:46:06.792" starttime="20201111 12:46:06.786"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:46:06.795" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:46:06.795" starttime="20201111 12:46:06.795"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:46:06.796" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:46:06.796" starttime="20201111 12:46:06.795"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:06.796" starttime="20201111 12:46:06.794"></status>
</kw>
<msg timestamp="20201111 12:46:06.796" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:46:06.796" starttime="20201111 12:46:06.794"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:06.797" starttime="20201111 12:46:06.793"></status>
</kw>
<msg timestamp="20201111 12:46:06.797" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201111 12:46:06.797" starttime="20201111 12:46:06.793"></status>
</kw>
<msg timestamp="20201111 12:46:06.797" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201111 12:46:06.797" starttime="20201111 12:46:06.792"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201111 12:46:06.800" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201111 12:46:06.800" starttime="20201111 12:46:06.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 12:46:06.801" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201111 12:46:06.801" starttime="20201111 12:46:06.801"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:06.801" starttime="20201111 12:46:06.799"></status>
</kw>
<msg timestamp="20201111 12:46:06.801" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201111 12:46:06.802" starttime="20201111 12:46:06.799"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:06.802" starttime="20201111 12:46:06.798"></status>
</kw>
<msg timestamp="20201111 12:46:06.802" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201111 12:46:06.802" starttime="20201111 12:46:06.798"></status>
</kw>
<msg timestamp="20201111 12:46:06.802" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201111 12:46:06.802" starttime="20201111 12:46:06.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 12:46:06.807" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 12:46:48.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 12:46:48.734" level="INFO">${output} = 2020-11-11 12:46:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-11 12:46:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201111 12:46:48.734" starttime="20201111 12:46:06.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 12:46:48.735" level="INFO">2020-11-11 12:46:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-11 12:46:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-11 12:46:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-11 12:46:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-11 12:46:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-11 12:46:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 12:46:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3001A002C2F0-&gt;5cc6518a-773a-42a5-8b6b-ced31221d4f2
2020-11-11 12:46:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 12:46:12 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-11 12:46:15 INFO  JobSubmitter:202 - number of splits:3
2020-11-11 12:46:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605098644716_0002
2020-11-11 12:46:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-11 12:46:15 INFO  Configuration:2795 - resource-types.xml not found
2020-11-11 12:46:15 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-11 12:46:15 INFO  YarnClientImpl:329 - Submitted application application_1605098644716_0002
2020-11-11 12:46:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605098644716_0002/
2020-11-11 12:46:15 INFO  Job:1619 - Running job: job_1605098644716_0002
2020-11-11 12:46:24 INFO  Job:1640 - Job job_1605098644716_0002 running in uber mode : false
2020-11-11 12:46:24 INFO  Job:1647 -  map 0% reduce 0%
2020-11-11 12:46:30 INFO  Job:1647 -  map 33% reduce 0%
2020-11-11 12:46:36 INFO  Job:1647 -  map 67% reduce 0%
2020-11-11 12:46:41 INFO  Job:1647 -  map 100% reduce 0%
2020-11-11 12:46:45 INFO  Job:1647 -  map 100% reduce 100%
2020-11-11 12:46:48 INFO  Job:1658 - Job job_1605098644716_0002 completed successfully
2020-11-11 12:46:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123879
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37224
		Total time spent by all reduces in occupied slots (ms)=13696
		Total time spent by all map tasks (ms)=9306
		Total time spent by all reduce tasks (ms)=3424
		Total vcore-milliseconds taken by all map tasks=9306
		Total vcore-milliseconds taken by all reduce tasks=3424
		Total megabyte-milliseconds taken by all map tasks=38117376
		Total megabyte-milliseconds taken by all reduce tasks=14024704
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=516
		CPU time spent (ms)=6680
		Physical memory (bytes) snapshot=1280344064
		Virtual memory (bytes) snapshot=15803559936
		Total committed heap usage (bytes)=1085800448
		Peak Map Physical memory (bytes)=299294720
		Peak Map Virtual memory (bytes)=3950391296
		Peak Reduce Physical memory (bytes)=389255168
		Peak Reduce Virtual memory (bytes)=3966361600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201111 12:46:48.736" starttime="20201111 12:46:48.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 12:46:48.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 12:46:48.736" starttime="20201111 12:46:48.736"></status>
</kw>
<status status="PASS" endtime="20201111 12:46:48.737" starttime="20201111 12:46:06.803"></status>
</kw>
<msg timestamp="20201111 12:46:48.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 12:46:48.737" starttime="20201111 12:46:06.803"></status>
</kw>
<msg timestamp="20201111 12:46:48.738" level="INFO">${output} = 2020-11-11 12:46:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-11 12:46:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201111 12:46:48.738" starttime="20201111 12:46:06.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201111 12:46:48.738" starttime="20201111 12:46:48.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201111 12:46:48.739" starttime="20201111 12:46:48.738"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201111 12:46:48.739" critical="yes" starttime="20201111 12:46:06.771"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201111 12:46:48.740" starttime="20201111 12:45:20.068"></status>
</suite>
<status status="PASS" elapsedtime="214888" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="591976" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
