<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201111 13:11:42.546" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:07:26.452" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:07:37.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:07:37.229" level="INFO">${output} = 2020-11-11 13:07:28,039 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:28,276 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201111 13:07:37.230" starttime="20201111 13:07:26.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:07:37.231" level="INFO">2020-11-11 13:07:28,039 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:28,276 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-11 13:07:28,276 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-11 13:07:30,554 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-11 13:07:31,730 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-11 13:07:31,731 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-11 13:07:31,731 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-11 13:07:31,731 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-11 13:07:31,732 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-11 13:07:31,732 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-11 13:07:31,732 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-11 13:07:31,734 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-11 13:07:31,741 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:31,777 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-19599, with testuser/scm@EXAMPLE.COM as owner.
2020-11-11 13:07:32,218 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-19599/bucket-0-93831, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 13:07:32,744 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:33,746 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:34,469 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-11 13:07:34,746 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,435
Average Time spent in bucket creation: 00:00:00,130
Average Time spent in key creation: 00:00:01,218
Average Time spent in key write: 00:00:01,099
Total bytes written: 10240
Total Execution time: 00:00:08,464
***************************************************</msg>
<status status="PASS" endtime="20201111 13:07:37.231" starttime="20201111 13:07:37.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:07:37.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:07:37.232" starttime="20201111 13:07:37.231"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:37.232" starttime="20201111 13:07:26.446"></status>
</kw>
<msg timestamp="20201111 13:07:37.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:07:37.232" starttime="20201111 13:07:26.446"></status>
</kw>
<msg timestamp="20201111 13:07:37.233" level="INFO">${result} = 2020-11-11 13:07:28,039 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:28,276 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201111 13:07:37.233" starttime="20201111 13:07:26.445"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201111 13:07:37.235" starttime="20201111 13:07:37.234"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:37.235" starttime="20201111 13:07:37.233"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 13:07:37.235" critical="yes" starttime="20201111 13:07:26.445"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:07:37.246" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:07:47.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:07:47.520" level="INFO">${output} = 2020-11-11 13:07:39,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:39,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201111 13:07:47.520" starttime="20201111 13:07:37.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:07:47.523" level="INFO">2020-11-11 13:07:39,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:39,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-11 13:07:39,244 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-11 13:07:39,385 [main] INFO freon.BaseFreonGenerator: Executing test with prefix mebsqdxnfk
2020-11-11 13:07:39,396 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-11 13:07:40,398 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:40,401 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-11 13:07:40,846 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-11 13:07:40,933 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-11 13:07:41,399 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:41,690 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-11 13:07:42,000 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-11 13:07:42,000 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-02F6E66DEDF7-&gt;f64acea6-07d0-4c4c-895d-21290795b61b
2020-11-11 13:07:42,001 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-11 13:07:42,399 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:43,400 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:44,401 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:45,401 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:46,402 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-11 13:07:47,180 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5041.904342, max=5041.904342, mean=5041.904342, stddev=0.0, median=5041.904342, p75=5041.904342, p95=5041.904342, p98=5041.904342, p99=5041.904342, p999=5041.904342, mean_rate=0.16234264551895863, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-11 13:07:47,181 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2020-11-11 13:07:47,183 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-11 13:07:47,183 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201111 13:07:47.523" starttime="20201111 13:07:47.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:07:47.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:07:47.524" starttime="20201111 13:07:47.523"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:47.524" starttime="20201111 13:07:37.240"></status>
</kw>
<msg timestamp="20201111 13:07:47.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:07:47.524" starttime="20201111 13:07:37.239"></status>
</kw>
<msg timestamp="20201111 13:07:47.525" level="INFO">${result} = 2020-11-11 13:07:39,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:39,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201111 13:07:47.525" starttime="20201111 13:07:37.238"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201111 13:07:47.526" starttime="20201111 13:07:47.525"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:47.526" starttime="20201111 13:07:47.525"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 13:07:47.526" critical="yes" starttime="20201111 13:07:37.236"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:07:47.531" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:07:52.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:07:52.220" level="INFO">${output} = 2020-11-11 13:07:49,126 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:49,335 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201111 13:07:52.220" starttime="20201111 13:07:47.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:07:52.221" level="INFO">2020-11-11 13:07:49,126 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:49,335 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-11 13:07:49,336 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-11 13:07:49,456 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1k6px0k27o
2020-11-11 13:07:49,467 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-11 13:07:50,478 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:50,519 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-11 13:07:51,121 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-11 13:07:51,482 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-11 13:07:52,109 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=266.581656, max=266.581656, mean=266.581656, stddev=0.0, median=266.581656, p75=266.581656, p95=266.581656, p98=266.581656, p99=266.581656, p999=266.581656, mean_rate=0.8883533650013956, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-11 13:07:52,114 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-11 13:07:52,116 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-11 13:07:52,116 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201111 13:07:52.221" starttime="20201111 13:07:52.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:07:52.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:07:52.222" starttime="20201111 13:07:52.221"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:52.222" starttime="20201111 13:07:47.529"></status>
</kw>
<msg timestamp="20201111 13:07:52.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:07:52.222" starttime="20201111 13:07:47.528"></status>
</kw>
<msg timestamp="20201111 13:07:52.223" level="INFO">${result} = 2020-11-11 13:07:49,126 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:49,335 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201111 13:07:52.223" starttime="20201111 13:07:47.528"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201111 13:07:52.224" starttime="20201111 13:07:52.224"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:52.224" starttime="20201111 13:07:52.223"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 13:07:52.224" critical="yes" starttime="20201111 13:07:47.527"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:07:52.234" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:07:56.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:07:56.898" level="INFO">${output} = 2020-11-11 13:07:53,824 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:54,048 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201111 13:07:56.898" starttime="20201111 13:07:52.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:07:56.899" level="INFO">2020-11-11 13:07:53,824 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:54,048 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-11 13:07:54,048 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-11 13:07:54,203 [main] INFO freon.BaseFreonGenerator: Executing test with prefix z1ulbx1ncp
2020-11-11 13:07:54,215 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-11 13:07:55,219 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-11 13:07:55,306 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-11 13:07:55,839 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-11 13:07:56,219 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-11 13:07:56,851 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=156.88935, max=156.88935, mean=156.88935, stddev=0.0, median=156.88935, p75=156.88935, p95=156.88935, p98=156.88935, p99=156.88935, p999=156.88935, mean_rate=0.890647241883077, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-11 13:07:56,873 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-11 13:07:56,873 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-11 13:07:56,873 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201111 13:07:56.900" starttime="20201111 13:07:56.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:07:56.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:07:56.900" starttime="20201111 13:07:56.900"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:56.901" starttime="20201111 13:07:52.227"></status>
</kw>
<msg timestamp="20201111 13:07:56.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:07:56.901" starttime="20201111 13:07:52.227"></status>
</kw>
<msg timestamp="20201111 13:07:56.902" level="INFO">${result} = 2020-11-11 13:07:53,824 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-11 13:07:54,048 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201111 13:07:56.902" starttime="20201111 13:07:52.226"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201111 13:07:56.903" starttime="20201111 13:07:56.903"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:56.903" starttime="20201111 13:07:56.902"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201111 13:07:56.904" critical="yes" starttime="20201111 13:07:52.225"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201111 13:07:56.911" starttime="20201111 13:07:26.418"></status>
</suite>
<status status="PASS" endtime="20201111 13:07:56.914" starttime="20201111 13:07:26.390"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:07:18.528" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:07:18.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:07:18.531" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:07:18.531" starttime="20201111 13:07:18.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:07:18.533" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:07:18.533" starttime="20201111 13:07:18.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:07:18.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:07:18.533" starttime="20201111 13:07:18.533"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:18.534" starttime="20201111 13:07:18.511"></status>
</kw>
<msg timestamp="20201111 13:07:18.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:07:18.534" starttime="20201111 13:07:18.511"></status>
</kw>
<msg timestamp="20201111 13:07:18.535" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:07:18.535" starttime="20201111 13:07:18.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:07:18.535" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:07:18.535" starttime="20201111 13:07:18.535"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:07:18.548" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:07:18.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:07:18.579" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:07:18.579" starttime="20201111 13:07:18.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:07:18.580" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:07:18.581" starttime="20201111 13:07:18.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:07:18.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:07:18.581" starttime="20201111 13:07:18.581"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:18.582" starttime="20201111 13:07:18.542"></status>
</kw>
<msg timestamp="20201111 13:07:18.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:07:18.582" starttime="20201111 13:07:18.541"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:18.582" starttime="20201111 13:07:18.541"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:18.582" starttime="20201111 13:07:18.536"></status>
</kw>
<status status="PASS" endtime="20201111 13:07:18.582" starttime="20201111 13:07:18.505"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:07:18.583" critical="yes" starttime="20201111 13:07:18.503"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201111 13:07:18.584" starttime="20201111 13:07:18.373"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201111 13:08:02.211" level="INFO">${random} = 46771</msg>
<status status="PASS" endtime="20201111 13:08:02.211" starttime="20201111 13:08:02.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201111 13:08:02.212" level="INFO">${source} = 46771-source</msg>
<status status="PASS" endtime="20201111 13:08:02.212" starttime="20201111 13:08:02.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201111 13:08:02.215" level="INFO">${target} = 46771-target</msg>
<status status="PASS" endtime="20201111 13:08:02.215" starttime="20201111 13:08:02.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:02.220" level="INFO">Running command 'ozone sh volume create 46771-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:05.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:05.778" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:05.778" starttime="20201111 13:08:02.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:05.779" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:08:05.779" starttime="20201111 13:08:05.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:05.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:05.780" starttime="20201111 13:08:05.779"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:05.780" starttime="20201111 13:08:02.216"></status>
</kw>
<msg timestamp="20201111 13:08:05.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:05.780" starttime="20201111 13:08:02.216"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:05.780" starttime="20201111 13:08:02.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:05.783" level="INFO">Running command 'ozone sh volume create 46771-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:09.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:09.373" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:09.373" starttime="20201111 13:08:05.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:09.373" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:08:09.374" starttime="20201111 13:08:09.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:09.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:09.374" starttime="20201111 13:08:09.374"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:09.374" starttime="20201111 13:08:05.781"></status>
</kw>
<msg timestamp="20201111 13:08:09.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:09.375" starttime="20201111 13:08:05.781"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:09.375" starttime="20201111 13:08:05.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:09.379" level="INFO">Running command 'ozone sh bucket create 46771-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:13.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:13.383" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:13.383" starttime="20201111 13:08:09.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:13.384" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:08:13.384" starttime="20201111 13:08:13.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:13.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:13.385" starttime="20201111 13:08:13.384"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:13.385" starttime="20201111 13:08:09.377"></status>
</kw>
<msg timestamp="20201111 13:08:13.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:13.386" starttime="20201111 13:08:09.376"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:13.386" starttime="20201111 13:08:09.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:13.398" level="INFO">Running command 'ozone sh key put 46771-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:21.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:21.722" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:21.722" starttime="20201111 13:08:13.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:21.723" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:08:21.723" starttime="20201111 13:08:21.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:21.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:21.724" starttime="20201111 13:08:21.724"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:21.724" starttime="20201111 13:08:13.387"></status>
</kw>
<msg timestamp="20201111 13:08:21.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:21.725" starttime="20201111 13:08:13.387"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:21.725" starttime="20201111 13:08:13.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:21.729" level="INFO">Running command 'ozone sh bucket create 46771-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:25.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:25.264" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:25.264" starttime="20201111 13:08:21.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:25.265" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:08:25.265" starttime="20201111 13:08:25.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:25.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:25.266" starttime="20201111 13:08:25.265"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:25.266" starttime="20201111 13:08:21.726"></status>
</kw>
<msg timestamp="20201111 13:08:25.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:25.266" starttime="20201111 13:08:21.726"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:25.267" starttime="20201111 13:08:21.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:25.270" level="INFO">Running command 'ozone sh bucket link 46771-source/readable-bucket 46771-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:28.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:28.707" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:28.707" starttime="20201111 13:08:25.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:28.709" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:08:28.709" starttime="20201111 13:08:28.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:28.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:28.709" starttime="20201111 13:08:28.709"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:28.710" starttime="20201111 13:08:25.268"></status>
</kw>
<msg timestamp="20201111 13:08:28.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:28.710" starttime="20201111 13:08:25.267"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:28.710" starttime="20201111 13:08:25.267"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:28.715" level="INFO">Running command 'ozone sh bucket link 46771-source/readable-bucket 46771-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:32.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:32.237" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:32.237" starttime="20201111 13:08:28.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:32.238" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:08:32.238" starttime="20201111 13:08:32.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:32.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:32.239" starttime="20201111 13:08:32.238"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:32.239" starttime="20201111 13:08:28.711"></status>
</kw>
<msg timestamp="20201111 13:08:32.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:32.239" starttime="20201111 13:08:28.711"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:32.239" starttime="20201111 13:08:28.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:32.244" level="INFO">Running command 'ozone sh bucket link 46771-source/unreadable-bucket 46771-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:35.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:35.651" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:35.651" starttime="20201111 13:08:32.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:35.652" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:08:35.652" starttime="20201111 13:08:35.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:35.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:35.653" starttime="20201111 13:08:35.653"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:35.653" starttime="20201111 13:08:32.240"></status>
</kw>
<msg timestamp="20201111 13:08:35.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:35.654" starttime="20201111 13:08:32.240"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:35.654" starttime="20201111 13:08:32.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:35.657" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 46771-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:39.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:39.395" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:39.395" starttime="20201111 13:08:35.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:39.396" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201111 13:08:39.396" starttime="20201111 13:08:39.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:39.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:39.397" starttime="20201111 13:08:39.396"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:39.397" starttime="20201111 13:08:35.655"></status>
</kw>
<msg timestamp="20201111 13:08:39.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:39.398" starttime="20201111 13:08:35.655"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:39.398" starttime="20201111 13:08:35.654"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:39.405" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 46771-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:43.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:43.200" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:43.200" starttime="20201111 13:08:39.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:43.201" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201111 13:08:43.201" starttime="20201111 13:08:43.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:43.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:43.202" starttime="20201111 13:08:43.201"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:43.202" starttime="20201111 13:08:39.399"></status>
</kw>
<msg timestamp="20201111 13:08:43.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:43.202" starttime="20201111 13:08:39.398"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:43.202" starttime="20201111 13:08:39.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:43.206" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 46771-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:46.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:46.898" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:46.898" starttime="20201111 13:08:43.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:46.899" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201111 13:08:46.899" starttime="20201111 13:08:46.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:46.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:46.900" starttime="20201111 13:08:46.900"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:46.901" starttime="20201111 13:08:43.203"></status>
</kw>
<msg timestamp="20201111 13:08:46.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:46.901" starttime="20201111 13:08:43.203"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:46.901" starttime="20201111 13:08:43.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:46.907" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 46771-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:50.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:50.444" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:50.444" starttime="20201111 13:08:46.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:50.445" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201111 13:08:50.445" starttime="20201111 13:08:50.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:50.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:50.445" starttime="20201111 13:08:50.445"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:50.446" starttime="20201111 13:08:46.902"></status>
</kw>
<msg timestamp="20201111 13:08:50.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:50.446" starttime="20201111 13:08:46.902"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:50.446" starttime="20201111 13:08:46.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:50.450" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 46771-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:53.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:53.979" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:53.979" starttime="20201111 13:08:50.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:53.980" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201111 13:08:53.980" starttime="20201111 13:08:53.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:53.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:53.981" starttime="20201111 13:08:53.981"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:53.981" starttime="20201111 13:08:50.447"></status>
</kw>
<msg timestamp="20201111 13:08:53.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:53.982" starttime="20201111 13:08:50.447"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:53.982" starttime="20201111 13:08:50.446"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:53.982" starttime="20201111 13:08:09.376"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:53.982" starttime="20201111 13:08:09.375"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:53.982" starttime="20201111 13:08:02.210"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:53.990" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:53.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:53.991" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:08:53.991" starttime="20201111 13:08:53.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:53.992" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:08:53.992" starttime="20201111 13:08:53.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:53.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:53.992" starttime="20201111 13:08:53.992"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:53.993" starttime="20201111 13:08:53.986"></status>
</kw>
<msg timestamp="20201111 13:08:53.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:53.993" starttime="20201111 13:08:53.986"></status>
</kw>
<msg timestamp="20201111 13:08:53.993" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:08:53.993" starttime="20201111 13:08:53.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:08:53.994" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:08:53.995" starttime="20201111 13:08:53.993"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:53.999" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:54.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:54.023" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:08:54.023" starttime="20201111 13:08:53.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:54.024" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:08:54.024" starttime="20201111 13:08:54.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:54.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:54.025" starttime="20201111 13:08:54.025"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:54.026" starttime="20201111 13:08:53.996"></status>
</kw>
<msg timestamp="20201111 13:08:54.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:54.027" starttime="20201111 13:08:53.996"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:54.027" starttime="20201111 13:08:53.995"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:54.027" starttime="20201111 13:08:53.995"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:54.027" starttime="20201111 13:08:53.984"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:54.027" starttime="20201111 13:08:53.984"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:54.038" level="INFO">Running command 'ozone sh bucket link 46771-source/no-such-bucket 46771-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:08:57.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:08:57.613" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:08:57.614" starttime="20201111 13:08:54.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:08:57.615" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:08:57.615" starttime="20201111 13:08:57.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:08:57.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:08:57.616" starttime="20201111 13:08:57.615"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:57.616" starttime="20201111 13:08:54.028"></status>
</kw>
<msg timestamp="20201111 13:08:57.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:08:57.616" starttime="20201111 13:08:54.028"></status>
</kw>
<status status="PASS" endtime="20201111 13:08:57.616" starttime="20201111 13:08:54.027"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:08:57.623" level="INFO">Running command 'ozone sh key list 46771-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:01.261" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 13:09:01.261" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:01.261" starttime="20201111 13:08:57.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:01.262" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201111 13:09:01.262" starttime="20201111 13:09:01.261"></status>
</kw>
<msg timestamp="20201111 13:09:01.263" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:01.263" starttime="20201111 13:08:57.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201111 13:09:01.263" starttime="20201111 13:09:01.263"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:09:01.264" critical="yes" starttime="20201111 13:08:53.983"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:01.278" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:01.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:01.281" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:09:01.281" starttime="20201111 13:09:01.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:01.283" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:09:01.283" starttime="20201111 13:09:01.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:01.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:01.288" starttime="20201111 13:09:01.283"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:01.288" starttime="20201111 13:09:01.268"></status>
</kw>
<msg timestamp="20201111 13:09:01.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:01.288" starttime="20201111 13:09:01.268"></status>
</kw>
<msg timestamp="20201111 13:09:01.288" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:09:01.288" starttime="20201111 13:09:01.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:09:01.289" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:09:01.289" starttime="20201111 13:09:01.289"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:01.293" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:01.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:01.334" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:09:01.334" starttime="20201111 13:09:01.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:01.335" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:09:01.335" starttime="20201111 13:09:01.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:01.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:01.336" starttime="20201111 13:09:01.335"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:01.336" starttime="20201111 13:09:01.291"></status>
</kw>
<msg timestamp="20201111 13:09:01.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:01.336" starttime="20201111 13:09:01.290"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:01.337" starttime="20201111 13:09:01.290"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:01.337" starttime="20201111 13:09:01.289"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:01.337" starttime="20201111 13:09:01.267"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:01.337" starttime="20201111 13:09:01.266"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:01.340" level="INFO">Running command 'ozone sh bucket link 46771-source/bucket1 46771-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:05.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:05.009" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:05.009" starttime="20201111 13:09:01.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:05.010" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:09:05.010" starttime="20201111 13:09:05.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:05.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:05.011" starttime="20201111 13:09:05.010"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:05.011" starttime="20201111 13:09:01.338"></status>
</kw>
<msg timestamp="20201111 13:09:05.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:05.012" starttime="20201111 13:09:01.338"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:05.012" starttime="20201111 13:09:01.337"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:05.017" level="INFO">Running command 'ozone sh bucket create 46771-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:09.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:09.046" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:09.046" starttime="20201111 13:09:05.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:09.048" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:09:09.048" starttime="20201111 13:09:09.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:09.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:09.049" starttime="20201111 13:09:09.048"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:09.049" starttime="20201111 13:09:05.013"></status>
</kw>
<msg timestamp="20201111 13:09:09.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:09.049" starttime="20201111 13:09:05.013"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:09.049" starttime="20201111 13:09:05.012"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:09.054" level="INFO">Running command 'ozone sh key put 46771-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:18.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:18.048" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:18.048" starttime="20201111 13:09:09.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:18.049" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:09:18.049" starttime="20201111 13:09:18.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:18.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:18.050" starttime="20201111 13:09:18.049"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:18.050" starttime="20201111 13:09:09.050"></status>
</kw>
<msg timestamp="20201111 13:09:18.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:18.050" starttime="20201111 13:09:09.050"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:18.051" starttime="20201111 13:09:09.049"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201111 13:09:18.053" level="INFO">${postfix} = 42601</msg>
<status status="PASS" endtime="20201111 13:09:18.053" starttime="20201111 13:09:18.052"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201111 13:09:18.053" level="INFO">${tmpfile} = /tmp/tempkey-42601</msg>
<status status="PASS" endtime="20201111 13:09:18.053" starttime="20201111 13:09:18.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:18.057" level="INFO">Running command 'ozone sh key get -f 46771-target/link1/key1 /tmp/tempkey-42601 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:24.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:24.076" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:24.076" starttime="20201111 13:09:18.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:24.077" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:09:24.077" starttime="20201111 13:09:24.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:24.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:24.078" starttime="20201111 13:09:24.077"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.078" starttime="20201111 13:09:18.054"></status>
</kw>
<msg timestamp="20201111 13:09:24.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:24.079" starttime="20201111 13:09:18.054"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.079" starttime="20201111 13:09:18.053"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201111 13:09:24.081" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-42601 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:24.084" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201111 13:09:24.084" starttime="20201111 13:09:24.079"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:24.089" level="INFO">Running command 'rm -f /tmp/tempkey-42601 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:24.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:24.090" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:09:24.090" starttime="20201111 13:09:24.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:24.091" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:09:24.091" starttime="20201111 13:09:24.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:24.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:24.092" starttime="20201111 13:09:24.092"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.093" starttime="20201111 13:09:24.085"></status>
</kw>
<msg timestamp="20201111 13:09:24.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:24.093" starttime="20201111 13:09:24.085"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.093" starttime="20201111 13:09:24.084"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:09:24.094" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201111 13:09:24.094" starttime="20201111 13:09:24.093"></status>
</kw>
<msg timestamp="20201111 13:09:24.094" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201111 13:09:24.094" starttime="20201111 13:09:18.051"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:09:24.095" starttime="20201111 13:09:24.094"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.095" starttime="20201111 13:09:18.051"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:09:24.095" critical="yes" starttime="20201111 13:09:01.265"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:24.101" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:24.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:24.103" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:09:24.103" starttime="20201111 13:09:24.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:24.104" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:09:24.104" starttime="20201111 13:09:24.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:24.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:24.105" starttime="20201111 13:09:24.104"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.105" starttime="20201111 13:09:24.098"></status>
</kw>
<msg timestamp="20201111 13:09:24.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:24.105" starttime="20201111 13:09:24.098"></status>
</kw>
<msg timestamp="20201111 13:09:24.106" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:09:24.106" starttime="20201111 13:09:24.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:09:24.106" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:09:24.107" starttime="20201111 13:09:24.106"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:24.111" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:24.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:24.122" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:09:24.122" starttime="20201111 13:09:24.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:24.122" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:09:24.123" starttime="20201111 13:09:24.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:24.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:24.123" starttime="20201111 13:09:24.123"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.124" starttime="20201111 13:09:24.108"></status>
</kw>
<msg timestamp="20201111 13:09:24.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:24.124" starttime="20201111 13:09:24.108"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.124" starttime="20201111 13:09:24.107"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.124" starttime="20201111 13:09:24.107"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.124" starttime="20201111 13:09:24.097"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:24.124" starttime="20201111 13:09:24.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:24.129" level="INFO">Running command 'ozone sh key put 46771-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:32.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:32.097" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:32.097" starttime="20201111 13:09:24.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:32.098" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:09:32.098" starttime="20201111 13:09:32.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:32.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:32.099" starttime="20201111 13:09:32.098"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:32.099" starttime="20201111 13:09:24.126"></status>
</kw>
<msg timestamp="20201111 13:09:32.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:32.099" starttime="20201111 13:09:24.125"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:32.100" starttime="20201111 13:09:24.124"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201111 13:09:32.102" level="INFO">${postfix} = 93443</msg>
<status status="PASS" endtime="20201111 13:09:32.102" starttime="20201111 13:09:32.101"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201111 13:09:32.102" level="INFO">${tmpfile} = /tmp/tempkey-93443</msg>
<status status="PASS" endtime="20201111 13:09:32.102" starttime="20201111 13:09:32.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:32.107" level="INFO">Running command 'ozone sh key get -f 46771-source/bucket1/key2 /tmp/tempkey-93443 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:37.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:37.178" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:37.178" starttime="20201111 13:09:32.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:37.179" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:09:37.180" starttime="20201111 13:09:37.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:37.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:37.180" starttime="20201111 13:09:37.180"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.181" starttime="20201111 13:09:32.103"></status>
</kw>
<msg timestamp="20201111 13:09:37.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:37.181" starttime="20201111 13:09:32.103"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.181" starttime="20201111 13:09:32.102"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201111 13:09:37.183" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-93443 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:37.186" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201111 13:09:37.186" starttime="20201111 13:09:37.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:37.190" level="INFO">Running command 'rm -f /tmp/tempkey-93443 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:37.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:37.193" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:09:37.193" starttime="20201111 13:09:37.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:37.194" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:09:37.194" starttime="20201111 13:09:37.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:37.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:37.194" starttime="20201111 13:09:37.194"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.195" starttime="20201111 13:09:37.187"></status>
</kw>
<msg timestamp="20201111 13:09:37.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:37.195" starttime="20201111 13:09:37.187"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.195" starttime="20201111 13:09:37.186"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:09:37.196" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201111 13:09:37.196" starttime="20201111 13:09:37.195"></status>
</kw>
<msg timestamp="20201111 13:09:37.196" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201111 13:09:37.196" starttime="20201111 13:09:32.101"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:09:37.197" starttime="20201111 13:09:37.196"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.197" starttime="20201111 13:09:32.100"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:09:37.197" critical="yes" starttime="20201111 13:09:24.096"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:37.203" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:37.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:37.206" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:09:37.206" starttime="20201111 13:09:37.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:37.207" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:09:37.207" starttime="20201111 13:09:37.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:37.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:37.207" starttime="20201111 13:09:37.207"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.208" starttime="20201111 13:09:37.201"></status>
</kw>
<msg timestamp="20201111 13:09:37.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:37.208" starttime="20201111 13:09:37.201"></status>
</kw>
<msg timestamp="20201111 13:09:37.208" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:09:37.208" starttime="20201111 13:09:37.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:09:37.209" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:09:37.209" starttime="20201111 13:09:37.208"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:37.214" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:37.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:37.231" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:09:37.231" starttime="20201111 13:09:37.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:37.232" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:09:37.232" starttime="20201111 13:09:37.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:37.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:37.233" starttime="20201111 13:09:37.232"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.233" starttime="20201111 13:09:37.210"></status>
</kw>
<msg timestamp="20201111 13:09:37.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:37.233" starttime="20201111 13:09:37.210"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.233" starttime="20201111 13:09:37.210"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.233" starttime="20201111 13:09:37.209"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.234" starttime="20201111 13:09:37.199"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:37.234" starttime="20201111 13:09:37.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:37.238" level="INFO">Running command 'ozone sh key list 46771-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:40.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:40.881" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201111 13:09:40.881" starttime="20201111 13:09:37.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:40.882" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201111 13:09:40.882" starttime="20201111 13:09:40.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:40.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:40.883" starttime="20201111 13:09:40.883"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:40.883" starttime="20201111 13:09:37.235"></status>
</kw>
<msg timestamp="20201111 13:09:40.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:40.884" starttime="20201111 13:09:37.234"></status>
</kw>
<msg timestamp="20201111 13:09:40.884" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201111 13:09:40.884" starttime="20201111 13:09:37.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:40.888" level="INFO">Running command 'ozone sh key list 46771-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:44.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:44.785" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201111 13:09:44.785" starttime="20201111 13:09:40.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:44.786" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201111 13:09:44.786" starttime="20201111 13:09:44.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:44.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:44.787" starttime="20201111 13:09:44.786"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:44.787" starttime="20201111 13:09:40.885"></status>
</kw>
<msg timestamp="20201111 13:09:44.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:44.787" starttime="20201111 13:09:40.885"></status>
</kw>
<msg timestamp="20201111 13:09:44.788" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201111 13:09:44.788" starttime="20201111 13:09:40.884"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:09:44.788" starttime="20201111 13:09:44.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201111 13:09:44.789" starttime="20201111 13:09:44.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201111 13:09:44.790" starttime="20201111 13:09:44.789"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:09:44.790" critical="yes" starttime="20201111 13:09:37.198"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:44.797" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:44.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:44.809" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:09:44.809" starttime="20201111 13:09:44.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:44.810" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:09:44.810" starttime="20201111 13:09:44.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:44.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:44.811" starttime="20201111 13:09:44.810"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:44.811" starttime="20201111 13:09:44.794"></status>
</kw>
<msg timestamp="20201111 13:09:44.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:44.812" starttime="20201111 13:09:44.794"></status>
</kw>
<msg timestamp="20201111 13:09:44.812" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:09:44.812" starttime="20201111 13:09:44.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:09:44.813" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:09:44.813" starttime="20201111 13:09:44.812"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:44.817" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:44.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:44.829" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:09:44.829" starttime="20201111 13:09:44.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:44.830" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:09:44.830" starttime="20201111 13:09:44.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:44.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:44.831" starttime="20201111 13:09:44.830"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:44.831" starttime="20201111 13:09:44.814"></status>
</kw>
<msg timestamp="20201111 13:09:44.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:44.831" starttime="20201111 13:09:44.814"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:44.832" starttime="20201111 13:09:44.814"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:44.832" starttime="20201111 13:09:44.813"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:44.832" starttime="20201111 13:09:44.793"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:44.832" starttime="20201111 13:09:44.792"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:44.836" level="INFO">Running command 'ozone sh key delete 46771-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:48.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:48.067" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:48.067" starttime="20201111 13:09:44.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:48.068" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:09:48.068" starttime="20201111 13:09:48.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:48.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:48.069" starttime="20201111 13:09:48.068"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:48.069" starttime="20201111 13:09:44.833"></status>
</kw>
<msg timestamp="20201111 13:09:48.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:48.070" starttime="20201111 13:09:44.833"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:48.070" starttime="20201111 13:09:44.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:48.081" level="INFO">Running command 'ozone sh key list 46771-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:51.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:51.805" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201111 13:09:51.805" starttime="20201111 13:09:48.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:51.806" level="INFO">key1</msg>
<status status="PASS" endtime="20201111 13:09:51.807" starttime="20201111 13:09:51.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:51.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:51.807" starttime="20201111 13:09:51.807"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:51.808" starttime="20201111 13:09:48.071"></status>
</kw>
<msg timestamp="20201111 13:09:51.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:51.808" starttime="20201111 13:09:48.071"></status>
</kw>
<msg timestamp="20201111 13:09:51.808" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201111 13:09:51.808" starttime="20201111 13:09:48.070"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201111 13:09:51.809" starttime="20201111 13:09:51.809"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:09:51.809" critical="yes" starttime="20201111 13:09:44.791"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:51.816" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:51.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:51.818" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:09:51.818" starttime="20201111 13:09:51.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:51.819" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:09:51.819" starttime="20201111 13:09:51.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:51.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:51.819" starttime="20201111 13:09:51.819"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:51.820" starttime="20201111 13:09:51.813"></status>
</kw>
<msg timestamp="20201111 13:09:51.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:51.820" starttime="20201111 13:09:51.813"></status>
</kw>
<msg timestamp="20201111 13:09:51.820" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:09:51.820" starttime="20201111 13:09:51.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:09:51.821" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:09:51.821" starttime="20201111 13:09:51.820"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:51.826" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:51.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:51.842" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:09:51.842" starttime="20201111 13:09:51.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:51.843" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:09:51.843" starttime="20201111 13:09:51.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:51.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:51.844" starttime="20201111 13:09:51.843"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:51.844" starttime="20201111 13:09:51.822"></status>
</kw>
<msg timestamp="20201111 13:09:51.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:51.844" starttime="20201111 13:09:51.822"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:51.844" starttime="20201111 13:09:51.822"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:51.844" starttime="20201111 13:09:51.821"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:51.845" starttime="20201111 13:09:51.812"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:51.845" starttime="20201111 13:09:51.811"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:51.848" level="INFO">Running command 'ozone sh bucket list 46771-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:55.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:55.470" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:55.470" starttime="20201111 13:09:51.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:55.472" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:08:57.435Z",
  "modificationTime" : "2020-11-11T13:08:57.435Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:08:35.582Z",
  "modificationTime" : "2020-11-11T13:08:53.901Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:09:04.889Z",
  "modificationTime" : "2020-11-11T13:09:04.889Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:08:28.468Z",
  "modificationTime" : "2020-11-11T13:08:50.347Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:08:32.045Z",
  "modificationTime" : "2020-11-11T13:08:32.045Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201111 13:09:55.472" starttime="20201111 13:09:55.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:55.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:55.472" starttime="20201111 13:09:55.472"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:55.473" starttime="20201111 13:09:51.846"></status>
</kw>
<msg timestamp="20201111 13:09:55.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:55.473" starttime="20201111 13:09:51.845"></status>
</kw>
<msg timestamp="20201111 13:09:55.473" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:09:55.473" starttime="20201111 13:09:51.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201111 13:09:55.474" starttime="20201111 13:09:55.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201111 13:09:55.475" starttime="20201111 13:09:55.474"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:09:55.475" critical="yes" starttime="20201111 13:09:51.811"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:55.481" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:55.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:55.484" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:09:55.484" starttime="20201111 13:09:55.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:55.485" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:09:55.485" starttime="20201111 13:09:55.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:55.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:55.486" starttime="20201111 13:09:55.485"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:55.486" starttime="20201111 13:09:55.478"></status>
</kw>
<msg timestamp="20201111 13:09:55.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:55.486" starttime="20201111 13:09:55.478"></status>
</kw>
<msg timestamp="20201111 13:09:55.487" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:09:55.487" starttime="20201111 13:09:55.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:09:55.487" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:09:55.488" starttime="20201111 13:09:55.487"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:55.492" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:55.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:55.505" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:09:55.505" starttime="20201111 13:09:55.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:55.506" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:09:55.506" starttime="20201111 13:09:55.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:55.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:55.506" starttime="20201111 13:09:55.506"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:55.507" starttime="20201111 13:09:55.489"></status>
</kw>
<msg timestamp="20201111 13:09:55.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:55.507" starttime="20201111 13:09:55.489"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:55.507" starttime="20201111 13:09:55.488"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:55.507" starttime="20201111 13:09:55.488"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:55.507" starttime="20201111 13:09:55.477"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:55.507" starttime="20201111 13:09:55.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:55.512" level="INFO">Running command 'ozone sh bucket info 46771-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:59.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:59.062" level="INFO">${output} = 46771-source bucket1</msg>
<status status="PASS" endtime="20201111 13:09:59.062" starttime="20201111 13:09:55.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:59.063" level="INFO">46771-source bucket1</msg>
<status status="PASS" endtime="20201111 13:09:59.063" starttime="20201111 13:09:59.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:59.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:59.064" starttime="20201111 13:09:59.063"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:59.064" starttime="20201111 13:09:55.509"></status>
</kw>
<msg timestamp="20201111 13:09:59.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:59.064" starttime="20201111 13:09:55.508"></status>
</kw>
<msg timestamp="20201111 13:09:59.064" level="INFO">${result} = 46771-source bucket1</msg>
<status status="PASS" endtime="20201111 13:09:59.064" starttime="20201111 13:09:55.508"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201111 13:09:59.065" starttime="20201111 13:09:59.065"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:09:59.065" critical="yes" starttime="20201111 13:09:55.476"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:59.075" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:59.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:59.079" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:09:59.079" starttime="20201111 13:09:59.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:59.080" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:09:59.080" starttime="20201111 13:09:59.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:59.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:59.080" starttime="20201111 13:09:59.080"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:59.081" starttime="20201111 13:09:59.071"></status>
</kw>
<msg timestamp="20201111 13:09:59.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:59.081" starttime="20201111 13:09:59.071"></status>
</kw>
<msg timestamp="20201111 13:09:59.081" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:09:59.081" starttime="20201111 13:09:59.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:09:59.082" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:09:59.082" starttime="20201111 13:09:59.082"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:59.086" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:09:59.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:09:59.101" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:09:59.101" starttime="20201111 13:09:59.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:09:59.102" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:09:59.102" starttime="20201111 13:09:59.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:09:59.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:09:59.103" starttime="20201111 13:09:59.102"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:59.103" starttime="20201111 13:09:59.084"></status>
</kw>
<msg timestamp="20201111 13:09:59.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:09:59.103" starttime="20201111 13:09:59.083"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:59.104" starttime="20201111 13:09:59.083"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:59.104" starttime="20201111 13:09:59.082"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:59.104" starttime="20201111 13:09:59.070"></status>
</kw>
<status status="PASS" endtime="20201111 13:09:59.104" starttime="20201111 13:09:59.070"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:09:59.108" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 46771-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:02.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:02.676" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:02.676" starttime="20201111 13:09:59.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:02.677" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201111 13:10:02.677" starttime="20201111 13:10:02.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:02.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:02.678" starttime="20201111 13:10:02.677"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:02.678" starttime="20201111 13:09:59.105"></status>
</kw>
<msg timestamp="20201111 13:10:02.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:02.679" starttime="20201111 13:09:59.105"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:02.679" starttime="20201111 13:09:59.104"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:02.684" level="INFO">Running command 'ozone sh bucket getacl 46771-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:06.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:06.434" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201111 13:10:06.434" starttime="20201111 13:10:02.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:06.435" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201111 13:10:06.435" starttime="20201111 13:10:06.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:06.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:06.436" starttime="20201111 13:10:06.435"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:06.436" starttime="20201111 13:10:02.681"></status>
</kw>
<msg timestamp="20201111 13:10:06.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:06.436" starttime="20201111 13:10:02.681"></status>
</kw>
<msg timestamp="20201111 13:10:06.437" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201111 13:10:06.437" starttime="20201111 13:10:02.680"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:06.437" starttime="20201111 13:10:06.437"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:06.438" starttime="20201111 13:10:02.679"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:06.442" level="INFO">Running command 'ozone sh bucket getacl 46771-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:09.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:09.897" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:09.897" starttime="20201111 13:10:06.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:09.898" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:09.898" starttime="20201111 13:10:09.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:09.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:09.899" starttime="20201111 13:10:09.898"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:09.899" starttime="20201111 13:10:06.440"></status>
</kw>
<msg timestamp="20201111 13:10:09.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:09.899" starttime="20201111 13:10:06.439"></status>
</kw>
<msg timestamp="20201111 13:10:09.900" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201111 13:10:09.900" starttime="20201111 13:10:06.439"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:09.901" starttime="20201111 13:10:09.900"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:09.901" starttime="20201111 13:10:06.438"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:09.904" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 46771-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:13.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:13.560" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:13.560" starttime="20201111 13:10:09.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:13.562" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201111 13:10:13.562" starttime="20201111 13:10:13.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:13.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:13.562" starttime="20201111 13:10:13.562"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:13.563" starttime="20201111 13:10:09.902"></status>
</kw>
<msg timestamp="20201111 13:10:13.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:13.563" starttime="20201111 13:10:09.902"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:13.563" starttime="20201111 13:10:09.901"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:13.568" level="INFO">Running command 'ozone sh bucket getacl 46771-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:17.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:17.544" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:17.544" starttime="20201111 13:10:13.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:17.546" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:17.546" starttime="20201111 13:10:17.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:17.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:17.546" starttime="20201111 13:10:17.546"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:17.547" starttime="20201111 13:10:13.565"></status>
</kw>
<msg timestamp="20201111 13:10:17.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:17.547" starttime="20201111 13:10:13.565"></status>
</kw>
<msg timestamp="20201111 13:10:17.547" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201111 13:10:17.547" starttime="20201111 13:10:13.564"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:17.548" starttime="20201111 13:10:17.547"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:17.548" starttime="20201111 13:10:13.563"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:17.553" level="INFO">Running command 'ozone sh bucket getacl 46771-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:21.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:21.570" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201111 13:10:21.570" starttime="20201111 13:10:17.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:21.571" level="INFO">READ</msg>
<status status="PASS" endtime="20201111 13:10:21.571" starttime="20201111 13:10:21.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:21.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:21.572" starttime="20201111 13:10:21.572"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:21.572" starttime="20201111 13:10:17.550"></status>
</kw>
<msg timestamp="20201111 13:10:21.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:21.573" starttime="20201111 13:10:17.550"></status>
</kw>
<msg timestamp="20201111 13:10:21.573" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201111 13:10:21.573" starttime="20201111 13:10:17.549"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:21.574" starttime="20201111 13:10:21.573"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:21.574" starttime="20201111 13:10:17.548"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:10:21.574" critical="yes" starttime="20201111 13:09:59.068"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:21.581" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:21.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:21.583" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:10:21.583" starttime="20201111 13:10:21.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:21.583" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:10:21.583" starttime="20201111 13:10:21.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:21.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:21.584" starttime="20201111 13:10:21.584"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:21.585" starttime="20201111 13:10:21.578"></status>
</kw>
<msg timestamp="20201111 13:10:21.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:21.585" starttime="20201111 13:10:21.577"></status>
</kw>
<msg timestamp="20201111 13:10:21.585" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:10:21.585" starttime="20201111 13:10:21.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:10:21.586" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:10:21.586" starttime="20201111 13:10:21.585"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:21.591" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:21.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:21.606" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:21.606" starttime="20201111 13:10:21.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:21.607" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:21.607" starttime="20201111 13:10:21.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:21.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:21.608" starttime="20201111 13:10:21.608"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:21.608" starttime="20201111 13:10:21.587"></status>
</kw>
<msg timestamp="20201111 13:10:21.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:21.609" starttime="20201111 13:10:21.587"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:21.609" starttime="20201111 13:10:21.586"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:21.609" starttime="20201111 13:10:21.586"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:21.609" starttime="20201111 13:10:21.576"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:21.609" starttime="20201111 13:10:21.576"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:21.613" level="INFO">Running command 'ozone sh bucket link 46771-source/bucket2 46771-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:25.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:25.346" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:25.347" starttime="20201111 13:10:21.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:25.348" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:10:25.348" starttime="20201111 13:10:25.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:25.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:25.348" starttime="20201111 13:10:25.348"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:25.349" starttime="20201111 13:10:21.610"></status>
</kw>
<msg timestamp="20201111 13:10:25.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:25.349" starttime="20201111 13:10:21.610"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:25.349" starttime="20201111 13:10:21.609"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:25.353" level="INFO">Running command 'ozone sh bucket create 46771-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:29.390" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 13:10:29.390" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:29.390" starttime="20201111 13:10:25.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:29.391" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201111 13:10:29.391" starttime="20201111 13:10:29.390"></status>
</kw>
<msg timestamp="20201111 13:10:29.392" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:29.392" starttime="20201111 13:10:25.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:29.392" starttime="20201111 13:10:29.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:29.396" level="INFO">Running command 'ozone sh bucket create 46771-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:33.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:33.761" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:33.762" starttime="20201111 13:10:29.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:33.763" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:10:33.763" starttime="20201111 13:10:33.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:33.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:33.763" starttime="20201111 13:10:33.763"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:33.764" starttime="20201111 13:10:29.393"></status>
</kw>
<msg timestamp="20201111 13:10:33.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:33.764" starttime="20201111 13:10:29.393"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:33.764" starttime="20201111 13:10:29.392"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:33.767" level="INFO">Running command 'ozone sh bucket link 46771-source/bucket1 46771-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:37.230" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 13:10:37.230" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:37.231" starttime="20201111 13:10:33.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.232" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201111 13:10:37.232" starttime="20201111 13:10:37.231"></status>
</kw>
<msg timestamp="20201111 13:10:37.232" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:37.232" starttime="20201111 13:10:33.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:37.233" starttime="20201111 13:10:37.232"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:10:37.233" critical="yes" starttime="20201111 13:10:21.575"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:37.239" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:37.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:37.242" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:10:37.242" starttime="20201111 13:10:37.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.243" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:10:37.243" starttime="20201111 13:10:37.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:37.243" starttime="20201111 13:10:37.243"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.244" starttime="20201111 13:10:37.237"></status>
</kw>
<msg timestamp="20201111 13:10:37.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:37.244" starttime="20201111 13:10:37.237"></status>
</kw>
<msg timestamp="20201111 13:10:37.244" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:10:37.244" starttime="20201111 13:10:37.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:10:37.245" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:10:37.245" starttime="20201111 13:10:37.244"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:37.251" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:37.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:37.261" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:37.261" starttime="20201111 13:10:37.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.262" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:37.262" starttime="20201111 13:10:37.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:37.263" starttime="20201111 13:10:37.263"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.263" starttime="20201111 13:10:37.247"></status>
</kw>
<msg timestamp="20201111 13:10:37.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:37.264" starttime="20201111 13:10:37.247"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.264" starttime="20201111 13:10:37.246"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.264" starttime="20201111 13:10:37.245"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.264" starttime="20201111 13:10:37.235"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.264" starttime="20201111 13:10:37.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:37.270" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:37.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:37.272" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:37.272" starttime="20201111 13:10:37.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.273" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:37.273" starttime="20201111 13:10:37.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:37.274" starttime="20201111 13:10:37.273"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.274" starttime="20201111 13:10:37.267"></status>
</kw>
<msg timestamp="20201111 13:10:37.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:37.274" starttime="20201111 13:10:37.266"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.275" starttime="20201111 13:10:37.266"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:37.282" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:37.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:37.283" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:10:37.283" starttime="20201111 13:10:37.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.284" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:10:37.284" starttime="20201111 13:10:37.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:37.285" starttime="20201111 13:10:37.284"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.285" starttime="20201111 13:10:37.276"></status>
</kw>
<msg timestamp="20201111 13:10:37.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:37.285" starttime="20201111 13:10:37.276"></status>
</kw>
<msg timestamp="20201111 13:10:37.286" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:10:37.286" starttime="20201111 13:10:37.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:10:37.286" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:10:37.286" starttime="20201111 13:10:37.286"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:37.291" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:37.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:37.300" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:37.300" starttime="20201111 13:10:37.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.301" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:37.301" starttime="20201111 13:10:37.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:37.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:37.302" starttime="20201111 13:10:37.301"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.303" starttime="20201111 13:10:37.288"></status>
</kw>
<msg timestamp="20201111 13:10:37.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:37.303" starttime="20201111 13:10:37.288"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.303" starttime="20201111 13:10:37.287"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.303" starttime="20201111 13:10:37.287"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.303" starttime="20201111 13:10:37.275"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:37.303" starttime="20201111 13:10:37.275"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:37.307" level="INFO">Running command 'ozone sh key list 46771-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:41.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:41.852" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:41.852" starttime="20201111 13:10:37.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.853" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "46771-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-11T13:08:16.946Z",
  "modificationTime" : "2020-11-11T13:08:21.077Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201111 13:10:41.853" starttime="20201111 13:10:41.852"></status>
</kw>
<msg timestamp="20201111 13:10:41.853" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:41.853" starttime="20201111 13:10:37.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:41.854" starttime="20201111 13:10:41.854"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.854" starttime="20201111 13:10:37.265"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.854" starttime="20201111 13:10:37.265"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:10:41.855" critical="yes" starttime="20201111 13:10:37.234"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:41.861" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:41.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:41.863" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:10:41.863" starttime="20201111 13:10:41.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.864" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:10:41.864" starttime="20201111 13:10:41.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:41.865" starttime="20201111 13:10:41.864"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.865" starttime="20201111 13:10:41.858"></status>
</kw>
<msg timestamp="20201111 13:10:41.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:41.865" starttime="20201111 13:10:41.858"></status>
</kw>
<msg timestamp="20201111 13:10:41.865" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:10:41.865" starttime="20201111 13:10:41.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:10:41.866" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:10:41.866" starttime="20201111 13:10:41.865"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:41.871" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:41.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:41.888" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:41.888" starttime="20201111 13:10:41.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.889" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:41.889" starttime="20201111 13:10:41.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:41.890" starttime="20201111 13:10:41.889"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.890" starttime="20201111 13:10:41.867"></status>
</kw>
<msg timestamp="20201111 13:10:41.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:41.890" starttime="20201111 13:10:41.867"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.890" starttime="20201111 13:10:41.867"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.890" starttime="20201111 13:10:41.866"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.891" starttime="20201111 13:10:41.857"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.891" starttime="20201111 13:10:41.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:41.896" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:41.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:41.898" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:41.898" starttime="20201111 13:10:41.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.899" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:41.899" starttime="20201111 13:10:41.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:41.900" starttime="20201111 13:10:41.899"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.900" starttime="20201111 13:10:41.893"></status>
</kw>
<msg timestamp="20201111 13:10:41.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:41.900" starttime="20201111 13:10:41.892"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.901" starttime="20201111 13:10:41.892"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:41.906" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:41.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:41.907" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:10:41.907" starttime="20201111 13:10:41.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.908" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:10:41.908" starttime="20201111 13:10:41.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:41.909" starttime="20201111 13:10:41.908"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.909" starttime="20201111 13:10:41.903"></status>
</kw>
<msg timestamp="20201111 13:10:41.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:41.909" starttime="20201111 13:10:41.902"></status>
</kw>
<msg timestamp="20201111 13:10:41.909" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:10:41.909" starttime="20201111 13:10:41.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:10:41.910" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:10:41.910" starttime="20201111 13:10:41.910"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:41.915" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:41.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:41.927" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:41.927" starttime="20201111 13:10:41.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.928" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:41.929" starttime="20201111 13:10:41.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:41.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:41.929" starttime="20201111 13:10:41.929"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.929" starttime="20201111 13:10:41.911"></status>
</kw>
<msg timestamp="20201111 13:10:41.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:41.930" starttime="20201111 13:10:41.911"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.930" starttime="20201111 13:10:41.911"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.930" starttime="20201111 13:10:41.910"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.930" starttime="20201111 13:10:41.902"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:41.930" starttime="20201111 13:10:41.901"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:41.934" level="INFO">Running command 'ozone sh key list 46771-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:45.626" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 13:10:45.626" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:45.626" starttime="20201111 13:10:41.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.627" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201111 13:10:45.627" starttime="20201111 13:10:45.626"></status>
</kw>
<msg timestamp="20201111 13:10:45.627" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:45.627" starttime="20201111 13:10:41.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:45.628" starttime="20201111 13:10:45.627"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.628" starttime="20201111 13:10:41.891"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.628" starttime="20201111 13:10:41.891"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:10:45.628" critical="yes" starttime="20201111 13:10:41.855"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:45.636" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:45.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:45.639" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:10:45.639" starttime="20201111 13:10:45.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.640" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:10:45.640" starttime="20201111 13:10:45.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:45.641" starttime="20201111 13:10:45.640"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.641" starttime="20201111 13:10:45.633"></status>
</kw>
<msg timestamp="20201111 13:10:45.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:45.641" starttime="20201111 13:10:45.633"></status>
</kw>
<msg timestamp="20201111 13:10:45.642" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:10:45.642" starttime="20201111 13:10:45.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:10:45.642" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:10:45.642" starttime="20201111 13:10:45.642"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:45.647" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:45.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:45.668" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:45.668" starttime="20201111 13:10:45.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.669" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:45.669" starttime="20201111 13:10:45.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:45.670" starttime="20201111 13:10:45.669"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.670" starttime="20201111 13:10:45.644"></status>
</kw>
<msg timestamp="20201111 13:10:45.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:45.670" starttime="20201111 13:10:45.644"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.670" starttime="20201111 13:10:45.643"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.670" starttime="20201111 13:10:45.643"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.671" starttime="20201111 13:10:45.632"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.671" starttime="20201111 13:10:45.632"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:45.676" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:45.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:45.678" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:45.678" starttime="20201111 13:10:45.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.679" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:45.679" starttime="20201111 13:10:45.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:45.680" starttime="20201111 13:10:45.679"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.680" starttime="20201111 13:10:45.673"></status>
</kw>
<msg timestamp="20201111 13:10:45.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:45.680" starttime="20201111 13:10:45.672"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.681" starttime="20201111 13:10:45.672"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:45.685" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:45.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:45.687" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:10:45.687" starttime="20201111 13:10:45.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.687" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:10:45.688" starttime="20201111 13:10:45.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:45.688" starttime="20201111 13:10:45.688"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.689" starttime="20201111 13:10:45.682"></status>
</kw>
<msg timestamp="20201111 13:10:45.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:45.689" starttime="20201111 13:10:45.682"></status>
</kw>
<msg timestamp="20201111 13:10:45.689" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:10:45.689" starttime="20201111 13:10:45.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:10:45.690" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:10:45.690" starttime="20201111 13:10:45.689"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:45.694" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:45.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:45.704" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:45.705" starttime="20201111 13:10:45.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.705" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:45.705" starttime="20201111 13:10:45.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:45.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:45.706" starttime="20201111 13:10:45.706"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.706" starttime="20201111 13:10:45.691"></status>
</kw>
<msg timestamp="20201111 13:10:45.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:45.707" starttime="20201111 13:10:45.691"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.707" starttime="20201111 13:10:45.690"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.707" starttime="20201111 13:10:45.690"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.707" starttime="20201111 13:10:45.681"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:45.707" starttime="20201111 13:10:45.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:45.712" level="INFO">Running command 'ozone sh bucket info 46771-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:49.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:49.468" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:49.469" starttime="20201111 13:10:45.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:49.470" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:08:35.582Z",
  "modificationTime" : "2020-11-11T13:08:53.901Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201111 13:10:49.470" starttime="20201111 13:10:49.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:49.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:49.471" starttime="20201111 13:10:49.470"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:49.471" starttime="20201111 13:10:45.708"></status>
</kw>
<msg timestamp="20201111 13:10:49.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:49.471" starttime="20201111 13:10:45.708"></status>
</kw>
<msg timestamp="20201111 13:10:49.472" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:49.472" starttime="20201111 13:10:45.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:49.472" starttime="20201111 13:10:49.472"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:49.473" starttime="20201111 13:10:49.472"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:49.476" level="INFO">Running command 'ozone sh key list 46771-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:52.828" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 13:10:52.828" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:52.828" starttime="20201111 13:10:49.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:52.829" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201111 13:10:52.829" starttime="20201111 13:10:52.828"></status>
</kw>
<msg timestamp="20201111 13:10:52.830" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:52.830" starttime="20201111 13:10:49.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201111 13:10:52.830" starttime="20201111 13:10:52.830"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:52.830" starttime="20201111 13:10:45.671"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:52.831" starttime="20201111 13:10:45.671"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:10:52.831" critical="yes" starttime="20201111 13:10:45.630"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:52.836" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:52.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:52.838" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:10:52.838" starttime="20201111 13:10:52.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:52.840" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:10:52.840" starttime="20201111 13:10:52.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:52.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:52.841" starttime="20201111 13:10:52.840"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:52.841" starttime="20201111 13:10:52.834"></status>
</kw>
<msg timestamp="20201111 13:10:52.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:52.841" starttime="20201111 13:10:52.834"></status>
</kw>
<msg timestamp="20201111 13:10:52.841" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:10:52.842" starttime="20201111 13:10:52.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:10:52.842" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:10:52.842" starttime="20201111 13:10:52.842"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:52.847" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:52.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:52.857" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:10:52.857" starttime="20201111 13:10:52.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:52.858" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:10:52.858" starttime="20201111 13:10:52.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:52.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:52.858" starttime="20201111 13:10:52.858"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:52.859" starttime="20201111 13:10:52.844"></status>
</kw>
<msg timestamp="20201111 13:10:52.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:52.859" starttime="20201111 13:10:52.843"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:52.859" starttime="20201111 13:10:52.843"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:52.859" starttime="20201111 13:10:52.842"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:52.859" starttime="20201111 13:10:52.833"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:52.860" starttime="20201111 13:10:52.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:52.864" level="INFO">Running command 'ozone sh bucket link 46771-target/loop1 46771-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:56.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:56.464" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:56.464" starttime="20201111 13:10:52.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:56.466" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:10:56.466" starttime="20201111 13:10:56.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:56.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:56.467" starttime="20201111 13:10:56.466"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:56.467" starttime="20201111 13:10:52.861"></status>
</kw>
<msg timestamp="20201111 13:10:56.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:56.467" starttime="20201111 13:10:52.860"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:56.467" starttime="20201111 13:10:52.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:56.471" level="INFO">Running command 'ozone sh bucket link 46771-target/loop2 46771-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:10:59.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:10:59.862" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:10:59.862" starttime="20201111 13:10:56.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:10:59.864" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:10:59.864" starttime="20201111 13:10:59.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:10:59.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:10:59.865" starttime="20201111 13:10:59.864"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:59.865" starttime="20201111 13:10:56.468"></status>
</kw>
<msg timestamp="20201111 13:10:59.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:10:59.865" starttime="20201111 13:10:56.468"></status>
</kw>
<status status="PASS" endtime="20201111 13:10:59.865" starttime="20201111 13:10:56.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:10:59.869" level="INFO">Running command 'ozone sh bucket link 46771-target/loop3 46771-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:03.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:03.208" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:11:03.208" starttime="20201111 13:10:59.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:03.209" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:11:03.209" starttime="20201111 13:11:03.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:03.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:03.210" starttime="20201111 13:11:03.209"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:03.210" starttime="20201111 13:10:59.866"></status>
</kw>
<msg timestamp="20201111 13:11:03.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:03.210" starttime="20201111 13:10:59.866"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:03.211" starttime="20201111 13:10:59.865"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:03.213" level="INFO">Running command 'ozone sh key list 46771-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:06.426" level="INFO">${rc} = 255</msg>
<msg timestamp="20201111 13:11:06.427" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:11:06.427" starttime="20201111 13:11:03.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:06.428" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201111 13:11:06.428" starttime="20201111 13:11:06.427"></status>
</kw>
<msg timestamp="20201111 13:11:06.428" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:11:06.428" starttime="20201111 13:11:03.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201111 13:11:06.429" starttime="20201111 13:11:06.428"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:11:06.429" critical="yes" starttime="20201111 13:10:52.831"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:06.436" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:06.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:06.438" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:11:06.438" starttime="20201111 13:11:06.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:06.439" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:11:06.439" starttime="20201111 13:11:06.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:06.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:06.440" starttime="20201111 13:11:06.439"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:06.440" starttime="20201111 13:11:06.433"></status>
</kw>
<msg timestamp="20201111 13:11:06.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:06.440" starttime="20201111 13:11:06.432"></status>
</kw>
<msg timestamp="20201111 13:11:06.441" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:11:06.441" starttime="20201111 13:11:06.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:11:06.441" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:11:06.442" starttime="20201111 13:11:06.441"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:06.446" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:06.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:06.476" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:11:06.476" starttime="20201111 13:11:06.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:06.477" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:11:06.477" starttime="20201111 13:11:06.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:06.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:06.478" starttime="20201111 13:11:06.477"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:06.478" starttime="20201111 13:11:06.443"></status>
</kw>
<msg timestamp="20201111 13:11:06.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:06.478" starttime="20201111 13:11:06.443"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:06.478" starttime="20201111 13:11:06.442"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:06.478" starttime="20201111 13:11:06.442"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:06.479" starttime="20201111 13:11:06.431"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:06.479" starttime="20201111 13:11:06.431"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:06.482" level="INFO">Running command 'ozone sh bucket link 46771-source/bucket1 46771-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:09.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:09.856" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:11:09.856" starttime="20201111 13:11:06.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:09.857" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:11:09.858" starttime="20201111 13:11:09.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:09.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:09.858" starttime="20201111 13:11:09.858"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:09.859" starttime="20201111 13:11:06.480"></status>
</kw>
<msg timestamp="20201111 13:11:09.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:09.859" starttime="20201111 13:11:06.479"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:09.859" starttime="20201111 13:11:06.479"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:09.865" level="INFO">Running command 'ozone sh key put 46771-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:17.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:17.977" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:11:17.977" starttime="20201111 13:11:09.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:17.978" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:11:17.978" starttime="20201111 13:11:17.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:17.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:17.979" starttime="20201111 13:11:17.979"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:17.980" starttime="20201111 13:11:09.861"></status>
</kw>
<msg timestamp="20201111 13:11:17.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:17.980" starttime="20201111 13:11:09.860"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:17.980" starttime="20201111 13:11:09.860"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201111 13:11:17.982" level="INFO">${postfix} = 75010</msg>
<status status="PASS" endtime="20201111 13:11:17.982" starttime="20201111 13:11:17.982"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201111 13:11:17.983" level="INFO">${tmpfile} = /tmp/tempkey-75010</msg>
<status status="PASS" endtime="20201111 13:11:17.983" starttime="20201111 13:11:17.982"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:17.986" level="INFO">Running command 'ozone sh key get -f 46771-target/link1/key3 /tmp/tempkey-75010 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:23.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:23.090" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:11:23.090" starttime="20201111 13:11:17.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:23.092" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:11:23.092" starttime="20201111 13:11:23.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:23.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:23.092" starttime="20201111 13:11:23.092"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.093" starttime="20201111 13:11:17.984"></status>
</kw>
<msg timestamp="20201111 13:11:23.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:23.093" starttime="20201111 13:11:17.983"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.093" starttime="20201111 13:11:17.983"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201111 13:11:23.096" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-75010 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:23.098" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201111 13:11:23.098" starttime="20201111 13:11:23.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:23.105" level="INFO">Running command 'rm -f /tmp/tempkey-75010 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:23.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:23.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:11:23.106" starttime="20201111 13:11:23.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:23.107" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:11:23.107" starttime="20201111 13:11:23.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:23.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:23.108" starttime="20201111 13:11:23.108"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.109" starttime="20201111 13:11:23.100"></status>
</kw>
<msg timestamp="20201111 13:11:23.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:23.109" starttime="20201111 13:11:23.099"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.109" starttime="20201111 13:11:23.098"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201111 13:11:23.110" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201111 13:11:23.110" starttime="20201111 13:11:23.109"></status>
</kw>
<msg timestamp="20201111 13:11:23.110" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201111 13:11:23.110" starttime="20201111 13:11:17.981"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201111 13:11:23.111" starttime="20201111 13:11:23.111"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.111" starttime="20201111 13:11:17.980"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:11:23.112" critical="yes" starttime="20201111 13:11:06.430"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:23.117" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:23.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:23.121" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201111 13:11:23.121" starttime="20201111 13:11:23.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:23.122" level="INFO">scm</msg>
<status status="PASS" endtime="20201111 13:11:23.122" starttime="20201111 13:11:23.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:23.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:23.123" starttime="20201111 13:11:23.122"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.123" starttime="20201111 13:11:23.115"></status>
</kw>
<msg timestamp="20201111 13:11:23.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:23.124" starttime="20201111 13:11:23.115"></status>
</kw>
<msg timestamp="20201111 13:11:23.124" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201111 13:11:23.124" starttime="20201111 13:11:23.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201111 13:11:23.125" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201111 13:11:23.125" starttime="20201111 13:11:23.124"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:23.128" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:23.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:23.152" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201111 13:11:23.152" starttime="20201111 13:11:23.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:23.153" level="INFO"></msg>
<status status="PASS" endtime="20201111 13:11:23.153" starttime="20201111 13:11:23.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:23.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:23.154" starttime="20201111 13:11:23.154"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.155" starttime="20201111 13:11:23.126"></status>
</kw>
<msg timestamp="20201111 13:11:23.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:23.155" starttime="20201111 13:11:23.126"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.155" starttime="20201111 13:11:23.125"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.155" starttime="20201111 13:11:23.125"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.155" starttime="20201111 13:11:23.114"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:23.156" starttime="20201111 13:11:23.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:23.159" level="INFO">Running command 'ozone sh bucket delete 46771-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:26.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:26.689" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:11:26.690" starttime="20201111 13:11:23.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:26.691" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201111 13:11:26.691" starttime="20201111 13:11:26.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:26.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:26.691" starttime="20201111 13:11:26.691"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:26.692" starttime="20201111 13:11:23.157"></status>
</kw>
<msg timestamp="20201111 13:11:26.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:26.692" starttime="20201111 13:11:23.157"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:26.692" starttime="20201111 13:11:23.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:26.697" level="INFO">Running command 'ozone sh bucket list 46771-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:30.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:30.374" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:11:30.374" starttime="20201111 13:11:26.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:30.375" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:10:33.670Z",
  "modificationTime" : "2020-11-11T13:10:33.670Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:08:57.435Z",
  "modificationTime" : "2020-11-11T13:08:57.435Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:08:35.582Z",
  "modificationTime" : "2020-11-11T13:08:53.901Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:10:25.258Z",
  "modificationTime" : "2020-11-11T13:10:25.258Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:11:09.746Z",
  "modificationTime" : "2020-11-11T13:11:09.746Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:11:03.026Z",
  "modificationTime" : "2020-11-11T13:11:03.026Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:10:56.179Z",
  "modificationTime" : "2020-11-11T13:10:56.179Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:10:59.746Z",
  "modificationTime" : "2020-11-11T13:10:59.746Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:08:28.468Z",
  "modificationTime" : "2020-11-11T13:08:50.347Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "46771-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-11T13:08:32.045Z",
  "modificationTime" : "2020-11-11T13:08:32.045Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "46771-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201111 13:11:30.375" starttime="20201111 13:11:30.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:30.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:30.376" starttime="20201111 13:11:30.376"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:30.376" starttime="20201111 13:11:26.693"></status>
</kw>
<msg timestamp="20201111 13:11:30.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:30.377" starttime="20201111 13:11:26.693"></status>
</kw>
<msg timestamp="20201111 13:11:30.377" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201111 13:11:30.377" starttime="20201111 13:11:26.692"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201111 13:11:30.378" starttime="20201111 13:11:30.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201111 13:11:30.381" level="INFO">Running command 'ozone sh key list 46771-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201111 13:11:34.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20201111 13:11:34.296" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201111 13:11:34.297" starttime="20201111 13:11:30.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201111 13:11:34.298" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201111 13:11:34.298" starttime="20201111 13:11:34.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201111 13:11:34.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201111 13:11:34.298" starttime="20201111 13:11:34.298"></status>
</kw>
<status status="PASS" endtime="20201111 13:11:34.299" starttime="20201111 13:11:30.379"></status>
</kw>
<msg timestamp="20201111 13:11:34.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201111 13:11:34.299" starttime="20201111 13:11:30.378"></status>
</kw>
<msg timestamp="20201111 13:11:34.299" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201111 13:11:34.299" starttime="20201111 13:11:30.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201111 13:11:34.300" starttime="20201111 13:11:34.299"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201111 13:11:34.300" critical="yes" starttime="20201111 13:11:23.112"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201111 13:11:34.303" starttime="20201111 13:08:02.148"></status>
</suite>
<status status="PASS" elapsedtime="242890" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
