<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201112 22:07:46.837" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:11.011" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:13.106" level="INFO">${rc} = 255</msg>
<msg timestamp="20201112 21:55:13.106" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201112 21:55:13.106" starttime="20201112 21:55:11.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:13.107" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201112 21:55:13.108" starttime="20201112 21:55:13.107"></status>
</kw>
<msg timestamp="20201112 21:55:13.108" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201112 21:55:13.108" starttime="20201112 21:55:11.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:13.113" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:14.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:14.923" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:55:14.924" starttime="20201112 21:55:13.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:14.925" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:55:14.925" starttime="20201112 21:55:14.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:14.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:14.926" starttime="20201112 21:55:14.925"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:14.926" starttime="20201112 21:55:13.110"></status>
</kw>
<msg timestamp="20201112 21:55:14.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:14.926" starttime="20201112 21:55:13.110"></status>
</kw>
<msg timestamp="20201112 21:55:14.927" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201112 21:55:14.927" starttime="20201112 21:55:13.109"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201112 21:55:14.927" starttime="20201112 21:55:14.927"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:14.927" starttime="20201112 21:55:13.109"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:14.927" starttime="20201112 21:55:13.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:14.932" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:16.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:16.793" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:55:16.793" starttime="20201112 21:55:14.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:16.794" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:55:16.794" starttime="20201112 21:55:16.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:16.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:16.795" starttime="20201112 21:55:16.794"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:16.795" starttime="20201112 21:55:14.929"></status>
</kw>
<msg timestamp="20201112 21:55:16.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:16.795" starttime="20201112 21:55:14.929"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:16.795" starttime="20201112 21:55:14.928"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:16.795" starttime="20201112 21:55:14.928"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:16.795" starttime="20201112 21:55:14.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201112 21:55:16.796" starttime="20201112 21:55:16.796"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:16.799" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:18.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:18.983" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-12T21:55:16.759Z",
  "modificat...</msg>
<status status="PASS" endtime="20201112 21:55:18.983" starttime="20201112 21:55:16.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:18.984" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-12T21:55:16.759Z",
  "modificationTime" : "2020-11-12T21:55:16.759Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201112 21:55:18.984" starttime="20201112 21:55:18.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:18.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:18.985" starttime="20201112 21:55:18.985"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:18.985" starttime="20201112 21:55:16.797"></status>
</kw>
<msg timestamp="20201112 21:55:18.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:18.985" starttime="20201112 21:55:16.797"></status>
</kw>
<msg timestamp="20201112 21:55:18.986" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-12T21:55:16.759Z",
  "modificat...</msg>
<status status="PASS" endtime="20201112 21:55:18.986" starttime="20201112 21:55:16.796"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201112 21:55:18.986" starttime="20201112 21:55:18.986"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:55:18.990" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 21:55:18.990" starttime="20201112 21:55:18.989"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:55:18.990" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 21:55:18.990" starttime="20201112 21:55:18.990"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:18.990" starttime="20201112 21:55:18.989"></status>
</kw>
<msg timestamp="20201112 21:55:18.991" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 21:55:18.991" starttime="20201112 21:55:18.988"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:18.991" starttime="20201112 21:55:18.988"></status>
</kw>
<msg timestamp="20201112 21:55:18.991" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201112 21:55:18.991" starttime="20201112 21:55:18.987"></status>
</kw>
<msg timestamp="20201112 21:55:18.991" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201112 21:55:18.991" starttime="20201112 21:55:18.986"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:18.996" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:21.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:21.187" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:55:21.187" starttime="20201112 21:55:18.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:21.188" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:55:21.189" starttime="20201112 21:55:21.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:21.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:21.189" starttime="20201112 21:55:21.189"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:21.189" starttime="20201112 21:55:18.992"></status>
</kw>
<msg timestamp="20201112 21:55:21.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:21.190" starttime="20201112 21:55:18.992"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:21.190" starttime="20201112 21:55:18.991"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:21.194" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:28.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:28.373" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:55:28.373" starttime="20201112 21:55:21.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:28.374" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:55:28.374" starttime="20201112 21:55:28.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:28.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:28.375" starttime="20201112 21:55:28.375"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:28.375" starttime="20201112 21:55:21.191"></status>
</kw>
<msg timestamp="20201112 21:55:28.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:28.376" starttime="20201112 21:55:21.191"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:28.376" starttime="20201112 21:55:21.190"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:28.379" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:32.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:32.190" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:55:32.190" starttime="20201112 21:55:28.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:32.191" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:55:32.191" starttime="20201112 21:55:32.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:32.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:32.192" starttime="20201112 21:55:32.192"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:32.192" starttime="20201112 21:55:28.377"></status>
</kw>
<msg timestamp="20201112 21:55:32.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:32.193" starttime="20201112 21:55:28.376"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:32.193" starttime="20201112 21:55:28.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:32.196" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:35.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:35.851" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:55:35.851" starttime="20201112 21:55:32.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:35.852" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:55:35.852" starttime="20201112 21:55:35.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:35.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:35.853" starttime="20201112 21:55:35.852"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:35.853" starttime="20201112 21:55:32.194"></status>
</kw>
<msg timestamp="20201112 21:55:35.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:35.853" starttime="20201112 21:55:32.193"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:35.853" starttime="20201112 21:55:32.193"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201112 21:55:35.854" critical="yes" starttime="20201112 21:55:11.004"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:55:35.859" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 21:55:35.859" starttime="20201112 21:55:35.859"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:55:35.860" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 21:55:35.860" starttime="20201112 21:55:35.859"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:35.860" starttime="20201112 21:55:35.858"></status>
</kw>
<msg timestamp="20201112 21:55:35.860" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 21:55:35.860" starttime="20201112 21:55:35.858"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:35.861" starttime="20201112 21:55:35.857"></status>
</kw>
<msg timestamp="20201112 21:55:35.861" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 21:55:35.861" starttime="20201112 21:55:35.856"></status>
</kw>
<msg timestamp="20201112 21:55:35.861" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 21:55:35.861" starttime="20201112 21:55:35.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:35.864" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:37.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:37.739" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:55:37.739" starttime="20201112 21:55:35.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:37.740" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:55:37.740" starttime="20201112 21:55:37.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:37.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:37.741" starttime="20201112 21:55:37.740"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:37.741" starttime="20201112 21:55:35.862"></status>
</kw>
<msg timestamp="20201112 21:55:37.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:37.741" starttime="20201112 21:55:35.861"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:37.741" starttime="20201112 21:55:35.861"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:37.744" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:39.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:39.557" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:55:39.557" starttime="20201112 21:55:37.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:39.558" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:55:39.558" starttime="20201112 21:55:39.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:39.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:39.559" starttime="20201112 21:55:39.559"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:39.559" starttime="20201112 21:55:37.742"></status>
</kw>
<msg timestamp="20201112 21:55:39.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:39.559" starttime="20201112 21:55:37.742"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:39.560" starttime="20201112 21:55:37.741"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201112 21:55:39.560" critical="yes" starttime="20201112 21:55:35.855"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201112 21:55:39.561" starttime="20201112 21:55:10.953"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 21:57:10.755" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 21:57:10.755" starttime="20201112 21:57:10.754"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:57:10.755" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 21:57:10.755" starttime="20201112 21:57:10.755"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:10.755" starttime="20201112 21:57:10.754"></status>
</kw>
<msg timestamp="20201112 21:57:10.755" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 21:57:10.756" starttime="20201112 21:57:10.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 21:57:10.756" starttime="20201112 21:57:10.756"></status>
</kw>
<msg timestamp="20201112 21:57:10.756" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 21:57:10.757" starttime="20201112 21:57:10.756"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:10.757" starttime="20201112 21:57:10.753"></status>
</kw>
<msg timestamp="20201112 21:57:10.757" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 21:57:10.757" starttime="20201112 21:57:10.752"></status>
</kw>
<msg timestamp="20201112 21:57:10.757" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 21:57:10.757" starttime="20201112 21:57:10.752"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 21:57:10.758" level="INFO">${random} = 31037</msg>
<status status="PASS" endtime="20201112 21:57:10.758" starttime="20201112 21:57:10.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:57:10.762" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-31037 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:57:13.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:57:13.731" level="INFO">${output} = 2020-11-12 21:57:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:57:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-12 ...</msg>
<status status="PASS" endtime="20201112 21:57:13.731" starttime="20201112 21:57:10.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:57:13.732" level="INFO">2020-11-12 21:57:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:57:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-12 21:57:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-12 21:57:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 21:57:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-09D00A534745-&gt;16388863-97c1-4157-8355-8b7e3ed2b50d
2020-11-12 21:57:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201112 21:57:13.732" starttime="20201112 21:57:13.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:57:13.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:57:13.733" starttime="20201112 21:57:13.732"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:13.734" starttime="20201112 21:57:10.758"></status>
</kw>
<msg timestamp="20201112 21:57:13.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:57:13.734" starttime="20201112 21:57:10.758"></status>
</kw>
<msg timestamp="20201112 21:57:13.734" level="INFO">${result} = 2020-11-12 21:57:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:57:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-12 ...</msg>
<status status="PASS" endtime="20201112 21:57:13.734" starttime="20201112 21:57:10.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:57:13.739" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:57:15.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:57:15.327" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-12 21:57 ofs://om/volume1/bucket1/ozone-31037
-rw-...</msg>
<status status="PASS" endtime="20201112 21:57:15.327" starttime="20201112 21:57:13.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:57:15.329" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-12 21:57 ofs://om/volume1/bucket1/ozone-31037
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-12 21:55 ofs://om/volume1/bucket1/ozone-86353
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:55 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:56 ofs://om/volume1/bucket1/wordcount-21.txt</msg>
<status status="PASS" endtime="20201112 21:57:15.329" starttime="20201112 21:57:15.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:57:15.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:57:15.329" starttime="20201112 21:57:15.329"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:15.330" starttime="20201112 21:57:13.736"></status>
</kw>
<msg timestamp="20201112 21:57:15.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:57:15.330" starttime="20201112 21:57:13.736"></status>
</kw>
<msg timestamp="20201112 21:57:15.330" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-12 21:57 ofs://om/volume1/bucket1/ozone-31037
-rw-...</msg>
<status status="PASS" endtime="20201112 21:57:15.330" starttime="20201112 21:57:13.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201112 21:57:15.331" starttime="20201112 21:57:15.330"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 21:57:15.331" critical="yes" starttime="20201112 21:57:10.751"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201112 21:57:15.332" starttime="20201112 21:57:10.705"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:55:43.855" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 21:55:43.855" starttime="20201112 21:55:43.855"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:55:43.856" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 21:55:43.856" starttime="20201112 21:55:43.855"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:43.856" starttime="20201112 21:55:43.854"></status>
</kw>
<msg timestamp="20201112 21:55:43.856" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 21:55:43.856" starttime="20201112 21:55:43.854"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:43.856" starttime="20201112 21:55:43.853"></status>
</kw>
<msg timestamp="20201112 21:55:43.856" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 21:55:43.856" starttime="20201112 21:55:43.853"></status>
</kw>
<msg timestamp="20201112 21:55:43.857" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 21:55:43.857" starttime="20201112 21:55:43.852"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 21:55:43.857" level="INFO">${random} = 86353</msg>
<status status="PASS" endtime="20201112 21:55:43.857" starttime="20201112 21:55:43.857"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:43.863" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-86353 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:46.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:46.985" level="INFO">${output} = 2020-11-12 21:55:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:55:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-12 ...</msg>
<status status="PASS" endtime="20201112 21:55:46.985" starttime="20201112 21:55:43.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:46.986" level="INFO">2020-11-12 21:55:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:55:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-12 21:55:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-12 21:55:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 21:55:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-76A7621DC5EC-&gt;16388863-97c1-4157-8355-8b7e3ed2b50d
2020-11-12 21:55:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201112 21:55:46.986" starttime="20201112 21:55:46.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:46.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:46.986" starttime="20201112 21:55:46.986"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:46.987" starttime="20201112 21:55:43.858"></status>
</kw>
<msg timestamp="20201112 21:55:46.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:46.987" starttime="20201112 21:55:43.858"></status>
</kw>
<msg timestamp="20201112 21:55:46.987" level="INFO">${result} = 2020-11-12 21:55:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:55:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-12 ...</msg>
<status status="PASS" endtime="20201112 21:55:46.987" starttime="20201112 21:55:43.857"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:46.991" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:48.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:48.554" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-12 21:55 o3fs://bucket1.volume1.om/ozone-86353
dr...</msg>
<status status="PASS" endtime="20201112 21:55:48.555" starttime="20201112 21:55:46.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:48.556" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-12 21:55 o3fs://bucket1.volume1.om/ozone-86353
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:55 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 21:55:48.556" starttime="20201112 21:55:48.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:48.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:48.556" starttime="20201112 21:55:48.556"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:48.557" starttime="20201112 21:55:46.989"></status>
</kw>
<msg timestamp="20201112 21:55:48.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:48.557" starttime="20201112 21:55:46.988"></status>
</kw>
<msg timestamp="20201112 21:55:48.557" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-12 21:55 o3fs://bucket1.volume1.om/ozone-86353
dr...</msg>
<status status="PASS" endtime="20201112 21:55:48.557" starttime="20201112 21:55:46.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201112 21:55:48.558" starttime="20201112 21:55:48.557"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 21:55:48.558" critical="yes" starttime="20201112 21:55:43.851"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201112 21:55:48.559" starttime="20201112 21:55:43.804"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:57:19.617" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:57:19.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:57:19.620" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:57:19.620" starttime="20201112 21:57:19.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:57:19.621" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:57:19.621" starttime="20201112 21:57:19.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:57:19.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:57:19.621" starttime="20201112 21:57:19.621"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:19.622" starttime="20201112 21:57:19.611"></status>
</kw>
<msg timestamp="20201112 21:57:19.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:57:19.622" starttime="20201112 21:57:19.611"></status>
</kw>
<msg timestamp="20201112 21:57:19.622" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:57:19.622" starttime="20201112 21:57:19.610"></status>
</kw>
<msg timestamp="20201112 21:57:19.622" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:57:19.622" starttime="20201112 21:57:19.610"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 21:57:19.626" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 21:57:19.626" starttime="20201112 21:57:19.626"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:57:19.627" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 21:57:19.627" starttime="20201112 21:57:19.626"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:19.627" starttime="20201112 21:57:19.625"></status>
</kw>
<msg timestamp="20201112 21:57:19.627" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 21:57:19.627" starttime="20201112 21:57:19.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 21:57:19.628" starttime="20201112 21:57:19.628"></status>
</kw>
<msg timestamp="20201112 21:57:19.628" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 21:57:19.628" starttime="20201112 21:57:19.627"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:19.628" starttime="20201112 21:57:19.624"></status>
</kw>
<msg timestamp="20201112 21:57:19.628" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 21:57:19.629" starttime="20201112 21:57:19.623"></status>
</kw>
<msg timestamp="20201112 21:57:19.629" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 21:57:19.629" starttime="20201112 21:57:19.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:57:19.632" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:57:51.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:57:51.682" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 21:57:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:57:21 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201112 21:57:51.682" starttime="20201112 21:57:19.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:57:51.683" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-12 21:57:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:57:21 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-12 21:57:21 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-12 21:57:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 21:57:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6C8445F923FE-&gt;16388863-97c1-4157-8355-8b7e3ed2b50d
2020-11-12 21:57:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-12 21:57:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-12 21:57:25 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 21:57:25 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-12 21:57:25 INFO  JobSubmitter:198 - number of splits:3
2020-11-12 21:57:25 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605218078483_0003
2020-11-12 21:57:25 INFO  YarnClientImpl:273 - Submitted application application_1605218078483_0003
2020-11-12 21:57:25 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605218078483_0003/
2020-11-12 21:57:25 INFO  Job:1339 - Running job: job_1605218078483_0003
2020-11-12 21:57:31 INFO  Job:1360 - Job job_1605218078483_0003 running in uber mode : false
2020-11-12 21:57:31 INFO  Job:1367 -  map 0% reduce 0%
2020-11-12 21:57:37 INFO  Job:1367 -  map 33% reduce 0%
2020-11-12 21:57:42 INFO  Job:1367 -  map 67% reduce 0%
2020-11-12 21:57:47 INFO  Job:1367 -  map 100% reduce 0%
2020-11-12 21:57:51 INFO  Job:1367 -  map 100% reduce 100%
2020-11-12 21:57:51 INFO  Job:1378 - Job job_1605218078483_0003 completed successfully
2020-11-12 21:57:51 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610077
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34552
		Total time spent by all reduces in occupied slots (ms)=13648
		Total time spent by all map tasks (ms)=8638
		Total time spent by all reduce tasks (ms)=3412
		Total vcore-milliseconds taken by all map tasks=8638
		Total vcore-milliseconds taken by all reduce tasks=3412
		Total megabyte-milliseconds taken by all map tasks=35381248
		Total megabyte-milliseconds taken by all reduce tasks=13975552
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=530
		CPU time spent (ms)=5950
		Physical memory (bytes) snapshot=1125646336
		Virtual memory (bytes) snapshot=15765426176
		Total committed heap usage (bytes)=1044905984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 26.291 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201112 21:57:51.683" starttime="20201112 21:57:51.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:57:51.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:57:51.683" starttime="20201112 21:57:51.683"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:51.683" starttime="20201112 21:57:19.630"></status>
</kw>
<msg timestamp="20201112 21:57:51.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:57:51.684" starttime="20201112 21:57:19.629"></status>
</kw>
<msg timestamp="20201112 21:57:51.684" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 21:57:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:57:21 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201112 21:57:51.684" starttime="20201112 21:57:19.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 21:57:51.684" starttime="20201112 21:57:51.684"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 21:57:51.684" critical="yes" starttime="20201112 21:57:19.609"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:57:51.689" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:57:51.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:57:51.694" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:57:51.694" starttime="20201112 21:57:51.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:57:51.695" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:57:51.695" starttime="20201112 21:57:51.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:57:51.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:57:51.696" starttime="20201112 21:57:51.695"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:51.696" starttime="20201112 21:57:51.687"></status>
</kw>
<msg timestamp="20201112 21:57:51.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:57:51.697" starttime="20201112 21:57:51.687"></status>
</kw>
<msg timestamp="20201112 21:57:51.697" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:57:51.697" starttime="20201112 21:57:51.686"></status>
</kw>
<msg timestamp="20201112 21:57:51.697" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:57:51.697" starttime="20201112 21:57:51.686"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 21:57:51.698" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20201112 21:57:51.698" starttime="20201112 21:57:51.697"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 21:57:51.701" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 21:57:51.701" starttime="20201112 21:57:51.701"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:57:51.702" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 21:57:51.702" starttime="20201112 21:57:51.701"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:51.702" starttime="20201112 21:57:51.700"></status>
</kw>
<msg timestamp="20201112 21:57:51.702" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 21:57:51.702" starttime="20201112 21:57:51.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 21:57:51.703" starttime="20201112 21:57:51.703"></status>
</kw>
<msg timestamp="20201112 21:57:51.703" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 21:57:51.703" starttime="20201112 21:57:51.702"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:51.703" starttime="20201112 21:57:51.699"></status>
</kw>
<msg timestamp="20201112 21:57:51.703" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 21:57:51.703" starttime="20201112 21:57:51.698"></status>
</kw>
<msg timestamp="20201112 21:57:51.704" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 21:57:51.704" starttime="20201112 21:57:51.698"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 21:57:51.707" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 21:57:51.707" starttime="20201112 21:57:51.706"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:57:51.707" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 21:57:51.707" starttime="20201112 21:57:51.707"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:51.707" starttime="20201112 21:57:51.706"></status>
</kw>
<msg timestamp="20201112 21:57:51.707" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 21:57:51.708" starttime="20201112 21:57:51.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:57:51.709" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201112 21:57:51.709" starttime="20201112 21:57:51.708"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:57:51.709" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201112 21:57:51.709" starttime="20201112 21:57:51.709"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:51.709" starttime="20201112 21:57:51.708"></status>
</kw>
<msg timestamp="20201112 21:57:51.709" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201112 21:57:51.709" starttime="20201112 21:57:51.708"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:51.710" starttime="20201112 21:57:51.705"></status>
</kw>
<msg timestamp="20201112 21:57:51.710" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201112 21:57:51.710" starttime="20201112 21:57:51.704"></status>
</kw>
<msg timestamp="20201112 21:57:51.710" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201112 21:57:51.710" starttime="20201112 21:57:51.704"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 21:57:51.713" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 21:57:51.713" starttime="20201112 21:57:51.713"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:57:51.713" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 21:57:51.713" starttime="20201112 21:57:51.713"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:51.714" starttime="20201112 21:57:51.712"></status>
</kw>
<msg timestamp="20201112 21:57:51.714" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 21:57:51.714" starttime="20201112 21:57:51.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:57:51.715" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201112 21:57:51.715" starttime="20201112 21:57:51.715"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:57:51.715" level="INFO">${result} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20201112 21:57:51.715" starttime="20201112 21:57:51.715"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:51.716" starttime="20201112 21:57:51.714"></status>
</kw>
<msg timestamp="20201112 21:57:51.716" level="INFO">${path_with_leading} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20201112 21:57:51.716" starttime="20201112 21:57:51.714"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:51.716" starttime="20201112 21:57:51.711"></status>
</kw>
<msg timestamp="20201112 21:57:51.716" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201112 21:57:51.716" starttime="20201112 21:57:51.711"></status>
</kw>
<msg timestamp="20201112 21:57:51.716" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201112 21:57:51.716" starttime="20201112 21:57:51.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:57:51.721" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:58:23.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:58:23.980" level="INFO">${output} = 2020-11-12 21:57:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-12 21:57:53 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201112 21:58:23.980" starttime="20201112 21:57:51.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:58:23.981" level="INFO">2020-11-12 21:57:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-12 21:57:53 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 21:57:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:57:53 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-12 21:57:53 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-12 21:57:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 21:57:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3E1A2594EF88-&gt;16388863-97c1-4157-8355-8b7e3ed2b50d
2020-11-12 21:57:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 21:57:54 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-12 21:57:54 INFO  JobSubmitter:198 - number of splits:3
2020-11-12 21:57:54 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605218078483_0004
2020-11-12 21:57:55 INFO  YarnClientImpl:273 - Submitted application application_1605218078483_0004
2020-11-12 21:57:55 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605218078483_0004/
2020-11-12 21:57:55 INFO  Job:1339 - Running job: job_1605218078483_0004
2020-11-12 21:58:03 INFO  Job:1360 - Job job_1605218078483_0004 running in uber mode : false
2020-11-12 21:58:03 INFO  Job:1367 -  map 0% reduce 0%
2020-11-12 21:58:09 INFO  Job:1367 -  map 33% reduce 0%
2020-11-12 21:58:14 INFO  Job:1367 -  map 67% reduce 0%
2020-11-12 21:58:19 INFO  Job:1367 -  map 100% reduce 0%
2020-11-12 21:58:22 INFO  Job:1367 -  map 100% reduce 100%
2020-11-12 21:58:23 INFO  Job:1378 - Job job_1605218078483_0004 completed successfully
2020-11-12 21:58:23 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=672531
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35468
		Total time spent by all reduces in occupied slots (ms)=12652
		Total time spent by all map tasks (ms)=8867
		Total time spent by all reduce tasks (ms)=3163
		Total vcore-milliseconds taken by all map tasks=8867
		Total vcore-milliseconds taken by all reduce tasks=3163
		Total megabyte-milliseconds taken by all map tasks=36319232
		Total megabyte-milliseconds taken by all reduce tasks=12955648
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=542
		CPU time spent (ms)=6730
		Physical memory (bytes) snapshot=1152974848
		Virtual memory (bytes) snapshot=15788904448
		Total committed heap usage (bytes)=1054867456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201112 21:58:23.981" starttime="20201112 21:58:23.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:58:23.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:58:23.982" starttime="20201112 21:58:23.982"></status>
</kw>
<status status="PASS" endtime="20201112 21:58:23.982" starttime="20201112 21:57:51.717"></status>
</kw>
<msg timestamp="20201112 21:58:23.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:58:23.982" starttime="20201112 21:57:51.717"></status>
</kw>
<msg timestamp="20201112 21:58:23.983" level="INFO">${output} = 2020-11-12 21:57:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-12 21:57:53 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201112 21:58:23.983" starttime="20201112 21:57:51.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201112 21:58:23.983" starttime="20201112 21:58:23.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 21:58:23.984" starttime="20201112 21:58:23.984"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 21:58:23.984" critical="yes" starttime="20201112 21:57:51.685"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201112 21:58:23.985" starttime="20201112 21:57:19.563"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:52.867" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:55:52.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:55:52.872" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:55:52.872" starttime="20201112 21:55:52.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:55:52.873" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:55:52.873" starttime="20201112 21:55:52.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:55:52.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:55:52.873" starttime="20201112 21:55:52.873"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:52.874" starttime="20201112 21:55:52.861"></status>
</kw>
<msg timestamp="20201112 21:55:52.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:55:52.874" starttime="20201112 21:55:52.861"></status>
</kw>
<msg timestamp="20201112 21:55:52.874" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:55:52.874" starttime="20201112 21:55:52.860"></status>
</kw>
<msg timestamp="20201112 21:55:52.874" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:55:52.874" starttime="20201112 21:55:52.860"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:55:52.878" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 21:55:52.879" starttime="20201112 21:55:52.878"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:55:52.879" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 21:55:52.879" starttime="20201112 21:55:52.879"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:52.879" starttime="20201112 21:55:52.877"></status>
</kw>
<msg timestamp="20201112 21:55:52.879" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 21:55:52.879" starttime="20201112 21:55:52.876"></status>
</kw>
<status status="PASS" endtime="20201112 21:55:52.880" starttime="20201112 21:55:52.876"></status>
</kw>
<msg timestamp="20201112 21:55:52.880" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 21:55:52.880" starttime="20201112 21:55:52.875"></status>
</kw>
<msg timestamp="20201112 21:55:52.880" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 21:55:52.880" starttime="20201112 21:55:52.874"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:55:52.884" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:56:33.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:56:33.009" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 21:55:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:55:54 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201112 21:56:33.009" starttime="20201112 21:55:52.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:56:33.010" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-12 21:55:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:55:54 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-12 21:55:54 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-12 21:55:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 21:55:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-51D51E6B8793-&gt;16388863-97c1-4157-8355-8b7e3ed2b50d
2020-11-12 21:55:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-12 21:55:58 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-12 21:55:58 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-12 21:55:58 INFO  JobSubmitter:198 - number of splits:3
2020-11-12 21:56:01 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605218078483_0001
2020-11-12 21:56:01 INFO  YarnClientImpl:273 - Submitted application application_1605218078483_0001
2020-11-12 21:56:02 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605218078483_0001/
2020-11-12 21:56:02 INFO  Job:1339 - Running job: job_1605218078483_0001
2020-11-12 21:56:11 INFO  Job:1360 - Job job_1605218078483_0001 running in uber mode : false
2020-11-12 21:56:11 INFO  Job:1367 -  map 0% reduce 0%
2020-11-12 21:56:17 INFO  Job:1367 -  map 33% reduce 0%
2020-11-12 21:56:22 INFO  Job:1367 -  map 67% reduce 0%
2020-11-12 21:56:27 INFO  Job:1367 -  map 100% reduce 0%
2020-11-12 21:56:31 INFO  Job:1367 -  map 100% reduce 100%
2020-11-12 21:56:32 INFO  Job:1378 - Job job_1605218078483_0001 completed successfully
2020-11-12 21:56:32 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610297
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36028
		Total time spent by all reduces in occupied slots (ms)=12924
		Total time spent by all map tasks (ms)=9007
		Total time spent by all reduce tasks (ms)=3231
		Total vcore-milliseconds taken by all map tasks=9007
		Total vcore-milliseconds taken by all reduce tasks=3231
		Total megabyte-milliseconds taken by all map tasks=36892672
		Total megabyte-milliseconds taken by all reduce tasks=13234176
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=547
		CPU time spent (ms)=6270
		Physical memory (bytes) snapshot=1159745536
		Virtual memory (bytes) snapshot=15783297024
		Total committed heap usage (bytes)=1043857408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.252 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201112 21:56:33.011" starttime="20201112 21:56:33.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:56:33.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:56:33.011" starttime="20201112 21:56:33.011"></status>
</kw>
<status status="PASS" endtime="20201112 21:56:33.012" starttime="20201112 21:55:52.881"></status>
</kw>
<msg timestamp="20201112 21:56:33.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:56:33.012" starttime="20201112 21:55:52.881"></status>
</kw>
<msg timestamp="20201112 21:56:33.012" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 21:55:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:55:54 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201112 21:56:33.012" starttime="20201112 21:55:52.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 21:56:33.013" starttime="20201112 21:56:33.012"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 21:56:33.013" critical="yes" starttime="20201112 21:55:52.858"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:56:33.019" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:56:33.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:56:33.024" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:56:33.024" starttime="20201112 21:56:33.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:56:33.025" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:56:33.025" starttime="20201112 21:56:33.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:56:33.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:56:33.026" starttime="20201112 21:56:33.026"></status>
</kw>
<status status="PASS" endtime="20201112 21:56:33.026" starttime="20201112 21:56:33.016"></status>
</kw>
<msg timestamp="20201112 21:56:33.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:56:33.026" starttime="20201112 21:56:33.016"></status>
</kw>
<msg timestamp="20201112 21:56:33.027" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:56:33.027" starttime="20201112 21:56:33.016"></status>
</kw>
<msg timestamp="20201112 21:56:33.027" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201112 21:56:33.027" starttime="20201112 21:56:33.015"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 21:56:33.028" level="INFO">${random} = 21</msg>
<status status="PASS" endtime="20201112 21:56:33.028" starttime="20201112 21:56:33.027"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:56:33.031" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 21:56:33.031" starttime="20201112 21:56:33.031"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:56:33.032" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 21:56:33.032" starttime="20201112 21:56:33.031"></status>
</kw>
<status status="PASS" endtime="20201112 21:56:33.032" starttime="20201112 21:56:33.030"></status>
</kw>
<msg timestamp="20201112 21:56:33.032" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 21:56:33.032" starttime="20201112 21:56:33.030"></status>
</kw>
<status status="PASS" endtime="20201112 21:56:33.032" starttime="20201112 21:56:33.029"></status>
</kw>
<msg timestamp="20201112 21:56:33.032" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 21:56:33.032" starttime="20201112 21:56:33.029"></status>
</kw>
<msg timestamp="20201112 21:56:33.033" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 21:56:33.033" starttime="20201112 21:56:33.028"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:56:33.036" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 21:56:33.036" starttime="20201112 21:56:33.035"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:56:33.036" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 21:56:33.036" starttime="20201112 21:56:33.036"></status>
</kw>
<status status="PASS" endtime="20201112 21:56:33.036" starttime="20201112 21:56:33.035"></status>
</kw>
<msg timestamp="20201112 21:56:33.037" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 21:56:33.037" starttime="20201112 21:56:33.035"></status>
</kw>
<status status="PASS" endtime="20201112 21:56:33.037" starttime="20201112 21:56:33.034"></status>
</kw>
<msg timestamp="20201112 21:56:33.037" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201112 21:56:33.037" starttime="20201112 21:56:33.034"></status>
</kw>
<msg timestamp="20201112 21:56:33.037" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201112 21:56:33.037" starttime="20201112 21:56:33.033"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:56:33.040" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 21:56:33.040" starttime="20201112 21:56:33.040"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:56:33.041" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 21:56:33.041" starttime="20201112 21:56:33.040"></status>
</kw>
<status status="PASS" endtime="20201112 21:56:33.041" starttime="20201112 21:56:33.039"></status>
</kw>
<msg timestamp="20201112 21:56:33.041" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 21:56:33.041" starttime="20201112 21:56:33.039"></status>
</kw>
<status status="PASS" endtime="20201112 21:56:33.041" starttime="20201112 21:56:33.038"></status>
</kw>
<msg timestamp="20201112 21:56:33.041" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-21.txt</msg>
<status status="PASS" endtime="20201112 21:56:33.041" starttime="20201112 21:56:33.038"></status>
</kw>
<msg timestamp="20201112 21:56:33.041" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-21.txt</msg>
<status status="PASS" endtime="20201112 21:56:33.041" starttime="20201112 21:56:33.037"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:56:33.046" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-21.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:57:06.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:57:06.385" level="INFO">${output} = 2020-11-12 21:56:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-12 21:56:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201112 21:57:06.385" starttime="20201112 21:56:33.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:57:06.386" level="INFO">2020-11-12 21:56:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-12 21:56:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 21:56:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:56:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-12 21:56:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-12 21:56:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 21:56:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A5B9E5401A4D-&gt;16388863-97c1-4157-8355-8b7e3ed2b50d
2020-11-12 21:56:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 21:56:36 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-12 21:56:36 INFO  JobSubmitter:198 - number of splits:3
2020-11-12 21:56:36 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605218078483_0002
2020-11-12 21:56:36 INFO  YarnClientImpl:273 - Submitted application application_1605218078483_0002
2020-11-12 21:56:36 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605218078483_0002/
2020-11-12 21:56:36 INFO  Job:1339 - Running job: job_1605218078483_0002
2020-11-12 21:56:44 INFO  Job:1360 - Job job_1605218078483_0002 running in uber mode : false
2020-11-12 21:56:44 INFO  Job:1367 -  map 0% reduce 0%
2020-11-12 21:56:50 INFO  Job:1367 -  map 33% reduce 0%
2020-11-12 21:56:55 INFO  Job:1367 -  map 67% reduce 0%
2020-11-12 21:56:59 INFO  Job:1367 -  map 100% reduce 0%
2020-11-12 21:57:02 INFO  Job:1367 -  map 100% reduce 100%
2020-11-12 21:57:05 INFO  Job:1378 - Job job_1605218078483_0002 completed successfully
2020-11-12 21:57:06 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=672615
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35476
		Total time spent by all reduces in occupied slots (ms)=13508
		Total time spent by all map tasks (ms)=8869
		Total time spent by all reduce tasks (ms)=3377
		Total vcore-milliseconds taken by all map tasks=8869
		Total vcore-milliseconds taken by all reduce tasks=3377
		Total megabyte-milliseconds taken by all map tasks=36327424
		Total megabyte-milliseconds taken by all reduce tasks=13832192
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=542
		CPU time spent (ms)=6330
		Physical memory (bytes) snapshot=1165668352
		Virtual memory (bytes) snapshot=15783006208
		Total committed heap usage (bytes)=1049624576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201112 21:57:06.386" starttime="20201112 21:57:06.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:57:06.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:57:06.387" starttime="20201112 21:57:06.387"></status>
</kw>
<status status="PASS" endtime="20201112 21:57:06.387" starttime="20201112 21:56:33.042"></status>
</kw>
<msg timestamp="20201112 21:57:06.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:57:06.388" starttime="20201112 21:56:33.042"></status>
</kw>
<msg timestamp="20201112 21:57:06.388" level="INFO">${output} = 2020-11-12 21:56:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-11-12 21:56:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201112 21:57:06.388" starttime="20201112 21:56:33.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201112 21:57:06.389" starttime="20201112 21:57:06.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 21:57:06.389" starttime="20201112 21:57:06.389"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 21:57:06.389" critical="yes" starttime="20201112 21:56:33.014"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201112 21:57:06.391" starttime="20201112 21:55:52.811"></status>
</suite>
<status status="PASS" elapsedtime="175992" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:24.637" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:26.794" level="INFO">${rc} = 255</msg>
<msg timestamp="20201112 21:59:26.794" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201112 21:59:26.794" starttime="20201112 21:59:24.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:26.795" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201112 21:59:26.795" starttime="20201112 21:59:26.795"></status>
</kw>
<msg timestamp="20201112 21:59:26.796" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201112 21:59:26.796" starttime="20201112 21:59:24.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:26.802" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:28.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:59:28.897" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:59:28.897" starttime="20201112 21:59:26.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:28.898" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:59:28.898" starttime="20201112 21:59:28.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:59:28.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:59:28.898" starttime="20201112 21:59:28.898"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:28.899" starttime="20201112 21:59:26.798"></status>
</kw>
<msg timestamp="20201112 21:59:28.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:59:28.899" starttime="20201112 21:59:26.797"></status>
</kw>
<msg timestamp="20201112 21:59:28.899" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201112 21:59:28.899" starttime="20201112 21:59:26.797"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201112 21:59:28.900" starttime="20201112 21:59:28.899"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:28.900" starttime="20201112 21:59:26.796"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:28.900" starttime="20201112 21:59:26.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:28.904" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:30.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:59:30.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:59:30.823" starttime="20201112 21:59:28.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:30.824" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:59:30.824" starttime="20201112 21:59:30.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:59:30.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:59:30.825" starttime="20201112 21:59:30.825"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:30.825" starttime="20201112 21:59:28.901"></status>
</kw>
<msg timestamp="20201112 21:59:30.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:59:30.826" starttime="20201112 21:59:28.901"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:30.826" starttime="20201112 21:59:28.901"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:30.826" starttime="20201112 21:59:28.900"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:30.826" starttime="20201112 21:59:28.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201112 21:59:30.826" starttime="20201112 21:59:30.826"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:30.831" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:32.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:59:32.802" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-12T21:59:30.699Z",
  "modificat...</msg>
<status status="PASS" endtime="20201112 21:59:32.802" starttime="20201112 21:59:30.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:32.803" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-12T21:59:30.699Z",
  "modificationTime" : "2020-11-12T21:59:30.699Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201112 21:59:32.803" starttime="20201112 21:59:32.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:59:32.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:59:32.803" starttime="20201112 21:59:32.803"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:32.804" starttime="20201112 21:59:30.827"></status>
</kw>
<msg timestamp="20201112 21:59:32.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:59:32.804" starttime="20201112 21:59:30.827"></status>
</kw>
<msg timestamp="20201112 21:59:32.804" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-12T21:59:30.699Z",
  "modificat...</msg>
<status status="PASS" endtime="20201112 21:59:32.804" starttime="20201112 21:59:30.827"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201112 21:59:32.805" starttime="20201112 21:59:32.805"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:59:32.809" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 21:59:32.809" starttime="20201112 21:59:32.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:59:32.809" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 21:59:32.809" starttime="20201112 21:59:32.809"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:32.810" starttime="20201112 21:59:32.808"></status>
</kw>
<msg timestamp="20201112 21:59:32.810" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 21:59:32.810" starttime="20201112 21:59:32.807"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:32.810" starttime="20201112 21:59:32.807"></status>
</kw>
<msg timestamp="20201112 21:59:32.810" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201112 21:59:32.810" starttime="20201112 21:59:32.806"></status>
</kw>
<msg timestamp="20201112 21:59:32.810" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201112 21:59:32.810" starttime="20201112 21:59:32.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:32.814" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:34.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:59:34.771" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:59:34.772" starttime="20201112 21:59:32.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:34.773" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:59:34.773" starttime="20201112 21:59:34.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:59:34.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:59:34.773" starttime="20201112 21:59:34.773"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:34.774" starttime="20201112 21:59:32.811"></status>
</kw>
<msg timestamp="20201112 21:59:34.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:59:34.774" starttime="20201112 21:59:32.811"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:34.774" starttime="20201112 21:59:32.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:34.778" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:39.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:59:39.429" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:59:39.429" starttime="20201112 21:59:34.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:39.431" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:59:39.431" starttime="20201112 21:59:39.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:59:39.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:59:39.431" starttime="20201112 21:59:39.431"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:39.432" starttime="20201112 21:59:34.775"></status>
</kw>
<msg timestamp="20201112 21:59:39.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:59:39.432" starttime="20201112 21:59:34.775"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:39.432" starttime="20201112 21:59:34.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:39.437" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:43.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:59:43.200" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:59:43.200" starttime="20201112 21:59:39.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:43.201" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:59:43.201" starttime="20201112 21:59:43.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:59:43.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:59:43.201" starttime="20201112 21:59:43.201"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:43.202" starttime="20201112 21:59:39.433"></status>
</kw>
<msg timestamp="20201112 21:59:43.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:59:43.202" starttime="20201112 21:59:39.433"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:43.202" starttime="20201112 21:59:39.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:43.207" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:46.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:59:46.890" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:59:46.891" starttime="20201112 21:59:43.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:46.891" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:59:46.892" starttime="20201112 21:59:46.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:59:46.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:59:46.892" starttime="20201112 21:59:46.892"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:46.892" starttime="20201112 21:59:43.203"></status>
</kw>
<msg timestamp="20201112 21:59:46.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:59:46.893" starttime="20201112 21:59:43.203"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:46.893" starttime="20201112 21:59:43.202"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201112 21:59:46.893" critical="yes" starttime="20201112 21:59:24.630"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:59:46.898" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 21:59:46.898" starttime="20201112 21:59:46.897"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:59:46.898" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 21:59:46.898" starttime="20201112 21:59:46.898"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:46.898" starttime="20201112 21:59:46.897"></status>
</kw>
<msg timestamp="20201112 21:59:46.898" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 21:59:46.899" starttime="20201112 21:59:46.896"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:46.899" starttime="20201112 21:59:46.895"></status>
</kw>
<msg timestamp="20201112 21:59:46.899" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 21:59:46.899" starttime="20201112 21:59:46.895"></status>
</kw>
<msg timestamp="20201112 21:59:46.899" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 21:59:46.899" starttime="20201112 21:59:46.894"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:46.902" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:48.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:59:48.811" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:59:48.811" starttime="20201112 21:59:46.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:48.812" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:59:48.812" starttime="20201112 21:59:48.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:59:48.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:59:48.813" starttime="20201112 21:59:48.812"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:48.813" starttime="20201112 21:59:46.900"></status>
</kw>
<msg timestamp="20201112 21:59:48.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:59:48.813" starttime="20201112 21:59:46.900"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:48.814" starttime="20201112 21:59:46.899"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:48.818" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:50.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:59:50.941" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 21:59:50.941" starttime="20201112 21:59:48.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:50.943" level="INFO"></msg>
<status status="PASS" endtime="20201112 21:59:50.943" starttime="20201112 21:59:50.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:59:50.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:59:50.943" starttime="20201112 21:59:50.943"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:50.944" starttime="20201112 21:59:48.814"></status>
</kw>
<msg timestamp="20201112 21:59:50.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:59:50.944" starttime="20201112 21:59:48.814"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:50.944" starttime="20201112 21:59:48.814"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201112 21:59:50.944" critical="yes" starttime="20201112 21:59:46.893"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201112 21:59:50.945" starttime="20201112 21:59:24.582"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:01:32.646" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:01:32.646" starttime="20201112 22:01:32.646"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:01:32.647" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:01:32.647" starttime="20201112 22:01:32.646"></status>
</kw>
<status status="PASS" endtime="20201112 22:01:32.647" starttime="20201112 22:01:32.645"></status>
</kw>
<msg timestamp="20201112 22:01:32.647" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:01:32.647" starttime="20201112 22:01:32.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:01:32.648" starttime="20201112 22:01:32.648"></status>
</kw>
<msg timestamp="20201112 22:01:32.648" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 22:01:32.648" starttime="20201112 22:01:32.647"></status>
</kw>
<status status="PASS" endtime="20201112 22:01:32.648" starttime="20201112 22:01:32.644"></status>
</kw>
<msg timestamp="20201112 22:01:32.648" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:01:32.648" starttime="20201112 22:01:32.643"></status>
</kw>
<msg timestamp="20201112 22:01:32.649" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:01:32.649" starttime="20201112 22:01:32.642"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:01:32.649" level="INFO">${random} = 65074</msg>
<status status="PASS" endtime="20201112 22:01:32.649" starttime="20201112 22:01:32.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:01:32.656" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-65074 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:01:36.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:01:36.129" level="INFO">${output} = 2020-11-12 22:01:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 22:01:36.129" starttime="20201112 22:01:32.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:01:36.130" level="INFO">2020-11-12 22:01:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-12 22:01:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-12 22:01:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:01:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:01:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:01:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6B7CCEEFE1A3-&gt;615735bd-199f-4ee3-9ef3-3c6275ede535
2020-11-12 22:01:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 22:01:35 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201112 22:01:36.130" starttime="20201112 22:01:36.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:01:36.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:01:36.131" starttime="20201112 22:01:36.130"></status>
</kw>
<status status="PASS" endtime="20201112 22:01:36.131" starttime="20201112 22:01:32.650"></status>
</kw>
<msg timestamp="20201112 22:01:36.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:01:36.132" starttime="20201112 22:01:32.650"></status>
</kw>
<msg timestamp="20201112 22:01:36.132" level="INFO">${result} = 2020-11-12 22:01:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 22:01:36.132" starttime="20201112 22:01:32.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:01:36.139" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:01:37.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:01:37.843" level="INFO">${output} = 2020-11-12 22:01:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 22:01:37.843" starttime="20201112 22:01:36.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:01:37.844" level="INFO">2020-11-12 22:01:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:37 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-12 22:01 ofs://om/volume1/bucket1/ozone-65074
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-12 21:59 ofs://om/volume1/bucket1/ozone-73173
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:59 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:01 ofs://om/volume1/bucket1/wordcount-70.txt
2020-11-12 22:01:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201112 22:01:37.844" starttime="20201112 22:01:37.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:01:37.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:01:37.844" starttime="20201112 22:01:37.844"></status>
</kw>
<status status="PASS" endtime="20201112 22:01:37.845" starttime="20201112 22:01:36.135"></status>
</kw>
<msg timestamp="20201112 22:01:37.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:01:37.845" starttime="20201112 22:01:36.134"></status>
</kw>
<msg timestamp="20201112 22:01:37.845" level="INFO">${result} = 2020-11-12 22:01:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 22:01:37.845" starttime="20201112 22:01:36.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:01:37.846" starttime="20201112 22:01:37.845"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:01:37.846" critical="yes" starttime="20201112 22:01:32.642"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201112 22:01:37.847" starttime="20201112 22:01:32.591"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 21:59:55.238" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 21:59:55.238" starttime="20201112 21:59:55.237"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 21:59:55.238" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 21:59:55.238" starttime="20201112 21:59:55.238"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:55.238" starttime="20201112 21:59:55.237"></status>
</kw>
<msg timestamp="20201112 21:59:55.239" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 21:59:55.239" starttime="20201112 21:59:55.236"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:55.239" starttime="20201112 21:59:55.236"></status>
</kw>
<msg timestamp="20201112 21:59:55.239" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 21:59:55.239" starttime="20201112 21:59:55.235"></status>
</kw>
<msg timestamp="20201112 21:59:55.239" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 21:59:55.239" starttime="20201112 21:59:55.235"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 21:59:55.239" level="INFO">${random} = 73173</msg>
<status status="PASS" endtime="20201112 21:59:55.239" starttime="20201112 21:59:55.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:55.244" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-73173 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 21:59:58.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 21:59:58.666" level="INFO">${output} = 2020-11-12 21:59:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 21:59:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 21:59:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 21:59:58.666" starttime="20201112 21:59:55.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 21:59:58.667" level="INFO">2020-11-12 21:59:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 21:59:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 21:59:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 21:59:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-12 21:59:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-12 21:59:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 21:59:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 21:59:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 21:59:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6A604168998E-&gt;615735bd-199f-4ee3-9ef3-3c6275ede535
2020-11-12 21:59:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 21:59:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201112 21:59:58.667" starttime="20201112 21:59:58.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 21:59:58.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 21:59:58.668" starttime="20201112 21:59:58.668"></status>
</kw>
<status status="PASS" endtime="20201112 21:59:58.668" starttime="20201112 21:59:55.240"></status>
</kw>
<msg timestamp="20201112 21:59:58.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 21:59:58.668" starttime="20201112 21:59:55.240"></status>
</kw>
<msg timestamp="20201112 21:59:58.669" level="INFO">${result} = 2020-11-12 21:59:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 21:59:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 21:59:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 21:59:58.669" starttime="20201112 21:59:55.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 21:59:58.674" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:00:00.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:00:00.351" level="INFO">${output} = 2020-11-12 21:59:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 21:59:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 22:00:00.351" starttime="20201112 21:59:58.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:00:00.352" level="INFO">2020-11-12 21:59:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 21:59:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:00 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-12 21:59 o3fs://bucket1.volume1.om/ozone-73173
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 21:59 o3fs://bucket1.volume1.om/user
2020-11-12 22:00:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201112 22:00:00.352" starttime="20201112 22:00:00.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:00:00.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:00:00.353" starttime="20201112 22:00:00.352"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:00.353" starttime="20201112 21:59:58.671"></status>
</kw>
<msg timestamp="20201112 22:00:00.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:00:00.353" starttime="20201112 21:59:58.669"></status>
</kw>
<msg timestamp="20201112 22:00:00.353" level="INFO">${result} = 2020-11-12 21:59:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 21:59:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 22:00:00.353" starttime="20201112 21:59:58.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:00:00.354" starttime="20201112 22:00:00.353"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:00:00.354" critical="yes" starttime="20201112 21:59:55.234"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201112 22:00:00.355" starttime="20201112 21:59:55.189"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:01:42.465" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:01:42.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:01:42.469" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:01:42.469" starttime="20201112 22:01:42.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:01:42.470" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:01:42.470" starttime="20201112 22:01:42.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:01:42.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:01:42.470" starttime="20201112 22:01:42.470"></status>
</kw>
<status status="PASS" endtime="20201112 22:01:42.471" starttime="20201112 22:01:42.459"></status>
</kw>
<msg timestamp="20201112 22:01:42.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:01:42.471" starttime="20201112 22:01:42.459"></status>
</kw>
<msg timestamp="20201112 22:01:42.471" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:01:42.471" starttime="20201112 22:01:42.458"></status>
</kw>
<msg timestamp="20201112 22:01:42.471" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:01:42.471" starttime="20201112 22:01:42.458"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:01:42.476" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:01:42.476" starttime="20201112 22:01:42.475"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:01:42.476" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:01:42.476" starttime="20201112 22:01:42.476"></status>
</kw>
<status status="PASS" endtime="20201112 22:01:42.477" starttime="20201112 22:01:42.474"></status>
</kw>
<msg timestamp="20201112 22:01:42.477" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:01:42.477" starttime="20201112 22:01:42.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:01:42.478" starttime="20201112 22:01:42.477"></status>
</kw>
<msg timestamp="20201112 22:01:42.478" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 22:01:42.478" starttime="20201112 22:01:42.477"></status>
</kw>
<status status="PASS" endtime="20201112 22:01:42.478" starttime="20201112 22:01:42.473"></status>
</kw>
<msg timestamp="20201112 22:01:42.478" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:01:42.478" starttime="20201112 22:01:42.472"></status>
</kw>
<msg timestamp="20201112 22:01:42.478" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:01:42.478" starttime="20201112 22:01:42.471"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:01:42.483" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:02:24.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:02:24.704" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:01:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01...</msg>
<status status="PASS" endtime="20201112 22:02:24.704" starttime="20201112 22:01:42.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:02:24.705" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:01:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-12 22:01:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-12 22:01:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:01:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:01:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:01:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-220DBADA6D0A-&gt;615735bd-199f-4ee3-9ef3-3c6275ede535
2020-11-12 22:01:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-12 22:01:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-12 22:01:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:45 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 22:01:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:01:48 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:01:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605218343883_0003
2020-11-12 22:01:51 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-12 22:01:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:51 INFO  Configuration:2752 - resource-types.xml not found
2020-11-12 22:01:51 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-12 22:01:51 INFO  YarnClientImpl:324 - Submitted application application_1605218343883_0003
2020-11-12 22:01:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605218343883_0003/
2020-11-12 22:01:51 INFO  Job:1619 - Running job: job_1605218343883_0003
2020-11-12 22:01:58 INFO  Job:1640 - Job job_1605218343883_0003 running in uber mode : false
2020-11-12 22:01:58 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:02:05 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:02:10 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:02:16 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:02:23 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:02:24 INFO  Job:1658 - Job job_1605218343883_0003 completed successfully
2020-11-12 22:02:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1015437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38720
		Total time spent by all reduces in occupied slots (ms)=23440
		Total time spent by all map tasks (ms)=9680
		Total time spent by all reduce tasks (ms)=5860
		Total vcore-milliseconds taken by all map tasks=9680
		Total vcore-milliseconds taken by all reduce tasks=5860
		Total megabyte-milliseconds taken by all map tasks=39649280
		Total megabyte-milliseconds taken by all reduce tasks=24002560
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=796
		CPU time spent (ms)=6260
		Physical memory (bytes) snapshot=1368010752
		Virtual memory (bytes) snapshot=15745708032
		Total committed heap usage (bytes)=1274019840
		Peak Map Physical memory (bytes)=499855360
		Peak Map Virtual memory (bytes)=3941937152
		Peak Reduce Physical memory (bytes)=279822336
		Peak Reduce Virtual memory (bytes)=3956146176
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.695 seconds
2020-11-12 22:02:24 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-12 22:02:24 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201112 22:02:24.705" starttime="20201112 22:02:24.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:02:24.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:02:24.706" starttime="20201112 22:02:24.705"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:24.706" starttime="20201112 22:01:42.479"></status>
</kw>
<msg timestamp="20201112 22:02:24.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:02:24.706" starttime="20201112 22:01:42.479"></status>
</kw>
<msg timestamp="20201112 22:02:24.707" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:01:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01...</msg>
<status status="PASS" endtime="20201112 22:02:24.707" starttime="20201112 22:01:42.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:02:24.708" starttime="20201112 22:02:24.707"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:02:24.708" critical="yes" starttime="20201112 22:01:42.457"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:02:24.719" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:02:24.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:02:24.729" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:02:24.729" starttime="20201112 22:02:24.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:02:24.730" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:02:24.730" starttime="20201112 22:02:24.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:02:24.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:02:24.731" starttime="20201112 22:02:24.730"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:24.731" starttime="20201112 22:02:24.717"></status>
</kw>
<msg timestamp="20201112 22:02:24.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:02:24.731" starttime="20201112 22:02:24.716"></status>
</kw>
<msg timestamp="20201112 22:02:24.731" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:02:24.731" starttime="20201112 22:02:24.715"></status>
</kw>
<msg timestamp="20201112 22:02:24.731" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:02:24.731" starttime="20201112 22:02:24.715"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:02:24.732" level="INFO">${random} = 87</msg>
<status status="PASS" endtime="20201112 22:02:24.732" starttime="20201112 22:02:24.732"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:02:24.736" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:02:24.737" starttime="20201112 22:02:24.736"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:02:24.737" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:02:24.737" starttime="20201112 22:02:24.737"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:24.737" starttime="20201112 22:02:24.736"></status>
</kw>
<msg timestamp="20201112 22:02:24.737" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:02:24.738" starttime="20201112 22:02:24.735"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:02:24.738" starttime="20201112 22:02:24.738"></status>
</kw>
<msg timestamp="20201112 22:02:24.738" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 22:02:24.739" starttime="20201112 22:02:24.738"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:24.739" starttime="20201112 22:02:24.734"></status>
</kw>
<msg timestamp="20201112 22:02:24.739" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:02:24.739" starttime="20201112 22:02:24.733"></status>
</kw>
<msg timestamp="20201112 22:02:24.739" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:02:24.739" starttime="20201112 22:02:24.732"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:02:24.743" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:02:24.743" starttime="20201112 22:02:24.742"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:02:24.743" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:02:24.743" starttime="20201112 22:02:24.743"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:24.743" starttime="20201112 22:02:24.742"></status>
</kw>
<msg timestamp="20201112 22:02:24.744" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:02:24.744" starttime="20201112 22:02:24.741"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:02:24.745" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201112 22:02:24.745" starttime="20201112 22:02:24.745"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:02:24.746" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201112 22:02:24.746" starttime="20201112 22:02:24.745"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:24.746" starttime="20201112 22:02:24.744"></status>
</kw>
<msg timestamp="20201112 22:02:24.746" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201112 22:02:24.746" starttime="20201112 22:02:24.744"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:24.746" starttime="20201112 22:02:24.740"></status>
</kw>
<msg timestamp="20201112 22:02:24.747" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201112 22:02:24.747" starttime="20201112 22:02:24.740"></status>
</kw>
<msg timestamp="20201112 22:02:24.747" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201112 22:02:24.747" starttime="20201112 22:02:24.739"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:02:24.750" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:02:24.750" starttime="20201112 22:02:24.750"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:02:24.751" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:02:24.751" starttime="20201112 22:02:24.750"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:24.751" starttime="20201112 22:02:24.749"></status>
</kw>
<msg timestamp="20201112 22:02:24.751" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:02:24.751" starttime="20201112 22:02:24.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:02:24.753" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201112 22:02:24.753" starttime="20201112 22:02:24.752"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:02:24.753" level="INFO">${result} = /wordcount-87.txt</msg>
<status status="PASS" endtime="20201112 22:02:24.753" starttime="20201112 22:02:24.753"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:24.754" starttime="20201112 22:02:24.752"></status>
</kw>
<msg timestamp="20201112 22:02:24.754" level="INFO">${path_with_leading} = /wordcount-87.txt</msg>
<status status="PASS" endtime="20201112 22:02:24.754" starttime="20201112 22:02:24.751"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:24.754" starttime="20201112 22:02:24.748"></status>
</kw>
<msg timestamp="20201112 22:02:24.754" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-87.txt</msg>
<status status="PASS" endtime="20201112 22:02:24.754" starttime="20201112 22:02:24.748"></status>
</kw>
<msg timestamp="20201112 22:02:24.754" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-87.txt</msg>
<status status="PASS" endtime="20201112 22:02:24.754" starttime="20201112 22:02:24.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:02:24.758" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-87.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:02:59.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:02:59.929" level="INFO">${output} = 2020-11-12 22:02:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 22:02:59.929" starttime="20201112 22:02:24.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:02:59.931" level="INFO">2020-11-12 22:02:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-12 22:02:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 22:02:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:26 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-12 22:02:26 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-12 22:02:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:02:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:02:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:02:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3C9DCE665B78-&gt;615735bd-199f-4ee3-9ef3-3c6275ede535
2020-11-12 22:02:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 22:02:28 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:02:28 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:02:30 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605218343883_0004
2020-11-12 22:02:30 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-12 22:02:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:31 INFO  Configuration:2752 - resource-types.xml not found
2020-11-12 22:02:31 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-12 22:02:31 INFO  YarnClientImpl:324 - Submitted application application_1605218343883_0004
2020-11-12 22:02:31 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605218343883_0004/
2020-11-12 22:02:31 INFO  Job:1619 - Running job: job_1605218343883_0004
2020-11-12 22:02:38 INFO  Job:1640 - Job job_1605218343883_0004 running in uber mode : false
2020-11-12 22:02:38 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:02:44 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:02:49 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:02:54 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:02:59 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:02:59 INFO  Job:1658 - Job job_1605218343883_0004 completed successfully
2020-11-12 22:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1077803
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36456
		Total time spent by all reduces in occupied slots (ms)=14080
		Total time spent by all map tasks (ms)=9114
		Total time spent by all reduce tasks (ms)=3520
		Total vcore-milliseconds taken by all map tasks=9114
		Total vcore-milliseconds taken by all reduce tasks=3520
		Total megabyte-milliseconds taken by all map tasks=37330944
		Total megabyte-milliseconds taken by all reduce tasks=14417920
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=553
		CPU time spent (ms)=6630
		Physical memory (bytes) snapshot=1213161472
		Virtual memory (bytes) snapshot=15802712064
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=310145024
		Peak Map Virtual memory (bytes)=3946991616
		Peak Reduce Physical memory (bytes)=294535168
		Peak Reduce Virtual memory (bytes)=3969249280
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-12 22:02:59 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201112 22:02:59.931" starttime="20201112 22:02:59.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:02:59.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:02:59.931" starttime="20201112 22:02:59.931"></status>
</kw>
<status status="PASS" endtime="20201112 22:02:59.932" starttime="20201112 22:02:24.756"></status>
</kw>
<msg timestamp="20201112 22:02:59.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:02:59.932" starttime="20201112 22:02:24.755"></status>
</kw>
<msg timestamp="20201112 22:02:59.932" level="INFO">${output} = 2020-11-12 22:02:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:02:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 22:02:59.932" starttime="20201112 22:02:24.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201112 22:02:59.933" starttime="20201112 22:02:59.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:02:59.933" starttime="20201112 22:02:59.933"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:02:59.934" critical="yes" starttime="20201112 22:02:24.714"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201112 22:02:59.935" starttime="20201112 22:01:42.407"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:00:04.745" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:00:04.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:00:04.750" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:00:04.750" starttime="20201112 22:00:04.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:00:04.751" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:00:04.751" starttime="20201112 22:00:04.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:00:04.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:00:04.751" starttime="20201112 22:00:04.751"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:04.752" starttime="20201112 22:00:04.740"></status>
</kw>
<msg timestamp="20201112 22:00:04.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:00:04.752" starttime="20201112 22:00:04.739"></status>
</kw>
<msg timestamp="20201112 22:00:04.752" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:00:04.752" starttime="20201112 22:00:04.739"></status>
</kw>
<msg timestamp="20201112 22:00:04.752" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:00:04.752" starttime="20201112 22:00:04.739"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:00:04.756" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:00:04.756" starttime="20201112 22:00:04.756"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:00:04.757" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:00:04.757" starttime="20201112 22:00:04.757"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:04.757" starttime="20201112 22:00:04.755"></status>
</kw>
<msg timestamp="20201112 22:00:04.757" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:00:04.757" starttime="20201112 22:00:04.754"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:04.758" starttime="20201112 22:00:04.753"></status>
</kw>
<msg timestamp="20201112 22:00:04.758" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:00:04.758" starttime="20201112 22:00:04.753"></status>
</kw>
<msg timestamp="20201112 22:00:04.758" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:00:04.758" starttime="20201112 22:00:04.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:00:04.761" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:00:47.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:00:47.909" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:00:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00...</msg>
<status status="PASS" endtime="20201112 22:00:47.909" starttime="20201112 22:00:04.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:00:47.910" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:00:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:06 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-12 22:00:06 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-12 22:00:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:00:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:00:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:00:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BFB01115856B-&gt;615735bd-199f-4ee3-9ef3-3c6275ede535
2020-11-12 22:00:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-12 22:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:10 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-12 22:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:10 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:00:10 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:00:11 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605218343883_0001
2020-11-12 22:00:11 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-12 22:00:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:11 INFO  Configuration:2752 - resource-types.xml not found
2020-11-12 22:00:11 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-12 22:00:11 INFO  YarnClientImpl:324 - Submitted application application_1605218343883_0001
2020-11-12 22:00:11 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605218343883_0001/
2020-11-12 22:00:11 INFO  Job:1619 - Running job: job_1605218343883_0001
2020-11-12 22:00:21 INFO  Job:1640 - Job job_1605218343883_0001 running in uber mode : false
2020-11-12 22:00:21 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:00:28 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:00:32 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:00:37 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:00:42 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:00:47 INFO  Job:1658 - Job job_1605218343883_0001 completed successfully
2020-11-12 22:00:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1015641
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36576
		Total time spent by all reduces in occupied slots (ms)=14112
		Total time spent by all map tasks (ms)=9144
		Total time spent by all reduce tasks (ms)=3528
		Total vcore-milliseconds taken by all map tasks=9144
		Total vcore-milliseconds taken by all reduce tasks=3528
		Total megabyte-milliseconds taken by all map tasks=37453824
		Total megabyte-milliseconds taken by all reduce tasks=14450688
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=583
		CPU time spent (ms)=5680
		Physical memory (bytes) snapshot=1225375744
		Virtual memory (bytes) snapshot=15794651136
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=311640064
		Peak Map Virtual memory (bytes)=3943931904
		Peak Reduce Physical memory (bytes)=300494848
		Peak Reduce Virtual memory (bytes)=3970338816
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.194 seconds
2020-11-12 22:00:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:47 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-12 22:00:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201112 22:00:47.911" starttime="20201112 22:00:47.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:00:47.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:00:47.911" starttime="20201112 22:00:47.911"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:47.912" starttime="20201112 22:00:04.759"></status>
</kw>
<msg timestamp="20201112 22:00:47.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:00:47.912" starttime="20201112 22:00:04.759"></status>
</kw>
<msg timestamp="20201112 22:00:47.912" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:00:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00...</msg>
<status status="PASS" endtime="20201112 22:00:47.912" starttime="20201112 22:00:04.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:00:47.913" starttime="20201112 22:00:47.913"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:00:47.913" critical="yes" starttime="20201112 22:00:04.738"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:00:47.918" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:00:47.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:00:47.924" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:00:47.924" starttime="20201112 22:00:47.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:00:47.925" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:00:47.925" starttime="20201112 22:00:47.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:00:47.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:00:47.926" starttime="20201112 22:00:47.925"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:47.926" starttime="20201112 22:00:47.915"></status>
</kw>
<msg timestamp="20201112 22:00:47.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:00:47.926" starttime="20201112 22:00:47.915"></status>
</kw>
<msg timestamp="20201112 22:00:47.926" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:00:47.926" starttime="20201112 22:00:47.915"></status>
</kw>
<msg timestamp="20201112 22:00:47.926" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201112 22:00:47.927" starttime="20201112 22:00:47.914"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:00:47.927" level="INFO">${random} = 70</msg>
<status status="PASS" endtime="20201112 22:00:47.927" starttime="20201112 22:00:47.927"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:00:47.931" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:00:47.931" starttime="20201112 22:00:47.930"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:00:47.931" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:00:47.932" starttime="20201112 22:00:47.931"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:47.932" starttime="20201112 22:00:47.930"></status>
</kw>
<msg timestamp="20201112 22:00:47.932" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:00:47.932" starttime="20201112 22:00:47.929"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:47.932" starttime="20201112 22:00:47.929"></status>
</kw>
<msg timestamp="20201112 22:00:47.932" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:00:47.932" starttime="20201112 22:00:47.928"></status>
</kw>
<msg timestamp="20201112 22:00:47.932" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:00:47.933" starttime="20201112 22:00:47.927"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:00:47.936" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:00:47.936" starttime="20201112 22:00:47.935"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:00:47.936" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:00:47.936" starttime="20201112 22:00:47.936"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:47.936" starttime="20201112 22:00:47.935"></status>
</kw>
<msg timestamp="20201112 22:00:47.936" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:00:47.937" starttime="20201112 22:00:47.934"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:47.937" starttime="20201112 22:00:47.934"></status>
</kw>
<msg timestamp="20201112 22:00:47.937" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201112 22:00:47.937" starttime="20201112 22:00:47.933"></status>
</kw>
<msg timestamp="20201112 22:00:47.937" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201112 22:00:47.937" starttime="20201112 22:00:47.933"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:00:47.940" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:00:47.940" starttime="20201112 22:00:47.940"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:00:47.941" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:00:47.941" starttime="20201112 22:00:47.940"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:47.941" starttime="20201112 22:00:47.939"></status>
</kw>
<msg timestamp="20201112 22:00:47.941" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:00:47.941" starttime="20201112 22:00:47.939"></status>
</kw>
<status status="PASS" endtime="20201112 22:00:47.941" starttime="20201112 22:00:47.938"></status>
</kw>
<msg timestamp="20201112 22:00:47.941" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-70.txt</msg>
<status status="PASS" endtime="20201112 22:00:47.941" starttime="20201112 22:00:47.938"></status>
</kw>
<msg timestamp="20201112 22:00:47.942" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-70.txt</msg>
<status status="PASS" endtime="20201112 22:00:47.942" starttime="20201112 22:00:47.937"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:00:47.946" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-70.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:01:27.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:01:27.943" level="INFO">${output} = 2020-11-12 22:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 22:01:27.943" starttime="20201112 22:00:47.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:01:27.944" level="INFO">2020-11-12 22:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-12 22:00:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 22:00:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:50 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-12 22:00:50 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-12 22:00:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:00:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:00:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:00:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E6665F19BC0C-&gt;615735bd-199f-4ee3-9ef3-3c6275ede535
2020-11-12 22:00:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 22:00:53 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:00:56 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:00:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605218343883_0002
2020-11-12 22:00:56 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-12 22:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:56 INFO  Configuration:2752 - resource-types.xml not found
2020-11-12 22:00:56 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-12 22:00:57 INFO  YarnClientImpl:324 - Submitted application application_1605218343883_0002
2020-11-12 22:00:57 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605218343883_0002/
2020-11-12 22:00:57 INFO  Job:1619 - Running job: job_1605218343883_0002
2020-11-12 22:01:04 INFO  Job:1640 - Job job_1605218343883_0002 running in uber mode : false
2020-11-12 22:01:04 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:01:11 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:01:17 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:01:22 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:01:26 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:01:27 INFO  Job:1658 - Job job_1605218343883_0002 completed successfully
2020-11-12 22:01:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:01:27 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1077887
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39592
		Total time spent by all reduces in occupied slots (ms)=14188
		Total time spent by all map tasks (ms)=9898
		Total time spent by all reduce tasks (ms)=3547
		Total vcore-milliseconds taken by all map tasks=9898
		Total vcore-milliseconds taken by all reduce tasks=3547
		Total megabyte-milliseconds taken by all map tasks=40542208
		Total megabyte-milliseconds taken by all reduce tasks=14528512
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=632
		CPU time spent (ms)=6840
		Physical memory (bytes) snapshot=1214676992
		Virtual memory (bytes) snapshot=15786602496
		Total committed heap usage (bytes)=1070071808
		Peak Map Physical memory (bytes)=313647104
		Peak Map Virtual memory (bytes)=3949182976
		Peak Reduce Physical memory (bytes)=298160128
		Peak Reduce Virtual memory (bytes)=3966492672
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-12 22:01:27 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201112 22:01:27.944" starttime="20201112 22:01:27.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:01:27.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:01:27.945" starttime="20201112 22:01:27.944"></status>
</kw>
<status status="PASS" endtime="20201112 22:01:27.945" starttime="20201112 22:00:47.943"></status>
</kw>
<msg timestamp="20201112 22:01:27.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:01:27.945" starttime="20201112 22:00:47.942"></status>
</kw>
<msg timestamp="20201112 22:01:27.946" level="INFO">${output} = 2020-11-12 22:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-12 22:00:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201112 22:01:27.946" starttime="20201112 22:00:47.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201112 22:01:27.946" starttime="20201112 22:01:27.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:01:27.947" starttime="20201112 22:01:27.946"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:01:27.947" critical="yes" starttime="20201112 22:00:47.914"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201112 22:01:27.948" starttime="20201112 22:00:04.691"></status>
</suite>
<status status="PASS" elapsedtime="197570" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:05.773" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:09.485" level="INFO">${rc} = 255</msg>
<msg timestamp="20201112 22:04:09.485" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201112 22:04:09.485" starttime="20201112 22:04:05.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:09.487" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201112 22:04:09.487" starttime="20201112 22:04:09.486"></status>
</kw>
<msg timestamp="20201112 22:04:09.487" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201112 22:04:09.487" starttime="20201112 22:04:05.767"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:09.492" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:12.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:12.609" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:04:12.610" starttime="20201112 22:04:09.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:12.611" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:04:12.611" starttime="20201112 22:04:12.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:12.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:12.611" starttime="20201112 22:04:12.611"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:12.612" starttime="20201112 22:04:09.489"></status>
</kw>
<msg timestamp="20201112 22:04:12.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:12.612" starttime="20201112 22:04:09.489"></status>
</kw>
<msg timestamp="20201112 22:04:12.612" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201112 22:04:12.612" starttime="20201112 22:04:09.488"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201112 22:04:12.613" starttime="20201112 22:04:12.612"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:12.613" starttime="20201112 22:04:09.488"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:12.613" starttime="20201112 22:04:09.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:12.618" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:15.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:15.718" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:04:15.718" starttime="20201112 22:04:12.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:15.719" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:04:15.719" starttime="20201112 22:04:15.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:15.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:15.720" starttime="20201112 22:04:15.719"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:15.720" starttime="20201112 22:04:12.615"></status>
</kw>
<msg timestamp="20201112 22:04:15.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:15.720" starttime="20201112 22:04:12.614"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:15.721" starttime="20201112 22:04:12.614"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:15.721" starttime="20201112 22:04:12.614"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:15.721" starttime="20201112 22:04:12.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201112 22:04:15.721" starttime="20201112 22:04:15.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:15.725" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:18.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:18.921" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-12T22:04:15.497Z",
  "modificat...</msg>
<status status="PASS" endtime="20201112 22:04:18.921" starttime="20201112 22:04:15.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:18.922" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-12T22:04:15.497Z",
  "modificationTime" : "2020-11-12T22:04:15.497Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201112 22:04:18.922" starttime="20201112 22:04:18.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:18.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:18.923" starttime="20201112 22:04:18.922"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:18.923" starttime="20201112 22:04:15.723"></status>
</kw>
<msg timestamp="20201112 22:04:18.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:18.923" starttime="20201112 22:04:15.722"></status>
</kw>
<msg timestamp="20201112 22:04:18.924" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-12T22:04:15.497Z",
  "modificat...</msg>
<status status="PASS" endtime="20201112 22:04:18.924" starttime="20201112 22:04:15.722"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201112 22:04:18.924" starttime="20201112 22:04:18.924"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:04:18.928" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:04:18.928" starttime="20201112 22:04:18.928"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:04:18.929" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:04:18.929" starttime="20201112 22:04:18.928"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:18.929" starttime="20201112 22:04:18.927"></status>
</kw>
<msg timestamp="20201112 22:04:18.929" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:04:18.929" starttime="20201112 22:04:18.927"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:18.929" starttime="20201112 22:04:18.926"></status>
</kw>
<msg timestamp="20201112 22:04:18.929" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201112 22:04:18.929" starttime="20201112 22:04:18.925"></status>
</kw>
<msg timestamp="20201112 22:04:18.930" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201112 22:04:18.930" starttime="20201112 22:04:18.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:18.934" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:22.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:22.174" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:04:22.174" starttime="20201112 22:04:18.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:22.176" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:04:22.176" starttime="20201112 22:04:22.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:22.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:22.176" starttime="20201112 22:04:22.176"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:22.177" starttime="20201112 22:04:18.930"></status>
</kw>
<msg timestamp="20201112 22:04:22.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:22.177" starttime="20201112 22:04:18.930"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:22.177" starttime="20201112 22:04:18.930"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:22.182" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:28.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:28.863" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:04:28.863" starttime="20201112 22:04:22.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:28.864" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:04:28.865" starttime="20201112 22:04:28.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:28.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:28.865" starttime="20201112 22:04:28.865"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:28.866" starttime="20201112 22:04:22.178"></status>
</kw>
<msg timestamp="20201112 22:04:28.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:28.866" starttime="20201112 22:04:22.178"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:28.866" starttime="20201112 22:04:22.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:28.870" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:34.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:34.711" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:04:34.711" starttime="20201112 22:04:28.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:34.713" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:04:34.713" starttime="20201112 22:04:34.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:34.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:34.713" starttime="20201112 22:04:34.713"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:34.714" starttime="20201112 22:04:28.867"></status>
</kw>
<msg timestamp="20201112 22:04:34.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:34.714" starttime="20201112 22:04:28.867"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:34.714" starttime="20201112 22:04:28.866"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:34.718" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:39.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:39.909" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:04:39.909" starttime="20201112 22:04:34.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:39.910" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:04:39.910" starttime="20201112 22:04:39.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:39.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:39.911" starttime="20201112 22:04:39.910"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:39.911" starttime="20201112 22:04:34.715"></status>
</kw>
<msg timestamp="20201112 22:04:39.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:39.911" starttime="20201112 22:04:34.715"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:39.911" starttime="20201112 22:04:34.714"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201112 22:04:39.911" critical="yes" starttime="20201112 22:04:05.766"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:04:39.917" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:04:39.917" starttime="20201112 22:04:39.916"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:04:39.917" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:04:39.917" starttime="20201112 22:04:39.917"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:39.918" starttime="20201112 22:04:39.916"></status>
</kw>
<msg timestamp="20201112 22:04:39.918" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:04:39.918" starttime="20201112 22:04:39.915"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:39.918" starttime="20201112 22:04:39.915"></status>
</kw>
<msg timestamp="20201112 22:04:39.918" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 22:04:39.918" starttime="20201112 22:04:39.914"></status>
</kw>
<msg timestamp="20201112 22:04:39.918" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 22:04:39.918" starttime="20201112 22:04:39.913"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:39.922" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:42.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:42.861" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:04:42.861" starttime="20201112 22:04:39.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:42.862" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:04:42.862" starttime="20201112 22:04:42.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:42.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:42.862" starttime="20201112 22:04:42.862"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:42.863" starttime="20201112 22:04:39.919"></status>
</kw>
<msg timestamp="20201112 22:04:42.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:42.863" starttime="20201112 22:04:39.919"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:42.863" starttime="20201112 22:04:39.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:42.868" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:45.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:45.799" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:04:45.799" starttime="20201112 22:04:42.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:45.800" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:04:45.800" starttime="20201112 22:04:45.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:45.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:45.801" starttime="20201112 22:04:45.800"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:45.801" starttime="20201112 22:04:42.864"></status>
</kw>
<msg timestamp="20201112 22:04:45.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:45.801" starttime="20201112 22:04:42.864"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:45.802" starttime="20201112 22:04:42.863"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201112 22:04:45.802" critical="yes" starttime="20201112 22:04:39.912"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201112 22:04:45.803" starttime="20201112 22:04:05.703"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:06:20.847" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:06:20.847" starttime="20201112 22:06:20.846"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:06:20.847" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:06:20.847" starttime="20201112 22:06:20.847"></status>
</kw>
<status status="PASS" endtime="20201112 22:06:20.847" starttime="20201112 22:06:20.846"></status>
</kw>
<msg timestamp="20201112 22:06:20.848" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:06:20.848" starttime="20201112 22:06:20.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:06:20.860" starttime="20201112 22:06:20.848"></status>
</kw>
<msg timestamp="20201112 22:06:20.860" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 22:06:20.860" starttime="20201112 22:06:20.848"></status>
</kw>
<status status="PASS" endtime="20201112 22:06:20.860" starttime="20201112 22:06:20.844"></status>
</kw>
<msg timestamp="20201112 22:06:20.860" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:06:20.861" starttime="20201112 22:06:20.829"></status>
</kw>
<msg timestamp="20201112 22:06:20.861" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:06:20.861" starttime="20201112 22:06:20.827"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:06:20.861" level="INFO">${random} = 38161</msg>
<status status="PASS" endtime="20201112 22:06:20.861" starttime="20201112 22:06:20.861"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:06:20.874" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-38161 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:06:24.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:06:24.314" level="INFO">${output} = 2020-11-12 22:06:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:06:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201112 22:06:24.314" starttime="20201112 22:06:20.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:06:24.315" level="INFO">2020-11-12 22:06:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:06:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:06:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:06:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:06:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-25FBFA2B59D8-&gt;cf441b86-9ed1-4c99-a3e4-9aff3d72913c
2020-11-12 22:06:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201112 22:06:24.315" starttime="20201112 22:06:24.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:06:24.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:06:24.316" starttime="20201112 22:06:24.315"></status>
</kw>
<status status="PASS" endtime="20201112 22:06:24.316" starttime="20201112 22:06:20.862"></status>
</kw>
<msg timestamp="20201112 22:06:24.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:06:24.316" starttime="20201112 22:06:20.862"></status>
</kw>
<msg timestamp="20201112 22:06:24.317" level="INFO">${result} = 2020-11-12 22:06:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:06:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201112 22:06:24.317" starttime="20201112 22:06:20.861"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:06:24.321" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:06:26.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:06:26.105" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:06 ofs://om/volume1/bucket1/ozone-38161
-rw-...</msg>
<status status="PASS" endtime="20201112 22:06:26.105" starttime="20201112 22:06:24.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:06:26.106" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:06 ofs://om/volume1/bucket1/ozone-38161
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:04 ofs://om/volume1/bucket1/ozone-92196
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:04 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:05 ofs://om/volume1/bucket1/wordcount-86.txt</msg>
<status status="PASS" endtime="20201112 22:06:26.106" starttime="20201112 22:06:26.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:06:26.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:06:26.107" starttime="20201112 22:06:26.106"></status>
</kw>
<status status="PASS" endtime="20201112 22:06:26.107" starttime="20201112 22:06:24.319"></status>
</kw>
<msg timestamp="20201112 22:06:26.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:06:26.107" starttime="20201112 22:06:24.318"></status>
</kw>
<msg timestamp="20201112 22:06:26.108" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:06 ofs://om/volume1/bucket1/ozone-38161
-rw-...</msg>
<status status="PASS" endtime="20201112 22:06:26.108" starttime="20201112 22:06:24.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:06:26.108" starttime="20201112 22:06:26.108"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:06:26.108" critical="yes" starttime="20201112 22:06:20.824"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201112 22:06:26.109" starttime="20201112 22:06:20.774"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:04:50.373" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:04:50.373" starttime="20201112 22:04:50.373"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:04:50.374" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:04:50.374" starttime="20201112 22:04:50.373"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:50.374" starttime="20201112 22:04:50.372"></status>
</kw>
<msg timestamp="20201112 22:04:50.374" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:04:50.374" starttime="20201112 22:04:50.372"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:50.375" starttime="20201112 22:04:50.371"></status>
</kw>
<msg timestamp="20201112 22:04:50.375" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:04:50.375" starttime="20201112 22:04:50.371"></status>
</kw>
<msg timestamp="20201112 22:04:50.375" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:04:50.375" starttime="20201112 22:04:50.370"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:04:50.375" level="INFO">${random} = 92196</msg>
<status status="PASS" endtime="20201112 22:04:50.376" starttime="20201112 22:04:50.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:50.381" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-92196 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:56.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:56.499" level="INFO">${output} = 2020-11-12 22:04:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:04:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201112 22:04:56.499" starttime="20201112 22:04:50.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:56.500" level="INFO">2020-11-12 22:04:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:04:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:04:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:04:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:04:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F889BED21A47-&gt;cf441b86-9ed1-4c99-a3e4-9aff3d72913c
2020-11-12 22:04:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201112 22:04:56.500" starttime="20201112 22:04:56.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:56.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:56.501" starttime="20201112 22:04:56.500"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:56.501" starttime="20201112 22:04:50.376"></status>
</kw>
<msg timestamp="20201112 22:04:56.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:56.501" starttime="20201112 22:04:50.376"></status>
</kw>
<msg timestamp="20201112 22:04:56.502" level="INFO">${result} = 2020-11-12 22:04:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:04:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201112 22:04:56.502" starttime="20201112 22:04:50.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:04:56.514" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:04:58.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:04:58.233" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:04 o3fs://bucket1.volume1.om/ozone-92196
dr...</msg>
<status status="PASS" endtime="20201112 22:04:58.233" starttime="20201112 22:04:56.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:04:58.234" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:04 o3fs://bucket1.volume1.om/ozone-92196
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:04 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 22:04:58.234" starttime="20201112 22:04:58.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:04:58.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:04:58.235" starttime="20201112 22:04:58.234"></status>
</kw>
<status status="PASS" endtime="20201112 22:04:58.235" starttime="20201112 22:04:56.504"></status>
</kw>
<msg timestamp="20201112 22:04:58.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:04:58.235" starttime="20201112 22:04:56.502"></status>
</kw>
<msg timestamp="20201112 22:04:58.235" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:04 o3fs://bucket1.volume1.om/ozone-92196
dr...</msg>
<status status="PASS" endtime="20201112 22:04:58.235" starttime="20201112 22:04:56.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:04:58.236" starttime="20201112 22:04:58.236"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:04:58.236" critical="yes" starttime="20201112 22:04:50.369"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201112 22:04:58.238" starttime="20201112 22:04:50.317"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:06:30.684" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:06:30.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:06:30.688" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:06:30.688" starttime="20201112 22:06:30.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:06:30.689" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:06:30.690" starttime="20201112 22:06:30.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:06:30.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:06:30.690" starttime="20201112 22:06:30.690"></status>
</kw>
<status status="PASS" endtime="20201112 22:06:30.690" starttime="20201112 22:06:30.679"></status>
</kw>
<msg timestamp="20201112 22:06:30.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:06:30.691" starttime="20201112 22:06:30.679"></status>
</kw>
<msg timestamp="20201112 22:06:30.691" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:06:30.691" starttime="20201112 22:06:30.678"></status>
</kw>
<msg timestamp="20201112 22:06:30.691" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:06:30.691" starttime="20201112 22:06:30.678"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:06:30.696" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:06:30.696" starttime="20201112 22:06:30.695"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:06:30.696" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:06:30.696" starttime="20201112 22:06:30.696"></status>
</kw>
<status status="PASS" endtime="20201112 22:06:30.697" starttime="20201112 22:06:30.694"></status>
</kw>
<msg timestamp="20201112 22:06:30.697" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:06:30.697" starttime="20201112 22:06:30.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:06:30.698" starttime="20201112 22:06:30.697"></status>
</kw>
<msg timestamp="20201112 22:06:30.698" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 22:06:30.698" starttime="20201112 22:06:30.697"></status>
</kw>
<status status="PASS" endtime="20201112 22:06:30.698" starttime="20201112 22:06:30.693"></status>
</kw>
<msg timestamp="20201112 22:06:30.698" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:06:30.698" starttime="20201112 22:06:30.692"></status>
</kw>
<msg timestamp="20201112 22:06:30.698" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:06:30.698" starttime="20201112 22:06:30.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:06:30.702" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:07:06.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:07:06.023" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:06:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:06:32 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201112 22:07:06.023" starttime="20201112 22:06:30.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:07:06.024" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:06:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:06:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:06:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:06:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:06:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E967905C8AFC-&gt;cf441b86-9ed1-4c99-a3e4-9aff3d72913c
2020-11-12 22:06:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-12 22:06:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-12 22:06:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 22:06:34 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:06:34 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:06:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605218620984_0003
2020-11-12 22:06:34 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-12 22:06:34 INFO  Configuration:2795 - resource-types.xml not found
2020-11-12 22:06:34 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-12 22:06:34 INFO  YarnClientImpl:329 - Submitted application application_1605218620984_0003
2020-11-12 22:06:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605218620984_0003/
2020-11-12 22:06:34 INFO  Job:1619 - Running job: job_1605218620984_0003
2020-11-12 22:06:42 INFO  Job:1640 - Job job_1605218620984_0003 running in uber mode : false
2020-11-12 22:06:42 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:06:48 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:06:53 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:06:58 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:07:04 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:07:05 INFO  Job:1658 - Job job_1605218620984_0003 completed successfully
2020-11-12 22:07:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1055557
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38380
		Total time spent by all reduces in occupied slots (ms)=23508
		Total time spent by all map tasks (ms)=9595
		Total time spent by all reduce tasks (ms)=5877
		Total vcore-milliseconds taken by all map tasks=9595
		Total vcore-milliseconds taken by all reduce tasks=5877
		Total megabyte-milliseconds taken by all map tasks=39301120
		Total megabyte-milliseconds taken by all reduce tasks=24072192
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=609
		CPU time spent (ms)=7160
		Physical memory (bytes) snapshot=1179320320
		Virtual memory (bytes) snapshot=15817949184
		Total committed heap usage (bytes)=1062731776
		Peak Map Physical memory (bytes)=292900864
		Peak Map Virtual memory (bytes)=3948662784
		Peak Reduce Physical memory (bytes)=302088192
		Peak Reduce Virtual memory (bytes)=3974111232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.794 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201112 22:07:06.024" starttime="20201112 22:07:06.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:07:06.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:07:06.025" starttime="20201112 22:07:06.024"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:06.025" starttime="20201112 22:06:30.699"></status>
</kw>
<msg timestamp="20201112 22:07:06.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:07:06.025" starttime="20201112 22:06:30.699"></status>
</kw>
<msg timestamp="20201112 22:07:06.026" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:06:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:06:32 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201112 22:07:06.026" starttime="20201112 22:06:30.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:07:06.026" starttime="20201112 22:07:06.026"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:07:06.026" critical="yes" starttime="20201112 22:06:30.677"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:07:06.031" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:07:06.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:07:06.038" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:07:06.038" starttime="20201112 22:07:06.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:07:06.039" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:07:06.039" starttime="20201112 22:07:06.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:07:06.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:07:06.040" starttime="20201112 22:07:06.040"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:06.040" starttime="20201112 22:07:06.029"></status>
</kw>
<msg timestamp="20201112 22:07:06.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:07:06.041" starttime="20201112 22:07:06.029"></status>
</kw>
<msg timestamp="20201112 22:07:06.041" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:07:06.041" starttime="20201112 22:07:06.028"></status>
</kw>
<msg timestamp="20201112 22:07:06.041" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:07:06.041" starttime="20201112 22:07:06.028"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:07:06.042" level="INFO">${random} = 75</msg>
<status status="PASS" endtime="20201112 22:07:06.042" starttime="20201112 22:07:06.041"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:07:06.045" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:07:06.045" starttime="20201112 22:07:06.045"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:07:06.046" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:07:06.046" starttime="20201112 22:07:06.046"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:06.046" starttime="20201112 22:07:06.045"></status>
</kw>
<msg timestamp="20201112 22:07:06.046" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:07:06.046" starttime="20201112 22:07:06.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:07:06.047" starttime="20201112 22:07:06.047"></status>
</kw>
<msg timestamp="20201112 22:07:06.047" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 22:07:06.047" starttime="20201112 22:07:06.047"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:06.048" starttime="20201112 22:07:06.043"></status>
</kw>
<msg timestamp="20201112 22:07:06.048" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:07:06.048" starttime="20201112 22:07:06.043"></status>
</kw>
<msg timestamp="20201112 22:07:06.048" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:07:06.048" starttime="20201112 22:07:06.042"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:07:06.051" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:07:06.051" starttime="20201112 22:07:06.051"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:07:06.052" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:07:06.052" starttime="20201112 22:07:06.051"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:06.052" starttime="20201112 22:07:06.050"></status>
</kw>
<msg timestamp="20201112 22:07:06.052" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:07:06.052" starttime="20201112 22:07:06.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:07:06.053" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201112 22:07:06.054" starttime="20201112 22:07:06.053"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:07:06.054" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201112 22:07:06.054" starttime="20201112 22:07:06.054"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:06.054" starttime="20201112 22:07:06.053"></status>
</kw>
<msg timestamp="20201112 22:07:06.054" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201112 22:07:06.054" starttime="20201112 22:07:06.052"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:06.055" starttime="20201112 22:07:06.049"></status>
</kw>
<msg timestamp="20201112 22:07:06.055" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201112 22:07:06.055" starttime="20201112 22:07:06.049"></status>
</kw>
<msg timestamp="20201112 22:07:06.055" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201112 22:07:06.055" starttime="20201112 22:07:06.048"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:07:06.058" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:07:06.058" starttime="20201112 22:07:06.058"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:07:06.059" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:07:06.059" starttime="20201112 22:07:06.058"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:06.059" starttime="20201112 22:07:06.057"></status>
</kw>
<msg timestamp="20201112 22:07:06.059" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:07:06.059" starttime="20201112 22:07:06.057"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:07:06.060" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201112 22:07:06.060" starttime="20201112 22:07:06.060"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:07:06.061" level="INFO">${result} = /wordcount-75.txt</msg>
<status status="PASS" endtime="20201112 22:07:06.061" starttime="20201112 22:07:06.061"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:06.061" starttime="20201112 22:07:06.060"></status>
</kw>
<msg timestamp="20201112 22:07:06.061" level="INFO">${path_with_leading} = /wordcount-75.txt</msg>
<status status="PASS" endtime="20201112 22:07:06.061" starttime="20201112 22:07:06.059"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:06.062" starttime="20201112 22:07:06.056"></status>
</kw>
<msg timestamp="20201112 22:07:06.062" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-75.txt</msg>
<status status="PASS" endtime="20201112 22:07:06.062" starttime="20201112 22:07:06.056"></status>
</kw>
<msg timestamp="20201112 22:07:06.062" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-75.txt</msg>
<status status="PASS" endtime="20201112 22:07:06.062" starttime="20201112 22:07:06.055"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:07:06.065" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-75.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:07:39.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:07:39.851" level="INFO">${output} = 2020-11-12 22:07:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-12 22:07:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201112 22:07:39.851" starttime="20201112 22:07:06.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:07:39.852" level="INFO">2020-11-12 22:07:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-12 22:07:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 22:07:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:07:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:07:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:07:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:07:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E6A5B526AF36-&gt;cf441b86-9ed1-4c99-a3e4-9aff3d72913c
2020-11-12 22:07:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 22:07:09 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:07:09 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:07:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605218620984_0004
2020-11-12 22:07:09 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-12 22:07:09 INFO  Configuration:2795 - resource-types.xml not found
2020-11-12 22:07:09 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-12 22:07:09 INFO  YarnClientImpl:329 - Submitted application application_1605218620984_0004
2020-11-12 22:07:10 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605218620984_0004/
2020-11-12 22:07:10 INFO  Job:1619 - Running job: job_1605218620984_0004
2020-11-12 22:07:18 INFO  Job:1640 - Job job_1605218620984_0004 running in uber mode : false
2020-11-12 22:07:18 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:07:24 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:07:29 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:07:34 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:07:39 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:07:39 INFO  Job:1658 - Job job_1605218620984_0004 completed successfully
2020-11-12 22:07:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1117907
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38192
		Total time spent by all reduces in occupied slots (ms)=14920
		Total time spent by all map tasks (ms)=9548
		Total time spent by all reduce tasks (ms)=3730
		Total vcore-milliseconds taken by all map tasks=9548
		Total vcore-milliseconds taken by all reduce tasks=3730
		Total megabyte-milliseconds taken by all map tasks=39108608
		Total megabyte-milliseconds taken by all reduce tasks=15278080
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=626
		CPU time spent (ms)=6900
		Physical memory (bytes) snapshot=1147731968
		Virtual memory (bytes) snapshot=15796596736
		Total committed heap usage (bytes)=1010827264
		Peak Map Physical memory (bytes)=298426368
		Peak Map Virtual memory (bytes)=3953156096
		Peak Reduce Physical memory (bytes)=287252480
		Peak Reduce Virtual memory (bytes)=3968204800
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201112 22:07:39.853" starttime="20201112 22:07:39.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:07:39.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:07:39.854" starttime="20201112 22:07:39.853"></status>
</kw>
<status status="PASS" endtime="20201112 22:07:39.854" starttime="20201112 22:07:06.063"></status>
</kw>
<msg timestamp="20201112 22:07:39.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:07:39.854" starttime="20201112 22:07:06.063"></status>
</kw>
<msg timestamp="20201112 22:07:39.854" level="INFO">${output} = 2020-11-12 22:07:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-12 22:07:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201112 22:07:39.854" starttime="20201112 22:07:06.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201112 22:07:39.855" starttime="20201112 22:07:39.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:07:39.856" starttime="20201112 22:07:39.855"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:07:39.856" critical="yes" starttime="20201112 22:07:06.027"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201112 22:07:39.857" starttime="20201112 22:06:30.627"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:05:02.967" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:05:02.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:05:02.972" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:05:02.972" starttime="20201112 22:05:02.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:05:02.973" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:05:02.973" starttime="20201112 22:05:02.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:05:02.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:05:02.974" starttime="20201112 22:05:02.973"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:02.974" starttime="20201112 22:05:02.963"></status>
</kw>
<msg timestamp="20201112 22:05:02.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:05:02.974" starttime="20201112 22:05:02.963"></status>
</kw>
<msg timestamp="20201112 22:05:02.975" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:05:02.975" starttime="20201112 22:05:02.962"></status>
</kw>
<msg timestamp="20201112 22:05:02.975" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:05:02.975" starttime="20201112 22:05:02.962"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:05:02.979" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:05:02.979" starttime="20201112 22:05:02.979"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:05:02.980" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:05:02.980" starttime="20201112 22:05:02.979"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:02.980" starttime="20201112 22:05:02.977"></status>
</kw>
<msg timestamp="20201112 22:05:02.980" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:05:02.980" starttime="20201112 22:05:02.977"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:02.980" starttime="20201112 22:05:02.976"></status>
</kw>
<msg timestamp="20201112 22:05:02.980" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:05:02.981" starttime="20201112 22:05:02.976"></status>
</kw>
<msg timestamp="20201112 22:05:02.981" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:05:02.981" starttime="20201112 22:05:02.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:05:02.985" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:05:39.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:05:39.772" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:05:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:05:05 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201112 22:05:39.772" starttime="20201112 22:05:02.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:05:39.773" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:05:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:05:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:05:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:05:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:05:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BA683217B7B2-&gt;cf441b86-9ed1-4c99-a3e4-9aff3d72913c
2020-11-12 22:05:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-12 22:05:06 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-12 22:05:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:05:06 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:05:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605218620984_0001
2020-11-12 22:05:07 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-12 22:05:07 INFO  Configuration:2795 - resource-types.xml not found
2020-11-12 22:05:07 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-12 22:05:07 INFO  YarnClientImpl:329 - Submitted application application_1605218620984_0001
2020-11-12 22:05:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605218620984_0001/
2020-11-12 22:05:07 INFO  Job:1619 - Running job: job_1605218620984_0001
2020-11-12 22:05:16 INFO  Job:1640 - Job job_1605218620984_0001 running in uber mode : false
2020-11-12 22:05:16 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:05:23 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:05:27 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:05:32 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:05:38 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:05:39 INFO  Job:1658 - Job job_1605218620984_0001 completed successfully
2020-11-12 22:05:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1055761
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38436
		Total time spent by all reduces in occupied slots (ms)=15252
		Total time spent by all map tasks (ms)=9609
		Total time spent by all reduce tasks (ms)=3813
		Total vcore-milliseconds taken by all map tasks=9609
		Total vcore-milliseconds taken by all reduce tasks=3813
		Total megabyte-milliseconds taken by all map tasks=39358464
		Total megabyte-milliseconds taken by all reduce tasks=15618048
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=614
		CPU time spent (ms)=6120
		Physical memory (bytes) snapshot=1135804416
		Virtual memory (bytes) snapshot=15772790784
		Total committed heap usage (bytes)=1142423552
		Peak Map Physical memory (bytes)=290283520
		Peak Map Virtual memory (bytes)=3945095168
		Peak Reduce Physical memory (bytes)=289521664
		Peak Reduce Virtual memory (bytes)=3960868864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.011 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201112 22:05:39.773" starttime="20201112 22:05:39.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:05:39.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:05:39.774" starttime="20201112 22:05:39.774"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:39.774" starttime="20201112 22:05:02.982"></status>
</kw>
<msg timestamp="20201112 22:05:39.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:05:39.775" starttime="20201112 22:05:02.981"></status>
</kw>
<msg timestamp="20201112 22:05:39.775" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:05:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:05:05 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201112 22:05:39.775" starttime="20201112 22:05:02.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:05:39.776" starttime="20201112 22:05:39.775"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:05:39.776" critical="yes" starttime="20201112 22:05:02.961"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:05:39.781" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:05:39.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:05:39.786" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:05:39.786" starttime="20201112 22:05:39.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:05:39.787" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:05:39.787" starttime="20201112 22:05:39.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:05:39.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:05:39.793" starttime="20201112 22:05:39.787"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:39.793" starttime="20201112 22:05:39.778"></status>
</kw>
<msg timestamp="20201112 22:05:39.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:05:39.793" starttime="20201112 22:05:39.778"></status>
</kw>
<msg timestamp="20201112 22:05:39.794" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:05:39.794" starttime="20201112 22:05:39.777"></status>
</kw>
<msg timestamp="20201112 22:05:39.794" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:05:39.794" starttime="20201112 22:05:39.777"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:05:39.794" level="INFO">${random} = 86</msg>
<status status="PASS" endtime="20201112 22:05:39.794" starttime="20201112 22:05:39.794"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:05:39.798" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:05:39.798" starttime="20201112 22:05:39.798"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:05:39.799" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:05:39.799" starttime="20201112 22:05:39.799"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:39.799" starttime="20201112 22:05:39.798"></status>
</kw>
<msg timestamp="20201112 22:05:39.799" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:05:39.799" starttime="20201112 22:05:39.797"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:39.800" starttime="20201112 22:05:39.796"></status>
</kw>
<msg timestamp="20201112 22:05:39.800" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:05:39.800" starttime="20201112 22:05:39.795"></status>
</kw>
<msg timestamp="20201112 22:05:39.800" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:05:39.800" starttime="20201112 22:05:39.795"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:05:39.803" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:05:39.803" starttime="20201112 22:05:39.803"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:05:39.804" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:05:39.804" starttime="20201112 22:05:39.804"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:39.804" starttime="20201112 22:05:39.803"></status>
</kw>
<msg timestamp="20201112 22:05:39.804" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:05:39.804" starttime="20201112 22:05:39.802"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:39.805" starttime="20201112 22:05:39.801"></status>
</kw>
<msg timestamp="20201112 22:05:39.805" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201112 22:05:39.805" starttime="20201112 22:05:39.801"></status>
</kw>
<msg timestamp="20201112 22:05:39.805" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201112 22:05:39.805" starttime="20201112 22:05:39.800"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:05:39.808" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:05:39.808" starttime="20201112 22:05:39.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:05:39.809" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:05:39.809" starttime="20201112 22:05:39.808"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:39.809" starttime="20201112 22:05:39.807"></status>
</kw>
<msg timestamp="20201112 22:05:39.809" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:05:39.809" starttime="20201112 22:05:39.807"></status>
</kw>
<status status="PASS" endtime="20201112 22:05:39.809" starttime="20201112 22:05:39.806"></status>
</kw>
<msg timestamp="20201112 22:05:39.809" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-86.txt</msg>
<status status="PASS" endtime="20201112 22:05:39.809" starttime="20201112 22:05:39.806"></status>
</kw>
<msg timestamp="20201112 22:05:39.810" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-86.txt</msg>
<status status="PASS" endtime="20201112 22:05:39.810" starttime="20201112 22:05:39.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:05:39.813" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-86.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:06:16.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:06:16.311" level="INFO">${output} = 2020-11-12 22:05:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-12 22:05:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201112 22:06:16.311" starttime="20201112 22:05:39.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:06:16.312" level="INFO">2020-11-12 22:05:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-12 22:05:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 22:05:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:05:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:05:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:05:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:05:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-901122A41738-&gt;cf441b86-9ed1-4c99-a3e4-9aff3d72913c
2020-11-12 22:05:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 22:05:43 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:05:43 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:05:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605218620984_0002
2020-11-12 22:05:43 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-12 22:05:44 INFO  Configuration:2795 - resource-types.xml not found
2020-11-12 22:05:44 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-12 22:05:44 INFO  YarnClientImpl:329 - Submitted application application_1605218620984_0002
2020-11-12 22:05:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605218620984_0002/
2020-11-12 22:05:44 INFO  Job:1619 - Running job: job_1605218620984_0002
2020-11-12 22:05:52 INFO  Job:1640 - Job job_1605218620984_0002 running in uber mode : false
2020-11-12 22:05:52 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:05:58 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:06:03 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:06:08 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:06:12 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:06:15 INFO  Job:1658 - Job job_1605218620984_0002 completed successfully
2020-11-12 22:06:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1117991
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39212
		Total time spent by all reduces in occupied slots (ms)=13904
		Total time spent by all map tasks (ms)=9803
		Total time spent by all reduce tasks (ms)=3476
		Total vcore-milliseconds taken by all map tasks=9803
		Total vcore-milliseconds taken by all reduce tasks=3476
		Total megabyte-milliseconds taken by all map tasks=40153088
		Total megabyte-milliseconds taken by all reduce tasks=14237696
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=6880
		Physical memory (bytes) snapshot=1174761472
		Virtual memory (bytes) snapshot=15805894656
		Total committed heap usage (bytes)=1135083520
		Peak Map Physical memory (bytes)=294801408
		Peak Map Virtual memory (bytes)=3949080576
		Peak Reduce Physical memory (bytes)=297807872
		Peak Reduce Virtual memory (bytes)=3969908736
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201112 22:06:16.313" starttime="20201112 22:06:16.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:06:16.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:06:16.313" starttime="20201112 22:06:16.313"></status>
</kw>
<status status="PASS" endtime="20201112 22:06:16.314" starttime="20201112 22:05:39.811"></status>
</kw>
<msg timestamp="20201112 22:06:16.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:06:16.314" starttime="20201112 22:05:39.810"></status>
</kw>
<msg timestamp="20201112 22:06:16.315" level="INFO">${output} = 2020-11-12 22:05:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-12 22:05:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201112 22:06:16.315" starttime="20201112 22:05:39.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201112 22:06:16.316" starttime="20201112 22:06:16.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:06:16.316" starttime="20201112 22:06:16.316"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:06:16.316" critical="yes" starttime="20201112 22:05:39.776"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201112 22:06:16.318" starttime="20201112 22:05:02.911"></status>
</suite>
<status status="PASS" elapsedtime="195993" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="569555" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
