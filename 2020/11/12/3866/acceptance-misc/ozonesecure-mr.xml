<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201112 22:25:24.814" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:21:29.690" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:21:33.980" level="INFO">${rc} = 255</msg>
<msg timestamp="20201112 22:21:33.980" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:21:33.980" starttime="20201112 22:21:29.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:21:33.981" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201112 22:21:33.982" starttime="20201112 22:21:33.981"></status>
</kw>
<msg timestamp="20201112 22:21:33.982" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:21:33.982" starttime="20201112 22:21:29.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:21:33.988" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:21:38.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:21:38.702" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:21:38.702" starttime="20201112 22:21:33.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:21:38.703" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201112 22:21:38.703" starttime="20201112 22:21:38.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:21:38.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:21:38.703" starttime="20201112 22:21:38.703"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:38.704" starttime="20201112 22:21:33.984"></status>
</kw>
<msg timestamp="20201112 22:21:38.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:21:38.704" starttime="20201112 22:21:33.984"></status>
</kw>
<msg timestamp="20201112 22:21:38.704" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:21:38.704" starttime="20201112 22:21:33.983"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201112 22:21:38.705" starttime="20201112 22:21:38.704"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:38.705" starttime="20201112 22:21:33.983"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:38.705" starttime="20201112 22:21:33.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:21:38.709" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:21:42.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:21:42.040" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:21:42.040" starttime="20201112 22:21:38.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:21:42.041" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201112 22:21:42.042" starttime="20201112 22:21:42.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:21:42.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:21:42.042" starttime="20201112 22:21:42.042"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:42.043" starttime="20201112 22:21:38.706"></status>
</kw>
<msg timestamp="20201112 22:21:42.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:21:42.043" starttime="20201112 22:21:38.706"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:42.043" starttime="20201112 22:21:38.706"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:42.043" starttime="20201112 22:21:38.705"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:42.043" starttime="20201112 22:21:38.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201112 22:21:42.044" starttime="20201112 22:21:42.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:21:42.048" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:21:45.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:21:45.382" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:21:45.382" starttime="20201112 22:21:42.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:21:45.383" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-12T22:21:41.850Z",
  "modificationTime" : "2020-11-12T22:21:41.850Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201112 22:21:45.383" starttime="20201112 22:21:45.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:21:45.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:21:45.383" starttime="20201112 22:21:45.383"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:45.384" starttime="20201112 22:21:42.045"></status>
</kw>
<msg timestamp="20201112 22:21:45.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:21:45.384" starttime="20201112 22:21:42.044"></status>
</kw>
<msg timestamp="20201112 22:21:45.384" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:21:45.384" starttime="20201112 22:21:42.044"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201112 22:21:45.385" starttime="20201112 22:21:45.384"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:21:45.389" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:21:45.389" starttime="20201112 22:21:45.388"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:21:45.389" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:21:45.389" starttime="20201112 22:21:45.389"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:45.390" starttime="20201112 22:21:45.388"></status>
</kw>
<msg timestamp="20201112 22:21:45.390" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:21:45.390" starttime="20201112 22:21:45.387"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:45.390" starttime="20201112 22:21:45.387"></status>
</kw>
<msg timestamp="20201112 22:21:45.390" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201112 22:21:45.390" starttime="20201112 22:21:45.386"></status>
</kw>
<msg timestamp="20201112 22:21:45.390" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201112 22:21:45.390" starttime="20201112 22:21:45.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:21:45.394" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:21:48.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:21:48.957" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:21:48.957" starttime="20201112 22:21:45.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:21:48.958" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201112 22:21:48.958" starttime="20201112 22:21:48.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:21:48.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:21:48.958" starttime="20201112 22:21:48.958"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:48.959" starttime="20201112 22:21:45.391"></status>
</kw>
<msg timestamp="20201112 22:21:48.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:21:48.959" starttime="20201112 22:21:45.391"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:48.959" starttime="20201112 22:21:45.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:21:48.963" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:21:56.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:21:56.558" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:21:56.558" starttime="20201112 22:21:48.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:21:56.559" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201112 22:21:56.560" starttime="20201112 22:21:56.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:21:56.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:21:56.560" starttime="20201112 22:21:56.560"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:56.561" starttime="20201112 22:21:48.960"></status>
</kw>
<msg timestamp="20201112 22:21:56.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:21:56.561" starttime="20201112 22:21:48.960"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:56.561" starttime="20201112 22:21:48.959"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:21:56.566" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:22:01.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:22:01.565" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:22:01.565" starttime="20201112 22:21:56.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:22:01.567" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201112 22:22:01.567" starttime="20201112 22:22:01.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:22:01.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:22:01.568" starttime="20201112 22:22:01.567"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:01.568" starttime="20201112 22:21:56.562"></status>
</kw>
<msg timestamp="20201112 22:22:01.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:22:01.568" starttime="20201112 22:21:56.562"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:01.568" starttime="20201112 22:21:56.561"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:22:01.573" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:22:06.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:22:06.694" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:22:06.694" starttime="20201112 22:22:01.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:22:06.695" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201112 22:22:06.695" starttime="20201112 22:22:06.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:22:06.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:22:06.696" starttime="20201112 22:22:06.695"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:06.696" starttime="20201112 22:22:01.569"></status>
</kw>
<msg timestamp="20201112 22:22:06.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:22:06.696" starttime="20201112 22:22:01.569"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:06.696" starttime="20201112 22:22:01.568"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201112 22:22:06.697" critical="yes" starttime="20201112 22:21:29.684"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:22:06.702" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:22:06.702" starttime="20201112 22:22:06.701"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:22:06.703" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:22:06.703" starttime="20201112 22:22:06.702"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:06.703" starttime="20201112 22:22:06.701"></status>
</kw>
<msg timestamp="20201112 22:22:06.703" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:22:06.703" starttime="20201112 22:22:06.700"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:06.703" starttime="20201112 22:22:06.700"></status>
</kw>
<msg timestamp="20201112 22:22:06.703" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 22:22:06.703" starttime="20201112 22:22:06.699"></status>
</kw>
<msg timestamp="20201112 22:22:06.704" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 22:22:06.704" starttime="20201112 22:22:06.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:22:06.707" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:22:09.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:22:09.855" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:22:09.855" starttime="20201112 22:22:06.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:22:09.857" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201112 22:22:09.857" starttime="20201112 22:22:09.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:22:09.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:22:09.857" starttime="20201112 22:22:09.857"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:09.858" starttime="20201112 22:22:06.704"></status>
</kw>
<msg timestamp="20201112 22:22:09.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:22:09.858" starttime="20201112 22:22:06.704"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:09.858" starttime="20201112 22:22:06.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:22:09.862" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:22:13.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:22:13.318" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201112 22:22:13.318" starttime="20201112 22:22:09.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:22:13.319" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201112 22:22:13.319" starttime="20201112 22:22:13.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:22:13.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:22:13.320" starttime="20201112 22:22:13.319"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:13.320" starttime="20201112 22:22:09.859"></status>
</kw>
<msg timestamp="20201112 22:22:13.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:22:13.320" starttime="20201112 22:22:09.859"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:13.320" starttime="20201112 22:22:09.858"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201112 22:22:13.321" critical="yes" starttime="20201112 22:22:06.698"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201112 22:22:13.322" starttime="20201112 22:21:29.632"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:24:01.553" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:24:01.553" starttime="20201112 22:24:01.553"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:24:01.554" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:24:01.554" starttime="20201112 22:24:01.553"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:01.554" starttime="20201112 22:24:01.552"></status>
</kw>
<msg timestamp="20201112 22:24:01.554" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:24:01.554" starttime="20201112 22:24:01.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:24:01.555" starttime="20201112 22:24:01.555"></status>
</kw>
<msg timestamp="20201112 22:24:01.555" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 22:24:01.555" starttime="20201112 22:24:01.554"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:01.556" starttime="20201112 22:24:01.551"></status>
</kw>
<msg timestamp="20201112 22:24:01.556" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:24:01.556" starttime="20201112 22:24:01.551"></status>
</kw>
<msg timestamp="20201112 22:24:01.556" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:24:01.556" starttime="20201112 22:24:01.550"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:24:01.556" level="INFO">${random} = 03886</msg>
<status status="PASS" endtime="20201112 22:24:01.557" starttime="20201112 22:24:01.556"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:24:01.563" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-03886 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:24:05.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:24:05.127" level="INFO">${output} = 2020-11-12 22:24:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:24:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201112 22:24:05.127" starttime="20201112 22:24:01.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:24:05.128" level="INFO">2020-11-12 22:24:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:24:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:24:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:24:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:24:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D6F14E709B37-&gt;17adfc5e-b5a0-4648-8b86-1802c9819e83
2020-11-12 22:24:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201112 22:24:05.128" starttime="20201112 22:24:05.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:24:05.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:24:05.129" starttime="20201112 22:24:05.128"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:05.129" starttime="20201112 22:24:01.557"></status>
</kw>
<msg timestamp="20201112 22:24:05.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:24:05.129" starttime="20201112 22:24:01.557"></status>
</kw>
<msg timestamp="20201112 22:24:05.130" level="INFO">${result} = 2020-11-12 22:24:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:24:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201112 22:24:05.130" starttime="20201112 22:24:01.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:24:05.134" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:24:07.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:24:07.022" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:21 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:24 ofs://om/volume1/bucket1/ozone-03886
-rw-...</msg>
<status status="PASS" endtime="20201112 22:24:07.022" starttime="20201112 22:24:05.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:24:07.023" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:21 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:24 ofs://om/volume1/bucket1/ozone-03886
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:22 ofs://om/volume1/bucket1/ozone-33588
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:22 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:23 ofs://om/volume1/bucket1/wordcount-63.txt</msg>
<status status="PASS" endtime="20201112 22:24:07.023" starttime="20201112 22:24:07.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:24:07.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:24:07.024" starttime="20201112 22:24:07.023"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:07.024" starttime="20201112 22:24:05.132"></status>
</kw>
<msg timestamp="20201112 22:24:07.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:24:07.024" starttime="20201112 22:24:05.131"></status>
</kw>
<msg timestamp="20201112 22:24:07.025" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:21 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:24 ofs://om/volume1/bucket1/ozone-03886
-rw-...</msg>
<status status="PASS" endtime="20201112 22:24:07.025" starttime="20201112 22:24:05.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:24:07.025" starttime="20201112 22:24:07.025"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:24:07.025" critical="yes" starttime="20201112 22:24:01.549"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201112 22:24:07.027" starttime="20201112 22:24:01.499"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:22:32.571" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:22:32.571" starttime="20201112 22:22:32.571"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:22:32.572" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:22:32.572" starttime="20201112 22:22:32.571"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:32.572" starttime="20201112 22:22:32.570"></status>
</kw>
<msg timestamp="20201112 22:22:32.572" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:22:32.572" starttime="20201112 22:22:32.570"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:32.573" starttime="20201112 22:22:32.569"></status>
</kw>
<msg timestamp="20201112 22:22:32.573" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:22:32.573" starttime="20201112 22:22:32.569"></status>
</kw>
<msg timestamp="20201112 22:22:32.573" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:22:32.573" starttime="20201112 22:22:32.568"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:22:32.573" level="INFO">${random} = 33588</msg>
<status status="PASS" endtime="20201112 22:22:32.573" starttime="20201112 22:22:32.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:22:32.578" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-33588 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:22:38.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:22:38.709" level="INFO">${output} = 2020-11-12 22:22:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:22:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201112 22:22:38.709" starttime="20201112 22:22:32.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:22:38.710" level="INFO">2020-11-12 22:22:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:22:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:22:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:22:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:22:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6699F0C19D84-&gt;17adfc5e-b5a0-4648-8b86-1802c9819e83
2020-11-12 22:22:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201112 22:22:38.710" starttime="20201112 22:22:38.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:22:38.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:22:38.711" starttime="20201112 22:22:38.710"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:38.711" starttime="20201112 22:22:32.574"></status>
</kw>
<msg timestamp="20201112 22:22:38.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:22:38.711" starttime="20201112 22:22:32.574"></status>
</kw>
<msg timestamp="20201112 22:22:38.711" level="INFO">${result} = 2020-11-12 22:22:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:22:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201112 22:22:38.711" starttime="20201112 22:22:32.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:22:38.716" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:22:40.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:22:40.607" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:21 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:22 o3fs://bucket1.volume1.om/ozone-33588
dr...</msg>
<status status="PASS" endtime="20201112 22:22:40.607" starttime="20201112 22:22:38.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:22:40.608" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:21 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:22 o3fs://bucket1.volume1.om/ozone-33588
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:22 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201112 22:22:40.608" starttime="20201112 22:22:40.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:22:40.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:22:40.608" starttime="20201112 22:22:40.608"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:40.609" starttime="20201112 22:22:38.713"></status>
</kw>
<msg timestamp="20201112 22:22:40.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:22:40.609" starttime="20201112 22:22:38.712"></status>
</kw>
<msg timestamp="20201112 22:22:40.609" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-12 22:21 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-12 22:22 o3fs://bucket1.volume1.om/ozone-33588
dr...</msg>
<status status="PASS" endtime="20201112 22:22:40.609" starttime="20201112 22:22:38.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:22:40.610" starttime="20201112 22:22:40.609"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:22:40.610" critical="yes" starttime="20201112 22:22:32.567"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201112 22:22:40.611" starttime="20201112 22:22:32.521"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:22:27.476" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:22:27.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:22:27.477" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201112 22:22:27.477" starttime="20201112 22:22:27.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:22:27.478" level="INFO">rm</msg>
<status status="PASS" endtime="20201112 22:22:27.478" starttime="20201112 22:22:27.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:22:27.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:22:27.479" starttime="20201112 22:22:27.478"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:27.479" starttime="20201112 22:22:27.469"></status>
</kw>
<msg timestamp="20201112 22:22:27.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:22:27.479" starttime="20201112 22:22:27.469"></status>
</kw>
<msg timestamp="20201112 22:22:27.479" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201112 22:22:27.479" starttime="20201112 22:22:27.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201112 22:22:27.480" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201112 22:22:27.480" starttime="20201112 22:22:27.479"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:22:27.484" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:22:27.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:22:27.521" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:22:27.521" starttime="20201112 22:22:27.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:22:27.522" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:22:27.522" starttime="20201112 22:22:27.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:22:27.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:22:27.523" starttime="20201112 22:22:27.522"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:27.523" starttime="20201112 22:22:27.482"></status>
</kw>
<msg timestamp="20201112 22:22:27.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:22:27.523" starttime="20201112 22:22:27.481"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:27.523" starttime="20201112 22:22:27.481"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:27.523" starttime="20201112 22:22:27.481"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:27.523" starttime="20201112 22:22:27.468"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201112 22:22:27.523" critical="yes" starttime="20201112 22:22:27.467"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201112 22:22:27.524" starttime="20201112 22:22:27.426"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:21:24.525" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:21:24.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:21:24.527" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201112 22:21:24.527" starttime="20201112 22:21:24.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:21:24.528" level="INFO">om</msg>
<status status="PASS" endtime="20201112 22:21:24.528" starttime="20201112 22:21:24.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:21:24.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:21:24.528" starttime="20201112 22:21:24.528"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:24.529" starttime="20201112 22:21:24.520"></status>
</kw>
<msg timestamp="20201112 22:21:24.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:21:24.529" starttime="20201112 22:21:24.519"></status>
</kw>
<msg timestamp="20201112 22:21:24.530" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201112 22:21:24.530" starttime="20201112 22:21:24.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201112 22:21:24.530" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201112 22:21:24.530" starttime="20201112 22:21:24.530"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:21:24.534" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:21:24.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:21:24.553" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:21:24.553" starttime="20201112 22:21:24.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:21:24.554" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:21:24.554" starttime="20201112 22:21:24.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:21:24.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:21:24.554" starttime="20201112 22:21:24.554"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:24.554" starttime="20201112 22:21:24.532"></status>
</kw>
<msg timestamp="20201112 22:21:24.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:21:24.555" starttime="20201112 22:21:24.532"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:24.555" starttime="20201112 22:21:24.531"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:24.555" starttime="20201112 22:21:24.531"></status>
</kw>
<status status="PASS" endtime="20201112 22:21:24.555" starttime="20201112 22:21:24.518"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201112 22:21:24.555" critical="yes" starttime="20201112 22:21:24.517"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201112 22:21:24.556" starttime="20201112 22:21:24.469"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:24:12.222" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:24:12.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:24:12.228" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:24:12.228" starttime="20201112 22:24:12.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:24:12.229" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:24:12.229" starttime="20201112 22:24:12.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:24:12.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:24:12.229" starttime="20201112 22:24:12.229"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:12.230" starttime="20201112 22:24:12.218"></status>
</kw>
<msg timestamp="20201112 22:24:12.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:24:12.230" starttime="20201112 22:24:12.218"></status>
</kw>
<msg timestamp="20201112 22:24:12.230" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:24:12.230" starttime="20201112 22:24:12.217"></status>
</kw>
<msg timestamp="20201112 22:24:12.230" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:24:12.230" starttime="20201112 22:24:12.217"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:24:12.235" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:24:12.235" starttime="20201112 22:24:12.234"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:24:12.235" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:24:12.235" starttime="20201112 22:24:12.235"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:12.235" starttime="20201112 22:24:12.233"></status>
</kw>
<msg timestamp="20201112 22:24:12.236" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:24:12.236" starttime="20201112 22:24:12.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:24:12.236" starttime="20201112 22:24:12.236"></status>
</kw>
<msg timestamp="20201112 22:24:12.237" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 22:24:12.237" starttime="20201112 22:24:12.236"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:12.237" starttime="20201112 22:24:12.232"></status>
</kw>
<msg timestamp="20201112 22:24:12.237" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:24:12.237" starttime="20201112 22:24:12.231"></status>
</kw>
<msg timestamp="20201112 22:24:12.237" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:24:12.237" starttime="20201112 22:24:12.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:24:12.241" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:24:46.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:24:46.383" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:24:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:24:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201112 22:24:46.383" starttime="20201112 22:24:12.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:24:46.384" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:24:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:24:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:24:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:24:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:24:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-31FAEC0729D2-&gt;17adfc5e-b5a0-4648-8b86-1802c9819e83
2020-11-12 22:24:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-12 22:24:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-11-12 22:24:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-11-12 22:24:18 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219858602, maxDate=1605824658602, sequenceNumber=3, masterKeyId=2))
2020-11-12 22:24:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 dc f0 bc f4 db 2e 38 dc f8 ee 94 de 2e 40 03 48 01 5a 0d 32 35 32 38 39 36 39 38 33 35 39 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-12 22:24:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219858602, maxDate=1605824658602, sequenceNumber=3, masterKeyId=2)
2020-11-12 22:24:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 22:24:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:24:19 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:24:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605219641083_0003
2020-11-12 22:24:19 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 dc f0 bc f4 db 2e 38 dc f8 ee 94 de 2e 40 03 48 01 5a 0d 32 35 32 38 39 36 39 38 33 35 39 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219858602, maxDate=1605824658602, sequenceNumber=3, masterKeyId=2)]
2020-11-12 22:24:19 INFO  Configuration:2795 - resource-types.xml not found
2020-11-12 22:24:19 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-12 22:24:19 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-12 22:24:20 INFO  YarnClientImpl:329 - Submitted application application_1605219641083_0003
2020-11-12 22:24:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605219641083_0003/
2020-11-12 22:24:20 INFO  Job:1619 - Running job: job_1605219641083_0003
2020-11-12 22:24:28 INFO  Job:1640 - Job job_1605219641083_0003 running in uber mode : false
2020-11-12 22:24:28 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:24:38 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:24:39 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:24:40 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:24:44 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:24:45 INFO  Job:1658 - Job job_1605219641083_0003 completed successfully
2020-11-12 22:24:45 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065057
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44690
		Total time spent by all reduces in occupied slots (ms)=7274
		Total time spent by all map tasks (ms)=22345
		Total time spent by all reduce tasks (ms)=3637
		Total vcore-milliseconds taken by all map tasks=22345
		Total vcore-milliseconds taken by all reduce tasks=3637
		Total megabyte-milliseconds taken by all map tasks=45762560
		Total megabyte-milliseconds taken by all reduce tasks=7448576
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1116
		CPU time spent (ms)=7480
		Physical memory (bytes) snapshot=1456418816
		Virtual memory (bytes) snapshot=14053675008
		Total committed heap usage (bytes)=1251999744
		Peak Map Physical memory (bytes)=389435392
		Peak Map Virtual memory (bytes)=3509772288
		Peak Reduce Physical memory (bytes)=301514752
		Peak Reduce Virtual memory (bytes)=3529506816
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 27.696 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201112 22:24:46.384" starttime="20201112 22:24:46.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:24:46.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:24:46.385" starttime="20201112 22:24:46.384"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:46.385" starttime="20201112 22:24:12.238"></status>
</kw>
<msg timestamp="20201112 22:24:46.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:24:46.385" starttime="20201112 22:24:12.238"></status>
</kw>
<msg timestamp="20201112 22:24:46.386" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:24:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:24:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201112 22:24:46.386" starttime="20201112 22:24:12.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:24:46.386" starttime="20201112 22:24:46.386"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:24:46.386" critical="yes" starttime="20201112 22:24:12.216"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:24:46.392" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:24:46.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:24:46.397" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:24:46.397" starttime="20201112 22:24:46.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:24:46.398" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:24:46.398" starttime="20201112 22:24:46.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:24:46.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:24:46.399" starttime="20201112 22:24:46.398"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:46.399" starttime="20201112 22:24:46.389"></status>
</kw>
<msg timestamp="20201112 22:24:46.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:24:46.399" starttime="20201112 22:24:46.389"></status>
</kw>
<msg timestamp="20201112 22:24:46.399" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:24:46.399" starttime="20201112 22:24:46.388"></status>
</kw>
<msg timestamp="20201112 22:24:46.399" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:24:46.399" starttime="20201112 22:24:46.388"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:24:46.400" level="INFO">${random} = 42</msg>
<status status="PASS" endtime="20201112 22:24:46.400" starttime="20201112 22:24:46.400"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:24:46.404" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:24:46.404" starttime="20201112 22:24:46.403"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:24:46.405" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:24:46.405" starttime="20201112 22:24:46.404"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:46.405" starttime="20201112 22:24:46.403"></status>
</kw>
<msg timestamp="20201112 22:24:46.405" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:24:46.405" starttime="20201112 22:24:46.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201112 22:24:46.406" starttime="20201112 22:24:46.405"></status>
</kw>
<msg timestamp="20201112 22:24:46.406" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201112 22:24:46.406" starttime="20201112 22:24:46.405"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:46.406" starttime="20201112 22:24:46.402"></status>
</kw>
<msg timestamp="20201112 22:24:46.406" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:24:46.406" starttime="20201112 22:24:46.401"></status>
</kw>
<msg timestamp="20201112 22:24:46.407" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201112 22:24:46.407" starttime="20201112 22:24:46.400"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:24:46.410" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:24:46.410" starttime="20201112 22:24:46.409"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:24:46.410" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:24:46.410" starttime="20201112 22:24:46.410"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:46.411" starttime="20201112 22:24:46.409"></status>
</kw>
<msg timestamp="20201112 22:24:46.411" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:24:46.411" starttime="20201112 22:24:46.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:24:46.412" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201112 22:24:46.412" starttime="20201112 22:24:46.412"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:24:46.413" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201112 22:24:46.413" starttime="20201112 22:24:46.412"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:46.413" starttime="20201112 22:24:46.411"></status>
</kw>
<msg timestamp="20201112 22:24:46.413" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201112 22:24:46.413" starttime="20201112 22:24:46.411"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:46.413" starttime="20201112 22:24:46.408"></status>
</kw>
<msg timestamp="20201112 22:24:46.414" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201112 22:24:46.414" starttime="20201112 22:24:46.407"></status>
</kw>
<msg timestamp="20201112 22:24:46.414" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201112 22:24:46.414" starttime="20201112 22:24:46.407"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201112 22:24:46.417" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201112 22:24:46.417" starttime="20201112 22:24:46.417"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:24:46.417" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201112 22:24:46.417" starttime="20201112 22:24:46.417"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:46.418" starttime="20201112 22:24:46.416"></status>
</kw>
<msg timestamp="20201112 22:24:46.418" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201112 22:24:46.418" starttime="20201112 22:24:46.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:24:46.419" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201112 22:24:46.419" starttime="20201112 22:24:46.419"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:24:46.420" level="INFO">${result} = /wordcount-42.txt</msg>
<status status="PASS" endtime="20201112 22:24:46.420" starttime="20201112 22:24:46.419"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:46.420" starttime="20201112 22:24:46.418"></status>
</kw>
<msg timestamp="20201112 22:24:46.420" level="INFO">${path_with_leading} = /wordcount-42.txt</msg>
<status status="PASS" endtime="20201112 22:24:46.420" starttime="20201112 22:24:46.418"></status>
</kw>
<status status="PASS" endtime="20201112 22:24:46.420" starttime="20201112 22:24:46.415"></status>
</kw>
<msg timestamp="20201112 22:24:46.421" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-42.txt</msg>
<status status="PASS" endtime="20201112 22:24:46.421" starttime="20201112 22:24:46.415"></status>
</kw>
<msg timestamp="20201112 22:24:46.421" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-42.txt</msg>
<status status="PASS" endtime="20201112 22:24:46.421" starttime="20201112 22:24:46.414"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:24:46.424" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-42.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:25:16.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:25:16.689" level="INFO">${output} = 2020-11-12 22:24:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-11-12 22:24:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201112 22:25:16.689" starttime="20201112 22:24:46.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:25:16.690" level="INFO">2020-11-12 22:24:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-11-12 22:24:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-11-12 22:24:48 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219888704, maxDate=1605824688704, sequenceNumber=4, masterKeyId=2))
2020-11-12 22:24:48 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e6 db be f4 db 2e 38 e6 e3 f0 94 de 2e 40 04 48 01 5a 0d 32 35 32 38 39 36 39 38 33 35 39 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-12 22:24:48 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219888704, maxDate=1605824688704, sequenceNumber=4, masterKeyId=2)
2020-11-12 22:24:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 22:24:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:24:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:24:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:24:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:24:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-30BB5294C164-&gt;17adfc5e-b5a0-4648-8b86-1802c9819e83
2020-11-12 22:24:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 22:24:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:24:50 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:24:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605219641083_0004
2020-11-12 22:24:50 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e6 db be f4 db 2e 38 e6 e3 f0 94 de 2e 40 04 48 01 5a 0d 32 35 32 38 39 36 39 38 33 35 39 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219888704, maxDate=1605824688704, sequenceNumber=4, masterKeyId=2)]
2020-11-12 22:24:51 INFO  Configuration:2795 - resource-types.xml not found
2020-11-12 22:24:51 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-12 22:24:51 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-12 22:24:51 INFO  YarnClientImpl:329 - Submitted application application_1605219641083_0004
2020-11-12 22:24:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605219641083_0004/
2020-11-12 22:24:51 INFO  Job:1619 - Running job: job_1605219641083_0004
2020-11-12 22:24:59 INFO  Job:1640 - Job job_1605219641083_0004 running in uber mode : false
2020-11-12 22:24:59 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:25:09 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:25:11 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:25:12 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:25:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:25:16 INFO  Job:1658 - Job job_1605219641083_0004 completed successfully
2020-11-12 22:25:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1127423
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42332
		Total time spent by all reduces in occupied slots (ms)=7434
		Total time spent by all map tasks (ms)=21166
		Total time spent by all reduce tasks (ms)=3717
		Total vcore-milliseconds taken by all map tasks=21166
		Total vcore-milliseconds taken by all reduce tasks=3717
		Total megabyte-milliseconds taken by all map tasks=43347968
		Total megabyte-milliseconds taken by all reduce tasks=7612416
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=933
		CPU time spent (ms)=7580
		Physical memory (bytes) snapshot=1328656384
		Virtual memory (bytes) snapshot=14058348544
		Total committed heap usage (bytes)=1099956224
		Peak Map Physical memory (bytes)=368902144
		Peak Map Virtual memory (bytes)=3511640064
		Peak Reduce Physical memory (bytes)=296947712
		Peak Reduce Virtual memory (bytes)=3528548352
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201112 22:25:16.690" starttime="20201112 22:25:16.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:25:16.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:25:16.691" starttime="20201112 22:25:16.690"></status>
</kw>
<status status="PASS" endtime="20201112 22:25:16.691" starttime="20201112 22:24:46.422"></status>
</kw>
<msg timestamp="20201112 22:25:16.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:25:16.691" starttime="20201112 22:24:46.422"></status>
</kw>
<msg timestamp="20201112 22:25:16.692" level="INFO">${output} = 2020-11-12 22:24:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-11-12 22:24:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201112 22:25:16.692" starttime="20201112 22:24:46.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201112 22:25:16.692" starttime="20201112 22:25:16.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:25:16.693" starttime="20201112 22:25:16.692"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:25:16.693" critical="yes" starttime="20201112 22:24:46.387"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201112 22:25:16.694" starttime="20201112 22:24:12.166"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:22:45.328" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:22:45.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:22:45.331" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:22:45.332" starttime="20201112 22:22:45.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:22:45.332" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:22:45.333" starttime="20201112 22:22:45.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:22:45.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:22:45.333" starttime="20201112 22:22:45.333"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:45.333" starttime="20201112 22:22:45.322"></status>
</kw>
<msg timestamp="20201112 22:22:45.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:22:45.334" starttime="20201112 22:22:45.322"></status>
</kw>
<msg timestamp="20201112 22:22:45.334" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:22:45.334" starttime="20201112 22:22:45.321"></status>
</kw>
<msg timestamp="20201112 22:22:45.334" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:22:45.334" starttime="20201112 22:22:45.321"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:22:45.338" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:22:45.338" starttime="20201112 22:22:45.338"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:22:45.339" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:22:45.339" starttime="20201112 22:22:45.338"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:45.339" starttime="20201112 22:22:45.336"></status>
</kw>
<msg timestamp="20201112 22:22:45.339" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:22:45.339" starttime="20201112 22:22:45.336"></status>
</kw>
<status status="PASS" endtime="20201112 22:22:45.339" starttime="20201112 22:22:45.335"></status>
</kw>
<msg timestamp="20201112 22:22:45.339" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:22:45.339" starttime="20201112 22:22:45.335"></status>
</kw>
<msg timestamp="20201112 22:22:45.340" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:22:45.340" starttime="20201112 22:22:45.334"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:22:45.344" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:23:20.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:23:20.036" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:22:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:22:47 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201112 22:23:20.036" starttime="20201112 22:22:45.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:23:20.038" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:22:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:22:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:22:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:22:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:22:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A4BCD7F4165D-&gt;17adfc5e-b5a0-4648-8b86-1802c9819e83
2020-11-12 22:22:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-12 22:22:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-11-12 22:22:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-11-12 22:22:49 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219769192, maxDate=1605824569192, sequenceNumber=1, masterKeyId=2))
2020-11-12 22:22:49 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 b4 b7 f4 db 2e 38 e9 bc e9 94 de 2e 40 01 48 01 5a 0d 32 35 32 38 39 36 39 38 33 35 39 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-12 22:22:49 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219769192, maxDate=1605824569192, sequenceNumber=1, masterKeyId=2)
2020-11-12 22:22:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:22:49 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:22:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605219641083_0001
2020-11-12 22:22:49 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 b4 b7 f4 db 2e 38 e9 bc e9 94 de 2e 40 01 48 01 5a 0d 32 35 32 38 39 36 39 38 33 35 39 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219769192, maxDate=1605824569192, sequenceNumber=1, masterKeyId=2)]
2020-11-12 22:22:50 INFO  Configuration:2795 - resource-types.xml not found
2020-11-12 22:22:50 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-12 22:22:50 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-12 22:22:51 INFO  YarnClientImpl:329 - Submitted application application_1605219641083_0001
2020-11-12 22:22:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605219641083_0001/
2020-11-12 22:22:51 INFO  Job:1619 - Running job: job_1605219641083_0001
2020-11-12 22:23:02 INFO  Job:1640 - Job job_1605219641083_0001 running in uber mode : false
2020-11-12 22:23:02 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:23:12 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:23:14 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:23:18 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:23:19 INFO  Job:1658 - Job job_1605219641083_0001 completed successfully
2020-11-12 22:23:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065261
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44416
		Total time spent by all reduces in occupied slots (ms)=7052
		Total time spent by all map tasks (ms)=22208
		Total time spent by all reduce tasks (ms)=3526
		Total vcore-milliseconds taken by all map tasks=22208
		Total vcore-milliseconds taken by all reduce tasks=3526
		Total megabyte-milliseconds taken by all map tasks=45481984
		Total megabyte-milliseconds taken by all reduce tasks=7221248
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1116
		CPU time spent (ms)=6970
		Physical memory (bytes) snapshot=1362788352
		Virtual memory (bytes) snapshot=14054752256
		Total committed heap usage (bytes)=1137180672
		Peak Map Physical memory (bytes)=385318912
		Peak Map Virtual memory (bytes)=3509993472
		Peak Reduce Physical memory (bytes)=300314624
		Peak Reduce Virtual memory (bytes)=3525939200
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.893 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201112 22:23:20.038" starttime="20201112 22:23:20.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:23:20.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:23:20.039" starttime="20201112 22:23:20.038"></status>
</kw>
<status status="PASS" endtime="20201112 22:23:20.039" starttime="20201112 22:22:45.341"></status>
</kw>
<msg timestamp="20201112 22:23:20.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:23:20.040" starttime="20201112 22:22:45.340"></status>
</kw>
<msg timestamp="20201112 22:23:20.040" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-12 22:22:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:22:47 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201112 22:23:20.040" starttime="20201112 22:22:45.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:23:20.041" starttime="20201112 22:23:20.040"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:23:20.041" critical="yes" starttime="20201112 22:22:45.320"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:23:20.046" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:23:20.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:23:20.052" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:23:20.052" starttime="20201112 22:23:20.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:23:20.053" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:23:20.053" starttime="20201112 22:23:20.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:23:20.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:23:20.054" starttime="20201112 22:23:20.053"></status>
</kw>
<status status="PASS" endtime="20201112 22:23:20.054" starttime="20201112 22:23:20.043"></status>
</kw>
<msg timestamp="20201112 22:23:20.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:23:20.054" starttime="20201112 22:23:20.043"></status>
</kw>
<msg timestamp="20201112 22:23:20.054" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:23:20.054" starttime="20201112 22:23:20.043"></status>
</kw>
<msg timestamp="20201112 22:23:20.055" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201112 22:23:20.055" starttime="20201112 22:23:20.042"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:23:20.055" level="INFO">${random} = 63</msg>
<status status="PASS" endtime="20201112 22:23:20.055" starttime="20201112 22:23:20.055"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:23:20.059" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:23:20.059" starttime="20201112 22:23:20.059"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:23:20.060" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:23:20.060" starttime="20201112 22:23:20.059"></status>
</kw>
<status status="PASS" endtime="20201112 22:23:20.060" starttime="20201112 22:23:20.058"></status>
</kw>
<msg timestamp="20201112 22:23:20.060" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:23:20.060" starttime="20201112 22:23:20.057"></status>
</kw>
<status status="PASS" endtime="20201112 22:23:20.060" starttime="20201112 22:23:20.057"></status>
</kw>
<msg timestamp="20201112 22:23:20.060" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:23:20.060" starttime="20201112 22:23:20.056"></status>
</kw>
<msg timestamp="20201112 22:23:20.061" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201112 22:23:20.061" starttime="20201112 22:23:20.055"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:23:20.064" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:23:20.064" starttime="20201112 22:23:20.063"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:23:20.064" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:23:20.064" starttime="20201112 22:23:20.064"></status>
</kw>
<status status="PASS" endtime="20201112 22:23:20.064" starttime="20201112 22:23:20.063"></status>
</kw>
<msg timestamp="20201112 22:23:20.065" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:23:20.065" starttime="20201112 22:23:20.062"></status>
</kw>
<status status="PASS" endtime="20201112 22:23:20.065" starttime="20201112 22:23:20.062"></status>
</kw>
<msg timestamp="20201112 22:23:20.065" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201112 22:23:20.065" starttime="20201112 22:23:20.061"></status>
</kw>
<msg timestamp="20201112 22:23:20.065" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201112 22:23:20.065" starttime="20201112 22:23:20.061"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201112 22:23:20.068" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201112 22:23:20.068" starttime="20201112 22:23:20.068"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201112 22:23:20.069" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201112 22:23:20.069" starttime="20201112 22:23:20.069"></status>
</kw>
<status status="PASS" endtime="20201112 22:23:20.069" starttime="20201112 22:23:20.068"></status>
</kw>
<msg timestamp="20201112 22:23:20.069" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201112 22:23:20.069" starttime="20201112 22:23:20.067"></status>
</kw>
<status status="PASS" endtime="20201112 22:23:20.070" starttime="20201112 22:23:20.066"></status>
</kw>
<msg timestamp="20201112 22:23:20.070" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-63.txt</msg>
<status status="PASS" endtime="20201112 22:23:20.070" starttime="20201112 22:23:20.066"></status>
</kw>
<msg timestamp="20201112 22:23:20.070" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-63.txt</msg>
<status status="PASS" endtime="20201112 22:23:20.070" starttime="20201112 22:23:20.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:23:20.074" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-63.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:23:55.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:23:55.600" level="INFO">${output} = 2020-11-12 22:23:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-11-12 22:23:22 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201112 22:23:55.600" starttime="20201112 22:23:20.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:23:55.601" level="INFO">2020-11-12 22:23:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-11-12 22:23:22 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-11-12 22:23:22 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219802423, maxDate=1605824602423, sequenceNumber=2, masterKeyId=2))
2020-11-12 22:23:22 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 dd b9 b9 f4 db 2e 38 dd c1 eb 94 de 2e 40 02 48 01 5a 0d 32 35 32 38 39 36 39 38 33 35 39 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-12 22:23:22 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219802423, maxDate=1605824602423, sequenceNumber=2, masterKeyId=2)
2020-11-12 22:23:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-12 22:23:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-12 22:23:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:23:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-12 22:23:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:23:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-290A3ECA0D95-&gt;17adfc5e-b5a0-4648-8b86-1802c9819e83
2020-11-12 22:23:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 22:23:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-12 22:23:24 INFO  JobSubmitter:202 - number of splits:3
2020-11-12 22:23:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605219641083_0002
2020-11-12 22:23:24 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 dd b9 b9 f4 db 2e 38 dd c1 eb 94 de 2e 40 02 48 01 5a 0d 32 35 32 38 39 36 39 38 33 35 39 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605219802423, maxDate=1605824602423, sequenceNumber=2, masterKeyId=2)]
2020-11-12 22:23:24 INFO  Configuration:2795 - resource-types.xml not found
2020-11-12 22:23:24 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-12 22:23:24 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-12 22:23:25 INFO  YarnClientImpl:329 - Submitted application application_1605219641083_0002
2020-11-12 22:23:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605219641083_0002/
2020-11-12 22:23:25 INFO  Job:1619 - Running job: job_1605219641083_0002
2020-11-12 22:23:33 INFO  Job:1640 - Job job_1605219641083_0002 running in uber mode : false
2020-11-12 22:23:33 INFO  Job:1647 -  map 0% reduce 0%
2020-11-12 22:23:44 INFO  Job:1647 -  map 33% reduce 0%
2020-11-12 22:23:45 INFO  Job:1647 -  map 67% reduce 0%
2020-11-12 22:23:46 INFO  Job:1647 -  map 100% reduce 0%
2020-11-12 22:23:54 INFO  Job:1647 -  map 100% reduce 100%
2020-11-12 22:23:55 INFO  Job:1658 - Job job_1605219641083_0002 completed successfully
2020-11-12 22:23:55 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1127507
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49780
		Total time spent by all reduces in occupied slots (ms)=12722
		Total time spent by all map tasks (ms)=24890
		Total time spent by all reduce tasks (ms)=6361
		Total vcore-milliseconds taken by all map tasks=24890
		Total vcore-milliseconds taken by all reduce tasks=6361
		Total megabyte-milliseconds taken by all map tasks=50974720
		Total megabyte-milliseconds taken by all reduce tasks=13027328
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1621
		CPU time spent (ms)=8870
		Physical memory (bytes) snapshot=1591275520
		Virtual memory (bytes) snapshot=14062055424
		Total committed heap usage (bytes)=1414004736
		Peak Map Physical memory (bytes)=538132480
		Peak Map Virtual memory (bytes)=3512836096
		Peak Reduce Physical memory (bytes)=307011584
		Peak Reduce Virtual memory (bytes)=3531026432
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201112 22:23:55.602" starttime="20201112 22:23:55.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:23:55.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:23:55.602" starttime="20201112 22:23:55.602"></status>
</kw>
<status status="PASS" endtime="20201112 22:23:55.603" starttime="20201112 22:23:20.071"></status>
</kw>
<msg timestamp="20201112 22:23:55.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:23:55.603" starttime="20201112 22:23:20.071"></status>
</kw>
<msg timestamp="20201112 22:23:55.603" level="INFO">${output} = 2020-11-12 22:23:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-11-12 22:23:22 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201112 22:23:55.603" starttime="20201112 22:23:20.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201112 22:23:55.604" starttime="20201112 22:23:55.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201112 22:23:55.604" starttime="20201112 22:23:55.604"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201112 22:23:55.605" critical="yes" starttime="20201112 22:23:20.042"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201112 22:23:55.609" starttime="20201112 22:22:45.274"></status>
</suite>
<status status="PASS" elapsedtime="192356" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
