<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201112 22:17:35.899" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201112 22:14:52.988" starttime="20201112 22:14:52.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:14:52.993" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:14:53.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:14:53.075" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 12 Nov 2020 22:14:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 12 Nov 2020 21:40:54 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201112 22:14:53.075" starttime="20201112 22:14:52.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:14:53.077" level="INFO">HTTP/1.1 200 OK
Date: Thu, 12 Nov 2020 22:14:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 12 Nov 2020 21:40:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201112 22:14:53.077" starttime="20201112 22:14:53.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:14:53.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:14:53.078" starttime="20201112 22:14:53.077"></status>
</kw>
<status status="PASS" endtime="20201112 22:14:53.078" starttime="20201112 22:14:52.989"></status>
</kw>
<msg timestamp="20201112 22:14:53.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:14:53.078" starttime="20201112 22:14:52.988"></status>
</kw>
<msg timestamp="20201112 22:14:53.079" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 12 Nov 2020 22:14:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 12 Nov 2020 21:40:54 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201112 22:14:53.079" starttime="20201112 22:14:52.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201112 22:14:53.079" starttime="20201112 22:14:53.079"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:14:53.079" critical="yes" starttime="20201112 22:14:52.986"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201112 22:14:53.082" starttime="20201112 22:14:53.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:14:53.086" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:15:51.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:15:51.600" level="INFO">${output} = 2020-11-12 22:14:54,672 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-12 22:14:54,805 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201112 22:15:51.600" starttime="20201112 22:14:53.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:15:51.601" level="INFO">2020-11-12 22:14:54,672 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-12 22:14:54,805 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-12 22:14:54,805 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-12 22:14:56,979 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-12 22:14:56,979 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-11-12 22:14:56,984 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-11-12 22:14:56,984 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-11-12 22:14:56,984 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-12 22:14:56,984 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-12 22:14:56,984 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-11-12 22:14:57,003 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-11-12 22:14:57,009 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-12 22:14:57,019 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-12 22:14:57,078 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-33675, with hadoop as owner.
2020-11-12 22:14:57,415 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-95586, with hadoop as owner.
2020-11-12 22:14:57,427 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-01091, with hadoop as owner.
2020-11-12 22:14:57,434 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-85078, with hadoop as owner.
2020-11-12 22:14:57,439 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-48834, with hadoop as owner.
2020-11-12 22:14:57,451 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33675/bucket-0-74575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,522 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-95586/bucket-0-83206, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,534 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-01091/bucket-0-91089, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,549 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85078/bucket-0-19203, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,555 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-48834/bucket-0-49046, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,563 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33675/bucket-1-38346, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,570 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-95586/bucket-1-73612, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,579 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-01091/bucket-1-77624, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,589 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85078/bucket-1-76462, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,596 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-48834/bucket-1-07910, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,604 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33675/bucket-2-12308, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-95586/bucket-2-97682, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,622 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-01091/bucket-2-65429, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,629 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85078/bucket-2-13599, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,637 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-48834/bucket-2-83135, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,645 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33675/bucket-3-10035, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,650 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-95586/bucket-3-06852, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,653 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-01091/bucket-3-40444, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,660 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85078/bucket-3-25844, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,663 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-48834/bucket-3-44959, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,666 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33675/bucket-4-97631, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,670 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-95586/bucket-4-32075, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,673 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-01091/bucket-4-47481, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,677 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85078/bucket-4-58660, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:57,685 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-48834/bucket-4-68231, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-12 22:14:58,020 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-12 22:14:58,732 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-12 22:14:59,020 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-12 22:14:59,123 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-12 22:14:59,123 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-F0F11D0D00CA-&gt;cfae24c7-4c4a-4ca6-85d4-bc3fd2640adb
2020-11-12 22:14:59,125 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 22:15:00,023 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-12 22:15:01,032 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-12 22:15:02,032 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-11-12 22:15:02,085 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5A56C2083D91-&gt;b572b029-f2b8-449c-a139-ee0b3e222582
2020-11-12 22:15:02,085 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-12 22:15:03,039 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-12 22:15:04,039 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-12 22:15:05,039 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-11-12 22:15:06,040 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-11-12 22:15:07,040 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-11-12 22:15:08,041 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-11-12 22:15:09,041 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-11-12 22:15:10,043 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-11-12 22:15:11,043 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-11-12 22:15:12,044 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-11-12 22:15:13,044 [Thread-7] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-11-12 22:15:14,045 [Thread-7] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-11-12 22:15:15,045 [Thread-7] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-11-12 22:15:16,046 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-11-12 22:15:17,046 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-11-12 22:15:18,047 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-11-12 22:15:19,047 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-11-12 22:15:20,048 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-11-12 22:15:21,048 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-11-12 22:15:22,049 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-11-12 22:15:23,049 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-11-12 22:15:24,051 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-11-12 22:15:25,052 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-11-12 22:15:26,052 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-11-12 22:15:27,057 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-11-12 22:15:28,057 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-11-12 22:15:29,058 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-11-12 22:15:30,058 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-11-12 22:15:31,059 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-11-12 22:15:32,059 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-11-12 22:15:33,060 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-11-12 22:15:34,060 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-11-12 22:15:35,061 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-11-12 22:15:36,061 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-11-12 22:15:37,063 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-11-12 22:15:38,063 [Thread-7] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-11-12 22:15:39,064 [Thread-7] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-11-12 22:15:40,064 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-11-12 22:15:41,065 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-11-12 22:15:42,065 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-11-12 22:15:43,066 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-11-12 22:15:44,066 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-11-12 22:15:45,067 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-11-12 22:15:46,068 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,430
Average Time spent in bucket creation: 00:00:00,146
Average Time spent in key creation: 00:00:01,978
Average Time spent in key write: 00:00:00,928
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:56,295
***************************************************</msg>
<status status="PASS" endtime="20201112 22:15:51.601" starttime="20201112 22:15:51.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:15:51.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:15:51.602" starttime="20201112 22:15:51.601"></status>
</kw>
<status status="PASS" endtime="20201112 22:15:51.602" starttime="20201112 22:14:53.082"></status>
</kw>
<msg timestamp="20201112 22:15:51.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:15:51.602" starttime="20201112 22:14:53.082"></status>
</kw>
<msg timestamp="20201112 22:15:51.603" level="INFO">${result} = 2020-11-12 22:14:54,672 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-12 22:14:54,805 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201112 22:15:51.603" starttime="20201112 22:14:53.082"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201112 22:15:51.604" starttime="20201112 22:15:51.603"></status>
</kw>
<status status="PASS" endtime="20201112 22:15:51.604" starttime="20201112 22:15:51.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201112 22:15:51.604" starttime="20201112 22:15:51.604"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:15:51.604" critical="yes" starttime="20201112 22:14:53.080"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201112 22:15:51.606" starttime="20201112 22:14:52.936"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:15:56.022" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:15:58.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:15:58.265" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201112 22:15:58.265" starttime="20201112 22:15:56.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:15:58.267" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1</msg>
<status status="PASS" endtime="20201112 22:15:58.267" starttime="20201112 22:15:58.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:15:58.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:15:58.267" starttime="20201112 22:15:58.267"></status>
</kw>
<status status="PASS" endtime="20201112 22:15:58.268" starttime="20201112 22:15:56.018"></status>
</kw>
<msg timestamp="20201112 22:15:58.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:15:58.268" starttime="20201112 22:15:56.017"></status>
</kw>
<msg timestamp="20201112 22:15:58.268" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201112 22:15:58.268" starttime="20201112 22:15:56.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201112 22:15:58.269" starttime="20201112 22:15:58.268"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:15:58.269" critical="yes" starttime="20201112 22:15:56.013"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:15:58.275" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:16:00.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:16:00.462" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201112 22:16:00.462" starttime="20201112 22:15:58.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:16:00.463" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201112 22:16:00.463" starttime="20201112 22:16:00.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:16:00.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:16:00.464" starttime="20201112 22:16:00.463"></status>
</kw>
<status status="PASS" endtime="20201112 22:16:00.464" starttime="20201112 22:15:58.271"></status>
</kw>
<msg timestamp="20201112 22:16:00.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:16:00.464" starttime="20201112 22:15:58.271"></status>
</kw>
<msg timestamp="20201112 22:16:00.465" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201112 22:16:00.465" starttime="20201112 22:15:58.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201112 22:16:00.465" starttime="20201112 22:16:00.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201112 22:16:00.466" starttime="20201112 22:16:00.465"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:16:00.466" critical="yes" starttime="20201112 22:15:58.270"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201112 22:16:00.467" starttime="20201112 22:15:55.965"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:16:04.888" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:16:07.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:16:07.639" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:16:07.640" starttime="20201112 22:16:04.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:16:07.641" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:16:07.641" starttime="20201112 22:16:07.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:16:07.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:16:07.642" starttime="20201112 22:16:07.641"></status>
</kw>
<status status="PASS" endtime="20201112 22:16:07.642" starttime="20201112 22:16:04.883"></status>
</kw>
<msg timestamp="20201112 22:16:07.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:16:07.642" starttime="20201112 22:16:04.883"></status>
</kw>
<msg timestamp="20201112 22:16:07.643" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:16:07.643" starttime="20201112 22:16:04.882"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201112 22:16:07.643" starttime="20201112 22:16:07.643"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:16:07.647" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:16:10.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:16:10.252" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:16:10.252" starttime="20201112 22:16:07.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:16:10.254" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:16:10.254" starttime="20201112 22:16:10.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:16:10.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:16:10.254" starttime="20201112 22:16:10.254"></status>
</kw>
<status status="PASS" endtime="20201112 22:16:10.255" starttime="20201112 22:16:07.644"></status>
</kw>
<msg timestamp="20201112 22:16:10.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:16:10.255" starttime="20201112 22:16:07.644"></status>
</kw>
<msg timestamp="20201112 22:16:10.255" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:16:10.255" starttime="20201112 22:16:07.643"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201112 22:16:10.256" starttime="20201112 22:16:10.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:16:10.260" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:16:15.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:16:15.165" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:16:15.165" starttime="20201112 22:16:10.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:16:15.166" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:16:15.166" starttime="20201112 22:16:15.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:16:15.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:16:15.167" starttime="20201112 22:16:15.167"></status>
</kw>
<status status="PASS" endtime="20201112 22:16:15.167" starttime="20201112 22:16:10.257"></status>
</kw>
<msg timestamp="20201112 22:16:15.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:16:15.168" starttime="20201112 22:16:10.256"></status>
</kw>
<msg timestamp="20201112 22:16:15.168" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:16:15.168" starttime="20201112 22:16:10.256"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201112 22:16:15.169" starttime="20201112 22:16:15.168"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:16:15.169" critical="yes" starttime="20201112 22:16:04.882"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201112 22:16:15.170" starttime="20201112 22:16:04.834"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:16:54.882" level="INFO">${random} = 93822</msg>
<status status="PASS" endtime="20201112 22:16:54.882" starttime="20201112 22:16:54.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:16:54.889" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-93822 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:17:29.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:17:29.602" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:17:29.602" starttime="20201112 22:16:54.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:17:29.603" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:17:29.603" starttime="20201112 22:17:29.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:17:29.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:17:29.603" starttime="20201112 22:17:29.603"></status>
</kw>
<status status="PASS" endtime="20201112 22:17:29.604" starttime="20201112 22:16:54.883"></status>
</kw>
<msg timestamp="20201112 22:17:29.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:17:29.604" starttime="20201112 22:16:54.882"></status>
</kw>
<msg timestamp="20201112 22:17:29.604" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:17:29.604" starttime="20201112 22:16:54.882"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201112 22:17:29.605" starttime="20201112 22:17:29.604"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:17:29.605" critical="yes" starttime="20201112 22:16:54.880"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201112 22:17:29.606" starttime="20201112 22:16:54.832"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201112 22:16:21.348" level="INFO">${random} = 12620</msg>
<status status="PASS" endtime="20201112 22:16:21.348" starttime="20201112 22:16:21.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201112 22:16:21.354" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-12620 2&gt;&amp;1'.</msg>
<msg timestamp="20201112 22:16:25.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20201112 22:16:25.850" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:16:25.851" starttime="20201112 22:16:21.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201112 22:16:25.852" level="INFO"></msg>
<status status="PASS" endtime="20201112 22:16:25.852" starttime="20201112 22:16:25.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201112 22:16:25.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201112 22:16:25.852" starttime="20201112 22:16:25.852"></status>
</kw>
<status status="PASS" endtime="20201112 22:16:25.853" starttime="20201112 22:16:21.349"></status>
</kw>
<msg timestamp="20201112 22:16:25.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201112 22:16:25.853" starttime="20201112 22:16:21.348"></status>
</kw>
<msg timestamp="20201112 22:16:25.853" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201112 22:16:25.853" starttime="20201112 22:16:21.348"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201112 22:16:25.853" starttime="20201112 22:16:25.853"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201112 22:16:25.854" critical="yes" starttime="20201112 22:16:21.346"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201112 22:16:25.854" starttime="20201112 22:16:21.301"></status>
</suite>
<status status="PASS" elapsedtime="112835" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
