<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201108 01:51:58.973" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:42:41.888" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:42:45.498" level="INFO">${rc} = 255</msg>
<msg timestamp="20201108 01:42:45.498" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:42:45.498" starttime="20201108 01:42:41.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:42:45.499" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201108 01:42:45.499" starttime="20201108 01:42:45.498"></status>
</kw>
<msg timestamp="20201108 01:42:45.499" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:42:45.500" starttime="20201108 01:42:41.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:42:45.505" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:42:48.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:42:48.861" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:42:48.861" starttime="20201108 01:42:45.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:42:48.862" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:42:48.862" starttime="20201108 01:42:48.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:42:48.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:42:48.863" starttime="20201108 01:42:48.862"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:48.863" starttime="20201108 01:42:45.501"></status>
</kw>
<msg timestamp="20201108 01:42:48.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:42:48.863" starttime="20201108 01:42:45.501"></status>
</kw>
<msg timestamp="20201108 01:42:48.863" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:42:48.863" starttime="20201108 01:42:45.501"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201108 01:42:48.864" starttime="20201108 01:42:48.864"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:48.864" starttime="20201108 01:42:45.500"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:48.864" starttime="20201108 01:42:45.500"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:42:48.869" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:42:52.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:42:52.121" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:42:52.121" starttime="20201108 01:42:48.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:42:52.122" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:42:52.123" starttime="20201108 01:42:52.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:42:52.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:42:52.123" starttime="20201108 01:42:52.123"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:52.124" starttime="20201108 01:42:48.866"></status>
</kw>
<msg timestamp="20201108 01:42:52.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:42:52.124" starttime="20201108 01:42:48.865"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:52.124" starttime="20201108 01:42:48.865"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:52.124" starttime="20201108 01:42:48.865"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:52.124" starttime="20201108 01:42:48.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201108 01:42:52.125" starttime="20201108 01:42:52.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:42:52.128" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:42:55.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:42:55.564" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:42:55.564" starttime="20201108 01:42:52.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:42:55.565" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-08T01:42:51.829Z",
  "modificationTime" : "2020-11-08T01:42:51.829Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201108 01:42:55.565" starttime="20201108 01:42:55.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:42:55.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:42:55.566" starttime="20201108 01:42:55.565"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:55.566" starttime="20201108 01:42:52.126"></status>
</kw>
<msg timestamp="20201108 01:42:55.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:42:55.566" starttime="20201108 01:42:52.125"></status>
</kw>
<msg timestamp="20201108 01:42:55.567" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:42:55.567" starttime="20201108 01:42:52.125"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201108 01:42:55.567" starttime="20201108 01:42:55.567"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:42:55.571" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:42:55.571" starttime="20201108 01:42:55.570"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:42:55.571" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:42:55.571" starttime="20201108 01:42:55.571"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:55.572" starttime="20201108 01:42:55.570"></status>
</kw>
<msg timestamp="20201108 01:42:55.572" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:42:55.572" starttime="20201108 01:42:55.569"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:55.572" starttime="20201108 01:42:55.569"></status>
</kw>
<msg timestamp="20201108 01:42:55.572" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201108 01:42:55.572" starttime="20201108 01:42:55.568"></status>
</kw>
<msg timestamp="20201108 01:42:55.572" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201108 01:42:55.572" starttime="20201108 01:42:55.567"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:42:55.575" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:42:58.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:42:58.778" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:42:58.778" starttime="20201108 01:42:55.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:42:58.779" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:42:58.779" starttime="20201108 01:42:58.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:42:58.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:42:58.779" starttime="20201108 01:42:58.779"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:58.780" starttime="20201108 01:42:55.573"></status>
</kw>
<msg timestamp="20201108 01:42:58.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:42:58.780" starttime="20201108 01:42:55.573"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:58.780" starttime="20201108 01:42:55.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:42:58.784" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:43:06.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:43:06.470" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:43:06.470" starttime="20201108 01:42:58.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:43:06.471" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:43:06.471" starttime="20201108 01:43:06.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:43:06.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:43:06.472" starttime="20201108 01:43:06.471"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:06.472" starttime="20201108 01:42:58.781"></status>
</kw>
<msg timestamp="20201108 01:43:06.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:43:06.472" starttime="20201108 01:42:58.781"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:06.472" starttime="20201108 01:42:58.780"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:43:06.476" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:43:11.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:43:11.472" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:43:11.472" starttime="20201108 01:43:06.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:43:11.473" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:43:11.473" starttime="20201108 01:43:11.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:43:11.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:43:11.474" starttime="20201108 01:43:11.474"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:11.474" starttime="20201108 01:43:06.473"></status>
</kw>
<msg timestamp="20201108 01:43:11.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:43:11.474" starttime="20201108 01:43:06.473"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:11.475" starttime="20201108 01:43:06.472"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:43:11.478" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:43:16.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:43:16.147" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:43:16.147" starttime="20201108 01:43:11.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:43:16.148" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:43:16.148" starttime="20201108 01:43:16.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:43:16.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:43:16.149" starttime="20201108 01:43:16.149"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:16.149" starttime="20201108 01:43:11.476"></status>
</kw>
<msg timestamp="20201108 01:43:16.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:43:16.150" starttime="20201108 01:43:11.475"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:16.150" starttime="20201108 01:43:11.475"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:43:16.150" critical="yes" starttime="20201108 01:42:41.882"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:43:16.154" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:43:16.154" starttime="20201108 01:43:16.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:43:16.155" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:43:16.155" starttime="20201108 01:43:16.155"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:16.155" starttime="20201108 01:43:16.154"></status>
</kw>
<msg timestamp="20201108 01:43:16.155" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:43:16.155" starttime="20201108 01:43:16.153"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:16.156" starttime="20201108 01:43:16.153"></status>
</kw>
<msg timestamp="20201108 01:43:16.156" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:43:16.156" starttime="20201108 01:43:16.152"></status>
</kw>
<msg timestamp="20201108 01:43:16.156" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:43:16.156" starttime="20201108 01:43:16.151"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:43:16.159" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:43:19.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:43:19.139" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:43:19.139" starttime="20201108 01:43:16.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:43:19.140" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:43:19.140" starttime="20201108 01:43:19.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:43:19.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:43:19.141" starttime="20201108 01:43:19.140"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:19.141" starttime="20201108 01:43:16.157"></status>
</kw>
<msg timestamp="20201108 01:43:19.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:43:19.141" starttime="20201108 01:43:16.156"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:19.142" starttime="20201108 01:43:16.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:43:19.145" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:43:22.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:43:22.012" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201108 01:43:22.012" starttime="20201108 01:43:19.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:43:22.013" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201108 01:43:22.013" starttime="20201108 01:43:22.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:43:22.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:43:22.013" starttime="20201108 01:43:22.013"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:22.014" starttime="20201108 01:43:19.143"></status>
</kw>
<msg timestamp="20201108 01:43:22.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:43:22.014" starttime="20201108 01:43:19.142"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:22.014" starttime="20201108 01:43:19.142"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:43:22.014" critical="yes" starttime="20201108 01:43:16.151"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201108 01:43:22.016" starttime="20201108 01:42:41.835"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-o3fs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:43:40.184" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:43:40.184" starttime="20201108 01:43:40.184"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:43:40.185" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:43:40.185" starttime="20201108 01:43:40.184"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:40.185" starttime="20201108 01:43:40.183"></status>
</kw>
<msg timestamp="20201108 01:43:40.185" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:43:40.185" starttime="20201108 01:43:40.183"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:40.185" starttime="20201108 01:43:40.182"></status>
</kw>
<msg timestamp="20201108 01:43:40.185" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:43:40.185" starttime="20201108 01:43:40.182"></status>
</kw>
<msg timestamp="20201108 01:43:40.185" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:43:40.186" starttime="20201108 01:43:40.181"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:43:40.186" level="INFO">${random} = 92654</msg>
<status status="PASS" endtime="20201108 01:43:40.186" starttime="20201108 01:43:40.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:43:40.190" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-92654 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:43:43.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:43:43.843" level="INFO">${output} = 2020-11-08 01:43:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:43:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201108 01:43:43.843" starttime="20201108 01:43:40.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:43:43.844" level="INFO">2020-11-08 01:43:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:43:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-08 01:43:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-08 01:43:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-08 01:43:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AB167DBCC940-&gt;1ff1eb4f-a673-4399-a92f-ce14ceaca18e
2020-11-08 01:43:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201108 01:43:43.844" starttime="20201108 01:43:43.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:43:43.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:43:43.845" starttime="20201108 01:43:43.845"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:43.845" starttime="20201108 01:43:40.187"></status>
</kw>
<msg timestamp="20201108 01:43:43.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:43:43.846" starttime="20201108 01:43:40.187"></status>
</kw>
<msg timestamp="20201108 01:43:43.846" level="INFO">${result} = 2020-11-08 01:43:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-08 01:43:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201108 01:43:43.846" starttime="20201108 01:43:40.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:43:43.850" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:43:45.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:43:45.757" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-08 01:43 o3fs://bucket1.volume1.om/ozone-92654
dr...</msg>
<status status="PASS" endtime="20201108 01:43:45.757" starttime="20201108 01:43:43.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:43:45.758" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-08 01:43 o3fs://bucket1.volume1.om/ozone-92654
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:43 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201108 01:43:45.758" starttime="20201108 01:43:45.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:43:45.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:43:45.759" starttime="20201108 01:43:45.759"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:45.759" starttime="20201108 01:43:43.848"></status>
</kw>
<msg timestamp="20201108 01:43:45.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:43:45.759" starttime="20201108 01:43:43.846"></status>
</kw>
<msg timestamp="20201108 01:43:45.760" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-08 01:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-08 01:43 o3fs://bucket1.volume1.om/ozone-92654
dr...</msg>
<status status="PASS" endtime="20201108 01:43:45.760" starttime="20201108 01:43:43.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201108 01:43:45.760" starttime="20201108 01:43:45.760"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201108 01:43:45.760" critical="yes" starttime="20201108 01:43:40.180"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201108 01:43:45.762" starttime="20201108 01:43:40.133"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s3" name="Kinit-Hadoop">
<test id="s1-s3-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:43:35.418" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:43:35.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:43:35.421" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201108 01:43:35.421" starttime="20201108 01:43:35.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:43:35.422" level="INFO">rm</msg>
<status status="PASS" endtime="20201108 01:43:35.422" starttime="20201108 01:43:35.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:43:35.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:43:35.423" starttime="20201108 01:43:35.423"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:35.424" starttime="20201108 01:43:35.412"></status>
</kw>
<msg timestamp="20201108 01:43:35.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:43:35.424" starttime="20201108 01:43:35.411"></status>
</kw>
<msg timestamp="20201108 01:43:35.424" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201108 01:43:35.424" starttime="20201108 01:43:35.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:43:35.425" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:43:35.425" starttime="20201108 01:43:35.424"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:43:35.430" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:43:35.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:43:35.448" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:43:35.448" starttime="20201108 01:43:35.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:43:35.449" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:43:35.449" starttime="20201108 01:43:35.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:43:35.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:43:35.450" starttime="20201108 01:43:35.449"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:35.450" starttime="20201108 01:43:35.426"></status>
</kw>
<msg timestamp="20201108 01:43:35.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:43:35.450" starttime="20201108 01:43:35.426"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:35.450" starttime="20201108 01:43:35.426"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:35.451" starttime="20201108 01:43:35.425"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:35.451" starttime="20201108 01:43:35.410"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:43:35.451" critical="yes" starttime="20201108 01:43:35.410"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201108 01:43:35.452" starttime="20201108 01:43:35.357"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s4" name="Kinit">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:42:37.179" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:42:37.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:42:37.181" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201108 01:42:37.181" starttime="20201108 01:42:37.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:42:37.182" level="INFO">om</msg>
<status status="PASS" endtime="20201108 01:42:37.182" starttime="20201108 01:42:37.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:42:37.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:42:37.183" starttime="20201108 01:42:37.182"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:37.183" starttime="20201108 01:42:37.175"></status>
</kw>
<msg timestamp="20201108 01:42:37.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:42:37.183" starttime="20201108 01:42:37.175"></status>
</kw>
<msg timestamp="20201108 01:42:37.184" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201108 01:42:37.184" starttime="20201108 01:42:37.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201108 01:42:37.184" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201108 01:42:37.184" starttime="20201108 01:42:37.184"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:42:37.188" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:42:37.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:42:37.205" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201108 01:42:37.205" starttime="20201108 01:42:37.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:42:37.206" level="INFO"></msg>
<status status="PASS" endtime="20201108 01:42:37.206" starttime="20201108 01:42:37.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:42:37.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:42:37.206" starttime="20201108 01:42:37.206"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:37.207" starttime="20201108 01:42:37.186"></status>
</kw>
<msg timestamp="20201108 01:42:37.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:42:37.207" starttime="20201108 01:42:37.185"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:37.207" starttime="20201108 01:42:37.185"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:37.207" starttime="20201108 01:42:37.184"></status>
</kw>
<status status="PASS" endtime="20201108 01:42:37.207" starttime="20201108 01:42:37.174"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201108 01:42:37.207" critical="yes" starttime="20201108 01:42:37.173"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201108 01:42:37.208" starttime="20201108 01:42:37.128"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s5" name="mapreduce-o3fs">
<test id="s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:43:50.370" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:43:50.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:43:50.375" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:43:50.375" starttime="20201108 01:43:50.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:43:50.376" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:43:50.376" starttime="20201108 01:43:50.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:43:50.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:43:50.376" starttime="20201108 01:43:50.376"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:50.377" starttime="20201108 01:43:50.365"></status>
</kw>
<msg timestamp="20201108 01:43:50.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:43:50.377" starttime="20201108 01:43:50.365"></status>
</kw>
<msg timestamp="20201108 01:43:50.377" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:43:50.377" starttime="20201108 01:43:50.364"></status>
</kw>
<msg timestamp="20201108 01:43:50.377" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:43:50.377" starttime="20201108 01:43:50.364"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:43:50.381" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:43:50.381" starttime="20201108 01:43:50.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:43:50.382" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:43:50.382" starttime="20201108 01:43:50.382"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:50.382" starttime="20201108 01:43:50.380"></status>
</kw>
<msg timestamp="20201108 01:43:50.382" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:43:50.382" starttime="20201108 01:43:50.379"></status>
</kw>
<status status="PASS" endtime="20201108 01:43:50.382" starttime="20201108 01:43:50.379"></status>
</kw>
<msg timestamp="20201108 01:43:50.383" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:43:50.383" starttime="20201108 01:43:50.378"></status>
</kw>
<msg timestamp="20201108 01:43:50.383" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:43:50.383" starttime="20201108 01:43:50.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:43:50.386" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:47:50.364" level="FAIL">Test timeout 4 minutes exceeded.</msg>
<status status="FAIL" endtime="20201108 01:47:50.364" starttime="20201108 01:43:50.384"></status>
</kw>
<status status="FAIL" endtime="20201108 01:47:50.365" starttime="20201108 01:43:50.384"></status>
</kw>
<msg timestamp="20201108 01:47:50.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201108 01:47:50.365" starttime="20201108 01:43:50.383"></status>
</kw>
<status status="FAIL" endtime="20201108 01:47:50.365" starttime="20201108 01:43:50.383"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201108 01:47:50.366" critical="yes" starttime="20201108 01:43:50.363">Test timeout 4 minutes exceeded.</status>
</test>
<test id="s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:47:50.372" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:47:50.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20201108 01:47:50.378" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:47:50.378" starttime="20201108 01:47:50.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201108 01:47:50.379" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:47:50.379" starttime="20201108 01:47:50.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201108 01:47:50.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201108 01:47:50.379" starttime="20201108 01:47:50.379"></status>
</kw>
<status status="PASS" endtime="20201108 01:47:50.380" starttime="20201108 01:47:50.369"></status>
</kw>
<msg timestamp="20201108 01:47:50.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201108 01:47:50.380" starttime="20201108 01:47:50.369"></status>
</kw>
<msg timestamp="20201108 01:47:50.380" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:47:50.380" starttime="20201108 01:47:50.368"></status>
</kw>
<msg timestamp="20201108 01:47:50.380" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201108 01:47:50.380" starttime="20201108 01:47:50.367"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201108 01:47:50.381" level="INFO">${random} = 23</msg>
<status status="PASS" endtime="20201108 01:47:50.381" starttime="20201108 01:47:50.380"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:47:50.385" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:47:50.385" starttime="20201108 01:47:50.384"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:47:50.385" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:47:50.385" starttime="20201108 01:47:50.385"></status>
</kw>
<status status="PASS" endtime="20201108 01:47:50.385" starttime="20201108 01:47:50.384"></status>
</kw>
<msg timestamp="20201108 01:47:50.385" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:47:50.385" starttime="20201108 01:47:50.383"></status>
</kw>
<status status="PASS" endtime="20201108 01:47:50.386" starttime="20201108 01:47:50.382"></status>
</kw>
<msg timestamp="20201108 01:47:50.386" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:47:50.386" starttime="20201108 01:47:50.382"></status>
</kw>
<msg timestamp="20201108 01:47:50.386" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201108 01:47:50.386" starttime="20201108 01:47:50.381"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:47:50.389" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:47:50.389" starttime="20201108 01:47:50.388"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:47:50.389" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:47:50.389" starttime="20201108 01:47:50.389"></status>
</kw>
<status status="PASS" endtime="20201108 01:47:50.390" starttime="20201108 01:47:50.388"></status>
</kw>
<msg timestamp="20201108 01:47:50.390" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:47:50.390" starttime="20201108 01:47:50.388"></status>
</kw>
<status status="PASS" endtime="20201108 01:47:50.390" starttime="20201108 01:47:50.387"></status>
</kw>
<msg timestamp="20201108 01:47:50.390" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201108 01:47:50.390" starttime="20201108 01:47:50.387"></status>
</kw>
<msg timestamp="20201108 01:47:50.390" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201108 01:47:50.390" starttime="20201108 01:47:50.386"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201108 01:47:50.393" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201108 01:47:50.393" starttime="20201108 01:47:50.393"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201108 01:47:50.394" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201108 01:47:50.394" starttime="20201108 01:47:50.393"></status>
</kw>
<status status="PASS" endtime="20201108 01:47:50.394" starttime="20201108 01:47:50.392"></status>
</kw>
<msg timestamp="20201108 01:47:50.394" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201108 01:47:50.394" starttime="20201108 01:47:50.392"></status>
</kw>
<status status="PASS" endtime="20201108 01:47:50.394" starttime="20201108 01:47:50.392"></status>
</kw>
<msg timestamp="20201108 01:47:50.394" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-23.txt</msg>
<status status="PASS" endtime="20201108 01:47:50.395" starttime="20201108 01:47:50.391"></status>
</kw>
<msg timestamp="20201108 01:47:50.395" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-23.txt</msg>
<status status="PASS" endtime="20201108 01:47:50.395" starttime="20201108 01:47:50.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201108 01:47:50.398" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-23.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201108 01:51:50.367" level="FAIL">Test timeout 4 minutes exceeded.</msg>
<status status="FAIL" endtime="20201108 01:51:50.367" starttime="20201108 01:47:50.396"></status>
</kw>
<status status="FAIL" endtime="20201108 01:51:50.368" starttime="20201108 01:47:50.396"></status>
</kw>
<msg timestamp="20201108 01:51:50.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201108 01:51:50.368" starttime="20201108 01:47:50.395"></status>
</kw>
<status status="FAIL" endtime="20201108 01:51:50.368" starttime="20201108 01:47:50.395"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201108 01:51:50.369" critical="yes" starttime="20201108 01:47:50.366">Test timeout 4 minutes exceeded.</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201108 01:51:50.370" starttime="20201108 01:43:50.317"></status>
</suite>
<status status="FAIL" elapsedtime="526038" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="5">Critical Tests</stat>
<stat fail="2" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="ozonesecure-mr" pass="5">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s4" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="2" id="s1-s5" name="mapreduce-o3fs" pass="0">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
